const __vite__mapDeps = (
  i,
  m = __vite__mapDeps,
  d = m.f ||
    (m.f = [
      "./D59z_AEH.js",
      "./DlAUqK2U.js",
      "./DVt5MIXn.js",
      "./D_iu627J.js",
      "./C10dbX3k.js",
      "./xUo5sKGi.js",
      "./B8TxTyak.js",
      "./C2Qfbq92.js",
      "./CI8VFsgH.js",
      "./forwardRefs.3bbyRG_H.css",
      "./1WQF9nlZ.js",
      "./ZfNZiyCm.js",
      "./CMuUTlS2.js",
      "./index.BJGWmqoV.css",
      "./VBtn.kOa7mB5A.css",
      "./enums.0CH7Xg2e.css",
      "./CaRhLduF.js",
      "./ChErJn07.js",
      "./B_2FkP8S.js",
      "./CAlkWbu_.js",
      "./VImg.3DQfrNoh.css",
      "./VTextField.EQu_V7iV.css",
      "./bNepudp1.js",
      "./D5jKaxoB.js",
      "./WBDhfoJ7.js",
      "./CDxB5nOy.js",
      "./VSlideGroup.BsYIg1rJ.css",
      "./BIp5-3EK.js",
      "./DAcvVGJe.js",
      "./VCard.6uoOellW.css",
      "./VCheckboxBtn.R52rMUqv.css",
      "./e7r5DKx9.js",
      "./D8ayu7rP.js",
      "./VMenu.ADsz2A20.css",
      "./tqgqUFAa.js",
      "./VSkeletonLoader.B-Lm5FZs.css",
      "./BhFnA_AP.js",
      "./Ck8zg9y4.js",
      "./VGrid.D0S0a0cH.css",
      "./3k3FjGGU.js",
      "./DW9_RXAq.js",
      "./VOtpInput.BbYFIsyl.css",
      "./CpWmePdF.js",
      "./index.DdEBfgMY.css",
      "./BNSvKMyq.js",
      "./3k4VnFXt.js",
      "./BhMtR_Hb.js",
      "./index.C82jrRZP.css",
      "./CyQ0eay7.js",
      "./Kcv6HAzH.js",
      "./DnaGcmTr.js",
      "./DCZfwWfx.js",
      "./DKFk25TC.js",
      "./DIGJciYJ.js",
      "./VDialog.Dk_v9Av4.css",
      "./VBottomSheet.DEKGyUqe.css",
      "./C1DtZnIy.js",
      "./VExpansionPanels.BlzZGA8i.css",
      "./DalnjcH7.js",
      "./contact-us.feDXf4Hc.css",
      "./B4N5j3Cp.js",
      "./lmM3h4Vw.js",
      "./D49JctKs.js",
      "./BAjJeBkK.js",
      "./VTabs.BTjDJZgH.css",
      "./account.CQ3uzT9M.css",
      "./HlBKz86t.js",
      "./B-SrkGZZ.js",
      "./VTable.C9uvOfDc.css",
      "./DE3Uy5bv.js",
      "./VPagination.DrdZJ-hD.css",
      "./BoisP8RO.js",
      "./DPyoziiD.js",
      "./discount.BKrwh9J7.css",
      "./C31DAB0-.js",
      "./BVWmtPgv.js",
      "./CW0GUPOV.js",
      "./Uq89Istt.js",
      "./CZiPNuGW.js",
      "./D5sAzjIh.js",
      "./CL8XUvEc.js",
      "./i5pdy2NG.js",
      "./__2gdUfN.js",
      "./BXNHQyJN.js",
      "./VList.DzqpkyA_.css",
      "./VDataTable.BVaS2JkV.css",
      "./select.DUIjpl6J.css",
      "./NWxiP_Jx.js",
      "./Table.BnSBiGsA.css",
      "./deposit.BW5v53lK.css",
      "./C8_EDGWk.js",
      "./index.BW7jn38O.css",
      "./D-g8cz2e.js",
      "./ClM4Peaf.js",
      "./DLI1yz3e.js",
      "./Che7Khx7.js",
      "./Faq.Dhfr41Un.css",
      "./DxLVLOBT.js",
      "./DRZ-gglX.js",
      "./BEkFMCmj.js",
      "./success.CgaxX3Uw.css",
      "./CV94PaAu.js",
      "./BNkz8u-V.js",
      "./5Gdnd9i8.js",
      "./DPBkzKmw.js",
      "./K7xD57Su.js",
      "./mhxPBD0f.js",
      "./BxOzvhk0.js",
      "./Ckdwc7Kg.js",
      "./T4tRNfEu.js",
      "./DgOZDmBs.js",
      "./buy-sell-perfectmoney-voucher.BQWIFDAe.css",
      "./B1ZhJKFu.js",
      "./exchange-paypal.CsdGYfJ8.css",
      "./BMZgg2Ge.js",
      "./BQy0o8n0.js",
      "./RAd2kQ_T.js",
      "./online-payment-for-business.CUFqDYp7.css",
      "./DxfzrTeB.js",
      "./online-payment.B5JLtWwz.css",
      "./BsnuJJJ4.js",
      "./payment-gate.B4uRRos9.css",
      "./DbOeqm85.js",
      "./qArxSU5_.js",
      "./DXH68qfu.js",
      "./GlobalDialog.DcjiQ1ex.css",
      "./B2YwdPLD.js",
      "./profile.CtEfY1Wh.css",
      "./CpYWBUaW.js",
      "./CxZrXy87.js",
      "./D3OnLe3d.js",
    ])
) => i.map((i) => d[i]);
/**
 * @vue/shared v3.5.13
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ /*! #__NO_SIDE_EFFECTS__ */ function makeMap(e) {
  const t = Object.create(null);
  for (const r of e.split(",")) t[r] = 1;
  return (r) => r in t;
}
const EMPTY_OBJ = {},
  EMPTY_ARR = [],
  NOOP = () => {},
  NO = () => !1,
  isOn$1 = (e) =>
    e.charCodeAt(0) === 111 &&
    e.charCodeAt(1) === 110 &&
    (e.charCodeAt(2) > 122 || e.charCodeAt(2) < 97),
  isModelListener = (e) => e.startsWith("onUpdate:"),
  extend = Object.assign,
  remove = (e, t) => {
    const r = e.indexOf(t);
    r > -1 && e.splice(r, 1);
  },
  hasOwnProperty$2 = Object.prototype.hasOwnProperty,
  hasOwn$1 = (e, t) => hasOwnProperty$2.call(e, t),
  isArray$2 = Array.isArray,
  isMap = (e) => toTypeString$1(e) === "[object Map]",
  isSet = (e) => toTypeString$1(e) === "[object Set]",
  isDate$2 = (e) => toTypeString$1(e) === "[object Date]",
  isRegExp$1 = (e) => toTypeString$1(e) === "[object RegExp]",
  isFunction$1 = (e) => typeof e == "function",
  isString$1 = (e) => typeof e == "string",
  isSymbol$1 = (e) => typeof e == "symbol",
  isObject$2 = (e) => e !== null && typeof e == "object",
  isPromise$1 = (e) =>
    (isObject$2(e) || isFunction$1(e)) &&
    isFunction$1(e.then) &&
    isFunction$1(e.catch),
  objectToString$1 = Object.prototype.toString,
  toTypeString$1 = (e) => objectToString$1.call(e),
  toRawType = (e) => toTypeString$1(e).slice(8, -1),
  isPlainObject$4 = (e) => toTypeString$1(e) === "[object Object]",
  isIntegerKey = (e) =>
    isString$1(e) && e !== "NaN" && e[0] !== "-" && "" + parseInt(e, 10) === e,
  isReservedProp = makeMap(
    ",key,ref,ref_for,ref_key,onVnodeBeforeMount,onVnodeMounted,onVnodeBeforeUpdate,onVnodeUpdated,onVnodeBeforeUnmount,onVnodeUnmounted"
  ),
  cacheStringFunction = (e) => {
    const t = Object.create(null);
    return (r) => t[r] || (t[r] = e(r));
  },
  camelizeRE = /-(\w)/g,
  camelize = cacheStringFunction((e) =>
    e.replace(camelizeRE, (t, r) => (r ? r.toUpperCase() : ""))
  ),
  hyphenateRE = /\B([A-Z])/g,
  hyphenate = cacheStringFunction((e) =>
    e.replace(hyphenateRE, "-$1").toLowerCase()
  ),
  capitalize$1 = cacheStringFunction(
    (e) => e.charAt(0).toUpperCase() + e.slice(1)
  ),
  toHandlerKey = cacheStringFunction((e) => (e ? `on${capitalize$1(e)}` : "")),
  hasChanged = (e, t) => !Object.is(e, t),
  invokeArrayFns = (e, ...t) => {
    for (let r = 0; r < e.length; r++) e[r](...t);
  },
  def = (e, t, r, n = !1) => {
    Object.defineProperty(e, t, {
      configurable: !0,
      enumerable: !1,
      writable: n,
      value: r,
    });
  },
  looseToNumber = (e) => {
    const t = parseFloat(e);
    return isNaN(t) ? e : t;
  },
  toNumber = (e) => {
    const t = isString$1(e) ? Number(e) : NaN;
    return isNaN(t) ? e : t;
  };
let _globalThis$3;
const getGlobalThis$1 = () =>
    _globalThis$3 ||
    (_globalThis$3 =
      typeof globalThis < "u"
        ? globalThis
        : typeof self < "u"
        ? self
        : typeof window < "u"
        ? window
        : typeof global < "u"
        ? global
        : {}),
  GLOBALS_ALLOWED =
    "Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt,console,Error,Symbol",
  isGloballyAllowed = makeMap(GLOBALS_ALLOWED);
function normalizeStyle(e) {
  if (isArray$2(e)) {
    const t = {};
    for (let r = 0; r < e.length; r++) {
      const n = e[r],
        i = isString$1(n) ? parseStringStyle(n) : normalizeStyle(n);
      if (i) for (const a in i) t[a] = i[a];
    }
    return t;
  } else if (isString$1(e) || isObject$2(e)) return e;
}
const listDelimiterRE = /;(?![^(]*\))/g,
  propertyDelimiterRE = /:([^]+)/,
  styleCommentRE = /\/\*[^]*?\*\//g;
function parseStringStyle(e) {
  const t = {};
  return (
    e
      .replace(styleCommentRE, "")
      .split(listDelimiterRE)
      .forEach((r) => {
        if (r) {
          const n = r.split(propertyDelimiterRE);
          n.length > 1 && (t[n[0].trim()] = n[1].trim());
        }
      }),
    t
  );
}
function normalizeClass(e) {
  let t = "";
  if (isString$1(e)) t = e;
  else if (isArray$2(e))
    for (let r = 0; r < e.length; r++) {
      const n = normalizeClass(e[r]);
      n && (t += n + " ");
    }
  else if (isObject$2(e)) for (const r in e) e[r] && (t += r + " ");
  return t.trim();
}
function normalizeProps(e) {
  if (!e) return null;
  let { class: t, style: r } = e;
  return (
    t && !isString$1(t) && (e.class = normalizeClass(t)),
    r && (e.style = normalizeStyle(r)),
    e
  );
}
const specialBooleanAttrs =
    "itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly",
  isSpecialBooleanAttr = makeMap(specialBooleanAttrs);
function includeBooleanAttr(e) {
  return !!e || e === "";
}
function looseCompareArrays(e, t) {
  if (e.length !== t.length) return !1;
  let r = !0;
  for (let n = 0; r && n < e.length; n++) r = looseEqual(e[n], t[n]);
  return r;
}
function looseEqual(e, t) {
  if (e === t) return !0;
  let r = isDate$2(e),
    n = isDate$2(t);
  if (r || n) return r && n ? e.getTime() === t.getTime() : !1;
  if (((r = isSymbol$1(e)), (n = isSymbol$1(t)), r || n)) return e === t;
  if (((r = isArray$2(e)), (n = isArray$2(t)), r || n))
    return r && n ? looseCompareArrays(e, t) : !1;
  if (((r = isObject$2(e)), (n = isObject$2(t)), r || n)) {
    if (!r || !n) return !1;
    const i = Object.keys(e).length,
      a = Object.keys(t).length;
    if (i !== a) return !1;
    for (const o in e) {
      const l = e.hasOwnProperty(o),
        c = t.hasOwnProperty(o);
      if ((l && !c) || (!l && c) || !looseEqual(e[o], t[o])) return !1;
    }
  }
  return String(e) === String(t);
}
function looseIndexOf(e, t) {
  return e.findIndex((r) => looseEqual(r, t));
}
const isRef$1 = (e) => !!(e && e.__v_isRef === !0),
  toDisplayString$1 = (e) =>
    isString$1(e)
      ? e
      : e == null
      ? ""
      : isArray$2(e) ||
        (isObject$2(e) &&
          (e.toString === objectToString$1 || !isFunction$1(e.toString)))
      ? isRef$1(e)
        ? toDisplayString$1(e.value)
        : JSON.stringify(e, replacer, 2)
      : String(e),
  replacer = (e, t) =>
    isRef$1(t)
      ? replacer(e, t.value)
      : isMap(t)
      ? {
          [`Map(${t.size})`]: [...t.entries()].reduce(
            (r, [n, i], a) => ((r[stringifySymbol(n, a) + " =>"] = i), r),
            {}
          ),
        }
      : isSet(t)
      ? { [`Set(${t.size})`]: [...t.values()].map((r) => stringifySymbol(r)) }
      : isSymbol$1(t)
      ? stringifySymbol(t)
      : isObject$2(t) && !isArray$2(t) && !isPlainObject$4(t)
      ? String(t)
      : t,
  stringifySymbol = (e, t = "") => {
    var r;
    return isSymbol$1(e) ? `Symbol(${(r = e.description) != null ? r : t})` : e;
  };
/**
 * @vue/reactivity v3.5.13
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ let activeEffectScope;
class EffectScope {
  constructor(t = !1) {
    (this.detached = t),
      (this._active = !0),
      (this.effects = []),
      (this.cleanups = []),
      (this._isPaused = !1),
      (this.parent = activeEffectScope),
      !t &&
        activeEffectScope &&
        (this.index =
          (activeEffectScope.scopes || (activeEffectScope.scopes = [])).push(
            this
          ) - 1);
  }
  get active() {
    return this._active;
  }
  pause() {
    if (this._active) {
      this._isPaused = !0;
      let t, r;
      if (this.scopes)
        for (t = 0, r = this.scopes.length; t < r; t++) this.scopes[t].pause();
      for (t = 0, r = this.effects.length; t < r; t++) this.effects[t].pause();
    }
  }
  resume() {
    if (this._active && this._isPaused) {
      this._isPaused = !1;
      let t, r;
      if (this.scopes)
        for (t = 0, r = this.scopes.length; t < r; t++) this.scopes[t].resume();
      for (t = 0, r = this.effects.length; t < r; t++) this.effects[t].resume();
    }
  }
  run(t) {
    if (this._active) {
      const r = activeEffectScope;
      try {
        return (activeEffectScope = this), t();
      } finally {
        activeEffectScope = r;
      }
    }
  }
  on() {
    activeEffectScope = this;
  }
  off() {
    activeEffectScope = this.parent;
  }
  stop(t) {
    if (this._active) {
      this._active = !1;
      let r, n;
      for (r = 0, n = this.effects.length; r < n; r++) this.effects[r].stop();
      for (this.effects.length = 0, r = 0, n = this.cleanups.length; r < n; r++)
        this.cleanups[r]();
      if (((this.cleanups.length = 0), this.scopes)) {
        for (r = 0, n = this.scopes.length; r < n; r++) this.scopes[r].stop(!0);
        this.scopes.length = 0;
      }
      if (!this.detached && this.parent && !t) {
        const i = this.parent.scopes.pop();
        i &&
          i !== this &&
          ((this.parent.scopes[this.index] = i), (i.index = this.index));
      }
      this.parent = void 0;
    }
  }
}
function effectScope(e) {
  return new EffectScope(e);
}
function getCurrentScope() {
  return activeEffectScope;
}
function onScopeDispose(e, t = !1) {
  activeEffectScope && activeEffectScope.cleanups.push(e);
}
let activeSub;
const pausedQueueEffects = new WeakSet();
class ReactiveEffect {
  constructor(t) {
    (this.fn = t),
      (this.deps = void 0),
      (this.depsTail = void 0),
      (this.flags = 5),
      (this.next = void 0),
      (this.cleanup = void 0),
      (this.scheduler = void 0),
      activeEffectScope &&
        activeEffectScope.active &&
        activeEffectScope.effects.push(this);
  }
  pause() {
    this.flags |= 64;
  }
  resume() {
    this.flags & 64 &&
      ((this.flags &= -65),
      pausedQueueEffects.has(this) &&
        (pausedQueueEffects.delete(this), this.trigger()));
  }
  notify() {
    (this.flags & 2 && !(this.flags & 32)) || this.flags & 8 || batch(this);
  }
  run() {
    if (!(this.flags & 1)) return this.fn();
    (this.flags |= 2), cleanupEffect(this), prepareDeps(this);
    const t = activeSub,
      r = shouldTrack;
    (activeSub = this), (shouldTrack = !0);
    try {
      return this.fn();
    } finally {
      cleanupDeps(this), (activeSub = t), (shouldTrack = r), (this.flags &= -3);
    }
  }
  stop() {
    if (this.flags & 1) {
      for (let t = this.deps; t; t = t.nextDep) removeSub(t);
      (this.deps = this.depsTail = void 0),
        cleanupEffect(this),
        this.onStop && this.onStop(),
        (this.flags &= -2);
    }
  }
  trigger() {
    this.flags & 64
      ? pausedQueueEffects.add(this)
      : this.scheduler
      ? this.scheduler()
      : this.runIfDirty();
  }
  runIfDirty() {
    isDirty(this) && this.run();
  }
  get dirty() {
    return isDirty(this);
  }
}
let batchDepth = 0,
  batchedSub,
  batchedComputed;
function batch(e, t = !1) {
  if (((e.flags |= 8), t)) {
    (e.next = batchedComputed), (batchedComputed = e);
    return;
  }
  (e.next = batchedSub), (batchedSub = e);
}
function startBatch() {
  batchDepth++;
}
function endBatch() {
  if (--batchDepth > 0) return;
  if (batchedComputed) {
    let t = batchedComputed;
    for (batchedComputed = void 0; t; ) {
      const r = t.next;
      (t.next = void 0), (t.flags &= -9), (t = r);
    }
  }
  let e;
  for (; batchedSub; ) {
    let t = batchedSub;
    for (batchedSub = void 0; t; ) {
      const r = t.next;
      if (((t.next = void 0), (t.flags &= -9), t.flags & 1))
        try {
          t.trigger();
        } catch (n) {
          e || (e = n);
        }
      t = r;
    }
  }
  if (e) throw e;
}
function prepareDeps(e) {
  for (let t = e.deps; t; t = t.nextDep)
    (t.version = -1),
      (t.prevActiveLink = t.dep.activeLink),
      (t.dep.activeLink = t);
}
function cleanupDeps(e) {
  let t,
    r = e.depsTail,
    n = r;
  for (; n; ) {
    const i = n.prevDep;
    n.version === -1
      ? (n === r && (r = i), removeSub(n), removeDep(n))
      : (t = n),
      (n.dep.activeLink = n.prevActiveLink),
      (n.prevActiveLink = void 0),
      (n = i);
  }
  (e.deps = t), (e.depsTail = r);
}
function isDirty(e) {
  for (let t = e.deps; t; t = t.nextDep)
    if (
      t.dep.version !== t.version ||
      (t.dep.computed &&
        (refreshComputed(t.dep.computed) || t.dep.version !== t.version))
    )
      return !0;
  return !!e._dirty;
}
function refreshComputed(e) {
  if (
    (e.flags & 4 && !(e.flags & 16)) ||
    ((e.flags &= -17), e.globalVersion === globalVersion)
  )
    return;
  e.globalVersion = globalVersion;
  const t = e.dep;
  if (((e.flags |= 2), t.version > 0 && !e.isSSR && e.deps && !isDirty(e))) {
    e.flags &= -3;
    return;
  }
  const r = activeSub,
    n = shouldTrack;
  (activeSub = e), (shouldTrack = !0);
  try {
    prepareDeps(e);
    const i = e.fn(e._value);
    (t.version === 0 || hasChanged(i, e._value)) &&
      ((e._value = i), t.version++);
  } catch (i) {
    throw (t.version++, i);
  } finally {
    (activeSub = r), (shouldTrack = n), cleanupDeps(e), (e.flags &= -3);
  }
}
function removeSub(e, t = !1) {
  const { dep: r, prevSub: n, nextSub: i } = e;
  if (
    (n && ((n.nextSub = i), (e.prevSub = void 0)),
    i && ((i.prevSub = n), (e.nextSub = void 0)),
    r.subs === e && ((r.subs = n), !n && r.computed))
  ) {
    r.computed.flags &= -5;
    for (let a = r.computed.deps; a; a = a.nextDep) removeSub(a, !0);
  }
  !t && !--r.sc && r.map && r.map.delete(r.key);
}
function removeDep(e) {
  const { prevDep: t, nextDep: r } = e;
  t && ((t.nextDep = r), (e.prevDep = void 0)),
    r && ((r.prevDep = t), (e.nextDep = void 0));
}
function effect(e, t) {
  e.effect instanceof ReactiveEffect && (e = e.effect.fn);
  const r = new ReactiveEffect(e);
  t && extend(r, t);
  try {
    r.run();
  } catch (i) {
    throw (r.stop(), i);
  }
  const n = r.run.bind(r);
  return (n.effect = r), n;
}
function stop(e) {
  e.effect.stop();
}
let shouldTrack = !0;
const trackStack = [];
function pauseTracking() {
  trackStack.push(shouldTrack), (shouldTrack = !1);
}
function resetTracking() {
  const e = trackStack.pop();
  shouldTrack = e === void 0 ? !0 : e;
}
function cleanupEffect(e) {
  const { cleanup: t } = e;
  if (((e.cleanup = void 0), t)) {
    const r = activeSub;
    activeSub = void 0;
    try {
      t();
    } finally {
      activeSub = r;
    }
  }
}
let globalVersion = 0;
class Link {
  constructor(t, r) {
    (this.sub = t),
      (this.dep = r),
      (this.version = r.version),
      (this.nextDep =
        this.prevDep =
        this.nextSub =
        this.prevSub =
        this.prevActiveLink =
          void 0);
  }
}
class Dep {
  constructor(t) {
    (this.computed = t),
      (this.version = 0),
      (this.activeLink = void 0),
      (this.subs = void 0),
      (this.map = void 0),
      (this.key = void 0),
      (this.sc = 0);
  }
  track(t) {
    if (!activeSub || !shouldTrack || activeSub === this.computed) return;
    let r = this.activeLink;
    if (r === void 0 || r.sub !== activeSub)
      (r = this.activeLink = new Link(activeSub, this)),
        activeSub.deps
          ? ((r.prevDep = activeSub.depsTail),
            (activeSub.depsTail.nextDep = r),
            (activeSub.depsTail = r))
          : (activeSub.deps = activeSub.depsTail = r),
        addSub(r);
    else if (r.version === -1 && ((r.version = this.version), r.nextDep)) {
      const n = r.nextDep;
      (n.prevDep = r.prevDep),
        r.prevDep && (r.prevDep.nextDep = n),
        (r.prevDep = activeSub.depsTail),
        (r.nextDep = void 0),
        (activeSub.depsTail.nextDep = r),
        (activeSub.depsTail = r),
        activeSub.deps === r && (activeSub.deps = n);
    }
    return r;
  }
  trigger(t) {
    this.version++, globalVersion++, this.notify(t);
  }
  notify(t) {
    startBatch();
    try {
      for (let r = this.subs; r; r = r.prevSub)
        r.sub.notify() && r.sub.dep.notify();
    } finally {
      endBatch();
    }
  }
}
function addSub(e) {
  if ((e.dep.sc++, e.sub.flags & 4)) {
    const t = e.dep.computed;
    if (t && !e.dep.subs) {
      t.flags |= 20;
      for (let n = t.deps; n; n = n.nextDep) addSub(n);
    }
    const r = e.dep.subs;
    r !== e && ((e.prevSub = r), r && (r.nextSub = e)), (e.dep.subs = e);
  }
}
const targetMap = new WeakMap(),
  ITERATE_KEY = Symbol(""),
  MAP_KEY_ITERATE_KEY = Symbol(""),
  ARRAY_ITERATE_KEY = Symbol("");
function track(e, t, r) {
  if (shouldTrack && activeSub) {
    let n = targetMap.get(e);
    n || targetMap.set(e, (n = new Map()));
    let i = n.get(r);
    i || (n.set(r, (i = new Dep())), (i.map = n), (i.key = r)), i.track();
  }
}
function trigger(e, t, r, n, i, a) {
  const o = targetMap.get(e);
  if (!o) {
    globalVersion++;
    return;
  }
  const l = (c) => {
    c && c.trigger();
  };
  if ((startBatch(), t === "clear")) o.forEach(l);
  else {
    const c = isArray$2(e),
      u = c && isIntegerKey(r);
    if (c && r === "length") {
      const d = Number(n);
      o.forEach((E, b) => {
        (b === "length" ||
          b === ARRAY_ITERATE_KEY ||
          (!isSymbol$1(b) && b >= d)) &&
          l(E);
      });
    } else
      switch (
        ((r !== void 0 || o.has(void 0)) && l(o.get(r)),
        u && l(o.get(ARRAY_ITERATE_KEY)),
        t)
      ) {
        case "add":
          c
            ? u && l(o.get("length"))
            : (l(o.get(ITERATE_KEY)),
              isMap(e) && l(o.get(MAP_KEY_ITERATE_KEY)));
          break;
        case "delete":
          c ||
            (l(o.get(ITERATE_KEY)), isMap(e) && l(o.get(MAP_KEY_ITERATE_KEY)));
          break;
        case "set":
          isMap(e) && l(o.get(ITERATE_KEY));
          break;
      }
  }
  endBatch();
}
function getDepFromReactive(e, t) {
  const r = targetMap.get(e);
  return r && r.get(t);
}
function reactiveReadArray(e) {
  const t = toRaw(e);
  return t === e
    ? t
    : (track(t, "iterate", ARRAY_ITERATE_KEY),
      isShallow(e) ? t : t.map(toReactive));
}
function shallowReadArray(e) {
  return track((e = toRaw(e)), "iterate", ARRAY_ITERATE_KEY), e;
}
const arrayInstrumentations = {
  __proto__: null,
  [Symbol.iterator]() {
    return iterator(this, Symbol.iterator, toReactive);
  },
  concat(...e) {
    return reactiveReadArray(this).concat(
      ...e.map((t) => (isArray$2(t) ? reactiveReadArray(t) : t))
    );
  },
  entries() {
    return iterator(this, "entries", (e) => ((e[1] = toReactive(e[1])), e));
  },
  every(e, t) {
    return apply$1(this, "every", e, t, void 0, arguments);
  },
  filter(e, t) {
    return apply$1(this, "filter", e, t, (r) => r.map(toReactive), arguments);
  },
  find(e, t) {
    return apply$1(this, "find", e, t, toReactive, arguments);
  },
  findIndex(e, t) {
    return apply$1(this, "findIndex", e, t, void 0, arguments);
  },
  findLast(e, t) {
    return apply$1(this, "findLast", e, t, toReactive, arguments);
  },
  findLastIndex(e, t) {
    return apply$1(this, "findLastIndex", e, t, void 0, arguments);
  },
  forEach(e, t) {
    return apply$1(this, "forEach", e, t, void 0, arguments);
  },
  includes(...e) {
    return searchProxy(this, "includes", e);
  },
  indexOf(...e) {
    return searchProxy(this, "indexOf", e);
  },
  join(e) {
    return reactiveReadArray(this).join(e);
  },
  lastIndexOf(...e) {
    return searchProxy(this, "lastIndexOf", e);
  },
  map(e, t) {
    return apply$1(this, "map", e, t, void 0, arguments);
  },
  pop() {
    return noTracking(this, "pop");
  },
  push(...e) {
    return noTracking(this, "push", e);
  },
  reduce(e, ...t) {
    return reduce(this, "reduce", e, t);
  },
  reduceRight(e, ...t) {
    return reduce(this, "reduceRight", e, t);
  },
  shift() {
    return noTracking(this, "shift");
  },
  some(e, t) {
    return apply$1(this, "some", e, t, void 0, arguments);
  },
  splice(...e) {
    return noTracking(this, "splice", e);
  },
  toReversed() {
    return reactiveReadArray(this).toReversed();
  },
  toSorted(e) {
    return reactiveReadArray(this).toSorted(e);
  },
  toSpliced(...e) {
    return reactiveReadArray(this).toSpliced(...e);
  },
  unshift(...e) {
    return noTracking(this, "unshift", e);
  },
  values() {
    return iterator(this, "values", toReactive);
  },
};
function iterator(e, t, r) {
  const n = shallowReadArray(e),
    i = n[t]();
  return (
    n !== e &&
      !isShallow(e) &&
      ((i._next = i.next),
      (i.next = () => {
        const a = i._next();
        return a.value && (a.value = r(a.value)), a;
      })),
    i
  );
}
const arrayProto = Array.prototype;
function apply$1(e, t, r, n, i, a) {
  const o = shallowReadArray(e),
    l = o !== e && !isShallow(e),
    c = o[t];
  if (c !== arrayProto[t]) {
    const E = c.apply(e, a);
    return l ? toReactive(E) : E;
  }
  let u = r;
  o !== e &&
    (l
      ? (u = function (E, b) {
          return r.call(this, toReactive(E), b, e);
        })
      : r.length > 2 &&
        (u = function (E, b) {
          return r.call(this, E, b, e);
        }));
  const d = c.call(o, u, n);
  return l && i ? i(d) : d;
}
function reduce(e, t, r, n) {
  const i = shallowReadArray(e);
  let a = r;
  return (
    i !== e &&
      (isShallow(e)
        ? r.length > 3 &&
          (a = function (o, l, c) {
            return r.call(this, o, l, c, e);
          })
        : (a = function (o, l, c) {
            return r.call(this, o, toReactive(l), c, e);
          })),
    i[t](a, ...n)
  );
}
function searchProxy(e, t, r) {
  const n = toRaw(e);
  track(n, "iterate", ARRAY_ITERATE_KEY);
  const i = n[t](...r);
  return (i === -1 || i === !1) && isProxy(r[0])
    ? ((r[0] = toRaw(r[0])), n[t](...r))
    : i;
}
function noTracking(e, t, r = []) {
  pauseTracking(), startBatch();
  const n = toRaw(e)[t].apply(e, r);
  return endBatch(), resetTracking(), n;
}
const isNonTrackableKeys = makeMap("__proto__,__v_isRef,__isVue"),
  builtInSymbols = new Set(
    Object.getOwnPropertyNames(Symbol)
      .filter((e) => e !== "arguments" && e !== "caller")
      .map((e) => Symbol[e])
      .filter(isSymbol$1)
  );
function hasOwnProperty$1(e) {
  isSymbol$1(e) || (e = String(e));
  const t = toRaw(this);
  return track(t, "has", e), t.hasOwnProperty(e);
}
class BaseReactiveHandler {
  constructor(t = !1, r = !1) {
    (this._isReadonly = t), (this._isShallow = r);
  }
  get(t, r, n) {
    if (r === "__v_skip") return t.__v_skip;
    const i = this._isReadonly,
      a = this._isShallow;
    if (r === "__v_isReactive") return !i;
    if (r === "__v_isReadonly") return i;
    if (r === "__v_isShallow") return a;
    if (r === "__v_raw")
      return n ===
        (i
          ? a
            ? shallowReadonlyMap
            : readonlyMap
          : a
          ? shallowReactiveMap
          : reactiveMap
        ).get(t) || Object.getPrototypeOf(t) === Object.getPrototypeOf(n)
        ? t
        : void 0;
    const o = isArray$2(t);
    if (!i) {
      let c;
      if (o && (c = arrayInstrumentations[r])) return c;
      if (r === "hasOwnProperty") return hasOwnProperty$1;
    }
    const l = Reflect.get(t, r, isRef(t) ? t : n);
    return (isSymbol$1(r) ? builtInSymbols.has(r) : isNonTrackableKeys(r)) ||
      (i || track(t, "get", r), a)
      ? l
      : isRef(l)
      ? o && isIntegerKey(r)
        ? l
        : l.value
      : isObject$2(l)
      ? i
        ? readonly(l)
        : reactive(l)
      : l;
  }
}
class MutableReactiveHandler extends BaseReactiveHandler {
  constructor(t = !1) {
    super(!1, t);
  }
  set(t, r, n, i) {
    let a = t[r];
    if (!this._isShallow) {
      const c = isReadonly(a);
      if (
        (!isShallow(n) && !isReadonly(n) && ((a = toRaw(a)), (n = toRaw(n))),
        !isArray$2(t) && isRef(a) && !isRef(n))
      )
        return c ? !1 : ((a.value = n), !0);
    }
    const o =
        isArray$2(t) && isIntegerKey(r) ? Number(r) < t.length : hasOwn$1(t, r),
      l = Reflect.set(t, r, n, isRef(t) ? t : i);
    return (
      t === toRaw(i) &&
        (o
          ? hasChanged(n, a) && trigger(t, "set", r, n)
          : trigger(t, "add", r, n)),
      l
    );
  }
  deleteProperty(t, r) {
    const n = hasOwn$1(t, r);
    t[r];
    const i = Reflect.deleteProperty(t, r);
    return i && n && trigger(t, "delete", r, void 0), i;
  }
  has(t, r) {
    const n = Reflect.has(t, r);
    return (!isSymbol$1(r) || !builtInSymbols.has(r)) && track(t, "has", r), n;
  }
  ownKeys(t) {
    return (
      track(t, "iterate", isArray$2(t) ? "length" : ITERATE_KEY),
      Reflect.ownKeys(t)
    );
  }
}
class ReadonlyReactiveHandler extends BaseReactiveHandler {
  constructor(t = !1) {
    super(!0, t);
  }
  set(t, r) {
    return !0;
  }
  deleteProperty(t, r) {
    return !0;
  }
}
const mutableHandlers = new MutableReactiveHandler(),
  readonlyHandlers = new ReadonlyReactiveHandler(),
  shallowReactiveHandlers = new MutableReactiveHandler(!0),
  shallowReadonlyHandlers = new ReadonlyReactiveHandler(!0),
  toShallow = (e) => e,
  getProto = (e) => Reflect.getPrototypeOf(e);
function createIterableMethod(e, t, r) {
  return function (...n) {
    const i = this.__v_raw,
      a = toRaw(i),
      o = isMap(a),
      l = e === "entries" || (e === Symbol.iterator && o),
      c = e === "keys" && o,
      u = i[e](...n),
      d = r ? toShallow : t ? toReadonly : toReactive;
    return (
      !t && track(a, "iterate", c ? MAP_KEY_ITERATE_KEY : ITERATE_KEY),
      {
        next() {
          const { value: E, done: b } = u.next();
          return b
            ? { value: E, done: b }
            : { value: l ? [d(E[0]), d(E[1])] : d(E), done: b };
        },
        [Symbol.iterator]() {
          return this;
        },
      }
    );
  };
}
function createReadonlyMethod(e) {
  return function (...t) {
    return e === "delete" ? !1 : e === "clear" ? void 0 : this;
  };
}
function createInstrumentations(e, t) {
  const r = {
    get(i) {
      const a = this.__v_raw,
        o = toRaw(a),
        l = toRaw(i);
      e || (hasChanged(i, l) && track(o, "get", i), track(o, "get", l));
      const { has: c } = getProto(o),
        u = t ? toShallow : e ? toReadonly : toReactive;
      if (c.call(o, i)) return u(a.get(i));
      if (c.call(o, l)) return u(a.get(l));
      a !== o && a.get(i);
    },
    get size() {
      const i = this.__v_raw;
      return (
        !e && track(toRaw(i), "iterate", ITERATE_KEY), Reflect.get(i, "size", i)
      );
    },
    has(i) {
      const a = this.__v_raw,
        o = toRaw(a),
        l = toRaw(i);
      return (
        e || (hasChanged(i, l) && track(o, "has", i), track(o, "has", l)),
        i === l ? a.has(i) : a.has(i) || a.has(l)
      );
    },
    forEach(i, a) {
      const o = this,
        l = o.__v_raw,
        c = toRaw(l),
        u = t ? toShallow : e ? toReadonly : toReactive;
      return (
        !e && track(c, "iterate", ITERATE_KEY),
        l.forEach((d, E) => i.call(a, u(d), u(E), o))
      );
    },
  };
  return (
    extend(
      r,
      e
        ? {
            add: createReadonlyMethod("add"),
            set: createReadonlyMethod("set"),
            delete: createReadonlyMethod("delete"),
            clear: createReadonlyMethod("clear"),
          }
        : {
            add(i) {
              !t && !isShallow(i) && !isReadonly(i) && (i = toRaw(i));
              const a = toRaw(this);
              return (
                getProto(a).has.call(a, i) ||
                  (a.add(i), trigger(a, "add", i, i)),
                this
              );
            },
            set(i, a) {
              !t && !isShallow(a) && !isReadonly(a) && (a = toRaw(a));
              const o = toRaw(this),
                { has: l, get: c } = getProto(o);
              let u = l.call(o, i);
              u || ((i = toRaw(i)), (u = l.call(o, i)));
              const d = c.call(o, i);
              return (
                o.set(i, a),
                u
                  ? hasChanged(a, d) && trigger(o, "set", i, a)
                  : trigger(o, "add", i, a),
                this
              );
            },
            delete(i) {
              const a = toRaw(this),
                { has: o, get: l } = getProto(a);
              let c = o.call(a, i);
              c || ((i = toRaw(i)), (c = o.call(a, i))), l && l.call(a, i);
              const u = a.delete(i);
              return c && trigger(a, "delete", i, void 0), u;
            },
            clear() {
              const i = toRaw(this),
                a = i.size !== 0,
                o = i.clear();
              return a && trigger(i, "clear", void 0, void 0), o;
            },
          }
    ),
    ["keys", "values", "entries", Symbol.iterator].forEach((i) => {
      r[i] = createIterableMethod(i, e, t);
    }),
    r
  );
}
function createInstrumentationGetter(e, t) {
  const r = createInstrumentations(e, t);
  return (n, i, a) =>
    i === "__v_isReactive"
      ? !e
      : i === "__v_isReadonly"
      ? e
      : i === "__v_raw"
      ? n
      : Reflect.get(hasOwn$1(r, i) && i in n ? r : n, i, a);
}
const mutableCollectionHandlers = { get: createInstrumentationGetter(!1, !1) },
  shallowCollectionHandlers = { get: createInstrumentationGetter(!1, !0) },
  readonlyCollectionHandlers = { get: createInstrumentationGetter(!0, !1) },
  shallowReadonlyCollectionHandlers = {
    get: createInstrumentationGetter(!0, !0),
  },
  reactiveMap = new WeakMap(),
  shallowReactiveMap = new WeakMap(),
  readonlyMap = new WeakMap(),
  shallowReadonlyMap = new WeakMap();
function targetTypeMap(e) {
  switch (e) {
    case "Object":
    case "Array":
      return 1;
    case "Map":
    case "Set":
    case "WeakMap":
    case "WeakSet":
      return 2;
    default:
      return 0;
  }
}
function getTargetType(e) {
  return e.__v_skip || !Object.isExtensible(e)
    ? 0
    : targetTypeMap(toRawType(e));
}
function reactive(e) {
  return isReadonly(e)
    ? e
    : createReactiveObject(
        e,
        !1,
        mutableHandlers,
        mutableCollectionHandlers,
        reactiveMap
      );
}
function shallowReactive(e) {
  return createReactiveObject(
    e,
    !1,
    shallowReactiveHandlers,
    shallowCollectionHandlers,
    shallowReactiveMap
  );
}
function readonly(e) {
  return createReactiveObject(
    e,
    !0,
    readonlyHandlers,
    readonlyCollectionHandlers,
    readonlyMap
  );
}
function shallowReadonly(e) {
  return createReactiveObject(
    e,
    !0,
    shallowReadonlyHandlers,
    shallowReadonlyCollectionHandlers,
    shallowReadonlyMap
  );
}
function createReactiveObject(e, t, r, n, i) {
  if (!isObject$2(e) || (e.__v_raw && !(t && e.__v_isReactive))) return e;
  const a = i.get(e);
  if (a) return a;
  const o = getTargetType(e);
  if (o === 0) return e;
  const l = new Proxy(e, o === 2 ? n : r);
  return i.set(e, l), l;
}
function isReactive(e) {
  return isReadonly(e) ? isReactive(e.__v_raw) : !!(e && e.__v_isReactive);
}
function isReadonly(e) {
  return !!(e && e.__v_isReadonly);
}
function isShallow(e) {
  return !!(e && e.__v_isShallow);
}
function isProxy(e) {
  return e ? !!e.__v_raw : !1;
}
function toRaw(e) {
  const t = e && e.__v_raw;
  return t ? toRaw(t) : e;
}
function markRaw(e) {
  return (
    !hasOwn$1(e, "__v_skip") &&
      Object.isExtensible(e) &&
      def(e, "__v_skip", !0),
    e
  );
}
const toReactive = (e) => (isObject$2(e) ? reactive(e) : e),
  toReadonly = (e) => (isObject$2(e) ? readonly(e) : e);
function isRef(e) {
  return e ? e.__v_isRef === !0 : !1;
}
function ref(e) {
  return createRef(e, !1);
}
function shallowRef(e) {
  return createRef(e, !0);
}
function createRef(e, t) {
  return isRef(e) ? e : new RefImpl(e, t);
}
class RefImpl {
  constructor(t, r) {
    (this.dep = new Dep()),
      (this.__v_isRef = !0),
      (this.__v_isShallow = !1),
      (this._rawValue = r ? t : toRaw(t)),
      (this._value = r ? t : toReactive(t)),
      (this.__v_isShallow = r);
  }
  get value() {
    return this.dep.track(), this._value;
  }
  set value(t) {
    const r = this._rawValue,
      n = this.__v_isShallow || isShallow(t) || isReadonly(t);
    (t = n ? t : toRaw(t)),
      hasChanged(t, r) &&
        ((this._rawValue = t),
        (this._value = n ? t : toReactive(t)),
        this.dep.trigger());
  }
}
function triggerRef(e) {
  e.dep && e.dep.trigger();
}
function unref(e) {
  return isRef(e) ? e.value : e;
}
function toValue(e) {
  return isFunction$1(e) ? e() : unref(e);
}
const shallowUnwrapHandlers = {
  get: (e, t, r) => (t === "__v_raw" ? e : unref(Reflect.get(e, t, r))),
  set: (e, t, r, n) => {
    const i = e[t];
    return isRef(i) && !isRef(r)
      ? ((i.value = r), !0)
      : Reflect.set(e, t, r, n);
  },
};
function proxyRefs(e) {
  return isReactive(e) ? e : new Proxy(e, shallowUnwrapHandlers);
}
class CustomRefImpl {
  constructor(t) {
    (this.__v_isRef = !0), (this._value = void 0);
    const r = (this.dep = new Dep()),
      { get: n, set: i } = t(r.track.bind(r), r.trigger.bind(r));
    (this._get = n), (this._set = i);
  }
  get value() {
    return (this._value = this._get());
  }
  set value(t) {
    this._set(t);
  }
}
function customRef(e) {
  return new CustomRefImpl(e);
}
function toRefs(e) {
  const t = isArray$2(e) ? new Array(e.length) : {};
  for (const r in e) t[r] = propertyToRef(e, r);
  return t;
}
class ObjectRefImpl {
  constructor(t, r, n) {
    (this._object = t),
      (this._key = r),
      (this._defaultValue = n),
      (this.__v_isRef = !0),
      (this._value = void 0);
  }
  get value() {
    const t = this._object[this._key];
    return (this._value = t === void 0 ? this._defaultValue : t);
  }
  set value(t) {
    this._object[this._key] = t;
  }
  get dep() {
    return getDepFromReactive(toRaw(this._object), this._key);
  }
}
class GetterRefImpl {
  constructor(t) {
    (this._getter = t),
      (this.__v_isRef = !0),
      (this.__v_isReadonly = !0),
      (this._value = void 0);
  }
  get value() {
    return (this._value = this._getter());
  }
}
function toRef(e, t, r) {
  return isRef(e)
    ? e
    : isFunction$1(e)
    ? new GetterRefImpl(e)
    : isObject$2(e) && arguments.length > 1
    ? propertyToRef(e, t, r)
    : ref(e);
}
function propertyToRef(e, t, r) {
  const n = e[t];
  return isRef(n) ? n : new ObjectRefImpl(e, t, r);
}
class ComputedRefImpl {
  constructor(t, r, n) {
    (this.fn = t),
      (this.setter = r),
      (this._value = void 0),
      (this.dep = new Dep(this)),
      (this.__v_isRef = !0),
      (this.deps = void 0),
      (this.depsTail = void 0),
      (this.flags = 16),
      (this.globalVersion = globalVersion - 1),
      (this.next = void 0),
      (this.effect = this),
      (this.__v_isReadonly = !r),
      (this.isSSR = n);
  }
  notify() {
    if (((this.flags |= 16), !(this.flags & 8) && activeSub !== this))
      return batch(this, !0), !0;
  }
  get value() {
    const t = this.dep.track();
    return (
      refreshComputed(this), t && (t.version = this.dep.version), this._value
    );
  }
  set value(t) {
    this.setter && this.setter(t);
  }
}
function computed$1(e, t, r = !1) {
  let n, i;
  return (
    isFunction$1(e) ? (n = e) : ((n = e.get), (i = e.set)),
    new ComputedRefImpl(n, i, r)
  );
}
const TrackOpTypes = { GET: "get", HAS: "has", ITERATE: "iterate" },
  TriggerOpTypes = { SET: "set", ADD: "add", DELETE: "delete", CLEAR: "clear" },
  INITIAL_WATCHER_VALUE = {},
  cleanupMap = new WeakMap();
let activeWatcher;
function getCurrentWatcher() {
  return activeWatcher;
}
function onWatcherCleanup(e, t = !1, r = activeWatcher) {
  if (r) {
    let n = cleanupMap.get(r);
    n || cleanupMap.set(r, (n = [])), n.push(e);
  }
}
function watch$1(e, t, r = EMPTY_OBJ) {
  const {
      immediate: n,
      deep: i,
      once: a,
      scheduler: o,
      augmentJob: l,
      call: c,
    } = r,
    u = (A) =>
      i
        ? A
        : isShallow(A) || i === !1 || i === 0
        ? traverse(A, 1)
        : traverse(A);
  let d,
    E,
    b,
    P,
    R = !1,
    T = !1;
  if (
    (isRef(e)
      ? ((E = () => e.value), (R = isShallow(e)))
      : isReactive(e)
      ? ((E = () => u(e)), (R = !0))
      : isArray$2(e)
      ? ((T = !0),
        (R = e.some((A) => isReactive(A) || isShallow(A))),
        (E = () =>
          e.map((A) => {
            if (isRef(A)) return A.value;
            if (isReactive(A)) return u(A);
            if (isFunction$1(A)) return c ? c(A, 2) : A();
          })))
      : isFunction$1(e)
      ? t
        ? (E = c ? () => c(e, 2) : e)
        : (E = () => {
            if (b) {
              pauseTracking();
              try {
                b();
              } finally {
                resetTracking();
              }
            }
            const A = activeWatcher;
            activeWatcher = d;
            try {
              return c ? c(e, 3, [P]) : e(P);
            } finally {
              activeWatcher = A;
            }
          })
      : (E = NOOP),
    t && i)
  ) {
    const A = E,
      O = i === !0 ? 1 / 0 : i;
    E = () => traverse(A(), O);
  }
  const M = getCurrentScope(),
    x = () => {
      d.stop(), M && M.active && remove(M.effects, d);
    };
  if (a && t) {
    const A = t;
    t = (...O) => {
      A(...O), x();
    };
  }
  let k = T
    ? new Array(e.length).fill(INITIAL_WATCHER_VALUE)
    : INITIAL_WATCHER_VALUE;
  const S = (A) => {
    if (!(!(d.flags & 1) || (!d.dirty && !A)))
      if (t) {
        const O = d.run();
        if (
          i ||
          R ||
          (T ? O.some((F, D) => hasChanged(F, k[D])) : hasChanged(O, k))
        ) {
          b && b();
          const F = activeWatcher;
          activeWatcher = d;
          try {
            const D = [
              O,
              k === INITIAL_WATCHER_VALUE
                ? void 0
                : T && k[0] === INITIAL_WATCHER_VALUE
                ? []
                : k,
              P,
            ];
            c ? c(t, 3, D) : t(...D), (k = O);
          } finally {
            activeWatcher = F;
          }
        }
      } else d.run();
  };
  return (
    l && l(S),
    (d = new ReactiveEffect(E)),
    (d.scheduler = o ? () => o(S, !1) : S),
    (P = (A) => onWatcherCleanup(A, !1, d)),
    (b = d.onStop =
      () => {
        const A = cleanupMap.get(d);
        if (A) {
          if (c) c(A, 4);
          else for (const O of A) O();
          cleanupMap.delete(d);
        }
      }),
    t ? (n ? S(!0) : (k = d.run())) : o ? o(S.bind(null, !0), !0) : d.run(),
    (x.pause = d.pause.bind(d)),
    (x.resume = d.resume.bind(d)),
    (x.stop = x),
    x
  );
}
function traverse(e, t = 1 / 0, r) {
  if (
    t <= 0 ||
    !isObject$2(e) ||
    e.__v_skip ||
    ((r = r || new Set()), r.has(e))
  )
    return e;
  if ((r.add(e), t--, isRef(e))) traverse(e.value, t, r);
  else if (isArray$2(e))
    for (let n = 0; n < e.length; n++) traverse(e[n], t, r);
  else if (isSet(e) || isMap(e))
    e.forEach((n) => {
      traverse(n, t, r);
    });
  else if (isPlainObject$4(e)) {
    for (const n in e) traverse(e[n], t, r);
    for (const n of Object.getOwnPropertySymbols(e))
      Object.prototype.propertyIsEnumerable.call(e, n) && traverse(e[n], t, r);
  }
  return e;
}
/**
 * @vue/runtime-core v3.5.13
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ const stack = [];
function pushWarningContext(e) {
  stack.push(e);
}
function popWarningContext() {
  stack.pop();
}
let isWarning = !1;
function warn$1(e, ...t) {
  if (isWarning) return;
  (isWarning = !0), pauseTracking();
  const r = stack.length ? stack[stack.length - 1].component : null,
    n = r && r.appContext.config.warnHandler,
    i = getComponentTrace();
  if (n)
    callWithErrorHandling(n, r, 11, [
      e +
        t
          .map((a) => {
            var o, l;
            return (l = (o = a.toString) == null ? void 0 : o.call(a)) != null
              ? l
              : JSON.stringify(a);
          })
          .join(""),
      r && r.proxy,
      i.map(({ vnode: a }) => `at <${formatComponentName(r, a.type)}>`).join(`
`),
      i,
    ]);
  else {
    const a = [`[Vue warn]: ${e}`, ...t];
    i.length &&
      a.push(
        `
`,
        ...formatTrace(i)
      ),
      console.warn(...a);
  }
  resetTracking(), (isWarning = !1);
}
function getComponentTrace() {
  let e = stack[stack.length - 1];
  if (!e) return [];
  const t = [];
  for (; e; ) {
    const r = t[0];
    r && r.vnode === e
      ? r.recurseCount++
      : t.push({ vnode: e, recurseCount: 0 });
    const n = e.component && e.component.parent;
    e = n && n.vnode;
  }
  return t;
}
function formatTrace(e) {
  const t = [];
  return (
    e.forEach((r, n) => {
      t.push(
        ...(n === 0
          ? []
          : [
              `
`,
            ]),
        ...formatTraceEntry(r)
      );
    }),
    t
  );
}
function formatTraceEntry({ vnode: e, recurseCount: t }) {
  const r = t > 0 ? `... (${t} recursive calls)` : "",
    n = e.component ? e.component.parent == null : !1,
    i = ` at <${formatComponentName(e.component, e.type, n)}`,
    a = ">" + r;
  return e.props ? [i, ...formatProps(e.props), a] : [i + a];
}
function formatProps(e) {
  const t = [],
    r = Object.keys(e);
  return (
    r.slice(0, 3).forEach((n) => {
      t.push(...formatProp(n, e[n]));
    }),
    r.length > 3 && t.push(" ..."),
    t
  );
}
function formatProp(e, t, r) {
  return isString$1(t)
    ? ((t = JSON.stringify(t)), r ? t : [`${e}=${t}`])
    : typeof t == "number" || typeof t == "boolean" || t == null
    ? r
      ? t
      : [`${e}=${t}`]
    : isRef(t)
    ? ((t = formatProp(e, toRaw(t.value), !0)), r ? t : [`${e}=Ref<`, t, ">"])
    : isFunction$1(t)
    ? [`${e}=fn${t.name ? `<${t.name}>` : ""}`]
    : ((t = toRaw(t)), r ? t : [`${e}=`, t]);
}
function assertNumber(e, t) {}
const ErrorCodes = {
    SETUP_FUNCTION: 0,
    0: "SETUP_FUNCTION",
    RENDER_FUNCTION: 1,
    1: "RENDER_FUNCTION",
    NATIVE_EVENT_HANDLER: 5,
    5: "NATIVE_EVENT_HANDLER",
    COMPONENT_EVENT_HANDLER: 6,
    6: "COMPONENT_EVENT_HANDLER",
    VNODE_HOOK: 7,
    7: "VNODE_HOOK",
    DIRECTIVE_HOOK: 8,
    8: "DIRECTIVE_HOOK",
    TRANSITION_HOOK: 9,
    9: "TRANSITION_HOOK",
    APP_ERROR_HANDLER: 10,
    10: "APP_ERROR_HANDLER",
    APP_WARN_HANDLER: 11,
    11: "APP_WARN_HANDLER",
    FUNCTION_REF: 12,
    12: "FUNCTION_REF",
    ASYNC_COMPONENT_LOADER: 13,
    13: "ASYNC_COMPONENT_LOADER",
    SCHEDULER: 14,
    14: "SCHEDULER",
    COMPONENT_UPDATE: 15,
    15: "COMPONENT_UPDATE",
    APP_UNMOUNT_CLEANUP: 16,
    16: "APP_UNMOUNT_CLEANUP",
  },
  ErrorTypeStrings$1 = {
    sp: "serverPrefetch hook",
    bc: "beforeCreate hook",
    c: "created hook",
    bm: "beforeMount hook",
    m: "mounted hook",
    bu: "beforeUpdate hook",
    u: "updated",
    bum: "beforeUnmount hook",
    um: "unmounted hook",
    a: "activated hook",
    da: "deactivated hook",
    ec: "errorCaptured hook",
    rtc: "renderTracked hook",
    rtg: "renderTriggered hook",
    0: "setup function",
    1: "render function",
    2: "watcher getter",
    3: "watcher callback",
    4: "watcher cleanup function",
    5: "native event handler",
    6: "component event handler",
    7: "vnode hook",
    8: "directive hook",
    9: "transition hook",
    10: "app errorHandler",
    11: "app warnHandler",
    12: "ref function",
    13: "async component loader",
    14: "scheduler flush",
    15: "component update",
    16: "app unmount cleanup function",
  };
function callWithErrorHandling(e, t, r, n) {
  try {
    return n ? e(...n) : e();
  } catch (i) {
    handleError(i, t, r);
  }
}
function callWithAsyncErrorHandling(e, t, r, n) {
  if (isFunction$1(e)) {
    const i = callWithErrorHandling(e, t, r, n);
    return (
      i &&
        isPromise$1(i) &&
        i.catch((a) => {
          handleError(a, t, r);
        }),
      i
    );
  }
  if (isArray$2(e)) {
    const i = [];
    for (let a = 0; a < e.length; a++)
      i.push(callWithAsyncErrorHandling(e[a], t, r, n));
    return i;
  }
}
function handleError(e, t, r, n = !0) {
  const i = t ? t.vnode : null,
    { errorHandler: a, throwUnhandledErrorInProduction: o } =
      (t && t.appContext.config) || EMPTY_OBJ;
  if (t) {
    let l = t.parent;
    const c = t.proxy,
      u = `https://vuejs.org/error-reference/#runtime-${r}`;
    for (; l; ) {
      const d = l.ec;
      if (d) {
        for (let E = 0; E < d.length; E++) if (d[E](e, c, u) === !1) return;
      }
      l = l.parent;
    }
    if (a) {
      pauseTracking(),
        callWithErrorHandling(a, null, 10, [e, c, u]),
        resetTracking();
      return;
    }
  }
  logError(e, r, i, n, o);
}
function logError(e, t, r, n = !0, i = !1) {
  if (i) throw e;
  console.error(e);
}
const queue = [];
let flushIndex = -1;
const pendingPostFlushCbs = [];
let activePostFlushCbs = null,
  postFlushIndex = 0;
const resolvedPromise = Promise.resolve();
let currentFlushPromise = null;
function nextTick(e) {
  const t = currentFlushPromise || resolvedPromise;
  return e ? t.then(this ? e.bind(this) : e) : t;
}
function findInsertionIndex$1(e) {
  let t = flushIndex + 1,
    r = queue.length;
  for (; t < r; ) {
    const n = (t + r) >>> 1,
      i = queue[n],
      a = getId(i);
    a < e || (a === e && i.flags & 2) ? (t = n + 1) : (r = n);
  }
  return t;
}
function queueJob(e) {
  if (!(e.flags & 1)) {
    const t = getId(e),
      r = queue[queue.length - 1];
    !r || (!(e.flags & 2) && t >= getId(r))
      ? queue.push(e)
      : queue.splice(findInsertionIndex$1(t), 0, e),
      (e.flags |= 1),
      queueFlush();
  }
}
function queueFlush() {
  currentFlushPromise ||
    (currentFlushPromise = resolvedPromise.then(flushJobs));
}
function queuePostFlushCb(e) {
  isArray$2(e)
    ? pendingPostFlushCbs.push(...e)
    : activePostFlushCbs && e.id === -1
    ? activePostFlushCbs.splice(postFlushIndex + 1, 0, e)
    : e.flags & 1 || (pendingPostFlushCbs.push(e), (e.flags |= 1)),
    queueFlush();
}
function flushPreFlushCbs(e, t, r = flushIndex + 1) {
  for (; r < queue.length; r++) {
    const n = queue[r];
    if (n && n.flags & 2) {
      if (e && n.id !== e.uid) continue;
      queue.splice(r, 1),
        r--,
        n.flags & 4 && (n.flags &= -2),
        n(),
        n.flags & 4 || (n.flags &= -2);
    }
  }
}
function flushPostFlushCbs(e) {
  if (pendingPostFlushCbs.length) {
    const t = [...new Set(pendingPostFlushCbs)].sort(
      (r, n) => getId(r) - getId(n)
    );
    if (((pendingPostFlushCbs.length = 0), activePostFlushCbs)) {
      activePostFlushCbs.push(...t);
      return;
    }
    for (
      activePostFlushCbs = t, postFlushIndex = 0;
      postFlushIndex < activePostFlushCbs.length;
      postFlushIndex++
    ) {
      const r = activePostFlushCbs[postFlushIndex];
      r.flags & 4 && (r.flags &= -2), r.flags & 8 || r(), (r.flags &= -2);
    }
    (activePostFlushCbs = null), (postFlushIndex = 0);
  }
}
const getId = (e) => (e.id == null ? (e.flags & 2 ? -1 : 1 / 0) : e.id);
function flushJobs(e) {
  try {
    for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {
      const t = queue[flushIndex];
      t &&
        !(t.flags & 8) &&
        (t.flags & 4 && (t.flags &= -2),
        callWithErrorHandling(t, t.i, t.i ? 15 : 14),
        t.flags & 4 || (t.flags &= -2));
    }
  } finally {
    for (; flushIndex < queue.length; flushIndex++) {
      const t = queue[flushIndex];
      t && (t.flags &= -2);
    }
    (flushIndex = -1),
      (queue.length = 0),
      flushPostFlushCbs(),
      (currentFlushPromise = null),
      (queue.length || pendingPostFlushCbs.length) && flushJobs();
  }
}
let devtools$1,
  buffer = [];
function setDevtoolsHook$1(e, t) {
  var r, n;
  (devtools$1 = e),
    devtools$1
      ? ((devtools$1.enabled = !0),
        buffer.forEach(({ event: i, args: a }) => devtools$1.emit(i, ...a)),
        (buffer = []))
      : typeof window < "u" &&
        window.HTMLElement &&
        !(
          (n = (r = window.navigator) == null ? void 0 : r.userAgent) != null &&
          n.includes("jsdom")
        )
      ? ((t.__VUE_DEVTOOLS_HOOK_REPLAY__ =
          t.__VUE_DEVTOOLS_HOOK_REPLAY__ || []).push((a) => {
          setDevtoolsHook$1(a, t);
        }),
        setTimeout(() => {
          devtools$1 ||
            ((t.__VUE_DEVTOOLS_HOOK_REPLAY__ = null), (buffer = []));
        }, 3e3))
      : (buffer = []);
}
let currentRenderingInstance = null,
  currentScopeId = null;
function setCurrentRenderingInstance(e) {
  const t = currentRenderingInstance;
  return (
    (currentRenderingInstance = e),
    (currentScopeId = (e && e.type.__scopeId) || null),
    t
  );
}
function pushScopeId(e) {
  currentScopeId = e;
}
function popScopeId() {
  currentScopeId = null;
}
const withScopeId = (e) => withCtx;
function withCtx(e, t = currentRenderingInstance, r) {
  if (!t || e._n) return e;
  const n = (...i) => {
    n._d && setBlockTracking(-1);
    const a = setCurrentRenderingInstance(t);
    let o;
    try {
      o = e(...i);
    } finally {
      setCurrentRenderingInstance(a), n._d && setBlockTracking(1);
    }
    return o;
  };
  return (n._n = !0), (n._c = !0), (n._d = !0), n;
}
function withDirectives(e, t) {
  if (currentRenderingInstance === null) return e;
  const r = getComponentPublicInstance(currentRenderingInstance),
    n = e.dirs || (e.dirs = []);
  for (let i = 0; i < t.length; i++) {
    let [a, o, l, c = EMPTY_OBJ] = t[i];
    a &&
      (isFunction$1(a) && (a = { mounted: a, updated: a }),
      a.deep && traverse(o),
      n.push({
        dir: a,
        instance: r,
        value: o,
        oldValue: void 0,
        arg: l,
        modifiers: c,
      }));
  }
  return e;
}
function invokeDirectiveHook(e, t, r, n) {
  const i = e.dirs,
    a = t && t.dirs;
  for (let o = 0; o < i.length; o++) {
    const l = i[o];
    a && (l.oldValue = a[o].value);
    let c = l.dir[n];
    c &&
      (pauseTracking(),
      callWithAsyncErrorHandling(c, r, 8, [e.el, l, e, t]),
      resetTracking());
  }
}
const TeleportEndKey = Symbol("_vte"),
  isTeleport = (e) => e.__isTeleport,
  isTeleportDisabled = (e) => e && (e.disabled || e.disabled === ""),
  isTeleportDeferred = (e) => e && (e.defer || e.defer === ""),
  isTargetSVG = (e) => typeof SVGElement < "u" && e instanceof SVGElement,
  isTargetMathML = (e) =>
    typeof MathMLElement == "function" && e instanceof MathMLElement,
  resolveTarget = (e, t) => {
    const r = e && e.to;
    return isString$1(r) ? (t ? t(r) : null) : r;
  },
  TeleportImpl = {
    name: "Teleport",
    __isTeleport: !0,
    process(e, t, r, n, i, a, o, l, c, u) {
      const {
          mc: d,
          pc: E,
          pbc: b,
          o: { insert: P, querySelector: R, createText: T, createComment: M },
        } = u,
        x = isTeleportDisabled(t.props);
      let { shapeFlag: k, children: S, dynamicChildren: A } = t;
      if (e == null) {
        const O = (t.el = T("")),
          F = (t.anchor = T(""));
        P(O, r, n), P(F, r, n);
        const D = ($, q) => {
            k & 16 &&
              (i && i.isCE && (i.ce._teleportTarget = $),
              d(S, $, q, i, a, o, l, c));
          },
          H = () => {
            const $ = (t.target = resolveTarget(t.props, R)),
              q = prepareAnchor($, t, T, P);
            $ &&
              (o !== "svg" && isTargetSVG($)
                ? (o = "svg")
                : o !== "mathml" && isTargetMathML($) && (o = "mathml"),
              x || (D($, q), updateCssVars(t, !1)));
          };
        x && (D(r, F), updateCssVars(t, !0)),
          isTeleportDeferred(t.props)
            ? queuePostRenderEffect(() => {
                H(), (t.el.__isMounted = !0);
              }, a)
            : H();
      } else {
        if (isTeleportDeferred(t.props) && !e.el.__isMounted) {
          queuePostRenderEffect(() => {
            TeleportImpl.process(e, t, r, n, i, a, o, l, c, u),
              delete e.el.__isMounted;
          }, a);
          return;
        }
        (t.el = e.el), (t.targetStart = e.targetStart);
        const O = (t.anchor = e.anchor),
          F = (t.target = e.target),
          D = (t.targetAnchor = e.targetAnchor),
          H = isTeleportDisabled(e.props),
          $ = H ? r : F,
          q = H ? O : D;
        if (
          (o === "svg" || isTargetSVG(F)
            ? (o = "svg")
            : (o === "mathml" || isTargetMathML(F)) && (o = "mathml"),
          A
            ? (b(e.dynamicChildren, A, $, i, a, o, l),
              traverseStaticChildren(e, t, !0))
            : c || E(e, t, $, q, i, a, o, l, !1),
          x)
        )
          H
            ? t.props &&
              e.props &&
              t.props.to !== e.props.to &&
              (t.props.to = e.props.to)
            : moveTeleport(t, r, O, u, 1);
        else if ((t.props && t.props.to) !== (e.props && e.props.to)) {
          const J = (t.target = resolveTarget(t.props, R));
          J && moveTeleport(t, J, null, u, 0);
        } else H && moveTeleport(t, F, D, u, 1);
        updateCssVars(t, x);
      }
    },
    remove(e, t, r, { um: n, o: { remove: i } }, a) {
      const {
        shapeFlag: o,
        children: l,
        anchor: c,
        targetStart: u,
        targetAnchor: d,
        target: E,
        props: b,
      } = e;
      if ((E && (i(u), i(d)), a && i(c), o & 16)) {
        const P = a || !isTeleportDisabled(b);
        for (let R = 0; R < l.length; R++) {
          const T = l[R];
          n(T, t, r, P, !!T.dynamicChildren);
        }
      }
    },
    move: moveTeleport,
    hydrate: hydrateTeleport,
  };
function moveTeleport(e, t, r, { o: { insert: n }, m: i }, a = 2) {
  a === 0 && n(e.targetAnchor, t, r);
  const { el: o, anchor: l, shapeFlag: c, children: u, props: d } = e,
    E = a === 2;
  if ((E && n(o, t, r), (!E || isTeleportDisabled(d)) && c & 16))
    for (let b = 0; b < u.length; b++) i(u[b], t, r, 2);
  E && n(l, t, r);
}
function hydrateTeleport(
  e,
  t,
  r,
  n,
  i,
  a,
  {
    o: {
      nextSibling: o,
      parentNode: l,
      querySelector: c,
      insert: u,
      createText: d,
    },
  },
  E
) {
  const b = (t.target = resolveTarget(t.props, c));
  if (b) {
    const P = isTeleportDisabled(t.props),
      R = b._lpa || b.firstChild;
    if (t.shapeFlag & 16)
      if (P)
        (t.anchor = E(o(e), t, l(e), r, n, i, a)),
          (t.targetStart = R),
          (t.targetAnchor = R && o(R));
      else {
        t.anchor = o(e);
        let T = R;
        for (; T; ) {
          if (T && T.nodeType === 8) {
            if (T.data === "teleport start anchor") t.targetStart = T;
            else if (T.data === "teleport anchor") {
              (t.targetAnchor = T),
                (b._lpa = t.targetAnchor && o(t.targetAnchor));
              break;
            }
          }
          T = o(T);
        }
        t.targetAnchor || prepareAnchor(b, t, d, u),
          E(R && o(R), t, b, r, n, i, a);
      }
    updateCssVars(t, P);
  }
  return t.anchor && o(t.anchor);
}
const Teleport = TeleportImpl;
function updateCssVars(e, t) {
  const r = e.ctx;
  if (r && r.ut) {
    let n, i;
    for (
      t
        ? ((n = e.el), (i = e.anchor))
        : ((n = e.targetStart), (i = e.targetAnchor));
      n && n !== i;

    )
      n.nodeType === 1 && n.setAttribute("data-v-owner", r.uid),
        (n = n.nextSibling);
    r.ut();
  }
}
function prepareAnchor(e, t, r, n) {
  const i = (t.targetStart = r("")),
    a = (t.targetAnchor = r(""));
  return (i[TeleportEndKey] = a), e && (n(i, e), n(a, e)), a;
}
const leaveCbKey = Symbol("_leaveCb"),
  enterCbKey$1 = Symbol("_enterCb");
function useTransitionState() {
  const e = {
    isMounted: !1,
    isLeaving: !1,
    isUnmounting: !1,
    leavingVNodes: new Map(),
  };
  return (
    onMounted(() => {
      e.isMounted = !0;
    }),
    onBeforeUnmount(() => {
      e.isUnmounting = !0;
    }),
    e
  );
}
const TransitionHookValidator = [Function, Array],
  BaseTransitionPropsValidators = {
    mode: String,
    appear: Boolean,
    persisted: Boolean,
    onBeforeEnter: TransitionHookValidator,
    onEnter: TransitionHookValidator,
    onAfterEnter: TransitionHookValidator,
    onEnterCancelled: TransitionHookValidator,
    onBeforeLeave: TransitionHookValidator,
    onLeave: TransitionHookValidator,
    onAfterLeave: TransitionHookValidator,
    onLeaveCancelled: TransitionHookValidator,
    onBeforeAppear: TransitionHookValidator,
    onAppear: TransitionHookValidator,
    onAfterAppear: TransitionHookValidator,
    onAppearCancelled: TransitionHookValidator,
  },
  recursiveGetSubtree = (e) => {
    const t = e.subTree;
    return t.component ? recursiveGetSubtree(t.component) : t;
  },
  BaseTransitionImpl = {
    name: "BaseTransition",
    props: BaseTransitionPropsValidators,
    setup(e, { slots: t }) {
      const r = getCurrentInstance$1(),
        n = useTransitionState();
      return () => {
        const i = t.default && getTransitionRawChildren(t.default(), !0);
        if (!i || !i.length) return;
        const a = findNonCommentChild(i),
          o = toRaw(e),
          { mode: l } = o;
        if (n.isLeaving) return emptyPlaceholder(a);
        const c = getInnerChild$1(a);
        if (!c) return emptyPlaceholder(a);
        let u = resolveTransitionHooks(c, o, n, r, (E) => (u = E));
        c.type !== Comment && setTransitionHooks(c, u);
        let d = r.subTree && getInnerChild$1(r.subTree);
        if (
          d &&
          d.type !== Comment &&
          !isSameVNodeType(c, d) &&
          recursiveGetSubtree(r).type !== Comment
        ) {
          let E = resolveTransitionHooks(d, o, n, r);
          if ((setTransitionHooks(d, E), l === "out-in" && c.type !== Comment))
            return (
              (n.isLeaving = !0),
              (E.afterLeave = () => {
                (n.isLeaving = !1),
                  r.job.flags & 8 || r.update(),
                  delete E.afterLeave,
                  (d = void 0);
              }),
              emptyPlaceholder(a)
            );
          l === "in-out" && c.type !== Comment
            ? (E.delayLeave = (b, P, R) => {
                const T = getLeavingNodesForType(n, d);
                (T[String(d.key)] = d),
                  (b[leaveCbKey] = () => {
                    P(),
                      (b[leaveCbKey] = void 0),
                      delete u.delayedLeave,
                      (d = void 0);
                  }),
                  (u.delayedLeave = () => {
                    R(), delete u.delayedLeave, (d = void 0);
                  });
              })
            : (d = void 0);
        } else d && (d = void 0);
        return a;
      };
    },
  };
function findNonCommentChild(e) {
  let t = e[0];
  if (e.length > 1) {
    for (const r of e)
      if (r.type !== Comment) {
        t = r;
        break;
      }
  }
  return t;
}
const BaseTransition = BaseTransitionImpl;
function getLeavingNodesForType(e, t) {
  const { leavingVNodes: r } = e;
  let n = r.get(t.type);
  return n || ((n = Object.create(null)), r.set(t.type, n)), n;
}
function resolveTransitionHooks(e, t, r, n, i) {
  const {
      appear: a,
      mode: o,
      persisted: l = !1,
      onBeforeEnter: c,
      onEnter: u,
      onAfterEnter: d,
      onEnterCancelled: E,
      onBeforeLeave: b,
      onLeave: P,
      onAfterLeave: R,
      onLeaveCancelled: T,
      onBeforeAppear: M,
      onAppear: x,
      onAfterAppear: k,
      onAppearCancelled: S,
    } = t,
    A = String(e.key),
    O = getLeavingNodesForType(r, e),
    F = ($, q) => {
      $ && callWithAsyncErrorHandling($, n, 9, q);
    },
    D = ($, q) => {
      const J = q[1];
      F($, q),
        isArray$2($)
          ? $.every((K) => K.length <= 1) && J()
          : $.length <= 1 && J();
    },
    H = {
      mode: o,
      persisted: l,
      beforeEnter($) {
        let q = c;
        if (!r.isMounted)
          if (a) q = M || c;
          else return;
        $[leaveCbKey] && $[leaveCbKey](!0);
        const J = O[A];
        J && isSameVNodeType(e, J) && J.el[leaveCbKey] && J.el[leaveCbKey](),
          F(q, [$]);
      },
      enter($) {
        let q = u,
          J = d,
          K = E;
        if (!r.isMounted)
          if (a) (q = x || u), (J = k || d), (K = S || E);
          else return;
        let ee = !1;
        const le = ($[enterCbKey$1] = (re) => {
          ee ||
            ((ee = !0),
            re ? F(K, [$]) : F(J, [$]),
            H.delayedLeave && H.delayedLeave(),
            ($[enterCbKey$1] = void 0));
        });
        q ? D(q, [$, le]) : le();
      },
      leave($, q) {
        const J = String(e.key);
        if (($[enterCbKey$1] && $[enterCbKey$1](!0), r.isUnmounting))
          return q();
        F(b, [$]);
        let K = !1;
        const ee = ($[leaveCbKey] = (le) => {
          K ||
            ((K = !0),
            q(),
            le ? F(T, [$]) : F(R, [$]),
            ($[leaveCbKey] = void 0),
            O[J] === e && delete O[J]);
        });
        (O[J] = e), P ? D(P, [$, ee]) : ee();
      },
      clone($) {
        const q = resolveTransitionHooks($, t, r, n, i);
        return i && i(q), q;
      },
    };
  return H;
}
function emptyPlaceholder(e) {
  if (isKeepAlive(e)) return (e = cloneVNode(e)), (e.children = null), e;
}
function getInnerChild$1(e) {
  if (!isKeepAlive(e))
    return isTeleport(e.type) && e.children
      ? findNonCommentChild(e.children)
      : e;
  const { shapeFlag: t, children: r } = e;
  if (r) {
    if (t & 16) return r[0];
    if (t & 32 && isFunction$1(r.default)) return r.default();
  }
}
function setTransitionHooks(e, t) {
  e.shapeFlag & 6 && e.component
    ? ((e.transition = t), setTransitionHooks(e.component.subTree, t))
    : e.shapeFlag & 128
    ? ((e.ssContent.transition = t.clone(e.ssContent)),
      (e.ssFallback.transition = t.clone(e.ssFallback)))
    : (e.transition = t);
}
function getTransitionRawChildren(e, t = !1, r) {
  let n = [],
    i = 0;
  for (let a = 0; a < e.length; a++) {
    let o = e[a];
    const l = r == null ? o.key : String(r) + String(o.key != null ? o.key : a);
    o.type === Fragment
      ? (o.patchFlag & 128 && i++,
        (n = n.concat(getTransitionRawChildren(o.children, t, l))))
      : (t || o.type !== Comment) &&
        n.push(l != null ? cloneVNode(o, { key: l }) : o);
  }
  if (i > 1) for (let a = 0; a < n.length; a++) n[a].patchFlag = -2;
  return n;
}
/*! #__NO_SIDE_EFFECTS__ */ function defineComponent$1(e, t) {
  return isFunction$1(e) ? extend({ name: e.name }, t, { setup: e }) : e;
}
function useId() {
  const e = getCurrentInstance$1();
  return e
    ? (e.appContext.config.idPrefix || "v") + "-" + e.ids[0] + e.ids[1]++
    : "";
}
function markAsyncBoundary(e) {
  e.ids = [e.ids[0] + e.ids[2]++ + "-", 0, 0];
}
function useTemplateRef(e) {
  const t = getCurrentInstance$1(),
    r = shallowRef(null);
  if (t) {
    const i = t.refs === EMPTY_OBJ ? (t.refs = {}) : t.refs;
    Object.defineProperty(i, e, {
      enumerable: !0,
      get: () => r.value,
      set: (a) => (r.value = a),
    });
  }
  return r;
}
function setRef(e, t, r, n, i = !1) {
  if (isArray$2(e)) {
    e.forEach((R, T) => setRef(R, t && (isArray$2(t) ? t[T] : t), r, n, i));
    return;
  }
  if (isAsyncWrapper(n) && !i) {
    n.shapeFlag & 512 &&
      n.type.__asyncResolved &&
      n.component.subTree.component &&
      setRef(e, t, r, n.component.subTree);
    return;
  }
  const a = n.shapeFlag & 4 ? getComponentPublicInstance(n.component) : n.el,
    o = i ? null : a,
    { i: l, r: c } = e,
    u = t && t.r,
    d = l.refs === EMPTY_OBJ ? (l.refs = {}) : l.refs,
    E = l.setupState,
    b = toRaw(E),
    P = E === EMPTY_OBJ ? () => !1 : (R) => hasOwn$1(b, R);
  if (
    (u != null &&
      u !== c &&
      (isString$1(u)
        ? ((d[u] = null), P(u) && (E[u] = null))
        : isRef(u) && (u.value = null)),
    isFunction$1(c))
  )
    callWithErrorHandling(c, l, 12, [o, d]);
  else {
    const R = isString$1(c),
      T = isRef(c);
    if (R || T) {
      const M = () => {
        if (e.f) {
          const x = R ? (P(c) ? E[c] : d[c]) : c.value;
          i
            ? isArray$2(x) && remove(x, a)
            : isArray$2(x)
            ? x.includes(a) || x.push(a)
            : R
            ? ((d[c] = [a]), P(c) && (E[c] = d[c]))
            : ((c.value = [a]), e.k && (d[e.k] = c.value));
        } else
          R
            ? ((d[c] = o), P(c) && (E[c] = o))
            : T && ((c.value = o), e.k && (d[e.k] = o));
      };
      o ? ((M.id = -1), queuePostRenderEffect(M, r)) : M();
    }
  }
}
let hasLoggedMismatchError = !1;
const logMismatchError = () => {
    hasLoggedMismatchError ||
      (console.error("Hydration completed but contains mismatches."),
      (hasLoggedMismatchError = !0));
  },
  isSVGContainer = (e) =>
    e.namespaceURI.includes("svg") && e.tagName !== "foreignObject",
  isMathMLContainer = (e) => e.namespaceURI.includes("MathML"),
  getContainerType = (e) => {
    if (e.nodeType === 1) {
      if (isSVGContainer(e)) return "svg";
      if (isMathMLContainer(e)) return "mathml";
    }
  },
  isComment = (e) => e.nodeType === 8;
function createHydrationFunctions(e) {
  const {
      mt: t,
      p: r,
      o: {
        patchProp: n,
        createText: i,
        nextSibling: a,
        parentNode: o,
        remove: l,
        insert: c,
        createComment: u,
      },
    } = e,
    d = (S, A) => {
      if (!A.hasChildNodes()) {
        r(null, S, A), flushPostFlushCbs(), (A._vnode = S);
        return;
      }
      E(A.firstChild, S, null, null, null), flushPostFlushCbs(), (A._vnode = S);
    },
    E = (S, A, O, F, D, H = !1) => {
      H = H || !!A.dynamicChildren;
      const $ = isComment(S) && S.data === "[",
        q = () => T(S, A, O, F, D, $),
        { type: J, ref: K, shapeFlag: ee, patchFlag: le } = A;
      let re = S.nodeType;
      (A.el = S), le === -2 && ((H = !1), (A.dynamicChildren = null));
      let B = null;
      switch (J) {
        case Text:
          re !== 3
            ? A.children === ""
              ? (c((A.el = i("")), o(S), S), (B = S))
              : (B = q())
            : (S.data !== A.children &&
                (logMismatchError(), (S.data = A.children)),
              (B = a(S)));
          break;
        case Comment:
          k(S)
            ? ((B = a(S)), x((A.el = S.content.firstChild), S, O))
            : re !== 8 || $
            ? (B = q())
            : (B = a(S));
          break;
        case Static:
          if (($ && ((S = a(S)), (re = S.nodeType)), re === 1 || re === 3)) {
            B = S;
            const z = !A.children.length;
            for (let N = 0; N < A.staticCount; N++)
              z && (A.children += B.nodeType === 1 ? B.outerHTML : B.data),
                N === A.staticCount - 1 && (A.anchor = B),
                (B = a(B));
            return $ ? a(B) : B;
          } else q();
          break;
        case Fragment:
          $ ? (B = R(S, A, O, F, D, H)) : (B = q());
          break;
        default:
          if (ee & 1)
            (re !== 1 || A.type.toLowerCase() !== S.tagName.toLowerCase()) &&
            !k(S)
              ? (B = q())
              : (B = b(S, A, O, F, D, H));
          else if (ee & 6) {
            A.slotScopeIds = D;
            const z = o(S);
            if (
              ($
                ? (B = M(S))
                : isComment(S) && S.data === "teleport start"
                ? (B = M(S, S.data, "teleport end"))
                : (B = a(S)),
              t(A, z, null, O, F, getContainerType(z), H),
              isAsyncWrapper(A) && !A.type.__asyncResolved)
            ) {
              let N;
              $
                ? ((N = createVNode(Fragment)),
                  (N.anchor = B ? B.previousSibling : z.lastChild))
                : (N =
                    S.nodeType === 3
                      ? createTextVNode("")
                      : createVNode("div")),
                (N.el = S),
                (A.component.subTree = N);
            }
          } else
            ee & 64
              ? re !== 8
                ? (B = q())
                : (B = A.type.hydrate(S, A, O, F, D, H, e, P))
              : ee & 128 &&
                (B = A.type.hydrate(
                  S,
                  A,
                  O,
                  F,
                  getContainerType(o(S)),
                  D,
                  H,
                  e,
                  E
                ));
      }
      return K != null && setRef(K, null, F, A), B;
    },
    b = (S, A, O, F, D, H) => {
      H = H || !!A.dynamicChildren;
      const {
          type: $,
          props: q,
          patchFlag: J,
          shapeFlag: K,
          dirs: ee,
          transition: le,
        } = A,
        re = $ === "input" || $ === "option";
      if (re || J !== -1) {
        ee && invokeDirectiveHook(A, null, O, "created");
        let B = !1;
        if (k(S)) {
          B =
            needTransition(null, le) &&
            O &&
            O.vnode.props &&
            O.vnode.props.appear;
          const N = S.content.firstChild;
          B && le.beforeEnter(N), x(N, S, O), (A.el = S = N);
        }
        if (K & 16 && !(q && (q.innerHTML || q.textContent))) {
          let N = P(S.firstChild, A, S, O, F, D, H);
          for (; N; ) {
            isMismatchAllowed(S, 1) || logMismatchError();
            const V = N;
            (N = N.nextSibling), l(V);
          }
        } else if (K & 8) {
          let N = A.children;
          N[0] ===
            `
` &&
            (S.tagName === "PRE" || S.tagName === "TEXTAREA") &&
            (N = N.slice(1)),
            S.textContent !== N &&
              (isMismatchAllowed(S, 0) || logMismatchError(),
              (S.textContent = A.children));
        }
        if (q) {
          if (re || !H || J & 48) {
            const N = S.tagName.includes("-");
            for (const V in q)
              ((re && (V.endsWith("value") || V === "indeterminate")) ||
                (isOn$1(V) && !isReservedProp(V)) ||
                V[0] === "." ||
                N) &&
                n(S, V, null, q[V], void 0, O);
          } else if (q.onClick) n(S, "onClick", null, q.onClick, void 0, O);
          else if (J & 4 && isReactive(q.style))
            for (const N in q.style) q.style[N];
        }
        let z;
        (z = q && q.onVnodeBeforeMount) && invokeVNodeHook(z, O, A),
          ee && invokeDirectiveHook(A, null, O, "beforeMount"),
          ((z = q && q.onVnodeMounted) || ee || B) &&
            queueEffectWithSuspense(() => {
              z && invokeVNodeHook(z, O, A),
                B && le.enter(S),
                ee && invokeDirectiveHook(A, null, O, "mounted");
            }, F);
      }
      return S.nextSibling;
    },
    P = (S, A, O, F, D, H, $) => {
      $ = $ || !!A.dynamicChildren;
      const q = A.children,
        J = q.length;
      for (let K = 0; K < J; K++) {
        const ee = $ ? q[K] : (q[K] = normalizeVNode(q[K])),
          le = ee.type === Text;
        S
          ? (le &&
              !$ &&
              K + 1 < J &&
              normalizeVNode(q[K + 1]).type === Text &&
              (c(i(S.data.slice(ee.children.length)), O, a(S)),
              (S.data = ee.children)),
            (S = E(S, ee, F, D, H, $)))
          : le && !ee.children
          ? c((ee.el = i("")), O)
          : (isMismatchAllowed(O, 1) || logMismatchError(),
            r(null, ee, O, null, F, D, getContainerType(O), H));
      }
      return S;
    },
    R = (S, A, O, F, D, H) => {
      const { slotScopeIds: $ } = A;
      $ && (D = D ? D.concat($) : $);
      const q = o(S),
        J = P(a(S), A, q, O, F, D, H);
      return J && isComment(J) && J.data === "]"
        ? a((A.anchor = J))
        : (logMismatchError(), c((A.anchor = u("]")), q, J), J);
    },
    T = (S, A, O, F, D, H) => {
      if (
        (isMismatchAllowed(S.parentElement, 1) || logMismatchError(),
        (A.el = null),
        H)
      ) {
        const J = M(S);
        for (;;) {
          const K = a(S);
          if (K && K !== J) l(K);
          else break;
        }
      }
      const $ = a(S),
        q = o(S);
      return (
        l(S),
        r(null, A, q, $, O, F, getContainerType(q), D),
        O && ((O.vnode.el = A.el), updateHOCHostEl(O, A.el)),
        $
      );
    },
    M = (S, A = "[", O = "]") => {
      let F = 0;
      for (; S; )
        if (
          ((S = a(S)), S && isComment(S) && (S.data === A && F++, S.data === O))
        ) {
          if (F === 0) return a(S);
          F--;
        }
      return S;
    },
    x = (S, A, O) => {
      const F = A.parentNode;
      F && F.replaceChild(S, A);
      let D = O;
      for (; D; )
        D.vnode.el === A && (D.vnode.el = D.subTree.el = S), (D = D.parent);
    },
    k = (S) => S.nodeType === 1 && S.tagName === "TEMPLATE";
  return [d, E];
}
const allowMismatchAttr = "data-allow-mismatch",
  MismatchTypeString = {
    0: "text",
    1: "children",
    2: "class",
    3: "style",
    4: "attribute",
  };
function isMismatchAllowed(e, t) {
  if (t === 0 || t === 1)
    for (; e && !e.hasAttribute(allowMismatchAttr); ) e = e.parentElement;
  const r = e && e.getAttribute(allowMismatchAttr);
  if (r == null) return !1;
  if (r === "") return !0;
  {
    const n = r.split(",");
    return t === 0 && n.includes("children")
      ? !0
      : r.split(",").includes(MismatchTypeString[t]);
  }
}
const requestIdleCallback$1 =
    getGlobalThis$1().requestIdleCallback || ((e) => setTimeout(e, 1)),
  cancelIdleCallback$1 =
    getGlobalThis$1().cancelIdleCallback || ((e) => clearTimeout(e)),
  hydrateOnIdle =
    (e = 1e4) =>
    (t) => {
      const r = requestIdleCallback$1(t, { timeout: e });
      return () => cancelIdleCallback$1(r);
    };
function elementIsVisibleInViewport(e) {
  const { top: t, left: r, bottom: n, right: i } = e.getBoundingClientRect(),
    { innerHeight: a, innerWidth: o } = window;
  return (
    ((t > 0 && t < a) || (n > 0 && n < a)) &&
    ((r > 0 && r < o) || (i > 0 && i < o))
  );
}
const hydrateOnVisible = (e) => (t, r) => {
    const n = new IntersectionObserver((i) => {
      for (const a of i)
        if (a.isIntersecting) {
          n.disconnect(), t();
          break;
        }
    }, e);
    return (
      r((i) => {
        if (i instanceof Element) {
          if (elementIsVisibleInViewport(i)) return t(), n.disconnect(), !1;
          n.observe(i);
        }
      }),
      () => n.disconnect()
    );
  },
  hydrateOnMediaQuery = (e) => (t) => {
    if (e) {
      const r = matchMedia(e);
      if (r.matches) t();
      else
        return (
          r.addEventListener("change", t, { once: !0 }),
          () => r.removeEventListener("change", t)
        );
    }
  },
  hydrateOnInteraction =
    (e = []) =>
    (t, r) => {
      isString$1(e) && (e = [e]);
      let n = !1;
      const i = (o) => {
          n ||
            ((n = !0),
            a(),
            t(),
            o.target.dispatchEvent(new o.constructor(o.type, o)));
        },
        a = () => {
          r((o) => {
            for (const l of e) o.removeEventListener(l, i);
          });
        };
      return (
        r((o) => {
          for (const l of e) o.addEventListener(l, i, { once: !0 });
        }),
        a
      );
    };
function forEachElement(e, t) {
  if (isComment(e) && e.data === "[") {
    let r = 1,
      n = e.nextSibling;
    for (; n; ) {
      if (n.nodeType === 1) {
        if (t(n) === !1) break;
      } else if (isComment(n))
        if (n.data === "]") {
          if (--r === 0) break;
        } else n.data === "[" && r++;
      n = n.nextSibling;
    }
  } else t(e);
}
const isAsyncWrapper = (e) => !!e.type.__asyncLoader;
/*! #__NO_SIDE_EFFECTS__ */ function defineAsyncComponent(e) {
  isFunction$1(e) && (e = { loader: e });
  const {
    loader: t,
    loadingComponent: r,
    errorComponent: n,
    delay: i = 200,
    hydrate: a,
    timeout: o,
    suspensible: l = !0,
    onError: c,
  } = e;
  let u = null,
    d,
    E = 0;
  const b = () => (E++, (u = null), P()),
    P = () => {
      let R;
      return (
        u ||
        (R = u =
          t()
            .catch((T) => {
              if (((T = T instanceof Error ? T : new Error(String(T))), c))
                return new Promise((M, x) => {
                  c(
                    T,
                    () => M(b()),
                    () => x(T),
                    E + 1
                  );
                });
              throw T;
            })
            .then((T) =>
              R !== u && u
                ? u
                : (T &&
                    (T.__esModule || T[Symbol.toStringTag] === "Module") &&
                    (T = T.default),
                  (d = T),
                  T)
            ))
      );
    };
  return defineComponent$1({
    name: "AsyncComponentWrapper",
    __asyncLoader: P,
    __asyncHydrate(R, T, M) {
      const x = a
        ? () => {
            const k = a(M, (S) => forEachElement(R, S));
            k && (T.bum || (T.bum = [])).push(k);
          }
        : M;
      d ? x() : P().then(() => !T.isUnmounted && x());
    },
    get __asyncResolved() {
      return d;
    },
    setup() {
      const R = currentInstance;
      if ((markAsyncBoundary(R), d)) return () => createInnerComp(d, R);
      const T = (S) => {
        (u = null), handleError(S, R, 13, !n);
      };
      if ((l && R.suspense) || isInSSRComponentSetup)
        return P()
          .then((S) => () => createInnerComp(S, R))
          .catch(
            (S) => (T(S), () => (n ? createVNode(n, { error: S }) : null))
          );
      const M = ref(!1),
        x = ref(),
        k = ref(!!i);
      return (
        i &&
          setTimeout(() => {
            k.value = !1;
          }, i),
        o != null &&
          setTimeout(() => {
            if (!M.value && !x.value) {
              const S = new Error(`Async component timed out after ${o}ms.`);
              T(S), (x.value = S);
            }
          }, o),
        P()
          .then(() => {
            (M.value = !0),
              R.parent && isKeepAlive(R.parent.vnode) && R.parent.update();
          })
          .catch((S) => {
            T(S), (x.value = S);
          }),
        () => {
          if (M.value && d) return createInnerComp(d, R);
          if (x.value && n) return createVNode(n, { error: x.value });
          if (r && !k.value) return createVNode(r);
        }
      );
    },
  });
}
function createInnerComp(e, t) {
  const { ref: r, props: n, children: i, ce: a } = t.vnode,
    o = createVNode(e, n, i);
  return (o.ref = r), (o.ce = a), delete t.vnode.ce, o;
}
const isKeepAlive = (e) => e.type.__isKeepAlive,
  KeepAliveImpl = {
    name: "KeepAlive",
    __isKeepAlive: !0,
    props: {
      include: [String, RegExp, Array],
      exclude: [String, RegExp, Array],
      max: [String, Number],
    },
    setup(e, { slots: t }) {
      const r = getCurrentInstance$1(),
        n = r.ctx;
      if (!n.renderer)
        return () => {
          const k = t.default && t.default();
          return k && k.length === 1 ? k[0] : k;
        };
      const i = new Map(),
        a = new Set();
      let o = null;
      const l = r.suspense,
        {
          renderer: {
            p: c,
            m: u,
            um: d,
            o: { createElement: E },
          },
        } = n,
        b = E("div");
      (n.activate = (k, S, A, O, F) => {
        const D = k.component;
        u(k, S, A, 0, l),
          c(D.vnode, k, S, A, D, l, O, k.slotScopeIds, F),
          queuePostRenderEffect(() => {
            (D.isDeactivated = !1), D.a && invokeArrayFns(D.a);
            const H = k.props && k.props.onVnodeMounted;
            H && invokeVNodeHook(H, D.parent, k);
          }, l);
      }),
        (n.deactivate = (k) => {
          const S = k.component;
          invalidateMount(S.m),
            invalidateMount(S.a),
            u(k, b, null, 1, l),
            queuePostRenderEffect(() => {
              S.da && invokeArrayFns(S.da);
              const A = k.props && k.props.onVnodeUnmounted;
              A && invokeVNodeHook(A, S.parent, k), (S.isDeactivated = !0);
            }, l);
        });
      function P(k) {
        resetShapeFlag(k), d(k, r, l, !0);
      }
      function R(k) {
        i.forEach((S, A) => {
          const O = getComponentName(S.type);
          O && !k(O) && T(A);
        });
      }
      function T(k) {
        const S = i.get(k);
        S && (!o || !isSameVNodeType(S, o)) ? P(S) : o && resetShapeFlag(o),
          i.delete(k),
          a.delete(k);
      }
      watch(
        () => [e.include, e.exclude],
        ([k, S]) => {
          k && R((A) => matches(k, A)), S && R((A) => !matches(S, A));
        },
        { flush: "post", deep: !0 }
      );
      let M = null;
      const x = () => {
        M != null &&
          (isSuspense(r.subTree.type)
            ? queuePostRenderEffect(() => {
                i.set(M, getInnerChild(r.subTree));
              }, r.subTree.suspense)
            : i.set(M, getInnerChild(r.subTree)));
      };
      return (
        onMounted(x),
        onUpdated(x),
        onBeforeUnmount(() => {
          i.forEach((k) => {
            const { subTree: S, suspense: A } = r,
              O = getInnerChild(S);
            if (k.type === O.type && k.key === O.key) {
              resetShapeFlag(O);
              const F = O.component.da;
              F && queuePostRenderEffect(F, A);
              return;
            }
            P(k);
          });
        }),
        () => {
          if (((M = null), !t.default)) return (o = null);
          const k = t.default(),
            S = k[0];
          if (k.length > 1) return (o = null), k;
          if (!isVNode$1(S) || (!(S.shapeFlag & 4) && !(S.shapeFlag & 128)))
            return (o = null), S;
          let A = getInnerChild(S);
          if (A.type === Comment) return (o = null), A;
          const O = A.type,
            F = getComponentName(
              isAsyncWrapper(A) ? A.type.__asyncResolved || {} : O
            ),
            { include: D, exclude: H, max: $ } = e;
          if ((D && (!F || !matches(D, F))) || (H && F && matches(H, F)))
            return (A.shapeFlag &= -257), (o = A), S;
          const q = A.key == null ? O : A.key,
            J = i.get(q);
          return (
            A.el &&
              ((A = cloneVNode(A)), S.shapeFlag & 128 && (S.ssContent = A)),
            (M = q),
            J
              ? ((A.el = J.el),
                (A.component = J.component),
                A.transition && setTransitionHooks(A, A.transition),
                (A.shapeFlag |= 512),
                a.delete(q),
                a.add(q))
              : (a.add(q),
                $ && a.size > parseInt($, 10) && T(a.values().next().value)),
            (A.shapeFlag |= 256),
            (o = A),
            isSuspense(S.type) ? S : A
          );
        }
      );
    },
  },
  KeepAlive = KeepAliveImpl;
function matches(e, t) {
  return isArray$2(e)
    ? e.some((r) => matches(r, t))
    : isString$1(e)
    ? e.split(",").includes(t)
    : isRegExp$1(e)
    ? ((e.lastIndex = 0), e.test(t))
    : !1;
}
function onActivated(e, t) {
  registerKeepAliveHook(e, "a", t);
}
function onDeactivated(e, t) {
  registerKeepAliveHook(e, "da", t);
}
function registerKeepAliveHook(e, t, r = currentInstance) {
  const n =
    e.__wdc ||
    (e.__wdc = () => {
      let i = r;
      for (; i; ) {
        if (i.isDeactivated) return;
        i = i.parent;
      }
      return e();
    });
  if ((injectHook(t, n, r), r)) {
    let i = r.parent;
    for (; i && i.parent; )
      isKeepAlive(i.parent.vnode) && injectToKeepAliveRoot(n, t, r, i),
        (i = i.parent);
  }
}
function injectToKeepAliveRoot(e, t, r, n) {
  const i = injectHook(t, e, n, !0);
  onUnmounted(() => {
    remove(n[t], i);
  }, r);
}
function resetShapeFlag(e) {
  (e.shapeFlag &= -257), (e.shapeFlag &= -513);
}
function getInnerChild(e) {
  return e.shapeFlag & 128 ? e.ssContent : e;
}
function injectHook(e, t, r = currentInstance, n = !1) {
  if (r) {
    const i = r[e] || (r[e] = []),
      a =
        t.__weh ||
        (t.__weh = (...o) => {
          pauseTracking();
          const l = setCurrentInstance(r),
            c = callWithAsyncErrorHandling(t, r, e, o);
          return l(), resetTracking(), c;
        });
    return n ? i.unshift(a) : i.push(a), a;
  }
}
const createHook =
    (e) =>
    (t, r = currentInstance) => {
      (!isInSSRComponentSetup || e === "sp") &&
        injectHook(e, (...n) => t(...n), r);
    },
  onBeforeMount = createHook("bm"),
  onMounted = createHook("m"),
  onBeforeUpdate = createHook("bu"),
  onUpdated = createHook("u"),
  onBeforeUnmount = createHook("bum"),
  onUnmounted = createHook("um"),
  onServerPrefetch = createHook("sp"),
  onRenderTriggered = createHook("rtg"),
  onRenderTracked = createHook("rtc");
function onErrorCaptured(e, t = currentInstance) {
  injectHook("ec", e, t);
}
const COMPONENTS = "components",
  DIRECTIVES = "directives";
function resolveComponent(e, t) {
  return resolveAsset(COMPONENTS, e, !0, t) || e;
}
const NULL_DYNAMIC_COMPONENT = Symbol.for("v-ndc");
function resolveDynamicComponent(e) {
  return isString$1(e)
    ? resolveAsset(COMPONENTS, e, !1) || e
    : e || NULL_DYNAMIC_COMPONENT;
}
function resolveDirective(e) {
  return resolveAsset(DIRECTIVES, e);
}
function resolveAsset(e, t, r = !0, n = !1) {
  const i = currentRenderingInstance || currentInstance;
  if (i) {
    const a = i.type;
    if (e === COMPONENTS) {
      const l = getComponentName(a, !1);
      if (
        l &&
        (l === t || l === camelize(t) || l === capitalize$1(camelize(t)))
      )
        return a;
    }
    const o = resolve$1(i[e] || a[e], t) || resolve$1(i.appContext[e], t);
    return !o && n ? a : o;
  }
}
function resolve$1(e, t) {
  return e && (e[t] || e[camelize(t)] || e[capitalize$1(camelize(t))]);
}
function renderList(e, t, r, n) {
  let i;
  const a = r && r[n],
    o = isArray$2(e);
  if (o || isString$1(e)) {
    const l = o && isReactive(e);
    let c = !1;
    l && ((c = !isShallow(e)), (e = shallowReadArray(e))),
      (i = new Array(e.length));
    for (let u = 0, d = e.length; u < d; u++)
      i[u] = t(c ? toReactive(e[u]) : e[u], u, void 0, a && a[u]);
  } else if (typeof e == "number") {
    i = new Array(e);
    for (let l = 0; l < e; l++) i[l] = t(l + 1, l, void 0, a && a[l]);
  } else if (isObject$2(e))
    if (e[Symbol.iterator])
      i = Array.from(e, (l, c) => t(l, c, void 0, a && a[c]));
    else {
      const l = Object.keys(e);
      i = new Array(l.length);
      for (let c = 0, u = l.length; c < u; c++) {
        const d = l[c];
        i[c] = t(e[d], d, c, a && a[c]);
      }
    }
  else i = [];
  return r && (r[n] = i), i;
}
function createSlots(e, t) {
  for (let r = 0; r < t.length; r++) {
    const n = t[r];
    if (isArray$2(n)) for (let i = 0; i < n.length; i++) e[n[i].name] = n[i].fn;
    else
      n &&
        (e[n.name] = n.key
          ? (...i) => {
              const a = n.fn(...i);
              return a && (a.key = n.key), a;
            }
          : n.fn);
  }
  return e;
}
function renderSlot(e, t, r = {}, n, i) {
  if (
    currentRenderingInstance.ce ||
    (currentRenderingInstance.parent &&
      isAsyncWrapper(currentRenderingInstance.parent) &&
      currentRenderingInstance.parent.ce)
  )
    return (
      t !== "default" && (r.name = t),
      openBlock(),
      createBlock(Fragment, null, [createVNode("slot", r, n && n())], 64)
    );
  let a = e[t];
  a && a._c && (a._d = !1), openBlock();
  const o = a && ensureValidVNode$1(a(r)),
    l = r.key || (o && o.key),
    c = createBlock(
      Fragment,
      { key: (l && !isSymbol$1(l) ? l : `_${t}`) + (!o && n ? "_fb" : "") },
      o || (n ? n() : []),
      o && e._ === 1 ? 64 : -2
    );
  return (
    !i && c.scopeId && (c.slotScopeIds = [c.scopeId + "-s"]),
    a && a._c && (a._d = !0),
    c
  );
}
function ensureValidVNode$1(e) {
  return e.some((t) =>
    isVNode$1(t)
      ? !(
          t.type === Comment ||
          (t.type === Fragment && !ensureValidVNode$1(t.children))
        )
      : !0
  )
    ? e
    : null;
}
function toHandlers(e, t) {
  const r = {};
  for (const n in e)
    r[t && /[A-Z]/.test(n) ? `on:${n}` : toHandlerKey(n)] = e[n];
  return r;
}
const getPublicInstance = (e) =>
    e
      ? isStatefulComponent(e)
        ? getComponentPublicInstance(e)
        : getPublicInstance(e.parent)
      : null,
  publicPropertiesMap = extend(Object.create(null), {
    $: (e) => e,
    $el: (e) => e.vnode.el,
    $data: (e) => e.data,
    $props: (e) => e.props,
    $attrs: (e) => e.attrs,
    $slots: (e) => e.slots,
    $refs: (e) => e.refs,
    $parent: (e) => getPublicInstance(e.parent),
    $root: (e) => getPublicInstance(e.root),
    $host: (e) => e.ce,
    $emit: (e) => e.emit,
    $options: (e) => resolveMergedOptions(e),
    $forceUpdate: (e) =>
      e.f ||
      (e.f = () => {
        queueJob(e.update);
      }),
    $nextTick: (e) => e.n || (e.n = nextTick.bind(e.proxy)),
    $watch: (e) => instanceWatch.bind(e),
  }),
  hasSetupBinding = (e, t) =>
    e !== EMPTY_OBJ && !e.__isScriptSetup && hasOwn$1(e, t),
  PublicInstanceProxyHandlers = {
    get({ _: e }, t) {
      if (t === "__v_skip") return !0;
      const {
        ctx: r,
        setupState: n,
        data: i,
        props: a,
        accessCache: o,
        type: l,
        appContext: c,
      } = e;
      let u;
      if (t[0] !== "$") {
        const P = o[t];
        if (P !== void 0)
          switch (P) {
            case 1:
              return n[t];
            case 2:
              return i[t];
            case 4:
              return r[t];
            case 3:
              return a[t];
          }
        else {
          if (hasSetupBinding(n, t)) return (o[t] = 1), n[t];
          if (i !== EMPTY_OBJ && hasOwn$1(i, t)) return (o[t] = 2), i[t];
          if ((u = e.propsOptions[0]) && hasOwn$1(u, t))
            return (o[t] = 3), a[t];
          if (r !== EMPTY_OBJ && hasOwn$1(r, t)) return (o[t] = 4), r[t];
          shouldCacheAccess && (o[t] = 0);
        }
      }
      const d = publicPropertiesMap[t];
      let E, b;
      if (d) return t === "$attrs" && track(e.attrs, "get", ""), d(e);
      if ((E = l.__cssModules) && (E = E[t])) return E;
      if (r !== EMPTY_OBJ && hasOwn$1(r, t)) return (o[t] = 4), r[t];
      if (((b = c.config.globalProperties), hasOwn$1(b, t))) return b[t];
    },
    set({ _: e }, t, r) {
      const { data: n, setupState: i, ctx: a } = e;
      return hasSetupBinding(i, t)
        ? ((i[t] = r), !0)
        : n !== EMPTY_OBJ && hasOwn$1(n, t)
        ? ((n[t] = r), !0)
        : hasOwn$1(e.props, t) || (t[0] === "$" && t.slice(1) in e)
        ? !1
        : ((a[t] = r), !0);
    },
    has(
      {
        _: {
          data: e,
          setupState: t,
          accessCache: r,
          ctx: n,
          appContext: i,
          propsOptions: a,
        },
      },
      o
    ) {
      let l;
      return (
        !!r[o] ||
        (e !== EMPTY_OBJ && hasOwn$1(e, o)) ||
        hasSetupBinding(t, o) ||
        ((l = a[0]) && hasOwn$1(l, o)) ||
        hasOwn$1(n, o) ||
        hasOwn$1(publicPropertiesMap, o) ||
        hasOwn$1(i.config.globalProperties, o)
      );
    },
    defineProperty(e, t, r) {
      return (
        r.get != null
          ? (e._.accessCache[t] = 0)
          : hasOwn$1(r, "value") && this.set(e, t, r.value, null),
        Reflect.defineProperty(e, t, r)
      );
    },
  },
  RuntimeCompiledPublicInstanceProxyHandlers = extend(
    {},
    PublicInstanceProxyHandlers,
    {
      get(e, t) {
        if (t !== Symbol.unscopables)
          return PublicInstanceProxyHandlers.get(e, t, e);
      },
      has(e, t) {
        return t[0] !== "_" && !isGloballyAllowed(t);
      },
    }
  );
function defineProps() {
  return null;
}
function defineEmits() {
  return null;
}
function defineExpose(e) {}
function defineOptions(e) {}
function defineSlots() {
  return null;
}
function defineModel() {}
function withDefaults(e, t) {
  return null;
}
function useSlots() {
  return getContext$1().slots;
}
function useAttrs() {
  return getContext$1().attrs;
}
function getContext$1() {
  const e = getCurrentInstance$1();
  return e.setupContext || (e.setupContext = createSetupContext(e));
}
function normalizePropsOrEmits(e) {
  return isArray$2(e) ? e.reduce((t, r) => ((t[r] = null), t), {}) : e;
}
function mergeDefaults(e, t) {
  const r = normalizePropsOrEmits(e);
  for (const n in t) {
    if (n.startsWith("__skip")) continue;
    let i = r[n];
    i
      ? isArray$2(i) || isFunction$1(i)
        ? (i = r[n] = { type: i, default: t[n] })
        : (i.default = t[n])
      : i === null && (i = r[n] = { default: t[n] }),
      i && t[`__skip_${n}`] && (i.skipFactory = !0);
  }
  return r;
}
function mergeModels(e, t) {
  return !e || !t
    ? e || t
    : isArray$2(e) && isArray$2(t)
    ? e.concat(t)
    : extend({}, normalizePropsOrEmits(e), normalizePropsOrEmits(t));
}
function createPropsRestProxy(e, t) {
  const r = {};
  for (const n in e)
    t.includes(n) ||
      Object.defineProperty(r, n, { enumerable: !0, get: () => e[n] });
  return r;
}
function withAsyncContext(e) {
  const t = getCurrentInstance$1();
  let r = e();
  return (
    unsetCurrentInstance(),
    isPromise$1(r) &&
      (r = r.catch((n) => {
        throw (setCurrentInstance(t), n);
      })),
    [r, () => setCurrentInstance(t)]
  );
}
let shouldCacheAccess = !0;
function applyOptions(e) {
  const t = resolveMergedOptions(e),
    r = e.proxy,
    n = e.ctx;
  (shouldCacheAccess = !1),
    t.beforeCreate && callHook$1(t.beforeCreate, e, "bc");
  const {
    data: i,
    computed: a,
    methods: o,
    watch: l,
    provide: c,
    inject: u,
    created: d,
    beforeMount: E,
    mounted: b,
    beforeUpdate: P,
    updated: R,
    activated: T,
    deactivated: M,
    beforeDestroy: x,
    beforeUnmount: k,
    destroyed: S,
    unmounted: A,
    render: O,
    renderTracked: F,
    renderTriggered: D,
    errorCaptured: H,
    serverPrefetch: $,
    expose: q,
    inheritAttrs: J,
    components: K,
    directives: ee,
    filters: le,
  } = t;
  if ((u && resolveInjections(u, n, null), o))
    for (const z in o) {
      const N = o[z];
      isFunction$1(N) && (n[z] = N.bind(r));
    }
  if (i) {
    const z = i.call(r, r);
    isObject$2(z) && (e.data = reactive(z));
  }
  if (((shouldCacheAccess = !0), a))
    for (const z in a) {
      const N = a[z],
        V = isFunction$1(N)
          ? N.bind(r, r)
          : isFunction$1(N.get)
          ? N.get.bind(r, r)
          : NOOP,
        Q = !isFunction$1(N) && isFunction$1(N.set) ? N.set.bind(r) : NOOP,
        Y = computed({ get: V, set: Q });
      Object.defineProperty(n, z, {
        enumerable: !0,
        configurable: !0,
        get: () => Y.value,
        set: (he) => (Y.value = he),
      });
    }
  if (l) for (const z in l) createWatcher(l[z], n, r, z);
  if (c) {
    const z = isFunction$1(c) ? c.call(r) : c;
    Reflect.ownKeys(z).forEach((N) => {
      provide(N, z[N]);
    });
  }
  d && callHook$1(d, e, "c");
  function B(z, N) {
    isArray$2(N) ? N.forEach((V) => z(V.bind(r))) : N && z(N.bind(r));
  }
  if (
    (B(onBeforeMount, E),
    B(onMounted, b),
    B(onBeforeUpdate, P),
    B(onUpdated, R),
    B(onActivated, T),
    B(onDeactivated, M),
    B(onErrorCaptured, H),
    B(onRenderTracked, F),
    B(onRenderTriggered, D),
    B(onBeforeUnmount, k),
    B(onUnmounted, A),
    B(onServerPrefetch, $),
    isArray$2(q))
  )
    if (q.length) {
      const z = e.exposed || (e.exposed = {});
      q.forEach((N) => {
        Object.defineProperty(z, N, {
          get: () => r[N],
          set: (V) => (r[N] = V),
        });
      });
    } else e.exposed || (e.exposed = {});
  O && e.render === NOOP && (e.render = O),
    J != null && (e.inheritAttrs = J),
    K && (e.components = K),
    ee && (e.directives = ee),
    $ && markAsyncBoundary(e);
}
function resolveInjections(e, t, r = NOOP) {
  isArray$2(e) && (e = normalizeInject(e));
  for (const n in e) {
    const i = e[n];
    let a;
    isObject$2(i)
      ? "default" in i
        ? (a = inject$1(i.from || n, i.default, !0))
        : (a = inject$1(i.from || n))
      : (a = inject$1(i)),
      isRef(a)
        ? Object.defineProperty(t, n, {
            enumerable: !0,
            configurable: !0,
            get: () => a.value,
            set: (o) => (a.value = o),
          })
        : (t[n] = a);
  }
}
function callHook$1(e, t, r) {
  callWithAsyncErrorHandling(
    isArray$2(e) ? e.map((n) => n.bind(t.proxy)) : e.bind(t.proxy),
    t,
    r
  );
}
function createWatcher(e, t, r, n) {
  let i = n.includes(".") ? createPathGetter(r, n) : () => r[n];
  if (isString$1(e)) {
    const a = t[e];
    isFunction$1(a) && watch(i, a);
  } else if (isFunction$1(e)) watch(i, e.bind(r));
  else if (isObject$2(e))
    if (isArray$2(e)) e.forEach((a) => createWatcher(a, t, r, n));
    else {
      const a = isFunction$1(e.handler) ? e.handler.bind(r) : t[e.handler];
      isFunction$1(a) && watch(i, a, e);
    }
}
function resolveMergedOptions(e) {
  const t = e.type,
    { mixins: r, extends: n } = t,
    {
      mixins: i,
      optionsCache: a,
      config: { optionMergeStrategies: o },
    } = e.appContext,
    l = a.get(t);
  let c;
  return (
    l
      ? (c = l)
      : !i.length && !r && !n
      ? (c = t)
      : ((c = {}),
        i.length && i.forEach((u) => mergeOptions$1(c, u, o, !0)),
        mergeOptions$1(c, t, o)),
    isObject$2(t) && a.set(t, c),
    c
  );
}
function mergeOptions$1(e, t, r, n = !1) {
  const { mixins: i, extends: a } = t;
  a && mergeOptions$1(e, a, r, !0),
    i && i.forEach((o) => mergeOptions$1(e, o, r, !0));
  for (const o in t)
    if (!(n && o === "expose")) {
      const l = internalOptionMergeStrats[o] || (r && r[o]);
      e[o] = l ? l(e[o], t[o]) : t[o];
    }
  return e;
}
const internalOptionMergeStrats = {
  data: mergeDataFn,
  props: mergeEmitsOrPropsOptions,
  emits: mergeEmitsOrPropsOptions,
  methods: mergeObjectOptions,
  computed: mergeObjectOptions,
  beforeCreate: mergeAsArray,
  created: mergeAsArray,
  beforeMount: mergeAsArray,
  mounted: mergeAsArray,
  beforeUpdate: mergeAsArray,
  updated: mergeAsArray,
  beforeDestroy: mergeAsArray,
  beforeUnmount: mergeAsArray,
  destroyed: mergeAsArray,
  unmounted: mergeAsArray,
  activated: mergeAsArray,
  deactivated: mergeAsArray,
  errorCaptured: mergeAsArray,
  serverPrefetch: mergeAsArray,
  components: mergeObjectOptions,
  directives: mergeObjectOptions,
  watch: mergeWatchOptions,
  provide: mergeDataFn,
  inject: mergeInject,
};
function mergeDataFn(e, t) {
  return t
    ? e
      ? function () {
          return extend(
            isFunction$1(e) ? e.call(this, this) : e,
            isFunction$1(t) ? t.call(this, this) : t
          );
        }
      : t
    : e;
}
function mergeInject(e, t) {
  return mergeObjectOptions(normalizeInject(e), normalizeInject(t));
}
function normalizeInject(e) {
  if (isArray$2(e)) {
    const t = {};
    for (let r = 0; r < e.length; r++) t[e[r]] = e[r];
    return t;
  }
  return e;
}
function mergeAsArray(e, t) {
  return e ? [...new Set([].concat(e, t))] : t;
}
function mergeObjectOptions(e, t) {
  return e ? extend(Object.create(null), e, t) : t;
}
function mergeEmitsOrPropsOptions(e, t) {
  return e
    ? isArray$2(e) && isArray$2(t)
      ? [...new Set([...e, ...t])]
      : extend(
          Object.create(null),
          normalizePropsOrEmits(e),
          normalizePropsOrEmits(t ?? {})
        )
    : t;
}
function mergeWatchOptions(e, t) {
  if (!e) return t;
  if (!t) return e;
  const r = extend(Object.create(null), e);
  for (const n in t) r[n] = mergeAsArray(e[n], t[n]);
  return r;
}
function createAppContext() {
  return {
    app: null,
    config: {
      isNativeTag: NO,
      performance: !1,
      globalProperties: {},
      optionMergeStrategies: {},
      errorHandler: void 0,
      warnHandler: void 0,
      compilerOptions: {},
    },
    mixins: [],
    components: {},
    directives: {},
    provides: Object.create(null),
    optionsCache: new WeakMap(),
    propsCache: new WeakMap(),
    emitsCache: new WeakMap(),
  };
}
let uid$1 = 0;
function createAppAPI(e, t) {
  return function (n, i = null) {
    isFunction$1(n) || (n = extend({}, n)),
      i != null && !isObject$2(i) && (i = null);
    const a = createAppContext(),
      o = new WeakSet(),
      l = [];
    let c = !1;
    const u = (a.app = {
      _uid: uid$1++,
      _component: n,
      _props: i,
      _container: null,
      _context: a,
      _instance: null,
      version: version$1,
      get config() {
        return a.config;
      },
      set config(d) {},
      use(d, ...E) {
        return (
          o.has(d) ||
            (d && isFunction$1(d.install)
              ? (o.add(d), d.install(u, ...E))
              : isFunction$1(d) && (o.add(d), d(u, ...E))),
          u
        );
      },
      mixin(d) {
        return a.mixins.includes(d) || a.mixins.push(d), u;
      },
      component(d, E) {
        return E ? ((a.components[d] = E), u) : a.components[d];
      },
      directive(d, E) {
        return E ? ((a.directives[d] = E), u) : a.directives[d];
      },
      mount(d, E, b) {
        if (!c) {
          const P = u._ceVNode || createVNode(n, i);
          return (
            (P.appContext = a),
            b === !0 ? (b = "svg") : b === !1 && (b = void 0),
            E && t ? t(P, d) : e(P, d, b),
            (c = !0),
            (u._container = d),
            (d.__vue_app__ = u),
            getComponentPublicInstance(P.component)
          );
        }
      },
      onUnmount(d) {
        l.push(d);
      },
      unmount() {
        c &&
          (callWithAsyncErrorHandling(l, u._instance, 16),
          e(null, u._container),
          delete u._container.__vue_app__);
      },
      provide(d, E) {
        return (a.provides[d] = E), u;
      },
      runWithContext(d) {
        const E = currentApp;
        currentApp = u;
        try {
          return d();
        } finally {
          currentApp = E;
        }
      },
    });
    return u;
  };
}
let currentApp = null;
function provide(e, t) {
  if (currentInstance) {
    let r = currentInstance.provides;
    const n = currentInstance.parent && currentInstance.parent.provides;
    n === r && (r = currentInstance.provides = Object.create(n)), (r[e] = t);
  }
}
function inject$1(e, t, r = !1) {
  const n = currentInstance || currentRenderingInstance;
  if (n || currentApp) {
    const i = currentApp
      ? currentApp._context.provides
      : n
      ? n.parent == null
        ? n.vnode.appContext && n.vnode.appContext.provides
        : n.parent.provides
      : void 0;
    if (i && e in i) return i[e];
    if (arguments.length > 1)
      return r && isFunction$1(t) ? t.call(n && n.proxy) : t;
  }
}
function hasInjectionContext() {
  return !!(currentInstance || currentRenderingInstance || currentApp);
}
const internalObjectProto = {},
  createInternalObject = () => Object.create(internalObjectProto),
  isInternalObject = (e) => Object.getPrototypeOf(e) === internalObjectProto;
function initProps(e, t, r, n = !1) {
  const i = {},
    a = createInternalObject();
  (e.propsDefaults = Object.create(null)), setFullProps(e, t, i, a);
  for (const o in e.propsOptions[0]) o in i || (i[o] = void 0);
  r
    ? (e.props = n ? i : shallowReactive(i))
    : e.type.props
    ? (e.props = i)
    : (e.props = a),
    (e.attrs = a);
}
function updateProps(e, t, r, n) {
  const {
      props: i,
      attrs: a,
      vnode: { patchFlag: o },
    } = e,
    l = toRaw(i),
    [c] = e.propsOptions;
  let u = !1;
  if ((n || o > 0) && !(o & 16)) {
    if (o & 8) {
      const d = e.vnode.dynamicProps;
      for (let E = 0; E < d.length; E++) {
        let b = d[E];
        if (isEmitListener(e.emitsOptions, b)) continue;
        const P = t[b];
        if (c)
          if (hasOwn$1(a, b)) P !== a[b] && ((a[b] = P), (u = !0));
          else {
            const R = camelize(b);
            i[R] = resolvePropValue(c, l, R, P, e, !1);
          }
        else P !== a[b] && ((a[b] = P), (u = !0));
      }
    }
  } else {
    setFullProps(e, t, i, a) && (u = !0);
    let d;
    for (const E in l)
      (!t ||
        (!hasOwn$1(t, E) && ((d = hyphenate(E)) === E || !hasOwn$1(t, d)))) &&
        (c
          ? r &&
            (r[E] !== void 0 || r[d] !== void 0) &&
            (i[E] = resolvePropValue(c, l, E, void 0, e, !0))
          : delete i[E]);
    if (a !== l)
      for (const E in a) (!t || !hasOwn$1(t, E)) && (delete a[E], (u = !0));
  }
  u && trigger(e.attrs, "set", "");
}
function setFullProps(e, t, r, n) {
  const [i, a] = e.propsOptions;
  let o = !1,
    l;
  if (t)
    for (let c in t) {
      if (isReservedProp(c)) continue;
      const u = t[c];
      let d;
      i && hasOwn$1(i, (d = camelize(c)))
        ? !a || !a.includes(d)
          ? (r[d] = u)
          : ((l || (l = {}))[d] = u)
        : isEmitListener(e.emitsOptions, c) ||
          ((!(c in n) || u !== n[c]) && ((n[c] = u), (o = !0)));
    }
  if (a) {
    const c = toRaw(r),
      u = l || EMPTY_OBJ;
    for (let d = 0; d < a.length; d++) {
      const E = a[d];
      r[E] = resolvePropValue(i, c, E, u[E], e, !hasOwn$1(u, E));
    }
  }
  return o;
}
function resolvePropValue(e, t, r, n, i, a) {
  const o = e[r];
  if (o != null) {
    const l = hasOwn$1(o, "default");
    if (l && n === void 0) {
      const c = o.default;
      if (o.type !== Function && !o.skipFactory && isFunction$1(c)) {
        const { propsDefaults: u } = i;
        if (r in u) n = u[r];
        else {
          const d = setCurrentInstance(i);
          (n = u[r] = c.call(null, t)), d();
        }
      } else n = c;
      i.ce && i.ce._setProp(r, n);
    }
    o[0] &&
      (a && !l
        ? (n = !1)
        : o[1] && (n === "" || n === hyphenate(r)) && (n = !0));
  }
  return n;
}
const mixinPropsCache = new WeakMap();
function normalizePropsOptions(e, t, r = !1) {
  const n = r ? mixinPropsCache : t.propsCache,
    i = n.get(e);
  if (i) return i;
  const a = e.props,
    o = {},
    l = [];
  let c = !1;
  if (!isFunction$1(e)) {
    const d = (E) => {
      c = !0;
      const [b, P] = normalizePropsOptions(E, t, !0);
      extend(o, b), P && l.push(...P);
    };
    !r && t.mixins.length && t.mixins.forEach(d),
      e.extends && d(e.extends),
      e.mixins && e.mixins.forEach(d);
  }
  if (!a && !c) return isObject$2(e) && n.set(e, EMPTY_ARR), EMPTY_ARR;
  if (isArray$2(a))
    for (let d = 0; d < a.length; d++) {
      const E = camelize(a[d]);
      validatePropName(E) && (o[E] = EMPTY_OBJ);
    }
  else if (a)
    for (const d in a) {
      const E = camelize(d);
      if (validatePropName(E)) {
        const b = a[d],
          P = (o[E] =
            isArray$2(b) || isFunction$1(b) ? { type: b } : extend({}, b)),
          R = P.type;
        let T = !1,
          M = !0;
        if (isArray$2(R))
          for (let x = 0; x < R.length; ++x) {
            const k = R[x],
              S = isFunction$1(k) && k.name;
            if (S === "Boolean") {
              T = !0;
              break;
            } else S === "String" && (M = !1);
          }
        else T = isFunction$1(R) && R.name === "Boolean";
        (P[0] = T), (P[1] = M), (T || hasOwn$1(P, "default")) && l.push(E);
      }
    }
  const u = [o, l];
  return isObject$2(e) && n.set(e, u), u;
}
function validatePropName(e) {
  return e[0] !== "$" && !isReservedProp(e);
}
const isInternalKey = (e) => e[0] === "_" || e === "$stable",
  normalizeSlotValue = (e) =>
    isArray$2(e) ? e.map(normalizeVNode) : [normalizeVNode(e)],
  normalizeSlot$1 = (e, t, r) => {
    if (t._n) return t;
    const n = withCtx((...i) => normalizeSlotValue(t(...i)), r);
    return (n._c = !1), n;
  },
  normalizeObjectSlots = (e, t, r) => {
    const n = e._ctx;
    for (const i in e) {
      if (isInternalKey(i)) continue;
      const a = e[i];
      if (isFunction$1(a)) t[i] = normalizeSlot$1(i, a, n);
      else if (a != null) {
        const o = normalizeSlotValue(a);
        t[i] = () => o;
      }
    }
  },
  normalizeVNodeSlots = (e, t) => {
    const r = normalizeSlotValue(t);
    e.slots.default = () => r;
  },
  assignSlots = (e, t, r) => {
    for (const n in t) (r || n !== "_") && (e[n] = t[n]);
  },
  initSlots = (e, t, r) => {
    const n = (e.slots = createInternalObject());
    if (e.vnode.shapeFlag & 32) {
      const i = t._;
      i
        ? (assignSlots(n, t, r), r && def(n, "_", i, !0))
        : normalizeObjectSlots(t, n);
    } else t && normalizeVNodeSlots(e, t);
  },
  updateSlots = (e, t, r) => {
    const { vnode: n, slots: i } = e;
    let a = !0,
      o = EMPTY_OBJ;
    if (n.shapeFlag & 32) {
      const l = t._;
      l
        ? r && l === 1
          ? (a = !1)
          : assignSlots(i, t, r)
        : ((a = !t.$stable), normalizeObjectSlots(t, i)),
        (o = t);
    } else t && (normalizeVNodeSlots(e, t), (o = { default: 1 }));
    if (a) for (const l in i) !isInternalKey(l) && o[l] == null && delete i[l];
  },
  queuePostRenderEffect = queueEffectWithSuspense;
function createRenderer(e) {
  return baseCreateRenderer(e);
}
function createHydrationRenderer(e) {
  return baseCreateRenderer(e, createHydrationFunctions);
}
function baseCreateRenderer(e, t) {
  const r = getGlobalThis$1();
  r.__VUE__ = !0;
  const {
      insert: n,
      remove: i,
      patchProp: a,
      createElement: o,
      createText: l,
      createComment: c,
      setText: u,
      setElementText: d,
      parentNode: E,
      nextSibling: b,
      setScopeId: P = NOOP,
      insertStaticContent: R,
    } = e,
    T = (
      W,
      G,
      te,
      ae = null,
      se = null,
      ce = null,
      de = void 0,
      j = null,
      U = !!G.dynamicChildren
    ) => {
      if (W === G) return;
      W &&
        !isSameVNodeType(W, G) &&
        ((ae = ie(W)), he(W, se, ce, !0), (W = null)),
        G.patchFlag === -2 && ((U = !1), (G.dynamicChildren = null));
      const { type: X, ref: oe, shapeFlag: fe } = G;
      switch (X) {
        case Text:
          M(W, G, te, ae);
          break;
        case Comment:
          x(W, G, te, ae);
          break;
        case Static:
          W == null && k(G, te, ae, de);
          break;
        case Fragment:
          K(W, G, te, ae, se, ce, de, j, U);
          break;
        default:
          fe & 1
            ? O(W, G, te, ae, se, ce, de, j, U)
            : fe & 6
            ? ee(W, G, te, ae, se, ce, de, j, U)
            : (fe & 64 || fe & 128) &&
              X.process(W, G, te, ae, se, ce, de, j, U, ge);
      }
      oe != null && se && setRef(oe, W && W.ref, ce, G || W, !G);
    },
    M = (W, G, te, ae) => {
      if (W == null) n((G.el = l(G.children)), te, ae);
      else {
        const se = (G.el = W.el);
        G.children !== W.children && u(se, G.children);
      }
    },
    x = (W, G, te, ae) => {
      W == null ? n((G.el = c(G.children || "")), te, ae) : (G.el = W.el);
    },
    k = (W, G, te, ae) => {
      [W.el, W.anchor] = R(W.children, G, te, ae, W.el, W.anchor);
    },
    S = ({ el: W, anchor: G }, te, ae) => {
      let se;
      for (; W && W !== G; ) (se = b(W)), n(W, te, ae), (W = se);
      n(G, te, ae);
    },
    A = ({ el: W, anchor: G }) => {
      let te;
      for (; W && W !== G; ) (te = b(W)), i(W), (W = te);
      i(G);
    },
    O = (W, G, te, ae, se, ce, de, j, U) => {
      G.type === "svg" ? (de = "svg") : G.type === "math" && (de = "mathml"),
        W == null ? F(G, te, ae, se, ce, de, j, U) : $(W, G, se, ce, de, j, U);
    },
    F = (W, G, te, ae, se, ce, de, j) => {
      let U, X;
      const { props: oe, shapeFlag: fe, transition: ue, dirs: Z } = W;
      if (
        ((U = W.el = o(W.type, ce, oe && oe.is, oe)),
        fe & 8
          ? d(U, W.children)
          : fe & 16 &&
            H(
              W.children,
              U,
              null,
              ae,
              se,
              resolveChildrenNamespace(W, ce),
              de,
              j
            ),
        Z && invokeDirectiveHook(W, null, ae, "created"),
        D(U, W, W.scopeId, de, ae),
        oe)
      ) {
        for (const _e in oe)
          _e !== "value" &&
            !isReservedProp(_e) &&
            a(U, _e, null, oe[_e], ce, ae);
        "value" in oe && a(U, "value", null, oe.value, ce),
          (X = oe.onVnodeBeforeMount) && invokeVNodeHook(X, ae, W);
      }
      Z && invokeDirectiveHook(W, null, ae, "beforeMount");
      const ne = needTransition(se, ue);
      ne && ue.beforeEnter(U),
        n(U, G, te),
        ((X = oe && oe.onVnodeMounted) || ne || Z) &&
          queuePostRenderEffect(() => {
            X && invokeVNodeHook(X, ae, W),
              ne && ue.enter(U),
              Z && invokeDirectiveHook(W, null, ae, "mounted");
          }, se);
    },
    D = (W, G, te, ae, se) => {
      if ((te && P(W, te), ae))
        for (let ce = 0; ce < ae.length; ce++) P(W, ae[ce]);
      if (se) {
        let ce = se.subTree;
        if (
          G === ce ||
          (isSuspense(ce.type) && (ce.ssContent === G || ce.ssFallback === G))
        ) {
          const de = se.vnode;
          D(W, de, de.scopeId, de.slotScopeIds, se.parent);
        }
      }
    },
    H = (W, G, te, ae, se, ce, de, j, U = 0) => {
      for (let X = U; X < W.length; X++) {
        const oe = (W[X] = j ? cloneIfMounted(W[X]) : normalizeVNode(W[X]));
        T(null, oe, G, te, ae, se, ce, de, j);
      }
    },
    $ = (W, G, te, ae, se, ce, de) => {
      const j = (G.el = W.el);
      let { patchFlag: U, dynamicChildren: X, dirs: oe } = G;
      U |= W.patchFlag & 16;
      const fe = W.props || EMPTY_OBJ,
        ue = G.props || EMPTY_OBJ;
      let Z;
      if (
        (te && toggleRecurse(te, !1),
        (Z = ue.onVnodeBeforeUpdate) && invokeVNodeHook(Z, te, G, W),
        oe && invokeDirectiveHook(G, W, te, "beforeUpdate"),
        te && toggleRecurse(te, !0),
        ((fe.innerHTML && ue.innerHTML == null) ||
          (fe.textContent && ue.textContent == null)) &&
          d(j, ""),
        X
          ? q(
              W.dynamicChildren,
              X,
              j,
              te,
              ae,
              resolveChildrenNamespace(G, se),
              ce
            )
          : de ||
            N(W, G, j, null, te, ae, resolveChildrenNamespace(G, se), ce, !1),
        U > 0)
      ) {
        if (U & 16) J(j, fe, ue, te, se);
        else if (
          (U & 2 && fe.class !== ue.class && a(j, "class", null, ue.class, se),
          U & 4 && a(j, "style", fe.style, ue.style, se),
          U & 8)
        ) {
          const ne = G.dynamicProps;
          for (let _e = 0; _e < ne.length; _e++) {
            const be = ne[_e],
              Te = fe[be],
              Ae = ue[be];
            (Ae !== Te || be === "value") && a(j, be, Te, Ae, se, te);
          }
        }
        U & 1 && W.children !== G.children && d(j, G.children);
      } else !de && X == null && J(j, fe, ue, te, se);
      ((Z = ue.onVnodeUpdated) || oe) &&
        queuePostRenderEffect(() => {
          Z && invokeVNodeHook(Z, te, G, W),
            oe && invokeDirectiveHook(G, W, te, "updated");
        }, ae);
    },
    q = (W, G, te, ae, se, ce, de) => {
      for (let j = 0; j < G.length; j++) {
        const U = W[j],
          X = G[j],
          oe =
            U.el &&
            (U.type === Fragment || !isSameVNodeType(U, X) || U.shapeFlag & 70)
              ? E(U.el)
              : te;
        T(U, X, oe, null, ae, se, ce, de, !0);
      }
    },
    J = (W, G, te, ae, se) => {
      if (G !== te) {
        if (G !== EMPTY_OBJ)
          for (const ce in G)
            !isReservedProp(ce) && !(ce in te) && a(W, ce, G[ce], null, se, ae);
        for (const ce in te) {
          if (isReservedProp(ce)) continue;
          const de = te[ce],
            j = G[ce];
          de !== j && ce !== "value" && a(W, ce, j, de, se, ae);
        }
        "value" in te && a(W, "value", G.value, te.value, se);
      }
    },
    K = (W, G, te, ae, se, ce, de, j, U) => {
      const X = (G.el = W ? W.el : l("")),
        oe = (G.anchor = W ? W.anchor : l(""));
      let { patchFlag: fe, dynamicChildren: ue, slotScopeIds: Z } = G;
      Z && (j = j ? j.concat(Z) : Z),
        W == null
          ? (n(X, te, ae),
            n(oe, te, ae),
            H(G.children || [], te, oe, se, ce, de, j, U))
          : fe > 0 && fe & 64 && ue && W.dynamicChildren
          ? (q(W.dynamicChildren, ue, te, se, ce, de, j),
            (G.key != null || (se && G === se.subTree)) &&
              traverseStaticChildren(W, G, !0))
          : N(W, G, te, oe, se, ce, de, j, U);
    },
    ee = (W, G, te, ae, se, ce, de, j, U) => {
      (G.slotScopeIds = j),
        W == null
          ? G.shapeFlag & 512
            ? se.ctx.activate(G, te, ae, de, U)
            : le(G, te, ae, se, ce, de, U)
          : re(W, G, U);
    },
    le = (W, G, te, ae, se, ce, de) => {
      const j = (W.component = createComponentInstance(W, ae, se));
      if (
        (isKeepAlive(W) && (j.ctx.renderer = ge),
        setupComponent(j, !1, de),
        j.asyncDep)
      ) {
        if ((se && se.registerDep(j, B, de), !W.el)) {
          const U = (j.subTree = createVNode(Comment));
          x(null, U, G, te);
        }
      } else B(j, W, G, te, se, ce, de);
    },
    re = (W, G, te) => {
      const ae = (G.component = W.component);
      if (shouldUpdateComponent(W, G, te))
        if (ae.asyncDep && !ae.asyncResolved) {
          z(ae, G, te);
          return;
        } else (ae.next = G), ae.update();
      else (G.el = W.el), (ae.vnode = G);
    },
    B = (W, G, te, ae, se, ce, de) => {
      const j = () => {
        if (W.isMounted) {
          let { next: fe, bu: ue, u: Z, parent: ne, vnode: _e } = W;
          {
            const we = locateNonHydratedAsyncRoot(W);
            if (we) {
              fe && ((fe.el = _e.el), z(W, fe, de)),
                we.asyncDep.then(() => {
                  W.isUnmounted || j();
                });
              return;
            }
          }
          let be = fe,
            Te;
          toggleRecurse(W, !1),
            fe ? ((fe.el = _e.el), z(W, fe, de)) : (fe = _e),
            ue && invokeArrayFns(ue),
            (Te = fe.props && fe.props.onVnodeBeforeUpdate) &&
              invokeVNodeHook(Te, ne, fe, _e),
            toggleRecurse(W, !0);
          const Ae = renderComponentRoot(W),
            Re = W.subTree;
          (W.subTree = Ae),
            T(Re, Ae, E(Re.el), ie(Re), W, se, ce),
            (fe.el = Ae.el),
            be === null && updateHOCHostEl(W, Ae.el),
            Z && queuePostRenderEffect(Z, se),
            (Te = fe.props && fe.props.onVnodeUpdated) &&
              queuePostRenderEffect(() => invokeVNodeHook(Te, ne, fe, _e), se);
        } else {
          let fe;
          const { el: ue, props: Z } = G,
            { bm: ne, m: _e, parent: be, root: Te, type: Ae } = W,
            Re = isAsyncWrapper(G);
          if (
            (toggleRecurse(W, !1),
            ne && invokeArrayFns(ne),
            !Re &&
              (fe = Z && Z.onVnodeBeforeMount) &&
              invokeVNodeHook(fe, be, G),
            toggleRecurse(W, !0),
            ue && Se)
          ) {
            const we = () => {
              (W.subTree = renderComponentRoot(W)),
                Se(ue, W.subTree, W, se, null);
            };
            Re && Ae.__asyncHydrate ? Ae.__asyncHydrate(ue, W, we) : we();
          } else {
            Te.ce && Te.ce._injectChildStyle(Ae);
            const we = (W.subTree = renderComponentRoot(W));
            T(null, we, te, ae, W, se, ce), (G.el = we.el);
          }
          if (
            (_e && queuePostRenderEffect(_e, se),
            !Re && (fe = Z && Z.onVnodeMounted))
          ) {
            const we = G;
            queuePostRenderEffect(() => invokeVNodeHook(fe, be, we), se);
          }
          (G.shapeFlag & 256 ||
            (be && isAsyncWrapper(be.vnode) && be.vnode.shapeFlag & 256)) &&
            W.a &&
            queuePostRenderEffect(W.a, se),
            (W.isMounted = !0),
            (G = te = ae = null);
        }
      };
      W.scope.on();
      const U = (W.effect = new ReactiveEffect(j));
      W.scope.off();
      const X = (W.update = U.run.bind(U)),
        oe = (W.job = U.runIfDirty.bind(U));
      (oe.i = W),
        (oe.id = W.uid),
        (U.scheduler = () => queueJob(oe)),
        toggleRecurse(W, !0),
        X();
    },
    z = (W, G, te) => {
      G.component = W;
      const ae = W.vnode.props;
      (W.vnode = G),
        (W.next = null),
        updateProps(W, G.props, ae, te),
        updateSlots(W, G.children, te),
        pauseTracking(),
        flushPreFlushCbs(W),
        resetTracking();
    },
    N = (W, G, te, ae, se, ce, de, j, U = !1) => {
      const X = W && W.children,
        oe = W ? W.shapeFlag : 0,
        fe = G.children,
        { patchFlag: ue, shapeFlag: Z } = G;
      if (ue > 0) {
        if (ue & 128) {
          Q(X, fe, te, ae, se, ce, de, j, U);
          return;
        } else if (ue & 256) {
          V(X, fe, te, ae, se, ce, de, j, U);
          return;
        }
      }
      Z & 8
        ? (oe & 16 && Ce(X, se, ce), fe !== X && d(te, fe))
        : oe & 16
        ? Z & 16
          ? Q(X, fe, te, ae, se, ce, de, j, U)
          : Ce(X, se, ce, !0)
        : (oe & 8 && d(te, ""), Z & 16 && H(fe, te, ae, se, ce, de, j, U));
    },
    V = (W, G, te, ae, se, ce, de, j, U) => {
      (W = W || EMPTY_ARR), (G = G || EMPTY_ARR);
      const X = W.length,
        oe = G.length,
        fe = Math.min(X, oe);
      let ue;
      for (ue = 0; ue < fe; ue++) {
        const Z = (G[ue] = U ? cloneIfMounted(G[ue]) : normalizeVNode(G[ue]));
        T(W[ue], Z, te, null, se, ce, de, j, U);
      }
      X > oe ? Ce(W, se, ce, !0, !1, fe) : H(G, te, ae, se, ce, de, j, U, fe);
    },
    Q = (W, G, te, ae, se, ce, de, j, U) => {
      let X = 0;
      const oe = G.length;
      let fe = W.length - 1,
        ue = oe - 1;
      for (; X <= fe && X <= ue; ) {
        const Z = W[X],
          ne = (G[X] = U ? cloneIfMounted(G[X]) : normalizeVNode(G[X]));
        if (isSameVNodeType(Z, ne)) T(Z, ne, te, null, se, ce, de, j, U);
        else break;
        X++;
      }
      for (; X <= fe && X <= ue; ) {
        const Z = W[fe],
          ne = (G[ue] = U ? cloneIfMounted(G[ue]) : normalizeVNode(G[ue]));
        if (isSameVNodeType(Z, ne)) T(Z, ne, te, null, se, ce, de, j, U);
        else break;
        fe--, ue--;
      }
      if (X > fe) {
        if (X <= ue) {
          const Z = ue + 1,
            ne = Z < oe ? G[Z].el : ae;
          for (; X <= ue; )
            T(
              null,
              (G[X] = U ? cloneIfMounted(G[X]) : normalizeVNode(G[X])),
              te,
              ne,
              se,
              ce,
              de,
              j,
              U
            ),
              X++;
        }
      } else if (X > ue) for (; X <= fe; ) he(W[X], se, ce, !0), X++;
      else {
        const Z = X,
          ne = X,
          _e = new Map();
        for (X = ne; X <= ue; X++) {
          const xe = (G[X] = U ? cloneIfMounted(G[X]) : normalizeVNode(G[X]));
          xe.key != null && _e.set(xe.key, X);
        }
        let be,
          Te = 0;
        const Ae = ue - ne + 1;
        let Re = !1,
          we = 0;
        const Ie = new Array(Ae);
        for (X = 0; X < Ae; X++) Ie[X] = 0;
        for (X = Z; X <= fe; X++) {
          const xe = W[X];
          if (Te >= Ae) {
            he(xe, se, ce, !0);
            continue;
          }
          let ke;
          if (xe.key != null) ke = _e.get(xe.key);
          else
            for (be = ne; be <= ue; be++)
              if (Ie[be - ne] === 0 && isSameVNodeType(xe, G[be])) {
                ke = be;
                break;
              }
          ke === void 0
            ? he(xe, se, ce, !0)
            : ((Ie[ke - ne] = X + 1),
              ke >= we ? (we = ke) : (Re = !0),
              T(xe, G[ke], te, null, se, ce, de, j, U),
              Te++);
        }
        const Le = Re ? getSequence(Ie) : EMPTY_ARR;
        for (be = Le.length - 1, X = Ae - 1; X >= 0; X--) {
          const xe = ne + X,
            ke = G[xe],
            Oe = xe + 1 < oe ? G[xe + 1].el : ae;
          Ie[X] === 0
            ? T(null, ke, te, Oe, se, ce, de, j, U)
            : Re && (be < 0 || X !== Le[be] ? Y(ke, te, Oe, 2) : be--);
        }
      }
    },
    Y = (W, G, te, ae, se = null) => {
      const { el: ce, type: de, transition: j, children: U, shapeFlag: X } = W;
      if (X & 6) {
        Y(W.component.subTree, G, te, ae);
        return;
      }
      if (X & 128) {
        W.suspense.move(G, te, ae);
        return;
      }
      if (X & 64) {
        de.move(W, G, te, ge);
        return;
      }
      if (de === Fragment) {
        n(ce, G, te);
        for (let fe = 0; fe < U.length; fe++) Y(U[fe], G, te, ae);
        n(W.anchor, G, te);
        return;
      }
      if (de === Static) {
        S(W, G, te);
        return;
      }
      if (ae !== 2 && X & 1 && j)
        if (ae === 0)
          j.beforeEnter(ce),
            n(ce, G, te),
            queuePostRenderEffect(() => j.enter(ce), se);
        else {
          const { leave: fe, delayLeave: ue, afterLeave: Z } = j,
            ne = () => n(ce, G, te),
            _e = () => {
              fe(ce, () => {
                ne(), Z && Z();
              });
            };
          ue ? ue(ce, ne, _e) : _e();
        }
      else n(ce, G, te);
    },
    he = (W, G, te, ae = !1, se = !1) => {
      const {
        type: ce,
        props: de,
        ref: j,
        children: U,
        dynamicChildren: X,
        shapeFlag: oe,
        patchFlag: fe,
        dirs: ue,
        cacheIndex: Z,
      } = W;
      if (
        (fe === -2 && (se = !1),
        j != null && setRef(j, null, te, W, !0),
        Z != null && (G.renderCache[Z] = void 0),
        oe & 256)
      ) {
        G.ctx.deactivate(W);
        return;
      }
      const ne = oe & 1 && ue,
        _e = !isAsyncWrapper(W);
      let be;
      if (
        (_e &&
          (be = de && de.onVnodeBeforeUnmount) &&
          invokeVNodeHook(be, G, W),
        oe & 6)
      )
        Pe(W.component, te, ae);
      else {
        if (oe & 128) {
          W.suspense.unmount(te, ae);
          return;
        }
        ne && invokeDirectiveHook(W, null, G, "beforeUnmount"),
          oe & 64
            ? W.type.remove(W, G, te, ge, ae)
            : X && !X.hasOnce && (ce !== Fragment || (fe > 0 && fe & 64))
            ? Ce(X, G, te, !1, !0)
            : ((ce === Fragment && fe & 384) || (!se && oe & 16)) &&
              Ce(U, G, te),
          ae && ye(W);
      }
      ((_e && (be = de && de.onVnodeUnmounted)) || ne) &&
        queuePostRenderEffect(() => {
          be && invokeVNodeHook(be, G, W),
            ne && invokeDirectiveHook(W, null, G, "unmounted");
        }, te);
    },
    ye = (W) => {
      const { type: G, el: te, anchor: ae, transition: se } = W;
      if (G === Fragment) {
        ve(te, ae);
        return;
      }
      if (G === Static) {
        A(W);
        return;
      }
      const ce = () => {
        i(te), se && !se.persisted && se.afterLeave && se.afterLeave();
      };
      if (W.shapeFlag & 1 && se && !se.persisted) {
        const { leave: de, delayLeave: j } = se,
          U = () => de(te, ce);
        j ? j(W.el, ce, U) : U();
      } else ce();
    },
    ve = (W, G) => {
      let te;
      for (; W !== G; ) (te = b(W)), i(W), (W = te);
      i(G);
    },
    Pe = (W, G, te) => {
      const { bum: ae, scope: se, job: ce, subTree: de, um: j, m: U, a: X } = W;
      invalidateMount(U),
        invalidateMount(X),
        ae && invokeArrayFns(ae),
        se.stop(),
        ce && ((ce.flags |= 8), he(de, W, G, te)),
        j && queuePostRenderEffect(j, G),
        queuePostRenderEffect(() => {
          W.isUnmounted = !0;
        }, G),
        G &&
          G.pendingBranch &&
          !G.isUnmounted &&
          W.asyncDep &&
          !W.asyncResolved &&
          W.suspenseId === G.pendingId &&
          (G.deps--, G.deps === 0 && G.resolve());
    },
    Ce = (W, G, te, ae = !1, se = !1, ce = 0) => {
      for (let de = ce; de < W.length; de++) he(W[de], G, te, ae, se);
    },
    ie = (W) => {
      if (W.shapeFlag & 6) return ie(W.component.subTree);
      if (W.shapeFlag & 128) return W.suspense.next();
      const G = b(W.anchor || W.el),
        te = G && G[TeleportEndKey];
      return te ? b(te) : G;
    };
  let me = !1;
  const pe = (W, G, te) => {
      W == null
        ? G._vnode && he(G._vnode, null, null, !0)
        : T(G._vnode || null, W, G, null, null, null, te),
        (G._vnode = W),
        me || ((me = !0), flushPreFlushCbs(), flushPostFlushCbs(), (me = !1));
    },
    ge = {
      p: T,
      um: he,
      m: Y,
      r: ye,
      mt: le,
      mc: H,
      pc: N,
      pbc: q,
      n: ie,
      o: e,
    };
  let Ee, Se;
  return (
    t && ([Ee, Se] = t(ge)),
    { render: pe, hydrate: Ee, createApp: createAppAPI(pe, Ee) }
  );
}
function resolveChildrenNamespace({ type: e, props: t }, r) {
  return (r === "svg" && e === "foreignObject") ||
    (r === "mathml" &&
      e === "annotation-xml" &&
      t &&
      t.encoding &&
      t.encoding.includes("html"))
    ? void 0
    : r;
}
function toggleRecurse({ effect: e, job: t }, r) {
  r ? ((e.flags |= 32), (t.flags |= 4)) : ((e.flags &= -33), (t.flags &= -5));
}
function needTransition(e, t) {
  return (!e || (e && !e.pendingBranch)) && t && !t.persisted;
}
function traverseStaticChildren(e, t, r = !1) {
  const n = e.children,
    i = t.children;
  if (isArray$2(n) && isArray$2(i))
    for (let a = 0; a < n.length; a++) {
      const o = n[a];
      let l = i[a];
      l.shapeFlag & 1 &&
        !l.dynamicChildren &&
        ((l.patchFlag <= 0 || l.patchFlag === 32) &&
          ((l = i[a] = cloneIfMounted(i[a])), (l.el = o.el)),
        !r && l.patchFlag !== -2 && traverseStaticChildren(o, l)),
        l.type === Text && (l.el = o.el);
    }
}
function getSequence(e) {
  const t = e.slice(),
    r = [0];
  let n, i, a, o, l;
  const c = e.length;
  for (n = 0; n < c; n++) {
    const u = e[n];
    if (u !== 0) {
      if (((i = r[r.length - 1]), e[i] < u)) {
        (t[n] = i), r.push(n);
        continue;
      }
      for (a = 0, o = r.length - 1; a < o; )
        (l = (a + o) >> 1), e[r[l]] < u ? (a = l + 1) : (o = l);
      u < e[r[a]] && (a > 0 && (t[n] = r[a - 1]), (r[a] = n));
    }
  }
  for (a = r.length, o = r[a - 1]; a-- > 0; ) (r[a] = o), (o = t[o]);
  return r;
}
function locateNonHydratedAsyncRoot(e) {
  const t = e.subTree.component;
  if (t)
    return t.asyncDep && !t.asyncResolved ? t : locateNonHydratedAsyncRoot(t);
}
function invalidateMount(e) {
  if (e) for (let t = 0; t < e.length; t++) e[t].flags |= 8;
}
const ssrContextKey = Symbol.for("v-scx"),
  useSSRContext = () => inject$1(ssrContextKey);
function watchEffect(e, t) {
  return doWatch(e, null, t);
}
function watchPostEffect(e, t) {
  return doWatch(e, null, { flush: "post" });
}
function watchSyncEffect(e, t) {
  return doWatch(e, null, { flush: "sync" });
}
function watch(e, t, r) {
  return doWatch(e, t, r);
}
function doWatch(e, t, r = EMPTY_OBJ) {
  const { immediate: n, deep: i, flush: a, once: o } = r,
    l = extend({}, r),
    c = (t && n) || (!t && a !== "post");
  let u;
  if (isInSSRComponentSetup) {
    if (a === "sync") {
      const P = useSSRContext();
      u = P.__watcherHandles || (P.__watcherHandles = []);
    } else if (!c) {
      const P = () => {};
      return (P.stop = NOOP), (P.resume = NOOP), (P.pause = NOOP), P;
    }
  }
  const d = currentInstance;
  l.call = (P, R, T) => callWithAsyncErrorHandling(P, d, R, T);
  let E = !1;
  a === "post"
    ? (l.scheduler = (P) => {
        queuePostRenderEffect(P, d && d.suspense);
      })
    : a !== "sync" &&
      ((E = !0),
      (l.scheduler = (P, R) => {
        R ? P() : queueJob(P);
      })),
    (l.augmentJob = (P) => {
      t && (P.flags |= 4),
        E && ((P.flags |= 2), d && ((P.id = d.uid), (P.i = d)));
    });
  const b = watch$1(e, t, l);
  return isInSSRComponentSetup && (u ? u.push(b) : c && b()), b;
}
function instanceWatch(e, t, r) {
  const n = this.proxy,
    i = isString$1(e)
      ? e.includes(".")
        ? createPathGetter(n, e)
        : () => n[e]
      : e.bind(n, n);
  let a;
  isFunction$1(t) ? (a = t) : ((a = t.handler), (r = t));
  const o = setCurrentInstance(this),
    l = doWatch(i, a.bind(n), r);
  return o(), l;
}
function createPathGetter(e, t) {
  const r = t.split(".");
  return () => {
    let n = e;
    for (let i = 0; i < r.length && n; i++) n = n[r[i]];
    return n;
  };
}
function useModel(e, t, r = EMPTY_OBJ) {
  const n = getCurrentInstance$1(),
    i = camelize(t),
    a = hyphenate(t),
    o = getModelModifiers(e, i),
    l = customRef((c, u) => {
      let d,
        E = EMPTY_OBJ,
        b;
      return (
        watchSyncEffect(() => {
          const P = e[i];
          hasChanged(d, P) && ((d = P), u());
        }),
        {
          get() {
            return c(), r.get ? r.get(d) : d;
          },
          set(P) {
            const R = r.set ? r.set(P) : P;
            if (!hasChanged(R, d) && !(E !== EMPTY_OBJ && hasChanged(P, E)))
              return;
            const T = n.vnode.props;
            (T &&
              (t in T || i in T || a in T) &&
              (`onUpdate:${t}` in T ||
                `onUpdate:${i}` in T ||
                `onUpdate:${a}` in T)) ||
              ((d = P), u()),
              n.emit(`update:${t}`, R),
              hasChanged(P, R) && hasChanged(P, E) && !hasChanged(R, b) && u(),
              (E = P),
              (b = R);
          },
        }
      );
    });
  return (
    (l[Symbol.iterator] = () => {
      let c = 0;
      return {
        next() {
          return c < 2
            ? { value: c++ ? o || EMPTY_OBJ : l, done: !1 }
            : { done: !0 };
        },
      };
    }),
    l
  );
}
const getModelModifiers = (e, t) =>
  t === "modelValue" || t === "model-value"
    ? e.modelModifiers
    : e[`${t}Modifiers`] ||
      e[`${camelize(t)}Modifiers`] ||
      e[`${hyphenate(t)}Modifiers`];
function emit(e, t, ...r) {
  if (e.isUnmounted) return;
  const n = e.vnode.props || EMPTY_OBJ;
  let i = r;
  const a = t.startsWith("update:"),
    o = a && getModelModifiers(n, t.slice(7));
  o &&
    (o.trim && (i = r.map((d) => (isString$1(d) ? d.trim() : d))),
    o.number && (i = r.map(looseToNumber)));
  let l,
    c = n[(l = toHandlerKey(t))] || n[(l = toHandlerKey(camelize(t)))];
  !c && a && (c = n[(l = toHandlerKey(hyphenate(t)))]),
    c && callWithAsyncErrorHandling(c, e, 6, i);
  const u = n[l + "Once"];
  if (u) {
    if (!e.emitted) e.emitted = {};
    else if (e.emitted[l]) return;
    (e.emitted[l] = !0), callWithAsyncErrorHandling(u, e, 6, i);
  }
}
function normalizeEmitsOptions(e, t, r = !1) {
  const n = t.emitsCache,
    i = n.get(e);
  if (i !== void 0) return i;
  const a = e.emits;
  let o = {},
    l = !1;
  if (!isFunction$1(e)) {
    const c = (u) => {
      const d = normalizeEmitsOptions(u, t, !0);
      d && ((l = !0), extend(o, d));
    };
    !r && t.mixins.length && t.mixins.forEach(c),
      e.extends && c(e.extends),
      e.mixins && e.mixins.forEach(c);
  }
  return !a && !l
    ? (isObject$2(e) && n.set(e, null), null)
    : (isArray$2(a) ? a.forEach((c) => (o[c] = null)) : extend(o, a),
      isObject$2(e) && n.set(e, o),
      o);
}
function isEmitListener(e, t) {
  return !e || !isOn$1(t)
    ? !1
    : ((t = t.slice(2).replace(/Once$/, "")),
      hasOwn$1(e, t[0].toLowerCase() + t.slice(1)) ||
        hasOwn$1(e, hyphenate(t)) ||
        hasOwn$1(e, t));
}
function markAttrsAccessed() {}
function renderComponentRoot(e) {
  const {
      type: t,
      vnode: r,
      proxy: n,
      withProxy: i,
      propsOptions: [a],
      slots: o,
      attrs: l,
      emit: c,
      render: u,
      renderCache: d,
      props: E,
      data: b,
      setupState: P,
      ctx: R,
      inheritAttrs: T,
    } = e,
    M = setCurrentRenderingInstance(e);
  let x, k;
  try {
    if (r.shapeFlag & 4) {
      const A = i || n,
        O = A;
      (x = normalizeVNode(u.call(O, A, d, E, P, b, R))), (k = l);
    } else {
      const A = t;
      (x = normalizeVNode(
        A.length > 1 ? A(E, { attrs: l, slots: o, emit: c }) : A(E, null)
      )),
        (k = t.props ? l : getFunctionalFallthrough(l));
    }
  } catch (A) {
    (blockStack.length = 0), handleError(A, e, 1), (x = createVNode(Comment));
  }
  let S = x;
  if (k && T !== !1) {
    const A = Object.keys(k),
      { shapeFlag: O } = S;
    A.length &&
      O & 7 &&
      (a && A.some(isModelListener) && (k = filterModelListeners(k, a)),
      (S = cloneVNode(S, k, !1, !0)));
  }
  return (
    r.dirs &&
      ((S = cloneVNode(S, null, !1, !0)),
      (S.dirs = S.dirs ? S.dirs.concat(r.dirs) : r.dirs)),
    r.transition && setTransitionHooks(S, r.transition),
    (x = S),
    setCurrentRenderingInstance(M),
    x
  );
}
function filterSingleRoot(e, t = !0) {
  let r;
  for (let n = 0; n < e.length; n++) {
    const i = e[n];
    if (isVNode$1(i)) {
      if (i.type !== Comment || i.children === "v-if") {
        if (r) return;
        r = i;
      }
    } else return;
  }
  return r;
}
const getFunctionalFallthrough = (e) => {
    let t;
    for (const r in e)
      (r === "class" || r === "style" || isOn$1(r)) &&
        ((t || (t = {}))[r] = e[r]);
    return t;
  },
  filterModelListeners = (e, t) => {
    const r = {};
    for (const n in e)
      (!isModelListener(n) || !(n.slice(9) in t)) && (r[n] = e[n]);
    return r;
  };
function shouldUpdateComponent(e, t, r) {
  const { props: n, children: i, component: a } = e,
    { props: o, children: l, patchFlag: c } = t,
    u = a.emitsOptions;
  if (t.dirs || t.transition) return !0;
  if (r && c >= 0) {
    if (c & 1024) return !0;
    if (c & 16) return n ? hasPropsChanged(n, o, u) : !!o;
    if (c & 8) {
      const d = t.dynamicProps;
      for (let E = 0; E < d.length; E++) {
        const b = d[E];
        if (o[b] !== n[b] && !isEmitListener(u, b)) return !0;
      }
    }
  } else
    return (i || l) && (!l || !l.$stable)
      ? !0
      : n === o
      ? !1
      : n
      ? o
        ? hasPropsChanged(n, o, u)
        : !0
      : !!o;
  return !1;
}
function hasPropsChanged(e, t, r) {
  const n = Object.keys(t);
  if (n.length !== Object.keys(e).length) return !0;
  for (let i = 0; i < n.length; i++) {
    const a = n[i];
    if (t[a] !== e[a] && !isEmitListener(r, a)) return !0;
  }
  return !1;
}
function updateHOCHostEl({ vnode: e, parent: t }, r) {
  for (; t; ) {
    const n = t.subTree;
    if ((n.suspense && n.suspense.activeBranch === e && (n.el = e.el), n === e))
      ((e = t.vnode).el = r), (t = t.parent);
    else break;
  }
}
const isSuspense = (e) => e.__isSuspense;
let suspenseId = 0;
const SuspenseImpl = {
    name: "Suspense",
    __isSuspense: !0,
    process(e, t, r, n, i, a, o, l, c, u) {
      if (e == null) mountSuspense(t, r, n, i, a, o, l, c, u);
      else {
        if (a && a.deps > 0 && !e.suspense.isInFallback) {
          (t.suspense = e.suspense), (t.suspense.vnode = t), (t.el = e.el);
          return;
        }
        patchSuspense(e, t, r, n, i, o, l, c, u);
      }
    },
    hydrate: hydrateSuspense,
    normalize: normalizeSuspenseChildren,
  },
  Suspense = SuspenseImpl;
function triggerEvent(e, t) {
  const r = e.props && e.props[t];
  isFunction$1(r) && r();
}
function mountSuspense(e, t, r, n, i, a, o, l, c) {
  const {
      p: u,
      o: { createElement: d },
    } = c,
    E = d("div"),
    b = (e.suspense = createSuspenseBoundary(e, i, n, t, E, r, a, o, l, c));
  u(null, (b.pendingBranch = e.ssContent), E, null, n, b, a, o),
    b.deps > 0
      ? (triggerEvent(e, "onPending"),
        triggerEvent(e, "onFallback"),
        u(null, e.ssFallback, t, r, n, null, a, o),
        setActiveBranch(b, e.ssFallback))
      : b.resolve(!1, !0);
}
function patchSuspense(
  e,
  t,
  r,
  n,
  i,
  a,
  o,
  l,
  { p: c, um: u, o: { createElement: d } }
) {
  const E = (t.suspense = e.suspense);
  (E.vnode = t), (t.el = e.el);
  const b = t.ssContent,
    P = t.ssFallback,
    { activeBranch: R, pendingBranch: T, isInFallback: M, isHydrating: x } = E;
  if (T)
    (E.pendingBranch = b),
      isSameVNodeType(b, T)
        ? (c(T, b, E.hiddenContainer, null, i, E, a, o, l),
          E.deps <= 0
            ? E.resolve()
            : M &&
              (x || (c(R, P, r, n, i, null, a, o, l), setActiveBranch(E, P))))
        : ((E.pendingId = suspenseId++),
          x ? ((E.isHydrating = !1), (E.activeBranch = T)) : u(T, i, E),
          (E.deps = 0),
          (E.effects.length = 0),
          (E.hiddenContainer = d("div")),
          M
            ? (c(null, b, E.hiddenContainer, null, i, E, a, o, l),
              E.deps <= 0
                ? E.resolve()
                : (c(R, P, r, n, i, null, a, o, l), setActiveBranch(E, P)))
            : R && isSameVNodeType(b, R)
            ? (c(R, b, r, n, i, E, a, o, l), E.resolve(!0))
            : (c(null, b, E.hiddenContainer, null, i, E, a, o, l),
              E.deps <= 0 && E.resolve()));
  else if (R && isSameVNodeType(b, R))
    c(R, b, r, n, i, E, a, o, l), setActiveBranch(E, b);
  else if (
    (triggerEvent(t, "onPending"),
    (E.pendingBranch = b),
    b.shapeFlag & 512
      ? (E.pendingId = b.component.suspenseId)
      : (E.pendingId = suspenseId++),
    c(null, b, E.hiddenContainer, null, i, E, a, o, l),
    E.deps <= 0)
  )
    E.resolve();
  else {
    const { timeout: k, pendingId: S } = E;
    k > 0
      ? setTimeout(() => {
          E.pendingId === S && E.fallback(P);
        }, k)
      : k === 0 && E.fallback(P);
  }
}
function createSuspenseBoundary(e, t, r, n, i, a, o, l, c, u, d = !1) {
  const {
    p: E,
    m: b,
    um: P,
    n: R,
    o: { parentNode: T, remove: M },
  } = u;
  let x;
  const k = isVNodeSuspensible(e);
  k && t && t.pendingBranch && ((x = t.pendingId), t.deps++);
  const S = e.props ? toNumber(e.props.timeout) : void 0,
    A = a,
    O = {
      vnode: e,
      parent: t,
      parentComponent: r,
      namespace: o,
      container: n,
      hiddenContainer: i,
      deps: 0,
      pendingId: suspenseId++,
      timeout: typeof S == "number" ? S : -1,
      activeBranch: null,
      pendingBranch: null,
      isInFallback: !d,
      isHydrating: d,
      isUnmounted: !1,
      effects: [],
      resolve(F = !1, D = !1) {
        const {
          vnode: H,
          activeBranch: $,
          pendingBranch: q,
          pendingId: J,
          effects: K,
          parentComponent: ee,
          container: le,
        } = O;
        let re = !1;
        O.isHydrating
          ? (O.isHydrating = !1)
          : F ||
            ((re = $ && q.transition && q.transition.mode === "out-in"),
            re &&
              ($.transition.afterLeave = () => {
                J === O.pendingId &&
                  (b(q, le, a === A ? R($) : a, 0), queuePostFlushCb(K));
              }),
            $ && (T($.el) === le && (a = R($)), P($, ee, O, !0)),
            re || b(q, le, a, 0)),
          setActiveBranch(O, q),
          (O.pendingBranch = null),
          (O.isInFallback = !1);
        let B = O.parent,
          z = !1;
        for (; B; ) {
          if (B.pendingBranch) {
            B.effects.push(...K), (z = !0);
            break;
          }
          B = B.parent;
        }
        !z && !re && queuePostFlushCb(K),
          (O.effects = []),
          k &&
            t &&
            t.pendingBranch &&
            x === t.pendingId &&
            (t.deps--, t.deps === 0 && !D && t.resolve()),
          triggerEvent(H, "onResolve");
      },
      fallback(F) {
        if (!O.pendingBranch) return;
        const {
          vnode: D,
          activeBranch: H,
          parentComponent: $,
          container: q,
          namespace: J,
        } = O;
        triggerEvent(D, "onFallback");
        const K = R(H),
          ee = () => {
            O.isInFallback &&
              (E(null, F, q, K, $, null, J, l, c), setActiveBranch(O, F));
          },
          le = F.transition && F.transition.mode === "out-in";
        le && (H.transition.afterLeave = ee),
          (O.isInFallback = !0),
          P(H, $, null, !0),
          le || ee();
      },
      move(F, D, H) {
        O.activeBranch && b(O.activeBranch, F, D, H), (O.container = F);
      },
      next() {
        return O.activeBranch && R(O.activeBranch);
      },
      registerDep(F, D, H) {
        const $ = !!O.pendingBranch;
        $ && O.deps++;
        const q = F.vnode.el;
        F.asyncDep
          .catch((J) => {
            handleError(J, F, 0);
          })
          .then((J) => {
            if (F.isUnmounted || O.isUnmounted || O.pendingId !== F.suspenseId)
              return;
            F.asyncResolved = !0;
            const { vnode: K } = F;
            handleSetupResult(F, J, !1), q && (K.el = q);
            const ee = !q && F.subTree.el;
            D(F, K, T(q || F.subTree.el), q ? null : R(F.subTree), O, o, H),
              ee && M(ee),
              updateHOCHostEl(F, K.el),
              $ && --O.deps === 0 && O.resolve();
          });
      },
      unmount(F, D) {
        (O.isUnmounted = !0),
          O.activeBranch && P(O.activeBranch, r, F, D),
          O.pendingBranch && P(O.pendingBranch, r, F, D);
      },
    };
  return O;
}
function hydrateSuspense(e, t, r, n, i, a, o, l, c) {
  const u = (t.suspense = createSuspenseBoundary(
      t,
      n,
      r,
      e.parentNode,
      document.createElement("div"),
      null,
      i,
      a,
      o,
      l,
      !0
    )),
    d = c(e, (u.pendingBranch = t.ssContent), r, u, a, o);
  return u.deps === 0 && u.resolve(!1, !0), d;
}
function normalizeSuspenseChildren(e) {
  const { shapeFlag: t, children: r } = e,
    n = t & 32;
  (e.ssContent = normalizeSuspenseSlot(n ? r.default : r)),
    (e.ssFallback = n
      ? normalizeSuspenseSlot(r.fallback)
      : createVNode(Comment));
}
function normalizeSuspenseSlot(e) {
  let t;
  if (isFunction$1(e)) {
    const r = isBlockTreeEnabled && e._c;
    r && ((e._d = !1), openBlock()),
      (e = e()),
      r && ((e._d = !0), (t = currentBlock), closeBlock());
  }
  return (
    isArray$2(e) && (e = filterSingleRoot(e)),
    (e = normalizeVNode(e)),
    t && !e.dynamicChildren && (e.dynamicChildren = t.filter((r) => r !== e)),
    e
  );
}
function queueEffectWithSuspense(e, t) {
  t && t.pendingBranch
    ? isArray$2(e)
      ? t.effects.push(...e)
      : t.effects.push(e)
    : queuePostFlushCb(e);
}
function setActiveBranch(e, t) {
  e.activeBranch = t;
  const { vnode: r, parentComponent: n } = e;
  let i = t.el;
  for (; !i && t.component; ) (t = t.component.subTree), (i = t.el);
  (r.el = i), n && n.subTree === r && ((n.vnode.el = i), updateHOCHostEl(n, i));
}
function isVNodeSuspensible(e) {
  const t = e.props && e.props.suspensible;
  return t != null && t !== !1;
}
const Fragment = Symbol.for("v-fgt"),
  Text = Symbol.for("v-txt"),
  Comment = Symbol.for("v-cmt"),
  Static = Symbol.for("v-stc"),
  blockStack = [];
let currentBlock = null;
function openBlock(e = !1) {
  blockStack.push((currentBlock = e ? null : []));
}
function closeBlock() {
  blockStack.pop(), (currentBlock = blockStack[blockStack.length - 1] || null);
}
let isBlockTreeEnabled = 1;
function setBlockTracking(e, t = !1) {
  (isBlockTreeEnabled += e),
    e < 0 && currentBlock && t && (currentBlock.hasOnce = !0);
}
function setupBlock(e) {
  return (
    (e.dynamicChildren =
      isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null),
    closeBlock(),
    isBlockTreeEnabled > 0 && currentBlock && currentBlock.push(e),
    e
  );
}
function createElementBlock(e, t, r, n, i, a) {
  return setupBlock(createBaseVNode(e, t, r, n, i, a, !0));
}
function createBlock(e, t, r, n, i) {
  return setupBlock(createVNode(e, t, r, n, i, !0));
}
function isVNode$1(e) {
  return e ? e.__v_isVNode === !0 : !1;
}
function isSameVNodeType(e, t) {
  return e.type === t.type && e.key === t.key;
}
function transformVNodeArgs(e) {}
const normalizeKey = ({ key: e }) => e ?? null,
  normalizeRef = ({ ref: e, ref_key: t, ref_for: r }) => (
    typeof e == "number" && (e = "" + e),
    e != null
      ? isString$1(e) || isRef(e) || isFunction$1(e)
        ? { i: currentRenderingInstance, r: e, k: t, f: !!r }
        : e
      : null
  );
function createBaseVNode(
  e,
  t = null,
  r = null,
  n = 0,
  i = null,
  a = e === Fragment ? 0 : 1,
  o = !1,
  l = !1
) {
  const c = {
    __v_isVNode: !0,
    __v_skip: !0,
    type: e,
    props: t,
    key: t && normalizeKey(t),
    ref: t && normalizeRef(t),
    scopeId: currentScopeId,
    slotScopeIds: null,
    children: r,
    component: null,
    suspense: null,
    ssContent: null,
    ssFallback: null,
    dirs: null,
    transition: null,
    el: null,
    anchor: null,
    target: null,
    targetStart: null,
    targetAnchor: null,
    staticCount: 0,
    shapeFlag: a,
    patchFlag: n,
    dynamicProps: i,
    dynamicChildren: null,
    appContext: null,
    ctx: currentRenderingInstance,
  };
  return (
    l
      ? (normalizeChildren(c, r), a & 128 && e.normalize(c))
      : r && (c.shapeFlag |= isString$1(r) ? 8 : 16),
    isBlockTreeEnabled > 0 &&
      !o &&
      currentBlock &&
      (c.patchFlag > 0 || a & 6) &&
      c.patchFlag !== 32 &&
      currentBlock.push(c),
    c
  );
}
const createVNode = _createVNode;
function _createVNode(e, t = null, r = null, n = 0, i = null, a = !1) {
  if (((!e || e === NULL_DYNAMIC_COMPONENT) && (e = Comment), isVNode$1(e))) {
    const l = cloneVNode(e, t, !0);
    return (
      r && normalizeChildren(l, r),
      isBlockTreeEnabled > 0 &&
        !a &&
        currentBlock &&
        (l.shapeFlag & 6
          ? (currentBlock[currentBlock.indexOf(e)] = l)
          : currentBlock.push(l)),
      (l.patchFlag = -2),
      l
    );
  }
  if ((isClassComponent(e) && (e = e.__vccOpts), t)) {
    t = guardReactiveProps(t);
    let { class: l, style: c } = t;
    l && !isString$1(l) && (t.class = normalizeClass(l)),
      isObject$2(c) &&
        (isProxy(c) && !isArray$2(c) && (c = extend({}, c)),
        (t.style = normalizeStyle(c)));
  }
  const o = isString$1(e)
    ? 1
    : isSuspense(e)
    ? 128
    : isTeleport(e)
    ? 64
    : isObject$2(e)
    ? 4
    : isFunction$1(e)
    ? 2
    : 0;
  return createBaseVNode(e, t, r, n, i, o, a, !0);
}
function guardReactiveProps(e) {
  return e ? (isProxy(e) || isInternalObject(e) ? extend({}, e) : e) : null;
}
function cloneVNode(e, t, r = !1, n = !1) {
  const { props: i, ref: a, patchFlag: o, children: l, transition: c } = e,
    u = t ? mergeProps(i || {}, t) : i,
    d = {
      __v_isVNode: !0,
      __v_skip: !0,
      type: e.type,
      props: u,
      key: u && normalizeKey(u),
      ref:
        t && t.ref
          ? r && a
            ? isArray$2(a)
              ? a.concat(normalizeRef(t))
              : [a, normalizeRef(t)]
            : normalizeRef(t)
          : a,
      scopeId: e.scopeId,
      slotScopeIds: e.slotScopeIds,
      children: l,
      target: e.target,
      targetStart: e.targetStart,
      targetAnchor: e.targetAnchor,
      staticCount: e.staticCount,
      shapeFlag: e.shapeFlag,
      patchFlag: t && e.type !== Fragment ? (o === -1 ? 16 : o | 16) : o,
      dynamicProps: e.dynamicProps,
      dynamicChildren: e.dynamicChildren,
      appContext: e.appContext,
      dirs: e.dirs,
      transition: c,
      component: e.component,
      suspense: e.suspense,
      ssContent: e.ssContent && cloneVNode(e.ssContent),
      ssFallback: e.ssFallback && cloneVNode(e.ssFallback),
      el: e.el,
      anchor: e.anchor,
      ctx: e.ctx,
      ce: e.ce,
    };
  return c && n && setTransitionHooks(d, c.clone(d)), d;
}
function createTextVNode(e = " ", t = 0) {
  return createVNode(Text, null, e, t);
}
function createStaticVNode(e, t) {
  const r = createVNode(Static, null, e);
  return (r.staticCount = t), r;
}
function createCommentVNode(e = "", t = !1) {
  return t
    ? (openBlock(), createBlock(Comment, null, e))
    : createVNode(Comment, null, e);
}
function normalizeVNode(e) {
  return e == null || typeof e == "boolean"
    ? createVNode(Comment)
    : isArray$2(e)
    ? createVNode(Fragment, null, e.slice())
    : isVNode$1(e)
    ? cloneIfMounted(e)
    : createVNode(Text, null, String(e));
}
function cloneIfMounted(e) {
  return (e.el === null && e.patchFlag !== -1) || e.memo ? e : cloneVNode(e);
}
function normalizeChildren(e, t) {
  let r = 0;
  const { shapeFlag: n } = e;
  if (t == null) t = null;
  else if (isArray$2(t)) r = 16;
  else if (typeof t == "object")
    if (n & 65) {
      const i = t.default;
      i &&
        (i._c && (i._d = !1), normalizeChildren(e, i()), i._c && (i._d = !0));
      return;
    } else {
      r = 32;
      const i = t._;
      !i && !isInternalObject(t)
        ? (t._ctx = currentRenderingInstance)
        : i === 3 &&
          currentRenderingInstance &&
          (currentRenderingInstance.slots._ === 1
            ? (t._ = 1)
            : ((t._ = 2), (e.patchFlag |= 1024)));
    }
  else
    isFunction$1(t)
      ? ((t = { default: t, _ctx: currentRenderingInstance }), (r = 32))
      : ((t = String(t)),
        n & 64 ? ((r = 16), (t = [createTextVNode(t)])) : (r = 8));
  (e.children = t), (e.shapeFlag |= r);
}
function mergeProps(...e) {
  const t = {};
  for (let r = 0; r < e.length; r++) {
    const n = e[r];
    for (const i in n)
      if (i === "class")
        t.class !== n.class && (t.class = normalizeClass([t.class, n.class]));
      else if (i === "style") t.style = normalizeStyle([t.style, n.style]);
      else if (isOn$1(i)) {
        const a = t[i],
          o = n[i];
        o &&
          a !== o &&
          !(isArray$2(a) && a.includes(o)) &&
          (t[i] = a ? [].concat(a, o) : o);
      } else i !== "" && (t[i] = n[i]);
  }
  return t;
}
function invokeVNodeHook(e, t, r, n = null) {
  callWithAsyncErrorHandling(e, t, 7, [r, n]);
}
const emptyAppContext = createAppContext();
let uid = 0;
function createComponentInstance(e, t, r) {
  const n = e.type,
    i = (t ? t.appContext : e.appContext) || emptyAppContext,
    a = {
      uid: uid++,
      vnode: e,
      type: n,
      parent: t,
      appContext: i,
      root: null,
      next: null,
      subTree: null,
      effect: null,
      update: null,
      job: null,
      scope: new EffectScope(!0),
      render: null,
      proxy: null,
      exposed: null,
      exposeProxy: null,
      withProxy: null,
      provides: t ? t.provides : Object.create(i.provides),
      ids: t ? t.ids : ["", 0, 0],
      accessCache: null,
      renderCache: [],
      components: null,
      directives: null,
      propsOptions: normalizePropsOptions(n, i),
      emitsOptions: normalizeEmitsOptions(n, i),
      emit: null,
      emitted: null,
      propsDefaults: EMPTY_OBJ,
      inheritAttrs: n.inheritAttrs,
      ctx: EMPTY_OBJ,
      data: EMPTY_OBJ,
      props: EMPTY_OBJ,
      attrs: EMPTY_OBJ,
      slots: EMPTY_OBJ,
      refs: EMPTY_OBJ,
      setupState: EMPTY_OBJ,
      setupContext: null,
      suspense: r,
      suspenseId: r ? r.pendingId : 0,
      asyncDep: null,
      asyncResolved: !1,
      isMounted: !1,
      isUnmounted: !1,
      isDeactivated: !1,
      bc: null,
      c: null,
      bm: null,
      m: null,
      bu: null,
      u: null,
      um: null,
      bum: null,
      da: null,
      a: null,
      rtg: null,
      rtc: null,
      ec: null,
      sp: null,
    };
  return (
    (a.ctx = { _: a }),
    (a.root = t ? t.root : a),
    (a.emit = emit.bind(null, a)),
    e.ce && e.ce(a),
    a
  );
}
let currentInstance = null;
const getCurrentInstance$1 = () => currentInstance || currentRenderingInstance;
let internalSetCurrentInstance, setInSSRSetupState;
{
  const e = getGlobalThis$1(),
    t = (r, n) => {
      let i;
      return (
        (i = e[r]) || (i = e[r] = []),
        i.push(n),
        (a) => {
          i.length > 1 ? i.forEach((o) => o(a)) : i[0](a);
        }
      );
    };
  (internalSetCurrentInstance = t(
    "__VUE_INSTANCE_SETTERS__",
    (r) => (currentInstance = r)
  )),
    (setInSSRSetupState = t(
      "__VUE_SSR_SETTERS__",
      (r) => (isInSSRComponentSetup = r)
    ));
}
const setCurrentInstance = (e) => {
    const t = currentInstance;
    return (
      internalSetCurrentInstance(e),
      e.scope.on(),
      () => {
        e.scope.off(), internalSetCurrentInstance(t);
      }
    );
  },
  unsetCurrentInstance = () => {
    currentInstance && currentInstance.scope.off(),
      internalSetCurrentInstance(null);
  };
function isStatefulComponent(e) {
  return e.vnode.shapeFlag & 4;
}
let isInSSRComponentSetup = !1;
function setupComponent(e, t = !1, r = !1) {
  t && setInSSRSetupState(t);
  const { props: n, children: i } = e.vnode,
    a = isStatefulComponent(e);
  initProps(e, n, a, t), initSlots(e, i, r);
  const o = a ? setupStatefulComponent(e, t) : void 0;
  return t && setInSSRSetupState(!1), o;
}
function setupStatefulComponent(e, t) {
  const r = e.type;
  (e.accessCache = Object.create(null)),
    (e.proxy = new Proxy(e.ctx, PublicInstanceProxyHandlers));
  const { setup: n } = r;
  if (n) {
    pauseTracking();
    const i = (e.setupContext = n.length > 1 ? createSetupContext(e) : null),
      a = setCurrentInstance(e),
      o = callWithErrorHandling(n, e, 0, [e.props, i]),
      l = isPromise$1(o);
    if (
      (resetTracking(),
      a(),
      (l || e.sp) && !isAsyncWrapper(e) && markAsyncBoundary(e),
      l)
    ) {
      if ((o.then(unsetCurrentInstance, unsetCurrentInstance), t))
        return o
          .then((c) => {
            handleSetupResult(e, c, t);
          })
          .catch((c) => {
            handleError(c, e, 0);
          });
      e.asyncDep = o;
    } else handleSetupResult(e, o, t);
  } else finishComponentSetup(e, t);
}
function handleSetupResult(e, t, r) {
  isFunction$1(t)
    ? e.type.__ssrInlineRender
      ? (e.ssrRender = t)
      : (e.render = t)
    : isObject$2(t) && (e.setupState = proxyRefs(t)),
    finishComponentSetup(e, r);
}
let compile$2, installWithProxy;
function registerRuntimeCompiler(e) {
  (compile$2 = e),
    (installWithProxy = (t) => {
      t.render._rc &&
        (t.withProxy = new Proxy(
          t.ctx,
          RuntimeCompiledPublicInstanceProxyHandlers
        ));
    });
}
const isRuntimeOnly = () => !compile$2;
function finishComponentSetup(e, t, r) {
  const n = e.type;
  if (!e.render) {
    if (!t && compile$2 && !n.render) {
      const i = n.template || resolveMergedOptions(e).template;
      if (i) {
        const { isCustomElement: a, compilerOptions: o } = e.appContext.config,
          { delimiters: l, compilerOptions: c } = n,
          u = extend(extend({ isCustomElement: a, delimiters: l }, o), c);
        n.render = compile$2(i, u);
      }
    }
    (e.render = n.render || NOOP), installWithProxy && installWithProxy(e);
  }
  {
    const i = setCurrentInstance(e);
    pauseTracking();
    try {
      applyOptions(e);
    } finally {
      resetTracking(), i();
    }
  }
}
const attrsProxyHandlers = {
  get(e, t) {
    return track(e, "get", ""), e[t];
  },
};
function createSetupContext(e) {
  const t = (r) => {
    e.exposed = r || {};
  };
  return {
    attrs: new Proxy(e.attrs, attrsProxyHandlers),
    slots: e.slots,
    emit: e.emit,
    expose: t,
  };
}
function getComponentPublicInstance(e) {
  return e.exposed
    ? e.exposeProxy ||
        (e.exposeProxy = new Proxy(proxyRefs(markRaw(e.exposed)), {
          get(t, r) {
            if (r in t) return t[r];
            if (r in publicPropertiesMap) return publicPropertiesMap[r](e);
          },
          has(t, r) {
            return r in t || r in publicPropertiesMap;
          },
        }))
    : e.proxy;
}
const classifyRE = /(?:^|[-_])(\w)/g,
  classify = (e) =>
    e.replace(classifyRE, (t) => t.toUpperCase()).replace(/[-_]/g, "");
function getComponentName(e, t = !0) {
  return isFunction$1(e) ? e.displayName || e.name : e.name || (t && e.__name);
}
function formatComponentName(e, t, r = !1) {
  let n = getComponentName(t);
  if (!n && t.__file) {
    const i = t.__file.match(/([^/\\]+)\.\w+$/);
    i && (n = i[1]);
  }
  if (!n && e && e.parent) {
    const i = (a) => {
      for (const o in a) if (a[o] === t) return o;
    };
    n =
      i(e.components || e.parent.type.components) || i(e.appContext.components);
  }
  return n ? classify(n) : r ? "App" : "Anonymous";
}
function isClassComponent(e) {
  return isFunction$1(e) && "__vccOpts" in e;
}
const computed = (e, t) => computed$1(e, t, isInSSRComponentSetup);
function h$2(e, t, r) {
  const n = arguments.length;
  return n === 2
    ? isObject$2(t) && !isArray$2(t)
      ? isVNode$1(t)
        ? createVNode(e, null, [t])
        : createVNode(e, t)
      : createVNode(e, null, t)
    : (n > 3
        ? (r = Array.prototype.slice.call(arguments, 2))
        : n === 3 && isVNode$1(r) && (r = [r]),
      createVNode(e, t, r));
}
function initCustomFormatter() {}
function withMemo(e, t, r, n) {
  const i = r[n];
  if (i && isMemoSame(i, e)) return i;
  const a = t();
  return (a.memo = e.slice()), (a.cacheIndex = n), (r[n] = a);
}
function isMemoSame(e, t) {
  const r = e.memo;
  if (r.length != t.length) return !1;
  for (let n = 0; n < r.length; n++) if (hasChanged(r[n], t[n])) return !1;
  return isBlockTreeEnabled > 0 && currentBlock && currentBlock.push(e), !0;
}
const version$1 = "3.5.13",
  warn$2 = NOOP,
  ErrorTypeStrings = ErrorTypeStrings$1,
  devtools$2 = devtools$1,
  setDevtoolsHook = setDevtoolsHook$1,
  _ssrUtils = {
    createComponentInstance,
    setupComponent,
    renderComponentRoot,
    setCurrentRenderingInstance,
    isVNode: isVNode$1,
    normalizeVNode,
    getComponentPublicInstance,
    ensureValidVNode: ensureValidVNode$1,
    pushWarningContext,
    popWarningContext,
  },
  ssrUtils = _ssrUtils,
  resolveFilter = null,
  compatUtils = null,
  DeprecationTypes = null;
/**
 * @vue/runtime-dom v3.5.13
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ let policy;
const tt = typeof window < "u" && window.trustedTypes;
if (tt)
  try {
    policy = tt.createPolicy("vue", { createHTML: (e) => e });
  } catch {}
const unsafeToTrustedHTML = policy ? (e) => policy.createHTML(e) : (e) => e,
  svgNS = "http://www.w3.org/2000/svg",
  mathmlNS = "http://www.w3.org/1998/Math/MathML",
  doc = typeof document < "u" ? document : null,
  templateContainer = doc && doc.createElement("template"),
  nodeOps = {
    insert: (e, t, r) => {
      t.insertBefore(e, r || null);
    },
    remove: (e) => {
      const t = e.parentNode;
      t && t.removeChild(e);
    },
    createElement: (e, t, r, n) => {
      const i =
        t === "svg"
          ? doc.createElementNS(svgNS, e)
          : t === "mathml"
          ? doc.createElementNS(mathmlNS, e)
          : r
          ? doc.createElement(e, { is: r })
          : doc.createElement(e);
      return (
        e === "select" &&
          n &&
          n.multiple != null &&
          i.setAttribute("multiple", n.multiple),
        i
      );
    },
    createText: (e) => doc.createTextNode(e),
    createComment: (e) => doc.createComment(e),
    setText: (e, t) => {
      e.nodeValue = t;
    },
    setElementText: (e, t) => {
      e.textContent = t;
    },
    parentNode: (e) => e.parentNode,
    nextSibling: (e) => e.nextSibling,
    querySelector: (e) => doc.querySelector(e),
    setScopeId(e, t) {
      e.setAttribute(t, "");
    },
    insertStaticContent(e, t, r, n, i, a) {
      const o = r ? r.previousSibling : t.lastChild;
      if (i && (i === a || i.nextSibling))
        for (
          ;
          t.insertBefore(i.cloneNode(!0), r),
            !(i === a || !(i = i.nextSibling));

        );
      else {
        templateContainer.innerHTML = unsafeToTrustedHTML(
          n === "svg"
            ? `<svg>${e}</svg>`
            : n === "mathml"
            ? `<math>${e}</math>`
            : e
        );
        const l = templateContainer.content;
        if (n === "svg" || n === "mathml") {
          const c = l.firstChild;
          for (; c.firstChild; ) l.appendChild(c.firstChild);
          l.removeChild(c);
        }
        t.insertBefore(l, r);
      }
      return [
        o ? o.nextSibling : t.firstChild,
        r ? r.previousSibling : t.lastChild,
      ];
    },
  },
  TRANSITION = "transition",
  ANIMATION = "animation",
  vtcKey = Symbol("_vtc"),
  DOMTransitionPropsValidators = {
    name: String,
    type: String,
    css: { type: Boolean, default: !0 },
    duration: [String, Number, Object],
    enterFromClass: String,
    enterActiveClass: String,
    enterToClass: String,
    appearFromClass: String,
    appearActiveClass: String,
    appearToClass: String,
    leaveFromClass: String,
    leaveActiveClass: String,
    leaveToClass: String,
  },
  TransitionPropsValidators = extend(
    {},
    BaseTransitionPropsValidators,
    DOMTransitionPropsValidators
  ),
  decorate$1 = (e) => (
    (e.displayName = "Transition"), (e.props = TransitionPropsValidators), e
  ),
  Transition = decorate$1((e, { slots: t }) =>
    h$2(BaseTransition, resolveTransitionProps(e), t)
  ),
  callHook = (e, t = []) => {
    isArray$2(e) ? e.forEach((r) => r(...t)) : e && e(...t);
  },
  hasExplicitCallback = (e) =>
    e ? (isArray$2(e) ? e.some((t) => t.length > 1) : e.length > 1) : !1;
function resolveTransitionProps(e) {
  const t = {};
  for (const K in e) K in DOMTransitionPropsValidators || (t[K] = e[K]);
  if (e.css === !1) return t;
  const {
      name: r = "v",
      type: n,
      duration: i,
      enterFromClass: a = `${r}-enter-from`,
      enterActiveClass: o = `${r}-enter-active`,
      enterToClass: l = `${r}-enter-to`,
      appearFromClass: c = a,
      appearActiveClass: u = o,
      appearToClass: d = l,
      leaveFromClass: E = `${r}-leave-from`,
      leaveActiveClass: b = `${r}-leave-active`,
      leaveToClass: P = `${r}-leave-to`,
    } = e,
    R = normalizeDuration(i),
    T = R && R[0],
    M = R && R[1],
    {
      onBeforeEnter: x,
      onEnter: k,
      onEnterCancelled: S,
      onLeave: A,
      onLeaveCancelled: O,
      onBeforeAppear: F = x,
      onAppear: D = k,
      onAppearCancelled: H = S,
    } = t,
    $ = (K, ee, le, re) => {
      (K._enterCancelled = re),
        removeTransitionClass(K, ee ? d : l),
        removeTransitionClass(K, ee ? u : o),
        le && le();
    },
    q = (K, ee) => {
      (K._isLeaving = !1),
        removeTransitionClass(K, E),
        removeTransitionClass(K, P),
        removeTransitionClass(K, b),
        ee && ee();
    },
    J = (K) => (ee, le) => {
      const re = K ? D : k,
        B = () => $(ee, K, le);
      callHook(re, [ee, B]),
        nextFrame(() => {
          removeTransitionClass(ee, K ? c : a),
            addTransitionClass(ee, K ? d : l),
            hasExplicitCallback(re) || whenTransitionEnds(ee, n, T, B);
        });
    };
  return extend(t, {
    onBeforeEnter(K) {
      callHook(x, [K]), addTransitionClass(K, a), addTransitionClass(K, o);
    },
    onBeforeAppear(K) {
      callHook(F, [K]), addTransitionClass(K, c), addTransitionClass(K, u);
    },
    onEnter: J(!1),
    onAppear: J(!0),
    onLeave(K, ee) {
      K._isLeaving = !0;
      const le = () => q(K, ee);
      addTransitionClass(K, E),
        K._enterCancelled
          ? (addTransitionClass(K, b), forceReflow())
          : (forceReflow(), addTransitionClass(K, b)),
        nextFrame(() => {
          K._isLeaving &&
            (removeTransitionClass(K, E),
            addTransitionClass(K, P),
            hasExplicitCallback(A) || whenTransitionEnds(K, n, M, le));
        }),
        callHook(A, [K, le]);
    },
    onEnterCancelled(K) {
      $(K, !1, void 0, !0), callHook(S, [K]);
    },
    onAppearCancelled(K) {
      $(K, !0, void 0, !0), callHook(H, [K]);
    },
    onLeaveCancelled(K) {
      q(K), callHook(O, [K]);
    },
  });
}
function normalizeDuration(e) {
  if (e == null) return null;
  if (isObject$2(e)) return [NumberOf(e.enter), NumberOf(e.leave)];
  {
    const t = NumberOf(e);
    return [t, t];
  }
}
function NumberOf(e) {
  return toNumber(e);
}
function addTransitionClass(e, t) {
  t.split(/\s+/).forEach((r) => r && e.classList.add(r)),
    (e[vtcKey] || (e[vtcKey] = new Set())).add(t);
}
function removeTransitionClass(e, t) {
  t.split(/\s+/).forEach((n) => n && e.classList.remove(n));
  const r = e[vtcKey];
  r && (r.delete(t), r.size || (e[vtcKey] = void 0));
}
function nextFrame(e) {
  requestAnimationFrame(() => {
    requestAnimationFrame(e);
  });
}
let endId = 0;
function whenTransitionEnds(e, t, r, n) {
  const i = (e._endId = ++endId),
    a = () => {
      i === e._endId && n();
    };
  if (r != null) return setTimeout(a, r);
  const { type: o, timeout: l, propCount: c } = getTransitionInfo(e, t);
  if (!o) return n();
  const u = o + "end";
  let d = 0;
  const E = () => {
      e.removeEventListener(u, b), a();
    },
    b = (P) => {
      P.target === e && ++d >= c && E();
    };
  setTimeout(() => {
    d < c && E();
  }, l + 1),
    e.addEventListener(u, b);
}
function getTransitionInfo(e, t) {
  const r = window.getComputedStyle(e),
    n = (R) => (r[R] || "").split(", "),
    i = n(`${TRANSITION}Delay`),
    a = n(`${TRANSITION}Duration`),
    o = getTimeout(i, a),
    l = n(`${ANIMATION}Delay`),
    c = n(`${ANIMATION}Duration`),
    u = getTimeout(l, c);
  let d = null,
    E = 0,
    b = 0;
  t === TRANSITION
    ? o > 0 && ((d = TRANSITION), (E = o), (b = a.length))
    : t === ANIMATION
    ? u > 0 && ((d = ANIMATION), (E = u), (b = c.length))
    : ((E = Math.max(o, u)),
      (d = E > 0 ? (o > u ? TRANSITION : ANIMATION) : null),
      (b = d ? (d === TRANSITION ? a.length : c.length) : 0));
  const P =
    d === TRANSITION &&
    /\b(transform|all)(,|$)/.test(n(`${TRANSITION}Property`).toString());
  return { type: d, timeout: E, propCount: b, hasTransform: P };
}
function getTimeout(e, t) {
  for (; e.length < t.length; ) e = e.concat(e);
  return Math.max(...t.map((r, n) => toMs(r) + toMs(e[n])));
}
function toMs(e) {
  return e === "auto" ? 0 : Number(e.slice(0, -1).replace(",", ".")) * 1e3;
}
function forceReflow() {
  return document.body.offsetHeight;
}
function patchClass(e, t, r) {
  const n = e[vtcKey];
  n && (t = (t ? [t, ...n] : [...n]).join(" ")),
    t == null
      ? e.removeAttribute("class")
      : r
      ? e.setAttribute("class", t)
      : (e.className = t);
}
const vShowOriginalDisplay = Symbol("_vod"),
  vShowHidden = Symbol("_vsh"),
  vShow = {
    beforeMount(e, { value: t }, { transition: r }) {
      (e[vShowOriginalDisplay] =
        e.style.display === "none" ? "" : e.style.display),
        r && t ? r.beforeEnter(e) : setDisplay(e, t);
    },
    mounted(e, { value: t }, { transition: r }) {
      r && t && r.enter(e);
    },
    updated(e, { value: t, oldValue: r }, { transition: n }) {
      !t != !r &&
        (n
          ? t
            ? (n.beforeEnter(e), setDisplay(e, !0), n.enter(e))
            : n.leave(e, () => {
                setDisplay(e, !1);
              })
          : setDisplay(e, t));
    },
    beforeUnmount(e, { value: t }) {
      setDisplay(e, t);
    },
  };
function setDisplay(e, t) {
  (e.style.display = t ? e[vShowOriginalDisplay] : "none"),
    (e[vShowHidden] = !t);
}
function initVShowForSSR() {
  vShow.getSSRProps = ({ value: e }) => {
    if (!e) return { style: { display: "none" } };
  };
}
const CSS_VAR_TEXT = Symbol("");
function useCssVars(e) {
  const t = getCurrentInstance$1();
  if (!t) return;
  const r = (t.ut = (i = e(t.proxy)) => {
      Array.from(
        document.querySelectorAll(`[data-v-owner="${t.uid}"]`)
      ).forEach((a) => setVarsOnNode(a, i));
    }),
    n = () => {
      const i = e(t.proxy);
      t.ce ? setVarsOnNode(t.ce, i) : setVarsOnVNode(t.subTree, i), r(i);
    };
  onBeforeUpdate(() => {
    queuePostFlushCb(n);
  }),
    onMounted(() => {
      watch(n, NOOP, { flush: "post" });
      const i = new MutationObserver(n);
      i.observe(t.subTree.el.parentNode, { childList: !0 }),
        onUnmounted(() => i.disconnect());
    });
}
function setVarsOnVNode(e, t) {
  if (e.shapeFlag & 128) {
    const r = e.suspense;
    (e = r.activeBranch),
      r.pendingBranch &&
        !r.isHydrating &&
        r.effects.push(() => {
          setVarsOnVNode(r.activeBranch, t);
        });
  }
  for (; e.component; ) e = e.component.subTree;
  if (e.shapeFlag & 1 && e.el) setVarsOnNode(e.el, t);
  else if (e.type === Fragment) e.children.forEach((r) => setVarsOnVNode(r, t));
  else if (e.type === Static) {
    let { el: r, anchor: n } = e;
    for (; r && (setVarsOnNode(r, t), r !== n); ) r = r.nextSibling;
  }
}
function setVarsOnNode(e, t) {
  if (e.nodeType === 1) {
    const r = e.style;
    let n = "";
    for (const i in t) r.setProperty(`--${i}`, t[i]), (n += `--${i}: ${t[i]};`);
    r[CSS_VAR_TEXT] = n;
  }
}
const displayRE = /(^|;)\s*display\s*:/;
function patchStyle(e, t, r) {
  const n = e.style,
    i = isString$1(r);
  let a = !1;
  if (r && !i) {
    if (t)
      if (isString$1(t))
        for (const o of t.split(";")) {
          const l = o.slice(0, o.indexOf(":")).trim();
          r[l] == null && setStyle(n, l, "");
        }
      else for (const o in t) r[o] == null && setStyle(n, o, "");
    for (const o in r) o === "display" && (a = !0), setStyle(n, o, r[o]);
  } else if (i) {
    if (t !== r) {
      const o = n[CSS_VAR_TEXT];
      o && (r += ";" + o), (n.cssText = r), (a = displayRE.test(r));
    }
  } else t && e.removeAttribute("style");
  vShowOriginalDisplay in e &&
    ((e[vShowOriginalDisplay] = a ? n.display : ""),
    e[vShowHidden] && (n.display = "none"));
}
const importantRE = /\s*!important$/;
function setStyle(e, t, r) {
  if (isArray$2(r)) r.forEach((n) => setStyle(e, t, n));
  else if ((r == null && (r = ""), t.startsWith("--"))) e.setProperty(t, r);
  else {
    const n = autoPrefix(e, t);
    importantRE.test(r)
      ? e.setProperty(hyphenate(n), r.replace(importantRE, ""), "important")
      : (e[n] = r);
  }
}
const prefixes = ["Webkit", "Moz", "ms"],
  prefixCache = {};
function autoPrefix(e, t) {
  const r = prefixCache[t];
  if (r) return r;
  let n = camelize(t);
  if (n !== "filter" && n in e) return (prefixCache[t] = n);
  n = capitalize$1(n);
  for (let i = 0; i < prefixes.length; i++) {
    const a = prefixes[i] + n;
    if (a in e) return (prefixCache[t] = a);
  }
  return t;
}
const xlinkNS = "http://www.w3.org/1999/xlink";
function patchAttr(e, t, r, n, i, a = isSpecialBooleanAttr(t)) {
  n && t.startsWith("xlink:")
    ? r == null
      ? e.removeAttributeNS(xlinkNS, t.slice(6, t.length))
      : e.setAttributeNS(xlinkNS, t, r)
    : r == null || (a && !includeBooleanAttr(r))
    ? e.removeAttribute(t)
    : e.setAttribute(t, a ? "" : isSymbol$1(r) ? String(r) : r);
}
function patchDOMProp(e, t, r, n, i) {
  if (t === "innerHTML" || t === "textContent") {
    r != null && (e[t] = t === "innerHTML" ? unsafeToTrustedHTML(r) : r);
    return;
  }
  const a = e.tagName;
  if (t === "value" && a !== "PROGRESS" && !a.includes("-")) {
    const l = a === "OPTION" ? e.getAttribute("value") || "" : e.value,
      c = r == null ? (e.type === "checkbox" ? "on" : "") : String(r);
    (l !== c || !("_value" in e)) && (e.value = c),
      r == null && e.removeAttribute(t),
      (e._value = r);
    return;
  }
  let o = !1;
  if (r === "" || r == null) {
    const l = typeof e[t];
    l === "boolean"
      ? (r = includeBooleanAttr(r))
      : r == null && l === "string"
      ? ((r = ""), (o = !0))
      : l === "number" && ((r = 0), (o = !0));
  }
  try {
    e[t] = r;
  } catch {}
  o && e.removeAttribute(i || t);
}
function addEventListener(e, t, r, n) {
  e.addEventListener(t, r, n);
}
function removeEventListener(e, t, r, n) {
  e.removeEventListener(t, r, n);
}
const veiKey = Symbol("_vei");
function patchEvent(e, t, r, n, i = null) {
  const a = e[veiKey] || (e[veiKey] = {}),
    o = a[t];
  if (n && o) o.value = n;
  else {
    const [l, c] = parseName(t);
    if (n) {
      const u = (a[t] = createInvoker(n, i));
      addEventListener(e, l, u, c);
    } else o && (removeEventListener(e, l, o, c), (a[t] = void 0));
  }
}
const optionsModifierRE = /(?:Once|Passive|Capture)$/;
function parseName(e) {
  let t;
  if (optionsModifierRE.test(e)) {
    t = {};
    let n;
    for (; (n = e.match(optionsModifierRE)); )
      (e = e.slice(0, e.length - n[0].length)), (t[n[0].toLowerCase()] = !0);
  }
  return [e[2] === ":" ? e.slice(3) : hyphenate(e.slice(2)), t];
}
let cachedNow = 0;
const p = Promise.resolve(),
  getNow = () =>
    cachedNow || (p.then(() => (cachedNow = 0)), (cachedNow = Date.now()));
function createInvoker(e, t) {
  const r = (n) => {
    if (!n._vts) n._vts = Date.now();
    else if (n._vts <= r.attached) return;
    callWithAsyncErrorHandling(
      patchStopImmediatePropagation(n, r.value),
      t,
      5,
      [n]
    );
  };
  return (r.value = e), (r.attached = getNow()), r;
}
function patchStopImmediatePropagation(e, t) {
  if (isArray$2(t)) {
    const r = e.stopImmediatePropagation;
    return (
      (e.stopImmediatePropagation = () => {
        r.call(e), (e._stopped = !0);
      }),
      t.map((n) => (i) => !i._stopped && n && n(i))
    );
  } else return t;
}
const isNativeOn = (e) =>
    e.charCodeAt(0) === 111 &&
    e.charCodeAt(1) === 110 &&
    e.charCodeAt(2) > 96 &&
    e.charCodeAt(2) < 123,
  patchProp = (e, t, r, n, i, a) => {
    const o = i === "svg";
    t === "class"
      ? patchClass(e, n, o)
      : t === "style"
      ? patchStyle(e, r, n)
      : isOn$1(t)
      ? isModelListener(t) || patchEvent(e, t, r, n, a)
      : (
          t[0] === "."
            ? ((t = t.slice(1)), !0)
            : t[0] === "^"
            ? ((t = t.slice(1)), !1)
            : shouldSetAsProp(e, t, n, o)
        )
      ? (patchDOMProp(e, t, n),
        !e.tagName.includes("-") &&
          (t === "value" || t === "checked" || t === "selected") &&
          patchAttr(e, t, n, o, a, t !== "value"))
      : e._isVueCE && (/[A-Z]/.test(t) || !isString$1(n))
      ? patchDOMProp(e, camelize(t), n, a, t)
      : (t === "true-value"
          ? (e._trueValue = n)
          : t === "false-value" && (e._falseValue = n),
        patchAttr(e, t, n, o));
  };
function shouldSetAsProp(e, t, r, n) {
  if (n)
    return !!(
      t === "innerHTML" ||
      t === "textContent" ||
      (t in e && isNativeOn(t) && isFunction$1(r))
    );
  if (
    t === "spellcheck" ||
    t === "draggable" ||
    t === "translate" ||
    t === "form" ||
    (t === "list" && e.tagName === "INPUT") ||
    (t === "type" && e.tagName === "TEXTAREA")
  )
    return !1;
  if (t === "width" || t === "height") {
    const i = e.tagName;
    if (i === "IMG" || i === "VIDEO" || i === "CANVAS" || i === "SOURCE")
      return !1;
  }
  return isNativeOn(t) && isString$1(r) ? !1 : t in e;
}
const REMOVAL = {};
/*! #__NO_SIDE_EFFECTS__ */ function defineCustomElement(e, t, r) {
  const n = defineComponent$1(e, t);
  isPlainObject$4(n) && extend(n, t);
  class i extends VueElement {
    constructor(o) {
      super(n, o, r);
    }
  }
  return (i.def = n), i;
}
/*! #__NO_SIDE_EFFECTS__ */ const defineSSRCustomElement = (e, t) =>
    defineCustomElement(e, t, createSSRApp),
  BaseClass = typeof HTMLElement < "u" ? HTMLElement : class {};
class VueElement extends BaseClass {
  constructor(t, r = {}, n = createApp) {
    super(),
      (this._def = t),
      (this._props = r),
      (this._createApp = n),
      (this._isVueCE = !0),
      (this._instance = null),
      (this._app = null),
      (this._nonce = this._def.nonce),
      (this._connected = !1),
      (this._resolved = !1),
      (this._numberProps = null),
      (this._styleChildren = new WeakSet()),
      (this._ob = null),
      this.shadowRoot && n !== createApp
        ? (this._root = this.shadowRoot)
        : t.shadowRoot !== !1
        ? (this.attachShadow({ mode: "open" }), (this._root = this.shadowRoot))
        : (this._root = this),
      this._def.__asyncLoader || this._resolveProps(this._def);
  }
  connectedCallback() {
    if (!this.isConnected) return;
    this.shadowRoot || this._parseSlots(), (this._connected = !0);
    let t = this;
    for (; (t = t && (t.parentNode || t.host)); )
      if (t instanceof VueElement) {
        this._parent = t;
        break;
      }
    this._instance ||
      (this._resolved
        ? (this._setParent(), this._update())
        : t && t._pendingResolve
        ? (this._pendingResolve = t._pendingResolve.then(() => {
            (this._pendingResolve = void 0), this._resolveDef();
          }))
        : this._resolveDef());
  }
  _setParent(t = this._parent) {
    t &&
      ((this._instance.parent = t._instance),
      (this._instance.provides = t._instance.provides));
  }
  disconnectedCallback() {
    (this._connected = !1),
      nextTick(() => {
        this._connected ||
          (this._ob && (this._ob.disconnect(), (this._ob = null)),
          this._app && this._app.unmount(),
          this._instance && (this._instance.ce = void 0),
          (this._app = this._instance = null));
      });
  }
  _resolveDef() {
    if (this._pendingResolve) return;
    for (let n = 0; n < this.attributes.length; n++)
      this._setAttr(this.attributes[n].name);
    (this._ob = new MutationObserver((n) => {
      for (const i of n) this._setAttr(i.attributeName);
    })),
      this._ob.observe(this, { attributes: !0 });
    const t = (n, i = !1) => {
        (this._resolved = !0), (this._pendingResolve = void 0);
        const { props: a, styles: o } = n;
        let l;
        if (a && !isArray$2(a))
          for (const c in a) {
            const u = a[c];
            (u === Number || (u && u.type === Number)) &&
              (c in this._props && (this._props[c] = toNumber(this._props[c])),
              ((l || (l = Object.create(null)))[camelize(c)] = !0));
          }
        (this._numberProps = l),
          i && this._resolveProps(n),
          this.shadowRoot && this._applyStyles(o),
          this._mount(n);
      },
      r = this._def.__asyncLoader;
    r
      ? (this._pendingResolve = r().then((n) => t((this._def = n), !0)))
      : t(this._def);
  }
  _mount(t) {
    (this._app = this._createApp(t)),
      t.configureApp && t.configureApp(this._app),
      (this._app._ceVNode = this._createVNode()),
      this._app.mount(this._root);
    const r = this._instance && this._instance.exposed;
    if (r)
      for (const n in r)
        hasOwn$1(this, n) ||
          Object.defineProperty(this, n, { get: () => unref(r[n]) });
  }
  _resolveProps(t) {
    const { props: r } = t,
      n = isArray$2(r) ? r : Object.keys(r || {});
    for (const i of Object.keys(this))
      i[0] !== "_" && n.includes(i) && this._setProp(i, this[i]);
    for (const i of n.map(camelize))
      Object.defineProperty(this, i, {
        get() {
          return this._getProp(i);
        },
        set(a) {
          this._setProp(i, a, !0, !0);
        },
      });
  }
  _setAttr(t) {
    if (t.startsWith("data-v-")) return;
    const r = this.hasAttribute(t);
    let n = r ? this.getAttribute(t) : REMOVAL;
    const i = camelize(t);
    r && this._numberProps && this._numberProps[i] && (n = toNumber(n)),
      this._setProp(i, n, !1, !0);
  }
  _getProp(t) {
    return this._props[t];
  }
  _setProp(t, r, n = !0, i = !1) {
    if (
      r !== this._props[t] &&
      (r === REMOVAL
        ? delete this._props[t]
        : ((this._props[t] = r),
          t === "key" && this._app && (this._app._ceVNode.key = r)),
      i && this._instance && this._update(),
      n)
    ) {
      const a = this._ob;
      a && a.disconnect(),
        r === !0
          ? this.setAttribute(hyphenate(t), "")
          : typeof r == "string" || typeof r == "number"
          ? this.setAttribute(hyphenate(t), r + "")
          : r || this.removeAttribute(hyphenate(t)),
        a && a.observe(this, { attributes: !0 });
    }
  }
  _update() {
    render(this._createVNode(), this._root);
  }
  _createVNode() {
    const t = {};
    this.shadowRoot ||
      (t.onVnodeMounted = t.onVnodeUpdated = this._renderSlots.bind(this));
    const r = createVNode(this._def, extend(t, this._props));
    return (
      this._instance ||
        (r.ce = (n) => {
          (this._instance = n), (n.ce = this), (n.isCE = !0);
          const i = (a, o) => {
            this.dispatchEvent(
              new CustomEvent(
                a,
                isPlainObject$4(o[0])
                  ? extend({ detail: o }, o[0])
                  : { detail: o }
              )
            );
          };
          (n.emit = (a, ...o) => {
            i(a, o), hyphenate(a) !== a && i(hyphenate(a), o);
          }),
            this._setParent();
        }),
      r
    );
  }
  _applyStyles(t, r) {
    if (!t) return;
    if (r) {
      if (r === this._def || this._styleChildren.has(r)) return;
      this._styleChildren.add(r);
    }
    const n = this._nonce;
    for (let i = t.length - 1; i >= 0; i--) {
      const a = document.createElement("style");
      n && a.setAttribute("nonce", n),
        (a.textContent = t[i]),
        this.shadowRoot.prepend(a);
    }
  }
  _parseSlots() {
    const t = (this._slots = {});
    let r;
    for (; (r = this.firstChild); ) {
      const n = (r.nodeType === 1 && r.getAttribute("slot")) || "default";
      (t[n] || (t[n] = [])).push(r), this.removeChild(r);
    }
  }
  _renderSlots() {
    const t = (this._teleportTarget || this).querySelectorAll("slot"),
      r = this._instance.type.__scopeId;
    for (let n = 0; n < t.length; n++) {
      const i = t[n],
        a = i.getAttribute("name") || "default",
        o = this._slots[a],
        l = i.parentNode;
      if (o)
        for (const c of o) {
          if (r && c.nodeType === 1) {
            const u = r + "-s",
              d = document.createTreeWalker(c, 1);
            c.setAttribute(u, "");
            let E;
            for (; (E = d.nextNode()); ) E.setAttribute(u, "");
          }
          l.insertBefore(c, i);
        }
      else for (; i.firstChild; ) l.insertBefore(i.firstChild, i);
      l.removeChild(i);
    }
  }
  _injectChildStyle(t) {
    this._applyStyles(t.styles, t);
  }
  _removeChildStyle(t) {}
}
function useHost(e) {
  const t = getCurrentInstance$1(),
    r = t && t.ce;
  return r || null;
}
function useShadowRoot() {
  const e = useHost();
  return e && e.shadowRoot;
}
function useCssModule(e = "$style") {
  {
    const t = getCurrentInstance$1();
    if (!t) return EMPTY_OBJ;
    const r = t.type.__cssModules;
    if (!r) return EMPTY_OBJ;
    const n = r[e];
    return n || EMPTY_OBJ;
  }
}
const positionMap = new WeakMap(),
  newPositionMap = new WeakMap(),
  moveCbKey = Symbol("_moveCb"),
  enterCbKey = Symbol("_enterCb"),
  decorate = (e) => (delete e.props.mode, e),
  TransitionGroupImpl = decorate({
    name: "TransitionGroup",
    props: extend({}, TransitionPropsValidators, {
      tag: String,
      moveClass: String,
    }),
    setup(e, { slots: t }) {
      const r = getCurrentInstance$1(),
        n = useTransitionState();
      let i, a;
      return (
        onUpdated(() => {
          if (!i.length) return;
          const o = e.moveClass || `${e.name || "v"}-move`;
          if (!hasCSSTransform(i[0].el, r.vnode.el, o)) return;
          i.forEach(callPendingCbs), i.forEach(recordPosition);
          const l = i.filter(applyTranslation);
          forceReflow(),
            l.forEach((c) => {
              const u = c.el,
                d = u.style;
              addTransitionClass(u, o),
                (d.transform = d.webkitTransform = d.transitionDuration = "");
              const E = (u[moveCbKey] = (b) => {
                (b && b.target !== u) ||
                  ((!b || /transform$/.test(b.propertyName)) &&
                    (u.removeEventListener("transitionend", E),
                    (u[moveCbKey] = null),
                    removeTransitionClass(u, o)));
              });
              u.addEventListener("transitionend", E);
            });
        }),
        () => {
          const o = toRaw(e),
            l = resolveTransitionProps(o);
          let c = o.tag || Fragment;
          if (((i = []), a))
            for (let u = 0; u < a.length; u++) {
              const d = a[u];
              d.el &&
                d.el instanceof Element &&
                (i.push(d),
                setTransitionHooks(d, resolveTransitionHooks(d, l, n, r)),
                positionMap.set(d, d.el.getBoundingClientRect()));
            }
          a = t.default ? getTransitionRawChildren(t.default()) : [];
          for (let u = 0; u < a.length; u++) {
            const d = a[u];
            d.key != null &&
              setTransitionHooks(d, resolveTransitionHooks(d, l, n, r));
          }
          return createVNode(c, null, a);
        }
      );
    },
  }),
  TransitionGroup = TransitionGroupImpl;
function callPendingCbs(e) {
  const t = e.el;
  t[moveCbKey] && t[moveCbKey](), t[enterCbKey] && t[enterCbKey]();
}
function recordPosition(e) {
  newPositionMap.set(e, e.el.getBoundingClientRect());
}
function applyTranslation(e) {
  const t = positionMap.get(e),
    r = newPositionMap.get(e),
    n = t.left - r.left,
    i = t.top - r.top;
  if (n || i) {
    const a = e.el.style;
    return (
      (a.transform = a.webkitTransform = `translate(${n}px,${i}px)`),
      (a.transitionDuration = "0s"),
      e
    );
  }
}
function hasCSSTransform(e, t, r) {
  const n = e.cloneNode(),
    i = e[vtcKey];
  i &&
    i.forEach((l) => {
      l.split(/\s+/).forEach((c) => c && n.classList.remove(c));
    }),
    r.split(/\s+/).forEach((l) => l && n.classList.add(l)),
    (n.style.display = "none");
  const a = t.nodeType === 1 ? t : t.parentNode;
  a.appendChild(n);
  const { hasTransform: o } = getTransitionInfo(n);
  return a.removeChild(n), o;
}
const getModelAssigner = (e) => {
  const t = e.props["onUpdate:modelValue"] || !1;
  return isArray$2(t) ? (r) => invokeArrayFns(t, r) : t;
};
function onCompositionStart(e) {
  e.target.composing = !0;
}
function onCompositionEnd(e) {
  const t = e.target;
  t.composing && ((t.composing = !1), t.dispatchEvent(new Event("input")));
}
const assignKey = Symbol("_assign"),
  vModelText = {
    created(e, { modifiers: { lazy: t, trim: r, number: n } }, i) {
      e[assignKey] = getModelAssigner(i);
      const a = n || (i.props && i.props.type === "number");
      addEventListener(e, t ? "change" : "input", (o) => {
        if (o.target.composing) return;
        let l = e.value;
        r && (l = l.trim()), a && (l = looseToNumber(l)), e[assignKey](l);
      }),
        r &&
          addEventListener(e, "change", () => {
            e.value = e.value.trim();
          }),
        t ||
          (addEventListener(e, "compositionstart", onCompositionStart),
          addEventListener(e, "compositionend", onCompositionEnd),
          addEventListener(e, "change", onCompositionEnd));
    },
    mounted(e, { value: t }) {
      e.value = t ?? "";
    },
    beforeUpdate(
      e,
      { value: t, oldValue: r, modifiers: { lazy: n, trim: i, number: a } },
      o
    ) {
      if (((e[assignKey] = getModelAssigner(o)), e.composing)) return;
      const l =
          (a || e.type === "number") && !/^0\d/.test(e.value)
            ? looseToNumber(e.value)
            : e.value,
        c = t ?? "";
      l !== c &&
        ((document.activeElement === e &&
          e.type !== "range" &&
          ((n && t === r) || (i && e.value.trim() === c))) ||
          (e.value = c));
    },
  },
  vModelCheckbox = {
    deep: !0,
    created(e, t, r) {
      (e[assignKey] = getModelAssigner(r)),
        addEventListener(e, "change", () => {
          const n = e._modelValue,
            i = getValue(e),
            a = e.checked,
            o = e[assignKey];
          if (isArray$2(n)) {
            const l = looseIndexOf(n, i),
              c = l !== -1;
            if (a && !c) o(n.concat(i));
            else if (!a && c) {
              const u = [...n];
              u.splice(l, 1), o(u);
            }
          } else if (isSet(n)) {
            const l = new Set(n);
            a ? l.add(i) : l.delete(i), o(l);
          } else o(getCheckboxValue(e, a));
        });
    },
    mounted: setChecked,
    beforeUpdate(e, t, r) {
      (e[assignKey] = getModelAssigner(r)), setChecked(e, t, r);
    },
  };
function setChecked(e, { value: t, oldValue: r }, n) {
  e._modelValue = t;
  let i;
  if (isArray$2(t)) i = looseIndexOf(t, n.props.value) > -1;
  else if (isSet(t)) i = t.has(n.props.value);
  else {
    if (t === r) return;
    i = looseEqual(t, getCheckboxValue(e, !0));
  }
  e.checked !== i && (e.checked = i);
}
const vModelRadio = {
    created(e, { value: t }, r) {
      (e.checked = looseEqual(t, r.props.value)),
        (e[assignKey] = getModelAssigner(r)),
        addEventListener(e, "change", () => {
          e[assignKey](getValue(e));
        });
    },
    beforeUpdate(e, { value: t, oldValue: r }, n) {
      (e[assignKey] = getModelAssigner(n)),
        t !== r && (e.checked = looseEqual(t, n.props.value));
    },
  },
  vModelSelect = {
    deep: !0,
    created(e, { value: t, modifiers: { number: r } }, n) {
      const i = isSet(t);
      addEventListener(e, "change", () => {
        const a = Array.prototype.filter
          .call(e.options, (o) => o.selected)
          .map((o) => (r ? looseToNumber(getValue(o)) : getValue(o)));
        e[assignKey](e.multiple ? (i ? new Set(a) : a) : a[0]),
          (e._assigning = !0),
          nextTick(() => {
            e._assigning = !1;
          });
      }),
        (e[assignKey] = getModelAssigner(n));
    },
    mounted(e, { value: t }) {
      setSelected(e, t);
    },
    beforeUpdate(e, t, r) {
      e[assignKey] = getModelAssigner(r);
    },
    updated(e, { value: t }) {
      e._assigning || setSelected(e, t);
    },
  };
function setSelected(e, t) {
  const r = e.multiple,
    n = isArray$2(t);
  if (!(r && !n && !isSet(t))) {
    for (let i = 0, a = e.options.length; i < a; i++) {
      const o = e.options[i],
        l = getValue(o);
      if (r)
        if (n) {
          const c = typeof l;
          c === "string" || c === "number"
            ? (o.selected = t.some((u) => String(u) === String(l)))
            : (o.selected = looseIndexOf(t, l) > -1);
        } else o.selected = t.has(l);
      else if (looseEqual(getValue(o), t)) {
        e.selectedIndex !== i && (e.selectedIndex = i);
        return;
      }
    }
    !r && e.selectedIndex !== -1 && (e.selectedIndex = -1);
  }
}
function getValue(e) {
  return "_value" in e ? e._value : e.value;
}
function getCheckboxValue(e, t) {
  const r = t ? "_trueValue" : "_falseValue";
  return r in e ? e[r] : t;
}
const vModelDynamic = {
  created(e, t, r) {
    callModelHook(e, t, r, null, "created");
  },
  mounted(e, t, r) {
    callModelHook(e, t, r, null, "mounted");
  },
  beforeUpdate(e, t, r, n) {
    callModelHook(e, t, r, n, "beforeUpdate");
  },
  updated(e, t, r, n) {
    callModelHook(e, t, r, n, "updated");
  },
};
function resolveDynamicModel(e, t) {
  switch (e) {
    case "SELECT":
      return vModelSelect;
    case "TEXTAREA":
      return vModelText;
    default:
      switch (t) {
        case "checkbox":
          return vModelCheckbox;
        case "radio":
          return vModelRadio;
        default:
          return vModelText;
      }
  }
}
function callModelHook(e, t, r, n, i) {
  const o = resolveDynamicModel(e.tagName, r.props && r.props.type)[i];
  o && o(e, t, r, n);
}
function initVModelForSSR() {
  (vModelText.getSSRProps = ({ value: e }) => ({ value: e })),
    (vModelRadio.getSSRProps = ({ value: e }, t) => {
      if (t.props && looseEqual(t.props.value, e)) return { checked: !0 };
    }),
    (vModelCheckbox.getSSRProps = ({ value: e }, t) => {
      if (isArray$2(e)) {
        if (t.props && looseIndexOf(e, t.props.value) > -1)
          return { checked: !0 };
      } else if (isSet(e)) {
        if (t.props && e.has(t.props.value)) return { checked: !0 };
      } else if (e) return { checked: !0 };
    }),
    (vModelDynamic.getSSRProps = (e, t) => {
      if (typeof t.type != "string") return;
      const r = resolveDynamicModel(
        t.type.toUpperCase(),
        t.props && t.props.type
      );
      if (r.getSSRProps) return r.getSSRProps(e, t);
    });
}
const systemModifiers = ["ctrl", "shift", "alt", "meta"],
  modifierGuards = {
    stop: (e) => e.stopPropagation(),
    prevent: (e) => e.preventDefault(),
    self: (e) => e.target !== e.currentTarget,
    ctrl: (e) => !e.ctrlKey,
    shift: (e) => !e.shiftKey,
    alt: (e) => !e.altKey,
    meta: (e) => !e.metaKey,
    left: (e) => "button" in e && e.button !== 0,
    middle: (e) => "button" in e && e.button !== 1,
    right: (e) => "button" in e && e.button !== 2,
    exact: (e, t) =>
      systemModifiers.some((r) => e[`${r}Key`] && !t.includes(r)),
  },
  withModifiers = (e, t) => {
    const r = e._withMods || (e._withMods = {}),
      n = t.join(".");
    return (
      r[n] ||
      (r[n] = (i, ...a) => {
        for (let o = 0; o < t.length; o++) {
          const l = modifierGuards[t[o]];
          if (l && l(i, t)) return;
        }
        return e(i, ...a);
      })
    );
  },
  keyNames = {
    esc: "escape",
    space: " ",
    up: "arrow-up",
    left: "arrow-left",
    right: "arrow-right",
    down: "arrow-down",
    delete: "backspace",
  },
  withKeys = (e, t) => {
    const r = e._withKeys || (e._withKeys = {}),
      n = t.join(".");
    return (
      r[n] ||
      (r[n] = (i) => {
        if (!("key" in i)) return;
        const a = hyphenate(i.key);
        if (t.some((o) => o === a || keyNames[o] === a)) return e(i);
      })
    );
  },
  rendererOptions = extend({ patchProp }, nodeOps);
let renderer,
  enabledHydration = !1;
function ensureRenderer() {
  return renderer || (renderer = createRenderer(rendererOptions));
}
function ensureHydrationRenderer() {
  return (
    (renderer = enabledHydration
      ? renderer
      : createHydrationRenderer(rendererOptions)),
    (enabledHydration = !0),
    renderer
  );
}
const render = (...e) => {
    ensureRenderer().render(...e);
  },
  hydrate = (...e) => {
    ensureHydrationRenderer().hydrate(...e);
  },
  createApp = (...e) => {
    const t = ensureRenderer().createApp(...e),
      { mount: r } = t;
    return (
      (t.mount = (n) => {
        const i = normalizeContainer(n);
        if (!i) return;
        const a = t._component;
        !isFunction$1(a) &&
          !a.render &&
          !a.template &&
          (a.template = i.innerHTML),
          i.nodeType === 1 && (i.textContent = "");
        const o = r(i, !1, resolveRootNamespace(i));
        return (
          i instanceof Element &&
            (i.removeAttribute("v-cloak"), i.setAttribute("data-v-app", "")),
          o
        );
      }),
      t
    );
  },
  createSSRApp = (...e) => {
    const t = ensureHydrationRenderer().createApp(...e),
      { mount: r } = t;
    return (
      (t.mount = (n) => {
        const i = normalizeContainer(n);
        if (i) return r(i, !0, resolveRootNamespace(i));
      }),
      t
    );
  };
function resolveRootNamespace(e) {
  if (e instanceof SVGElement) return "svg";
  if (typeof MathMLElement == "function" && e instanceof MathMLElement)
    return "mathml";
}
function normalizeContainer(e) {
  return isString$1(e) ? document.querySelector(e) : e;
}
let ssrDirectiveInitialized = !1;
const initDirectivesForSSR = () => {
  ssrDirectiveInitialized ||
    ((ssrDirectiveInitialized = !0), initVModelForSSR(), initVShowForSSR());
};
/**
 * vue v3.5.13
 * (c) 2018-present Yuxi (Evan) You and Vue contributors
 * @license MIT
 **/ const compile$1 = () => {},
  vue_runtime_esmBundler = Object.freeze(
    Object.defineProperty(
      {
        __proto__: null,
        BaseTransition,
        BaseTransitionPropsValidators,
        Comment,
        DeprecationTypes,
        EffectScope,
        ErrorCodes,
        ErrorTypeStrings,
        Fragment,
        KeepAlive,
        ReactiveEffect,
        Static,
        Suspense,
        Teleport,
        Text,
        TrackOpTypes,
        Transition,
        TransitionGroup,
        TriggerOpTypes,
        VueElement,
        assertNumber,
        callWithAsyncErrorHandling,
        callWithErrorHandling,
        camelize,
        capitalize: capitalize$1,
        cloneVNode,
        compatUtils,
        compile: compile$1,
        computed,
        createApp,
        createBlock,
        createCommentVNode,
        createElementBlock,
        createElementVNode: createBaseVNode,
        createHydrationRenderer,
        createPropsRestProxy,
        createRenderer,
        createSSRApp,
        createSlots,
        createStaticVNode,
        createTextVNode,
        createVNode,
        customRef,
        defineAsyncComponent,
        defineComponent: defineComponent$1,
        defineCustomElement,
        defineEmits,
        defineExpose,
        defineModel,
        defineOptions,
        defineProps,
        defineSSRCustomElement,
        defineSlots,
        devtools: devtools$2,
        effect,
        effectScope,
        getCurrentInstance: getCurrentInstance$1,
        getCurrentScope,
        getCurrentWatcher,
        getTransitionRawChildren,
        guardReactiveProps,
        h: h$2,
        handleError,
        hasInjectionContext,
        hydrate,
        hydrateOnIdle,
        hydrateOnInteraction,
        hydrateOnMediaQuery,
        hydrateOnVisible,
        initCustomFormatter,
        initDirectivesForSSR,
        inject: inject$1,
        isMemoSame,
        isProxy,
        isReactive,
        isReadonly,
        isRef,
        isRuntimeOnly,
        isShallow,
        isVNode: isVNode$1,
        markRaw,
        mergeDefaults,
        mergeModels,
        mergeProps,
        nextTick,
        normalizeClass,
        normalizeProps,
        normalizeStyle,
        onActivated,
        onBeforeMount,
        onBeforeUnmount,
        onBeforeUpdate,
        onDeactivated,
        onErrorCaptured,
        onMounted,
        onRenderTracked,
        onRenderTriggered,
        onScopeDispose,
        onServerPrefetch,
        onUnmounted,
        onUpdated,
        onWatcherCleanup,
        openBlock,
        popScopeId,
        provide,
        proxyRefs,
        pushScopeId,
        queuePostFlushCb,
        reactive,
        readonly,
        ref,
        registerRuntimeCompiler,
        render,
        renderList,
        renderSlot,
        resolveComponent,
        resolveDirective,
        resolveDynamicComponent,
        resolveFilter,
        resolveTransitionHooks,
        setBlockTracking,
        setDevtoolsHook,
        setTransitionHooks,
        shallowReactive,
        shallowReadonly,
        shallowRef,
        ssrContextKey,
        ssrUtils,
        stop,
        toDisplayString: toDisplayString$1,
        toHandlerKey,
        toHandlers,
        toRaw,
        toRef,
        toRefs,
        toValue,
        transformVNodeArgs,
        triggerRef,
        unref,
        useAttrs,
        useCssModule,
        useCssVars,
        useHost,
        useId,
        useModel,
        useSSRContext,
        useShadowRoot,
        useSlots,
        useTemplateRef,
        useTransitionState,
        vModelCheckbox,
        vModelDynamic,
        vModelRadio,
        vModelSelect,
        vModelText,
        vShow,
        version: version$1,
        warn: warn$2,
        watch,
        watchEffect,
        watchPostEffect,
        watchSyncEffect,
        withAsyncContext,
        withCtx,
        withDefaults,
        withDirectives,
        withKeys,
        withMemo,
        withModifiers,
        withScopeId,
      },
      Symbol.toStringTag,
      { value: "Module" }
    )
  ),
  suspectProtoRx =
    /"(?:_|\\u0{2}5[Ff]){2}(?:p|\\u0{2}70)(?:r|\\u0{2}72)(?:o|\\u0{2}6[Ff])(?:t|\\u0{2}74)(?:o|\\u0{2}6[Ff])(?:_|\\u0{2}5[Ff]){2}"\s*:/,
  suspectConstructorRx =
    /"(?:c|\\u0063)(?:o|\\u006[Ff])(?:n|\\u006[Ee])(?:s|\\u0073)(?:t|\\u0074)(?:r|\\u0072)(?:u|\\u0075)(?:c|\\u0063)(?:t|\\u0074)(?:o|\\u006[Ff])(?:r|\\u0072)"\s*:/,
  JsonSigRx = /^\s*["[{]|^\s*-?\d{1,16}(\.\d{1,17})?([Ee][+-]?\d+)?\s*$/;
function jsonParseTransform(e, t) {
  if (
    e === "__proto__" ||
    (e === "constructor" && t && typeof t == "object" && "prototype" in t)
  ) {
    warnKeyDropped(e);
    return;
  }
  return t;
}
function warnKeyDropped(e) {
  console.warn(`[destr] Dropping "${e}" key to prevent prototype pollution.`);
}
function destr(e, t = {}) {
  if (typeof e != "string") return e;
  const r = e.trim();
  if (e[0] === '"' && e.endsWith('"') && !e.includes("\\"))
    return r.slice(1, -1);
  if (r.length <= 9) {
    const n = r.toLowerCase();
    if (n === "true") return !0;
    if (n === "false") return !1;
    if (n === "undefined") return;
    if (n === "null") return null;
    if (n === "nan") return Number.NaN;
    if (n === "infinity") return Number.POSITIVE_INFINITY;
    if (n === "-infinity") return Number.NEGATIVE_INFINITY;
  }
  if (!JsonSigRx.test(e)) {
    if (t.strict) throw new SyntaxError("[destr] Invalid JSON");
    return e;
  }
  try {
    if (suspectProtoRx.test(e) || suspectConstructorRx.test(e)) {
      if (t.strict) throw new Error("[destr] Possible prototype pollution");
      return JSON.parse(e, jsonParseTransform);
    }
    return JSON.parse(e);
  } catch (n) {
    if (t.strict) throw n;
    return e;
  }
}
const HASH_RE$1 = /#/g,
  AMPERSAND_RE$1 = /&/g,
  SLASH_RE$1 = /\//g,
  EQUAL_RE$1 = /=/g,
  PLUS_RE$1 = /\+/g,
  ENC_CARET_RE$1 = /%5e/gi,
  ENC_BACKTICK_RE$1 = /%60/gi,
  ENC_PIPE_RE$1 = /%7c/gi,
  ENC_SPACE_RE$1 = /%20/gi;
function encode(e) {
  return encodeURI("" + e).replace(ENC_PIPE_RE$1, "|");
}
function encodeQueryValue$1(e) {
  return encode(typeof e == "string" ? e : JSON.stringify(e))
    .replace(PLUS_RE$1, "%2B")
    .replace(ENC_SPACE_RE$1, "+")
    .replace(HASH_RE$1, "%23")
    .replace(AMPERSAND_RE$1, "%26")
    .replace(ENC_BACKTICK_RE$1, "`")
    .replace(ENC_CARET_RE$1, "^")
    .replace(SLASH_RE$1, "%2F");
}
function encodeQueryKey$1(e) {
  return encodeQueryValue$1(e).replace(EQUAL_RE$1, "%3D");
}
function decode$2(e = "") {
  try {
    return decodeURIComponent("" + e);
  } catch {
    return "" + e;
  }
}
function decodeQueryKey(e) {
  return decode$2(e.replace(PLUS_RE$1, " "));
}
function decodeQueryValue(e) {
  return decode$2(e.replace(PLUS_RE$1, " "));
}
function parseQuery$1(e = "") {
  const t = {};
  e[0] === "?" && (e = e.slice(1));
  for (const r of e.split("&")) {
    const n = r.match(/([^=]+)=?(.*)/) || [];
    if (n.length < 2) continue;
    const i = decodeQueryKey(n[1]);
    if (i === "__proto__" || i === "constructor") continue;
    const a = decodeQueryValue(n[2] || "");
    t[i] === void 0
      ? (t[i] = a)
      : Array.isArray(t[i])
      ? t[i].push(a)
      : (t[i] = [t[i], a]);
  }
  return t;
}
function encodeQueryItem(e, t) {
  return (
    (typeof t == "number" || typeof t == "boolean") && (t = String(t)),
    t
      ? Array.isArray(t)
        ? t
            .map((r) => `${encodeQueryKey$1(e)}=${encodeQueryValue$1(r)}`)
            .join("&")
        : `${encodeQueryKey$1(e)}=${encodeQueryValue$1(t)}`
      : encodeQueryKey$1(e)
  );
}
function stringifyQuery$1(e) {
  return Object.keys(e)
    .filter((t) => e[t] !== void 0)
    .map((t) => encodeQueryItem(t, e[t]))
    .filter(Boolean)
    .join("&");
}
const PROTOCOL_STRICT_REGEX = /^[\s\w\0+.-]{2,}:([/\\]{1,2})/,
  PROTOCOL_REGEX = /^[\s\w\0+.-]{2,}:([/\\]{2})?/,
  PROTOCOL_RELATIVE_REGEX = /^([/\\]\s*){2,}[^/\\]/,
  PROTOCOL_SCRIPT_RE = /^[\s\0]*(blob|data|javascript|vbscript):$/i,
  TRAILING_SLASH_RE$1 = /\/$|\/\?|\/#/,
  JOIN_LEADING_SLASH_RE = /^\.?\//;
function hasProtocol(e, t = {}) {
  return (
    typeof t == "boolean" && (t = { acceptRelative: t }),
    t.strict
      ? PROTOCOL_STRICT_REGEX.test(e)
      : PROTOCOL_REGEX.test(e) ||
        (t.acceptRelative ? PROTOCOL_RELATIVE_REGEX.test(e) : !1)
  );
}
function isScriptProtocol(e) {
  return !!e && PROTOCOL_SCRIPT_RE.test(e);
}
function hasTrailingSlash(e = "", t) {
  return t ? TRAILING_SLASH_RE$1.test(e) : e.endsWith("/");
}
function withoutTrailingSlash(e = "", t) {
  if (!t) return (hasTrailingSlash(e) ? e.slice(0, -1) : e) || "/";
  if (!hasTrailingSlash(e, !0)) return e || "/";
  let r = e,
    n = "";
  const i = e.indexOf("#");
  i >= 0 && ((r = e.slice(0, i)), (n = e.slice(i)));
  const [a, ...o] = r.split("?");
  return (
    ((a.endsWith("/") ? a.slice(0, -1) : a) || "/") +
    (o.length > 0 ? `?${o.join("?")}` : "") +
    n
  );
}
function withTrailingSlash(e = "", t) {
  if (!t) return e.endsWith("/") ? e : e + "/";
  if (hasTrailingSlash(e, !0)) return e || "/";
  let r = e,
    n = "";
  const i = e.indexOf("#");
  if (i >= 0 && ((r = e.slice(0, i)), (n = e.slice(i)), !r)) return n;
  const [a, ...o] = r.split("?");
  return a + "/" + (o.length > 0 ? `?${o.join("?")}` : "") + n;
}
function hasLeadingSlash(e = "") {
  return e.startsWith("/");
}
function withLeadingSlash(e = "") {
  return hasLeadingSlash(e) ? e : "/" + e;
}
function withBase(e, t) {
  if (isEmptyURL(t) || hasProtocol(e)) return e;
  const r = withoutTrailingSlash(t);
  return e.startsWith(r) ? e : joinURL(r, e);
}
function withoutBase(e, t) {
  if (isEmptyURL(t)) return e;
  const r = withoutTrailingSlash(t);
  if (!e.startsWith(r)) return e;
  const n = e.slice(r.length);
  return n[0] === "/" ? n : "/" + n;
}
function withQuery(e, t) {
  const r = parseURL$1(e),
    n = { ...parseQuery$1(r.search), ...t };
  return (r.search = stringifyQuery$1(n)), stringifyParsedURL(r);
}
function isEmptyURL(e) {
  return !e || e === "/";
}
function isNonEmptyURL(e) {
  return e && e !== "/";
}
function joinURL(e, ...t) {
  let r = e || "";
  for (const n of t.filter((i) => isNonEmptyURL(i)))
    if (r) {
      const i = n.replace(JOIN_LEADING_SLASH_RE, "");
      r = withTrailingSlash(r) + i;
    } else r = n;
  return r;
}
function joinRelativeURL(...e) {
  var o, l, c, u;
  const t = /\/(?!\/)/,
    r = e.filter(Boolean),
    n = [];
  let i = 0;
  for (const d of r)
    if (!(!d || d === "/")) {
      for (const [E, b] of d.split(t).entries())
        if (!(!b || b === ".")) {
          if (b === "..") {
            if (n.length === 1 && hasProtocol(n[0])) continue;
            n.pop(), i--;
            continue;
          }
          if (E === 1 && (o = n[n.length - 1]) != null && o.endsWith(":/")) {
            n[n.length - 1] += "/" + b;
            continue;
          }
          n.push(b), i++;
        }
    }
  let a = n.join("/");
  return (
    i >= 0
      ? (l = r[0]) != null && l.startsWith("/") && !a.startsWith("/")
        ? (a = "/" + a)
        : (c = r[0]) != null &&
          c.startsWith("./") &&
          !a.startsWith("./") &&
          (a = "./" + a)
      : (a = "../".repeat(-1 * i) + a),
    (u = r[r.length - 1]) != null &&
      u.endsWith("/") &&
      !a.endsWith("/") &&
      (a += "/"),
    a
  );
}
function isEqual$2(e, t, r = {}) {
  return (
    r.trailingSlash || ((e = withTrailingSlash(e)), (t = withTrailingSlash(t))),
    r.leadingSlash || ((e = withLeadingSlash(e)), (t = withLeadingSlash(t))),
    r.encoding || ((e = decode$2(e)), (t = decode$2(t))),
    e === t
  );
}
const protocolRelative = Symbol.for("ufo:protocolRelative");
function parseURL$1(e = "", t) {
  const r = e.match(/^[\s\0]*(blob:|data:|javascript:|vbscript:)(.*)/i);
  if (r) {
    const [, E, b = ""] = r;
    return {
      protocol: E.toLowerCase(),
      pathname: b,
      href: E + b,
      auth: "",
      host: "",
      search: "",
      hash: "",
    };
  }
  if (!hasProtocol(e, { acceptRelative: !0 })) return parsePath(e);
  const [, n = "", i, a = ""] =
    e.replace(/\\/g, "/").match(/^[\s\0]*([\w+.-]{2,}:)?\/\/([^/@]+@)?(.*)/) ||
    [];
  let [, o = "", l = ""] = a.match(/([^#/?]*)(.*)?/) || [];
  n === "file:" && (l = l.replace(/\/(?=[A-Za-z]:)/, ""));
  const { pathname: c, search: u, hash: d } = parsePath(l);
  return {
    protocol: n.toLowerCase(),
    auth: i ? i.slice(0, Math.max(0, i.length - 1)) : "",
    host: o,
    pathname: c,
    search: u,
    hash: d,
    [protocolRelative]: !n,
  };
}
function parsePath(e = "") {
  const [t = "", r = "", n = ""] = (
    e.match(/([^#?]*)(\?[^#]*)?(#.*)?/) || []
  ).splice(1);
  return { pathname: t, search: r, hash: n };
}
function stringifyParsedURL(e) {
  const t = e.pathname || "",
    r = e.search ? (e.search.startsWith("?") ? "" : "?") + e.search : "",
    n = e.hash || "",
    i = e.auth ? e.auth + "@" : "",
    a = e.host || "";
  return (
    (e.protocol || e[protocolRelative] ? (e.protocol || "") + "//" : "") +
    i +
    a +
    t +
    r +
    n
  );
}
class FetchError extends Error {
  constructor(t, r) {
    super(t, r),
      (this.name = "FetchError"),
      r != null && r.cause && !this.cause && (this.cause = r.cause);
  }
}
function createFetchError(e) {
  var c, u, d, E, b;
  const t =
      ((c = e.error) == null ? void 0 : c.message) ||
      ((u = e.error) == null ? void 0 : u.toString()) ||
      "",
    r =
      ((d = e.request) == null ? void 0 : d.method) ||
      ((E = e.options) == null ? void 0 : E.method) ||
      "GET",
    n = ((b = e.request) == null ? void 0 : b.url) || String(e.request) || "/",
    i = `[${r}] ${JSON.stringify(n)}`,
    a = e.response
      ? `${e.response.status} ${e.response.statusText}`
      : "<no response>",
    o = `${i}: ${a}${t ? ` ${t}` : ""}`,
    l = new FetchError(o, e.error ? { cause: e.error } : void 0);
  for (const P of ["request", "options", "response"])
    Object.defineProperty(l, P, {
      get() {
        return e[P];
      },
    });
  for (const [P, R] of [
    ["data", "_data"],
    ["status", "status"],
    ["statusCode", "status"],
    ["statusText", "statusText"],
    ["statusMessage", "statusText"],
  ])
    Object.defineProperty(l, P, {
      get() {
        return e.response && e.response[R];
      },
    });
  return l;
}
const payloadMethods = new Set(
  Object.freeze(["PATCH", "POST", "PUT", "DELETE"])
);
function isPayloadMethod(e = "GET") {
  return payloadMethods.has(e.toUpperCase());
}
function isJSONSerializable(e) {
  if (e === void 0) return !1;
  const t = typeof e;
  return t === "string" || t === "number" || t === "boolean" || t === null
    ? !0
    : t !== "object"
    ? !1
    : Array.isArray(e)
    ? !0
    : e.buffer
    ? !1
    : (e.constructor && e.constructor.name === "Object") ||
      typeof e.toJSON == "function";
}
const textTypes = new Set([
    "image/svg",
    "application/xml",
    "application/xhtml",
    "application/html",
  ]),
  JSON_RE = /^application\/(?:[\w!#$%&*.^`~-]*\+)?json(;.+)?$/i;
function detectResponseType(e = "") {
  if (!e) return "json";
  const t = e.split(";").shift() || "";
  return JSON_RE.test(t)
    ? "json"
    : textTypes.has(t) || t.startsWith("text/")
    ? "text"
    : "blob";
}
function resolveFetchOptions(e, t, r, n) {
  const i = mergeHeaders(
    (t == null ? void 0 : t.headers) ?? (e == null ? void 0 : e.headers),
    r == null ? void 0 : r.headers,
    n
  );
  let a;
  return (
    ((r != null && r.query) ||
      (r != null && r.params) ||
      (t != null && t.params) ||
      (t != null && t.query)) &&
      (a = {
        ...(r == null ? void 0 : r.params),
        ...(r == null ? void 0 : r.query),
        ...(t == null ? void 0 : t.params),
        ...(t == null ? void 0 : t.query),
      }),
    { ...r, ...t, query: a, params: a, headers: i }
  );
}
function mergeHeaders(e, t, r) {
  if (!t) return new r(e);
  const n = new r(t);
  if (e)
    for (const [i, a] of Symbol.iterator in e || Array.isArray(e)
      ? e
      : new r(e))
      n.set(i, a);
  return n;
}
async function callHooks(e, t) {
  if (t)
    if (Array.isArray(t)) for (const r of t) await r(e);
    else await t(e);
}
const retryStatusCodes = new Set([408, 409, 425, 429, 500, 502, 503, 504]),
  nullBodyResponses = new Set([101, 204, 205, 304]);
function createFetch(e = {}) {
  const {
    fetch: t = globalThis.fetch,
    Headers: r = globalThis.Headers,
    AbortController: n = globalThis.AbortController,
  } = e;
  async function i(l) {
    const c =
      (l.error && l.error.name === "AbortError" && !l.options.timeout) || !1;
    if (l.options.retry !== !1 && !c) {
      let d;
      typeof l.options.retry == "number"
        ? (d = l.options.retry)
        : (d = isPayloadMethod(l.options.method) ? 0 : 1);
      const E = (l.response && l.response.status) || 500;
      if (
        d > 0 &&
        (Array.isArray(l.options.retryStatusCodes)
          ? l.options.retryStatusCodes.includes(E)
          : retryStatusCodes.has(E))
      ) {
        const b =
          typeof l.options.retryDelay == "function"
            ? l.options.retryDelay(l)
            : l.options.retryDelay || 0;
        return (
          b > 0 && (await new Promise((P) => setTimeout(P, b))),
          a(l.request, { ...l.options, retry: d - 1 })
        );
      }
    }
    const u = createFetchError(l);
    throw (Error.captureStackTrace && Error.captureStackTrace(u, a), u);
  }
  const a = async function (c, u = {}) {
      const d = {
        request: c,
        options: resolveFetchOptions(c, u, e.defaults, r),
        response: void 0,
        error: void 0,
      };
      d.options.method && (d.options.method = d.options.method.toUpperCase()),
        d.options.onRequest && (await callHooks(d, d.options.onRequest)),
        typeof d.request == "string" &&
          (d.options.baseURL &&
            (d.request = withBase(d.request, d.options.baseURL)),
          d.options.query &&
            ((d.request = withQuery(d.request, d.options.query)),
            delete d.options.query),
          "query" in d.options && delete d.options.query,
          "params" in d.options && delete d.options.params),
        d.options.body &&
          isPayloadMethod(d.options.method) &&
          (isJSONSerializable(d.options.body)
            ? ((d.options.body =
                typeof d.options.body == "string"
                  ? d.options.body
                  : JSON.stringify(d.options.body)),
              (d.options.headers = new r(d.options.headers || {})),
              d.options.headers.has("content-type") ||
                d.options.headers.set("content-type", "application/json"),
              d.options.headers.has("accept") ||
                d.options.headers.set("accept", "application/json"))
            : (("pipeTo" in d.options.body &&
                typeof d.options.body.pipeTo == "function") ||
                typeof d.options.body.pipe == "function") &&
              ("duplex" in d.options || (d.options.duplex = "half")));
      let E;
      if (!d.options.signal && d.options.timeout) {
        const P = new n();
        (E = setTimeout(() => {
          const R = new Error(
            "[TimeoutError]: The operation was aborted due to timeout"
          );
          (R.name = "TimeoutError"), (R.code = 23), P.abort(R);
        }, d.options.timeout)),
          (d.options.signal = P.signal);
      }
      try {
        d.response = await t(d.request, d.options);
      } catch (P) {
        return (
          (d.error = P),
          d.options.onRequestError &&
            (await callHooks(d, d.options.onRequestError)),
          await i(d)
        );
      } finally {
        E && clearTimeout(E);
      }
      if (
        (d.response.body || d.response._bodyInit) &&
        !nullBodyResponses.has(d.response.status) &&
        d.options.method !== "HEAD"
      ) {
        const P =
          (d.options.parseResponse ? "json" : d.options.responseType) ||
          detectResponseType(d.response.headers.get("content-type") || "");
        switch (P) {
          case "json": {
            const R = await d.response.text(),
              T = d.options.parseResponse || destr;
            d.response._data = T(R);
            break;
          }
          case "stream": {
            d.response._data = d.response.body || d.response._bodyInit;
            break;
          }
          default:
            d.response._data = await d.response[P]();
        }
      }
      return (
        d.options.onResponse && (await callHooks(d, d.options.onResponse)),
        !d.options.ignoreResponseError &&
        d.response.status >= 400 &&
        d.response.status < 600
          ? (d.options.onResponseError &&
              (await callHooks(d, d.options.onResponseError)),
            await i(d))
          : d.response
      );
    },
    o = async function (c, u) {
      return (await a(c, u))._data;
    };
  return (
    (o.raw = a),
    (o.native = (...l) => t(...l)),
    (o.create = (l = {}, c = {}) =>
      createFetch({
        ...e,
        ...c,
        defaults: { ...e.defaults, ...c.defaults, ...l },
      })),
    o
  );
}
const _globalThis$2 = (function () {
    if (typeof globalThis < "u") return globalThis;
    if (typeof self < "u") return self;
    if (typeof window < "u") return window;
    if (typeof global < "u") return global;
    throw new Error("unable to locate global object");
  })(),
  fetch$1 = _globalThis$2.fetch
    ? (...e) => _globalThis$2.fetch(...e)
    : () =>
        Promise.reject(new Error("[ofetch] global.fetch is not supported!")),
  Headers = _globalThis$2.Headers,
  AbortController = _globalThis$2.AbortController,
  ofetch = createFetch({ fetch: fetch$1, Headers, AbortController }),
  $fetch$1 = ofetch,
  useRuntimeConfig$1 = () => {
    var e;
    return (
      ((e = window == null ? void 0 : window.__NUXT__) == null
        ? void 0
        : e.config) || {}
    );
  },
  appConfig = useRuntimeConfig$1().app,
  baseURL = () => appConfig.baseURL,
  buildAssetsDir = () => appConfig.buildAssetsDir,
  buildAssetsURL = (...e) =>
    joinRelativeURL(publicAssetsURL(), buildAssetsDir(), ...e),
  publicAssetsURL = (...e) => {
    const t = appConfig.cdnURL || appConfig.baseURL;
    return e.length ? joinRelativeURL(t, ...e) : t;
  };
(globalThis.__buildAssetsURL = buildAssetsURL),
  (globalThis.__publicAssetsURL = publicAssetsURL);
globalThis.$fetch ||
  (globalThis.$fetch = $fetch$1.create({ baseURL: baseURL() }));
function flatHooks(e, t = {}, r) {
  for (const n in e) {
    const i = e[n],
      a = r ? `${r}:${n}` : n;
    typeof i == "object" && i !== null
      ? flatHooks(i, t, a)
      : typeof i == "function" && (t[a] = i);
  }
  return t;
}
const defaultTask = { run: (e) => e() },
  _createTask = () => defaultTask,
  createTask =
    typeof console.createTask < "u" ? console.createTask : _createTask;
function serialTaskCaller(e, t) {
  const r = t.shift(),
    n = createTask(r);
  return e.reduce(
    (i, a) => i.then(() => n.run(() => a(...t))),
    Promise.resolve()
  );
}
function parallelTaskCaller(e, t) {
  const r = t.shift(),
    n = createTask(r);
  return Promise.all(e.map((i) => n.run(() => i(...t))));
}
function callEachWith(e, t) {
  for (const r of [...e]) r(t);
}
class Hookable {
  constructor() {
    (this._hooks = {}),
      (this._before = void 0),
      (this._after = void 0),
      (this._deprecatedMessages = void 0),
      (this._deprecatedHooks = {}),
      (this.hook = this.hook.bind(this)),
      (this.callHook = this.callHook.bind(this)),
      (this.callHookWith = this.callHookWith.bind(this));
  }
  hook(t, r, n = {}) {
    if (!t || typeof r != "function") return () => {};
    const i = t;
    let a;
    for (; this._deprecatedHooks[t]; )
      (a = this._deprecatedHooks[t]), (t = a.to);
    if (a && !n.allowDeprecated) {
      let o = a.message;
      o ||
        (o =
          `${i} hook has been deprecated` +
          (a.to ? `, please use ${a.to}` : "")),
        this._deprecatedMessages || (this._deprecatedMessages = new Set()),
        this._deprecatedMessages.has(o) ||
          (console.warn(o), this._deprecatedMessages.add(o));
    }
    if (!r.name)
      try {
        Object.defineProperty(r, "name", {
          get: () => "_" + t.replace(/\W+/g, "_") + "_hook_cb",
          configurable: !0,
        });
      } catch {}
    return (
      (this._hooks[t] = this._hooks[t] || []),
      this._hooks[t].push(r),
      () => {
        r && (this.removeHook(t, r), (r = void 0));
      }
    );
  }
  hookOnce(t, r) {
    let n,
      i = (...a) => (
        typeof n == "function" && n(), (n = void 0), (i = void 0), r(...a)
      );
    return (n = this.hook(t, i)), n;
  }
  removeHook(t, r) {
    if (this._hooks[t]) {
      const n = this._hooks[t].indexOf(r);
      n !== -1 && this._hooks[t].splice(n, 1),
        this._hooks[t].length === 0 && delete this._hooks[t];
    }
  }
  deprecateHook(t, r) {
    this._deprecatedHooks[t] = typeof r == "string" ? { to: r } : r;
    const n = this._hooks[t] || [];
    delete this._hooks[t];
    for (const i of n) this.hook(t, i);
  }
  deprecateHooks(t) {
    Object.assign(this._deprecatedHooks, t);
    for (const r in t) this.deprecateHook(r, t[r]);
  }
  addHooks(t) {
    const r = flatHooks(t),
      n = Object.keys(r).map((i) => this.hook(i, r[i]));
    return () => {
      for (const i of n.splice(0, n.length)) i();
    };
  }
  removeHooks(t) {
    const r = flatHooks(t);
    for (const n in r) this.removeHook(n, r[n]);
  }
  removeAllHooks() {
    for (const t in this._hooks) delete this._hooks[t];
  }
  callHook(t, ...r) {
    return r.unshift(t), this.callHookWith(serialTaskCaller, t, ...r);
  }
  callHookParallel(t, ...r) {
    return r.unshift(t), this.callHookWith(parallelTaskCaller, t, ...r);
  }
  callHookWith(t, r, ...n) {
    const i =
      this._before || this._after ? { name: r, args: n, context: {} } : void 0;
    this._before && callEachWith(this._before, i);
    const a = t(r in this._hooks ? [...this._hooks[r]] : [], n);
    return a instanceof Promise
      ? a.finally(() => {
          this._after && i && callEachWith(this._after, i);
        })
      : (this._after && i && callEachWith(this._after, i), a);
  }
  beforeEach(t) {
    return (
      (this._before = this._before || []),
      this._before.push(t),
      () => {
        if (this._before !== void 0) {
          const r = this._before.indexOf(t);
          r !== -1 && this._before.splice(r, 1);
        }
      }
    );
  }
  afterEach(t) {
    return (
      (this._after = this._after || []),
      this._after.push(t),
      () => {
        if (this._after !== void 0) {
          const r = this._after.indexOf(t);
          r !== -1 && this._after.splice(r, 1);
        }
      }
    );
  }
}
function createHooks() {
  return new Hookable();
}
function createContext(e = {}) {
  let t,
    r = !1;
  const n = (o) => {
    if (t && t !== o) throw new Error("Context conflict");
  };
  let i;
  if (e.asyncContext) {
    const o = e.AsyncLocalStorage || globalThis.AsyncLocalStorage;
    o
      ? (i = new o())
      : console.warn("[unctx] `AsyncLocalStorage` is not provided.");
  }
  const a = () => {
    if (i) {
      const o = i.getStore();
      if (o !== void 0) return o;
    }
    return t;
  };
  return {
    use: () => {
      const o = a();
      if (o === void 0) throw new Error("Context is not available");
      return o;
    },
    tryUse: () => a(),
    set: (o, l) => {
      l || n(o), (t = o), (r = !0);
    },
    unset: () => {
      (t = void 0), (r = !1);
    },
    call: (o, l) => {
      n(o), (t = o);
      try {
        return i ? i.run(o, l) : l();
      } finally {
        r || (t = void 0);
      }
    },
    async callAsync(o, l) {
      t = o;
      const c = () => {
          t = o;
        },
        u = () => (t === o ? c : void 0);
      asyncHandlers.add(u);
      try {
        const d = i ? i.run(o, l) : l();
        return r || (t = void 0), await d;
      } finally {
        asyncHandlers.delete(u);
      }
    },
  };
}
function createNamespace(e = {}) {
  const t = {};
  return {
    get(r, n = {}) {
      return t[r] || (t[r] = createContext({ ...e, ...n })), t[r];
    },
  };
}
const _globalThis$1 =
    typeof globalThis < "u"
      ? globalThis
      : typeof self < "u"
      ? self
      : typeof global < "u"
      ? global
      : typeof window < "u"
      ? window
      : {},
  globalKey$1 = "__unctx__",
  defaultNamespace =
    _globalThis$1[globalKey$1] ||
    (_globalThis$1[globalKey$1] = createNamespace()),
  getContext = (e, t = {}) => defaultNamespace.get(e, t),
  asyncHandlersKey = "__unctx_async_handlers__",
  asyncHandlers =
    _globalThis$1[asyncHandlersKey] ||
    (_globalThis$1[asyncHandlersKey] = new Set());
function executeAsync(e) {
  const t = [];
  for (const i of asyncHandlers) {
    const a = i();
    a && t.push(a);
  }
  const r = () => {
    for (const i of t) i();
  };
  let n = e();
  return (
    n &&
      typeof n == "object" &&
      "catch" in n &&
      (n = n.catch((i) => {
        throw (r(), i);
      })),
    [n, r]
  );
}
const appPageTransition = { name: "page", mode: "out-in" },
  appLayoutTransition = !1,
  appKeepalive = !1,
  nuxtLinkDefaults = {
    componentName: "NuxtLink",
    prefetch: !0,
    prefetchOn: { visibility: !0 },
  },
  nuxtDefaultErrorValue = null,
  vueAppRootContainer = "#__nuxt",
  appId = "nuxt-app",
  outdatedBuildInterval = 36e5,
  chunkErrorEvent = "vite:preloadError";
function getNuxtAppCtx(e = appId) {
  return getContext(e, { asyncContext: !1 });
}
const NuxtPluginIndicator = "__nuxt_plugin";
function createNuxtApp(e) {
  var i;
  let t = 0;
  const r = {
    _id: e.id || appId || "nuxt-app",
    _scope: effectScope(),
    provide: void 0,
    globalName: "nuxt",
    versions: {
      get nuxt() {
        return "3.15.0";
      },
      get vue() {
        return r.vueApp.version;
      },
    },
    payload: shallowReactive({
      ...(((i = e.ssrContext) == null ? void 0 : i.payload) || {}),
      data: shallowReactive({}),
      state: reactive({}),
      once: new Set(),
      _errors: shallowReactive({}),
    }),
    static: { data: {} },
    runWithContext(a) {
      return r._scope.active && !getCurrentScope()
        ? r._scope.run(() => callWithNuxt(r, a))
        : callWithNuxt(r, a);
    },
    isHydrating: !0,
    deferHydration() {
      if (!r.isHydrating) return () => {};
      t++;
      let a = !1;
      return () => {
        if (!a && ((a = !0), t--, t === 0))
          return (r.isHydrating = !1), r.callHook("app:suspense:resolve");
      };
    },
    _asyncDataPromises: {},
    _asyncData: shallowReactive({}),
    _payloadRevivers: {},
    ...e,
  };
  {
    const a = window.__NUXT__;
    if (a)
      for (const o in a)
        switch (o) {
          case "data":
          case "state":
          case "_errors":
            Object.assign(r.payload[o], a[o]);
            break;
          default:
            r.payload[o] = a[o];
        }
  }
  (r.hooks = createHooks()),
    (r.hook = r.hooks.hook),
    (r.callHook = r.hooks.callHook),
    (r.provide = (a, o) => {
      const l = "$" + a;
      defineGetter$1(r, l, o),
        defineGetter$1(r.vueApp.config.globalProperties, l, o);
    }),
    defineGetter$1(r.vueApp, "$nuxt", r),
    defineGetter$1(r.vueApp.config.globalProperties, "$nuxt", r);
  {
    window.addEventListener(chunkErrorEvent, (o) => {
      r.callHook("app:chunkError", { error: o.payload }),
        (r.isHydrating ||
          o.payload.message.includes("Unable to preload CSS")) &&
          o.preventDefault();
    }),
      (window.useNuxtApp = window.useNuxtApp || useNuxtApp);
    const a = r.hook("app:error", (...o) => {
      console.error("[nuxt] error caught during app initialization", ...o);
    });
    r.hook("app:mounted", a);
  }
  const n = r.payload.config;
  return r.provide("config", n), r;
}
function registerPluginHooks(e, t) {
  t.hooks && e.hooks.addHooks(t.hooks);
}
async function applyPlugin(e, t) {
  if (typeof t == "function") {
    const { provide: r } = (await e.runWithContext(() => t(e))) || {};
    if (r && typeof r == "object") for (const n in r) e.provide(n, r[n]);
  }
}
async function applyPlugins(e, t) {
  const r = [],
    n = [],
    i = [],
    a = [];
  let o = 0;
  async function l(c) {
    var d;
    const u =
      ((d = c.dependsOn) == null
        ? void 0
        : d.filter((E) => t.some((b) => b._name === E) && !r.includes(E))) ??
      [];
    if (u.length > 0) n.push([new Set(u), c]);
    else {
      const E = applyPlugin(e, c).then(async () => {
        c._name &&
          (r.push(c._name),
          await Promise.all(
            n.map(async ([b, P]) => {
              b.has(c._name) &&
                (b.delete(c._name), b.size === 0 && (o++, await l(P)));
            })
          ));
      });
      c.parallel ? i.push(E.catch((b) => a.push(b))) : await E;
    }
  }
  for (const c of t) registerPluginHooks(e, c);
  for (const c of t) await l(c);
  if ((await Promise.all(i), o))
    for (let c = 0; c < o; c++) await Promise.all(i);
  if (a.length) throw a[0];
}
function defineNuxtPlugin(e) {
  if (typeof e == "function") return e;
  const t = e._name || e.name;
  return (
    delete e.name,
    Object.assign(e.setup || (() => {}), e, {
      [NuxtPluginIndicator]: !0,
      _name: t,
    })
  );
}
const definePayloadPlugin = defineNuxtPlugin;
function callWithNuxt(e, t, r) {
  const n = () => t();
  return getNuxtAppCtx(e._id).set(e), e.vueApp.runWithContext(n);
}
function tryUseNuxtApp(e) {
  var r;
  let t;
  return (
    hasInjectionContext() &&
      (t =
        (r = getCurrentInstance$1()) == null ? void 0 : r.appContext.app.$nuxt),
    (t = t || getNuxtAppCtx(e).tryUse()),
    t || null
  );
}
function useNuxtApp(e) {
  const t = tryUseNuxtApp(e);
  if (!t) throw new Error("[nuxt] instance unavailable");
  return t;
}
function useRuntimeConfig(e) {
  return useNuxtApp().$config;
}
function defineGetter$1(e, t, r) {
  Object.defineProperty(e, t, { get: () => r });
}
function parse$2(e, t) {
  if (typeof e != "string")
    throw new TypeError("argument str must be a string");
  const r = {},
    n = t || {},
    i = n.decode || decode$1;
  let a = 0;
  for (; a < e.length; ) {
    const o = e.indexOf("=", a);
    if (o === -1) break;
    let l = e.indexOf(";", a);
    if (l === -1) l = e.length;
    else if (l < o) {
      a = e.lastIndexOf(";", o - 1) + 1;
      continue;
    }
    const c = e.slice(a, o).trim();
    if (n != null && n.filter && !(n != null && n.filter(c))) {
      a = l + 1;
      continue;
    }
    if (r[c] === void 0) {
      let u = e.slice(o + 1, l).trim();
      u.codePointAt(0) === 34 && (u = u.slice(1, -1)), (r[c] = tryDecode(u, i));
    }
    a = l + 1;
  }
  return r;
}
function decode$1(e) {
  return e.includes("%") ? decodeURIComponent(e) : e;
}
function tryDecode(e, t) {
  try {
    return t(e);
  } catch {
    return e;
  }
}
const fieldContentRegExp = /^[\u0009\u0020-\u007E\u0080-\u00FF]+$/;
function serialize(e, t, r) {
  const n = r || {},
    i = n.encode || encodeURIComponent;
  if (typeof i != "function") throw new TypeError("option encode is invalid");
  if (!fieldContentRegExp.test(e))
    throw new TypeError("argument name is invalid");
  const a = i(t);
  if (a && !fieldContentRegExp.test(a))
    throw new TypeError("argument val is invalid");
  let o = e + "=" + a;
  if (n.maxAge !== void 0 && n.maxAge !== null) {
    const l = n.maxAge - 0;
    if (Number.isNaN(l) || !Number.isFinite(l))
      throw new TypeError("option maxAge is invalid");
    o += "; Max-Age=" + Math.floor(l);
  }
  if (n.domain) {
    if (!fieldContentRegExp.test(n.domain))
      throw new TypeError("option domain is invalid");
    o += "; Domain=" + n.domain;
  }
  if (n.path) {
    if (!fieldContentRegExp.test(n.path))
      throw new TypeError("option path is invalid");
    o += "; Path=" + n.path;
  }
  if (n.expires) {
    if (!isDate$1(n.expires) || Number.isNaN(n.expires.valueOf()))
      throw new TypeError("option expires is invalid");
    o += "; Expires=" + n.expires.toUTCString();
  }
  if (
    (n.httpOnly && (o += "; HttpOnly"),
    n.secure && (o += "; Secure"),
    n.priority)
  )
    switch (
      typeof n.priority == "string" ? n.priority.toLowerCase() : n.priority
    ) {
      case "low": {
        o += "; Priority=Low";
        break;
      }
      case "medium": {
        o += "; Priority=Medium";
        break;
      }
      case "high": {
        o += "; Priority=High";
        break;
      }
      default:
        throw new TypeError("option priority is invalid");
    }
  if (n.sameSite)
    switch (
      typeof n.sameSite == "string" ? n.sameSite.toLowerCase() : n.sameSite
    ) {
      case !0: {
        o += "; SameSite=Strict";
        break;
      }
      case "lax": {
        o += "; SameSite=Lax";
        break;
      }
      case "strict": {
        o += "; SameSite=Strict";
        break;
      }
      case "none": {
        o += "; SameSite=None";
        break;
      }
      default:
        throw new TypeError("option sameSite is invalid");
    }
  return n.partitioned && (o += "; Partitioned"), o;
}
function isDate$1(e) {
  return (
    Object.prototype.toString.call(e) === "[object Date]" || e instanceof Date
  );
}
const defaults = Object.freeze({
  ignoreUnknown: !1,
  respectType: !1,
  respectFunctionNames: !1,
  respectFunctionProperties: !1,
  unorderedObjects: !0,
  unorderedArrays: !1,
  unorderedSets: !1,
  excludeKeys: void 0,
  excludeValues: void 0,
  replacer: void 0,
});
function objectHash(e, t) {
  t ? (t = { ...defaults, ...t }) : (t = defaults);
  const r = createHasher(t);
  return r.dispatch(e), r.toString();
}
const defaultPrototypesKeys = Object.freeze([
  "prototype",
  "__proto__",
  "constructor",
]);
function createHasher(e) {
  let t = "",
    r = new Map();
  const n = (i) => {
    t += i;
  };
  return {
    toString() {
      return t;
    },
    getContext() {
      return r;
    },
    dispatch(i) {
      return (
        e.replacer && (i = e.replacer(i)),
        this[i === null ? "null" : typeof i](i)
      );
    },
    object(i) {
      if (i && typeof i.toJSON == "function") return this.object(i.toJSON());
      const a = Object.prototype.toString.call(i);
      let o = "";
      const l = a.length;
      l < 10 ? (o = "unknown:[" + a + "]") : (o = a.slice(8, l - 1)),
        (o = o.toLowerCase());
      let c = null;
      if ((c = r.get(i)) === void 0) r.set(i, r.size);
      else return this.dispatch("[CIRCULAR:" + c + "]");
      if (typeof Buffer < "u" && Buffer.isBuffer && Buffer.isBuffer(i))
        return n("buffer:"), n(i.toString("utf8"));
      if (o !== "object" && o !== "function" && o !== "asyncfunction")
        this[o] ? this[o](i) : e.ignoreUnknown || this.unkown(i, o);
      else {
        let u = Object.keys(i);
        e.unorderedObjects && (u = u.sort());
        let d = [];
        e.respectType !== !1 &&
          !isNativeFunction(i) &&
          (d = defaultPrototypesKeys),
          e.excludeKeys &&
            ((u = u.filter((b) => !e.excludeKeys(b))),
            (d = d.filter((b) => !e.excludeKeys(b)))),
          n("object:" + (u.length + d.length) + ":");
        const E = (b) => {
          this.dispatch(b),
            n(":"),
            e.excludeValues || this.dispatch(i[b]),
            n(",");
        };
        for (const b of u) E(b);
        for (const b of d) E(b);
      }
    },
    array(i, a) {
      if (
        ((a = a === void 0 ? e.unorderedArrays !== !1 : a),
        n("array:" + i.length + ":"),
        !a || i.length <= 1)
      ) {
        for (const c of i) this.dispatch(c);
        return;
      }
      const o = new Map(),
        l = i.map((c) => {
          const u = createHasher(e);
          u.dispatch(c);
          for (const [d, E] of u.getContext()) o.set(d, E);
          return u.toString();
        });
      return (r = o), l.sort(), this.array(l, !1);
    },
    date(i) {
      return n("date:" + i.toJSON());
    },
    symbol(i) {
      return n("symbol:" + i.toString());
    },
    unkown(i, a) {
      if ((n(a), !!i && (n(":"), i && typeof i.entries == "function")))
        return this.array(Array.from(i.entries()), !0);
    },
    error(i) {
      return n("error:" + i.toString());
    },
    boolean(i) {
      return n("bool:" + i);
    },
    string(i) {
      n("string:" + i.length + ":"), n(i);
    },
    function(i) {
      n("fn:"),
        isNativeFunction(i)
          ? this.dispatch("[native]")
          : this.dispatch(i.toString()),
        e.respectFunctionNames !== !1 &&
          this.dispatch("function-name:" + String(i.name)),
        e.respectFunctionProperties && this.object(i);
    },
    number(i) {
      return n("number:" + i);
    },
    xml(i) {
      return n("xml:" + i.toString());
    },
    null() {
      return n("Null");
    },
    undefined() {
      return n("Undefined");
    },
    regexp(i) {
      return n("regex:" + i.toString());
    },
    uint8array(i) {
      return n("uint8array:"), this.dispatch(Array.prototype.slice.call(i));
    },
    uint8clampedarray(i) {
      return (
        n("uint8clampedarray:"), this.dispatch(Array.prototype.slice.call(i))
      );
    },
    int8array(i) {
      return n("int8array:"), this.dispatch(Array.prototype.slice.call(i));
    },
    uint16array(i) {
      return n("uint16array:"), this.dispatch(Array.prototype.slice.call(i));
    },
    int16array(i) {
      return n("int16array:"), this.dispatch(Array.prototype.slice.call(i));
    },
    uint32array(i) {
      return n("uint32array:"), this.dispatch(Array.prototype.slice.call(i));
    },
    int32array(i) {
      return n("int32array:"), this.dispatch(Array.prototype.slice.call(i));
    },
    float32array(i) {
      return n("float32array:"), this.dispatch(Array.prototype.slice.call(i));
    },
    float64array(i) {
      return n("float64array:"), this.dispatch(Array.prototype.slice.call(i));
    },
    arraybuffer(i) {
      return n("arraybuffer:"), this.dispatch(new Uint8Array(i));
    },
    url(i) {
      return n("url:" + i.toString());
    },
    map(i) {
      n("map:");
      const a = [...i];
      return this.array(a, e.unorderedSets !== !1);
    },
    set(i) {
      n("set:");
      const a = [...i];
      return this.array(a, e.unorderedSets !== !1);
    },
    file(i) {
      return n("file:"), this.dispatch([i.name, i.size, i.type, i.lastModfied]);
    },
    blob() {
      if (e.ignoreUnknown) return n("[blob]");
      throw new Error(`Hashing Blob objects is currently not supported
Use "options.replacer" or "options.ignoreUnknown"
`);
    },
    domwindow() {
      return n("domwindow");
    },
    bigint(i) {
      return n("bigint:" + i.toString());
    },
    process() {
      return n("process");
    },
    timer() {
      return n("timer");
    },
    pipe() {
      return n("pipe");
    },
    tcp() {
      return n("tcp");
    },
    udp() {
      return n("udp");
    },
    tty() {
      return n("tty");
    },
    statwatcher() {
      return n("statwatcher");
    },
    securecontext() {
      return n("securecontext");
    },
    connection() {
      return n("connection");
    },
    zlib() {
      return n("zlib");
    },
    context() {
      return n("context");
    },
    nodescript() {
      return n("nodescript");
    },
    httpparser() {
      return n("httpparser");
    },
    dataview() {
      return n("dataview");
    },
    signal() {
      return n("signal");
    },
    fsevent() {
      return n("fsevent");
    },
    tlswrap() {
      return n("tlswrap");
    },
  };
}
const nativeFunc = "[native code] }",
  nativeFuncLength = nativeFunc.length;
function isNativeFunction(e) {
  return typeof e != "function"
    ? !1
    : Function.prototype.toString.call(e).slice(-nativeFuncLength) ===
        nativeFunc;
}
function isEqual$1(e, t, r = {}) {
  return e === t || objectHash(e, r) === objectHash(t, r);
}
function _createMatcher(e, t) {
  return { ctx: { table: e }, matchAll: (r) => _matchRoutes(r, e) };
}
function _createTableFromExport(e) {
  const t = {};
  for (const r in e)
    t[r] =
      r === "dynamic"
        ? new Map(
            Object.entries(e[r]).map(([n, i]) => [n, _createTableFromExport(i)])
          )
        : new Map(Object.entries(e[r]));
  return t;
}
function createMatcherFromExport(e) {
  return _createMatcher(_createTableFromExport(e));
}
function _matchRoutes(e, t, r) {
  e.endsWith("/") && (e = e.slice(0, -1) || "/");
  const n = [];
  for (const [a, o] of _sortRoutesMap(t.wildcard))
    (e === a || e.startsWith(a + "/")) && n.push(o);
  for (const [a, o] of _sortRoutesMap(t.dynamic))
    if (e.startsWith(a + "/")) {
      const l = "/" + e.slice(a.length).split("/").splice(2).join("/");
      n.push(..._matchRoutes(l, o));
    }
  const i = t.static.get(e);
  return i && n.push(i), n.filter(Boolean);
}
function _sortRoutesMap(e) {
  return [...e.entries()].sort((t, r) => t[0].length - r[0].length);
}
function isPlainObject$3(e) {
  if (e === null || typeof e != "object") return !1;
  const t = Object.getPrototypeOf(e);
  return (t !== null &&
    t !== Object.prototype &&
    Object.getPrototypeOf(t) !== null) ||
    Symbol.iterator in e
    ? !1
    : Symbol.toStringTag in e
    ? Object.prototype.toString.call(e) === "[object Module]"
    : !0;
}
function _defu(e, t, r = ".", n) {
  if (!isPlainObject$3(t)) return _defu(e, {}, r, n);
  const i = Object.assign({}, t);
  for (const a in e) {
    if (a === "__proto__" || a === "constructor") continue;
    const o = e[a];
    o != null &&
      ((n && n(i, a, o, r)) ||
        (Array.isArray(o) && Array.isArray(i[a])
          ? (i[a] = [...o, ...i[a]])
          : isPlainObject$3(o) && isPlainObject$3(i[a])
          ? (i[a] = _defu(o, i[a], (r ? `${r}.` : "") + a.toString(), n))
          : (i[a] = o)));
  }
  return i;
}
function createDefu(e) {
  return (...t) => t.reduce((r, n) => _defu(r, n, "", e), {});
}
const defu = createDefu(),
  defuFn = createDefu((e, t, r) => {
    if (e[t] !== void 0 && typeof r == "function") return (e[t] = r(e[t])), !0;
  });
function hasProp(e, t) {
  try {
    return t in e;
  } catch {
    return !1;
  }
}
var __defProp$2 = Object.defineProperty,
  __defNormalProp$2 = (e, t, r) =>
    t in e
      ? __defProp$2(e, t, {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: r,
        })
      : (e[t] = r),
  __publicField$2 = (e, t, r) => (
    __defNormalProp$2(e, typeof t != "symbol" ? t + "" : t, r), r
  );
class H3Error extends Error {
  constructor(t, r = {}) {
    super(t, r),
      __publicField$2(this, "statusCode", 500),
      __publicField$2(this, "fatal", !1),
      __publicField$2(this, "unhandled", !1),
      __publicField$2(this, "statusMessage"),
      __publicField$2(this, "data"),
      __publicField$2(this, "cause"),
      r.cause && !this.cause && (this.cause = r.cause);
  }
  toJSON() {
    const t = {
      message: this.message,
      statusCode: sanitizeStatusCode(this.statusCode, 500),
    };
    return (
      this.statusMessage &&
        (t.statusMessage = sanitizeStatusMessage(this.statusMessage)),
      this.data !== void 0 && (t.data = this.data),
      t
    );
  }
}
__publicField$2(H3Error, "__h3_error__", !0);
function createError$1(e) {
  if (typeof e == "string") return new H3Error(e);
  if (isError(e)) return e;
  const t = new H3Error(e.message ?? e.statusMessage ?? "", {
    cause: e.cause || e,
  });
  if (hasProp(e, "stack"))
    try {
      Object.defineProperty(t, "stack", {
        get() {
          return e.stack;
        },
      });
    } catch {
      try {
        t.stack = e.stack;
      } catch {}
    }
  if (
    (e.data && (t.data = e.data),
    e.statusCode
      ? (t.statusCode = sanitizeStatusCode(e.statusCode, t.statusCode))
      : e.status && (t.statusCode = sanitizeStatusCode(e.status, t.statusCode)),
    e.statusMessage
      ? (t.statusMessage = e.statusMessage)
      : e.statusText && (t.statusMessage = e.statusText),
    t.statusMessage)
  ) {
    const r = t.statusMessage;
    sanitizeStatusMessage(t.statusMessage) !== r &&
      console.warn(
        "[h3] Please prefer using `message` for longer error messages instead of `statusMessage`. In the future, `statusMessage` will be sanitized by default."
      );
  }
  return (
    e.fatal !== void 0 && (t.fatal = e.fatal),
    e.unhandled !== void 0 && (t.unhandled = e.unhandled),
    t
  );
}
function isError(e) {
  var t;
  return (
    ((t = e == null ? void 0 : e.constructor) == null
      ? void 0
      : t.__h3_error__) === !0
  );
}
const DISALLOWED_STATUS_CHARS = /[^\u0009\u0020-\u007E]/g;
function sanitizeStatusMessage(e = "") {
  return e.replace(DISALLOWED_STATUS_CHARS, "");
}
function sanitizeStatusCode(e, t = 200) {
  return !e ||
    (typeof e == "string" && (e = Number.parseInt(e, 10)), e < 100 || e > 999)
    ? t
    : e;
}
typeof setImmediate > "u" || setImmediate;
const LayoutMetaSymbol = Symbol("layout-meta"),
  PageRouteSymbol = Symbol("route"),
  useRouter$1 = () => {
    var e;
    return (e = useNuxtApp()) == null ? void 0 : e.$router;
  },
  useRoute$1 = () =>
    hasInjectionContext()
      ? inject$1(PageRouteSymbol, useNuxtApp()._route)
      : useNuxtApp()._route;
function defineNuxtRouteMiddleware(e) {
  return e;
}
const addRouteMiddleware = (e, t, r = {}) => {
    const n = useNuxtApp(),
      i = r.global || typeof e != "string",
      a = t;
    if (!a) {
      console.warn(
        "[nuxt] No route middleware passed to `addRouteMiddleware`.",
        e
      );
      return;
    }
    i ? n._middleware.global.push(a) : (n._middleware.named[e] = a);
  },
  isProcessingMiddleware = () => {
    try {
      if (useNuxtApp()._processingMiddleware) return !0;
    } catch {
      return !1;
    }
    return !1;
  },
  navigateTo = (e, t) => {
    e || (e = "/");
    const r =
      typeof e == "string"
        ? e
        : "path" in e
        ? resolveRouteObject(e)
        : useRouter$1().resolve(e).href;
    if (t != null && t.open) {
      const { target: c = "_blank", windowFeatures: u = {} } = t.open,
        d = Object.entries(u)
          .filter(([E, b]) => b !== void 0)
          .map(([E, b]) => `${E.toLowerCase()}=${b}`)
          .join(", ");
      return open(r, c, d), Promise.resolve();
    }
    const n = hasProtocol(r, { acceptRelative: !0 }),
      i = (t == null ? void 0 : t.external) || n;
    if (i) {
      if (!(t != null && t.external))
        throw new Error(
          "Navigating to an external URL is not allowed by default. Use `navigateTo(url, { external: true })`."
        );
      const { protocol: c } = new URL(r, window.location.href);
      if (c && isScriptProtocol(c))
        throw new Error(`Cannot navigate to a URL with '${c}' protocol.`);
    }
    const a = isProcessingMiddleware();
    if (!i && a)
      return t != null && t.replace
        ? typeof e == "string"
          ? { path: e, replace: !0 }
          : { ...e, replace: !0 }
        : e;
    const o = useRouter$1(),
      l = useNuxtApp();
    return i
      ? (l._scope.stop(),
        t != null && t.replace ? location.replace(r) : (location.href = r),
        a ? (l.isHydrating ? new Promise(() => {}) : !1) : Promise.resolve())
      : t != null && t.replace
      ? o.replace(e)
      : o.push(e);
  };
function resolveRouteObject(e) {
  return withQuery(e.path || "", e.query || {}) + (e.hash || "");
}
const NUXT_ERROR_SIGNATURE = "__nuxt_error",
  useError = () => toRef(useNuxtApp().payload, "error"),
  showError = (e) => {
    const t = createError(e);
    try {
      const r = useNuxtApp(),
        n = useError();
      r.hooks.callHook("app:error", t), (n.value = n.value || t);
    } catch {
      throw t;
    }
    return t;
  },
  clearError = async (e = {}) => {
    const t = useNuxtApp(),
      r = useError();
    t.callHook("app:error:cleared", e),
      e.redirect && (await useRouter$1().replace(e.redirect)),
      (r.value = nuxtDefaultErrorValue);
  },
  isNuxtError = (e) => !!e && typeof e == "object" && NUXT_ERROR_SIGNATURE in e,
  createError = (e) => {
    const t = createError$1(e);
    return (
      Object.defineProperty(t, NUXT_ERROR_SIGNATURE, {
        value: !0,
        configurable: !1,
        writable: !1,
      }),
      t
    );
  },
  isVue2 = !1;
/*!
 * pinia v2.3.0
 * (c) 2024 Eduardo San Martin Morote
 * @license MIT
 */ let activePinia;
const setActivePinia = (e) => (activePinia = e),
  piniaSymbol = Symbol();
function isPlainObject$2(e) {
  return (
    e &&
    typeof e == "object" &&
    Object.prototype.toString.call(e) === "[object Object]" &&
    typeof e.toJSON != "function"
  );
}
var MutationType;
(function (e) {
  (e.direct = "direct"),
    (e.patchObject = "patch object"),
    (e.patchFunction = "patch function");
})(MutationType || (MutationType = {}));
function createPinia() {
  const e = effectScope(!0),
    t = e.run(() => ref({}));
  let r = [],
    n = [];
  const i = markRaw({
    install(a) {
      setActivePinia(i),
        (i._a = a),
        a.provide(piniaSymbol, i),
        (a.config.globalProperties.$pinia = i),
        n.forEach((o) => r.push(o)),
        (n = []);
    },
    use(a) {
      return !this._a && !isVue2 ? n.push(a) : r.push(a), this;
    },
    _p: r,
    _a: null,
    _e: e,
    _s: new Map(),
    state: t,
  });
  return i;
}
const noop$1 = () => {};
function addSubscription(e, t, r, n = noop$1) {
  e.push(t);
  const i = () => {
    const a = e.indexOf(t);
    a > -1 && (e.splice(a, 1), n());
  };
  return !r && getCurrentScope() && onScopeDispose(i), i;
}
function triggerSubscriptions(e, ...t) {
  e.slice().forEach((r) => {
    r(...t);
  });
}
const fallbackRunWithContext = (e) => e(),
  ACTION_MARKER = Symbol(),
  ACTION_NAME = Symbol();
function mergeReactiveObjects(e, t) {
  e instanceof Map && t instanceof Map
    ? t.forEach((r, n) => e.set(n, r))
    : e instanceof Set && t instanceof Set && t.forEach(e.add, e);
  for (const r in t) {
    if (!t.hasOwnProperty(r)) continue;
    const n = t[r],
      i = e[r];
    isPlainObject$2(i) &&
    isPlainObject$2(n) &&
    e.hasOwnProperty(r) &&
    !isRef(n) &&
    !isReactive(n)
      ? (e[r] = mergeReactiveObjects(i, n))
      : (e[r] = n);
  }
  return e;
}
const skipHydrateSymbol = Symbol();
function shouldHydrate(e) {
  return !isPlainObject$2(e) || !e.hasOwnProperty(skipHydrateSymbol);
}
const { assign: assign$2 } = Object;
function isComputed(e) {
  return !!(isRef(e) && e.effect);
}
function createOptionsStore(e, t, r, n) {
  const { state: i, actions: a, getters: o } = t,
    l = r.state.value[e];
  let c;
  function u() {
    l || (r.state.value[e] = i ? i() : {});
    const d = toRefs(r.state.value[e]);
    return assign$2(
      d,
      a,
      Object.keys(o || {}).reduce(
        (E, b) => (
          (E[b] = markRaw(
            computed(() => {
              setActivePinia(r);
              const P = r._s.get(e);
              return o[b].call(P, P);
            })
          )),
          E
        ),
        {}
      )
    );
  }
  return (c = createSetupStore(e, u, t, r, n, !0)), c;
}
function createSetupStore(e, t, r = {}, n, i, a) {
  let o;
  const l = assign$2({ actions: {} }, r),
    c = { deep: !0 };
  let u,
    d,
    E = [],
    b = [],
    P;
  const R = n.state.value[e];
  !a && !R && (n.state.value[e] = {}), ref({});
  let T;
  function M(H) {
    let $;
    (u = d = !1),
      typeof H == "function"
        ? (H(n.state.value[e]),
          ($ = { type: MutationType.patchFunction, storeId: e, events: P }))
        : (mergeReactiveObjects(n.state.value[e], H),
          ($ = {
            type: MutationType.patchObject,
            payload: H,
            storeId: e,
            events: P,
          }));
    const q = (T = Symbol());
    nextTick().then(() => {
      T === q && (u = !0);
    }),
      (d = !0),
      triggerSubscriptions(E, $, n.state.value[e]);
  }
  const x = a
    ? function () {
        const { state: $ } = r,
          q = $ ? $() : {};
        this.$patch((J) => {
          assign$2(J, q);
        });
      }
    : noop$1;
  function k() {
    o.stop(), (E = []), (b = []), n._s.delete(e);
  }
  const S = (H, $ = "") => {
      if (ACTION_MARKER in H) return (H[ACTION_NAME] = $), H;
      const q = function () {
        setActivePinia(n);
        const J = Array.from(arguments),
          K = [],
          ee = [];
        function le(z) {
          K.push(z);
        }
        function re(z) {
          ee.push(z);
        }
        triggerSubscriptions(b, {
          args: J,
          name: q[ACTION_NAME],
          store: O,
          after: le,
          onError: re,
        });
        let B;
        try {
          B = H.apply(this && this.$id === e ? this : O, J);
        } catch (z) {
          throw (triggerSubscriptions(ee, z), z);
        }
        return B instanceof Promise
          ? B.then((z) => (triggerSubscriptions(K, z), z)).catch(
              (z) => (triggerSubscriptions(ee, z), Promise.reject(z))
            )
          : (triggerSubscriptions(K, B), B);
      };
      return (q[ACTION_MARKER] = !0), (q[ACTION_NAME] = $), q;
    },
    A = {
      _p: n,
      $id: e,
      $onAction: addSubscription.bind(null, b),
      $patch: M,
      $reset: x,
      $subscribe(H, $ = {}) {
        const q = addSubscription(E, H, $.detached, () => J()),
          J = o.run(() =>
            watch(
              () => n.state.value[e],
              (K) => {
                ($.flush === "sync" ? d : u) &&
                  H({ storeId: e, type: MutationType.direct, events: P }, K);
              },
              assign$2({}, c, $)
            )
          );
        return q;
      },
      $dispose: k,
    },
    O = reactive(A);
  n._s.set(e, O);
  const D = ((n._a && n._a.runWithContext) || fallbackRunWithContext)(() =>
    n._e.run(() => (o = effectScope()).run(() => t({ action: S })))
  );
  for (const H in D) {
    const $ = D[H];
    if ((isRef($) && !isComputed($)) || isReactive($))
      a ||
        (R &&
          shouldHydrate($) &&
          (isRef($) ? ($.value = R[H]) : mergeReactiveObjects($, R[H])),
        (n.state.value[e][H] = $));
    else if (typeof $ == "function") {
      const q = S($, H);
      (D[H] = q), (l.actions[H] = $);
    }
  }
  return (
    assign$2(O, D),
    assign$2(toRaw(O), D),
    Object.defineProperty(O, "$state", {
      get: () => n.state.value[e],
      set: (H) => {
        M(($) => {
          assign$2($, H);
        });
      },
    }),
    n._p.forEach((H) => {
      assign$2(
        O,
        o.run(() => H({ store: O, app: n._a, pinia: n, options: l }))
      );
    }),
    R && a && r.hydrate && r.hydrate(O.$state, R),
    (u = !0),
    (d = !0),
    O
  );
}
/*! #__NO_SIDE_EFFECTS__ */ function defineStore(e, t, r) {
  let n, i;
  const a = typeof t == "function";
  typeof e == "string" ? ((n = e), (i = a ? r : t)) : ((i = e), (n = e.id));
  function o(l, c) {
    const u = hasInjectionContext();
    return (
      (l = l || (u ? inject$1(piniaSymbol, null) : null)),
      l && setActivePinia(l),
      (l = activePinia),
      l._s.has(n) ||
        (a ? createSetupStore(n, t, i, l) : createOptionsStore(n, i, l)),
      l._s.get(n)
    );
  }
  return (o.$id = n), o;
}
function decode64(e) {
  const t = asciiToBinary(e),
    r = new ArrayBuffer(t.length),
    n = new DataView(r);
  for (let i = 0; i < r.byteLength; i++) n.setUint8(i, t.charCodeAt(i));
  return r;
}
const KEY_STRING =
  "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/";
function asciiToBinary(e) {
  e.length % 4 === 0 && (e = e.replace(/==?$/, ""));
  let t = "",
    r = 0,
    n = 0;
  for (let i = 0; i < e.length; i++)
    (r <<= 6),
      (r |= KEY_STRING.indexOf(e[i])),
      (n += 6),
      n === 24 &&
        ((t += String.fromCharCode((r & 16711680) >> 16)),
        (t += String.fromCharCode((r & 65280) >> 8)),
        (t += String.fromCharCode(r & 255)),
        (r = n = 0));
  return (
    n === 12
      ? ((r >>= 4), (t += String.fromCharCode(r)))
      : n === 18 &&
        ((r >>= 2),
        (t += String.fromCharCode((r & 65280) >> 8)),
        (t += String.fromCharCode(r & 255))),
    t
  );
}
const UNDEFINED = -1,
  HOLE = -2,
  NAN = -3,
  POSITIVE_INFINITY = -4,
  NEGATIVE_INFINITY = -5,
  NEGATIVE_ZERO = -6;
function parse$1(e, t) {
  return unflatten(JSON.parse(e), t);
}
function unflatten(e, t) {
  if (typeof e == "number") return i(e, !0);
  if (!Array.isArray(e) || e.length === 0) throw new Error("Invalid input");
  const r = e,
    n = Array(r.length);
  function i(a, o = !1) {
    if (a === UNDEFINED) return;
    if (a === NAN) return NaN;
    if (a === POSITIVE_INFINITY) return 1 / 0;
    if (a === NEGATIVE_INFINITY) return -1 / 0;
    if (a === NEGATIVE_ZERO) return -0;
    if (o) throw new Error("Invalid input");
    if (a in n) return n[a];
    const l = r[a];
    if (!l || typeof l != "object") n[a] = l;
    else if (Array.isArray(l))
      if (typeof l[0] == "string") {
        const c = l[0],
          u = t == null ? void 0 : t[c];
        if (u) return (n[a] = u(i(l[1])));
        switch (c) {
          case "Date":
            n[a] = new Date(l[1]);
            break;
          case "Set":
            const d = new Set();
            n[a] = d;
            for (let P = 1; P < l.length; P += 1) d.add(i(l[P]));
            break;
          case "Map":
            const E = new Map();
            n[a] = E;
            for (let P = 1; P < l.length; P += 2) E.set(i(l[P]), i(l[P + 1]));
            break;
          case "RegExp":
            n[a] = new RegExp(l[1], l[2]);
            break;
          case "Object":
            n[a] = Object(l[1]);
            break;
          case "BigInt":
            n[a] = BigInt(l[1]);
            break;
          case "null":
            const b = Object.create(null);
            n[a] = b;
            for (let P = 1; P < l.length; P += 2) b[l[P]] = i(l[P + 1]);
            break;
          case "Int8Array":
          case "Uint8Array":
          case "Uint8ClampedArray":
          case "Int16Array":
          case "Uint16Array":
          case "Int32Array":
          case "Uint32Array":
          case "Float32Array":
          case "Float64Array":
          case "BigInt64Array":
          case "BigUint64Array": {
            const P = globalThis[c],
              R = l[1],
              T = decode64(R),
              M = new P(T);
            n[a] = M;
            break;
          }
          case "ArrayBuffer": {
            const P = l[1],
              R = decode64(P);
            n[a] = R;
            break;
          }
          default:
            throw new Error(`Unknown type ${c}`);
        }
      } else {
        const c = new Array(l.length);
        n[a] = c;
        for (let u = 0; u < l.length; u += 1) {
          const d = l[u];
          d !== HOLE && (c[u] = i(d));
        }
      }
    else {
      const c = {};
      n[a] = c;
      for (const u in l) {
        const d = l[u];
        c[u] = i(d);
      }
    }
    return n[a];
  }
  return i(0);
}
const TagsWithInnerContent = new Set([
    "title",
    "titleTemplate",
    "script",
    "style",
    "noscript",
  ]),
  HasElementTags = new Set([
    "base",
    "meta",
    "link",
    "style",
    "script",
    "noscript",
  ]),
  ValidHeadTags = new Set([
    "title",
    "titleTemplate",
    "templateParams",
    "base",
    "htmlAttrs",
    "bodyAttrs",
    "meta",
    "link",
    "style",
    "script",
    "noscript",
  ]),
  UniqueTags = new Set([
    "base",
    "title",
    "titleTemplate",
    "bodyAttrs",
    "htmlAttrs",
    "templateParams",
  ]),
  TagConfigKeys = new Set([
    "tagPosition",
    "tagPriority",
    "tagDuplicateStrategy",
    "children",
    "innerHTML",
    "textContent",
    "processTemplateParams",
  ]),
  IsBrowser = typeof window < "u";
function defineHeadPlugin(e) {
  return e;
}
function hashCode(e) {
  let t = 9;
  for (let r = 0; r < e.length; ) t = Math.imul(t ^ e.charCodeAt(r++), 9 ** 9);
  return ((t ^ (t >>> 9)) + 65536).toString(16).substring(1, 8).toLowerCase();
}
function hashTag(e) {
  if (e._h) return e._h;
  if (e._d) return hashCode(e._d);
  let t = `${e.tag}:${e.textContent || e.innerHTML || ""}:`;
  for (const r in e.props) t += `${r}:${String(e.props[r])},`;
  return hashCode(t);
}
function thenable(e, t) {
  return e instanceof Promise ? e.then(t) : t(e);
}
function normaliseTag(e, t, r, n) {
  const i =
    n ||
    normaliseProps(
      typeof t == "object" && typeof t != "function" && !(t instanceof Promise)
        ? { ...t }
        : {
            [e === "script" || e === "noscript" || e === "style"
              ? "innerHTML"
              : "textContent"]: t,
          },
      e === "templateParams" || e === "titleTemplate"
    );
  if (i instanceof Promise) return i.then((o) => normaliseTag(e, t, r, o));
  const a = { tag: e, props: i };
  for (const o of TagConfigKeys) {
    const l = a.props[o] !== void 0 ? a.props[o] : r[o];
    l !== void 0 &&
      ((!(o === "innerHTML" || o === "textContent" || o === "children") ||
        TagsWithInnerContent.has(a.tag)) &&
        (a[o === "children" ? "innerHTML" : o] = l),
      delete a.props[o]);
  }
  return (
    a.props.body && ((a.tagPosition = "bodyClose"), delete a.props.body),
    a.tag === "script" &&
      typeof a.innerHTML == "object" &&
      ((a.innerHTML = JSON.stringify(a.innerHTML)),
      (a.props.type = a.props.type || "application/json")),
    Array.isArray(a.props.content)
      ? a.props.content.map((o) => ({
          ...a,
          props: { ...a.props, content: o },
        }))
      : a
  );
}
function normaliseStyleClassProps(e, t) {
  var n;
  const r = e === "class" ? " " : ";";
  return (
    t &&
      typeof t == "object" &&
      !Array.isArray(t) &&
      (t = Object.entries(t)
        .filter(([, i]) => i)
        .map(([i, a]) => (e === "style" ? `${i}:${a}` : i))),
    (n = String(Array.isArray(t) ? t.join(r) : t)) == null
      ? void 0
      : n
          .split(r)
          .filter((i) => !!i.trim())
          .join(r)
  );
}
function nestedNormaliseProps(e, t, r, n) {
  for (let i = n; i < r.length; i += 1) {
    const a = r[i];
    if (a === "class" || a === "style") {
      e[a] = normaliseStyleClassProps(a, e[a]);
      continue;
    }
    if (e[a] instanceof Promise)
      return e[a].then((o) => ((e[a] = o), nestedNormaliseProps(e, t, r, i)));
    if (!t && !TagConfigKeys.has(a)) {
      const o = String(e[a]),
        l = a.startsWith("data-");
      o === "true" || o === ""
        ? (e[a] = l ? "true" : !0)
        : e[a] || (l && o === "false" ? (e[a] = "false") : delete e[a]);
    }
  }
}
function normaliseProps(e, t = !1) {
  const r = nestedNormaliseProps(e, t, Object.keys(e), 0);
  return r instanceof Promise ? r.then(() => e) : e;
}
const TagEntityBits = 10;
function nestedNormaliseEntryTags(e, t, r) {
  for (let n = r; n < t.length; n += 1) {
    const i = t[n];
    if (i instanceof Promise)
      return i.then((a) => ((t[n] = a), nestedNormaliseEntryTags(e, t, n)));
    Array.isArray(i) ? e.push(...i) : e.push(i);
  }
}
function normaliseEntryTags(e) {
  const t = [],
    r = e.resolvedInput;
  for (const i in r) {
    if (!Object.prototype.hasOwnProperty.call(r, i)) continue;
    const a = r[i];
    if (!(a === void 0 || !ValidHeadTags.has(i))) {
      if (Array.isArray(a)) {
        for (const o of a) t.push(normaliseTag(i, o, e));
        continue;
      }
      t.push(normaliseTag(i, a, e));
    }
  }
  if (t.length === 0) return [];
  const n = [];
  return thenable(nestedNormaliseEntryTags(n, t, 0), () =>
    n.map(
      (i, a) => (
        (i._e = e._i),
        e.mode && (i._m = e.mode),
        (i._p = (e._i << TagEntityBits) + a),
        i
      )
    )
  );
}
const NetworkEvents = new Set([
    "onload",
    "onerror",
    "onabort",
    "onprogress",
    "onloadstart",
  ]),
  TAG_WEIGHTS = { base: -10, title: 10 },
  TAG_ALIASES = { critical: -80, high: -10, low: 20 };
function tagWeight(e) {
  const t = e.tagPriority;
  if (typeof t == "number") return t;
  let r = 100;
  return (
    e.tag === "meta"
      ? e.props["http-equiv"] === "content-security-policy"
        ? (r = -30)
        : e.props.charset
        ? (r = -20)
        : e.props.name === "viewport" && (r = -15)
      : e.tag === "link" && e.props.rel === "preconnect"
      ? (r = 20)
      : e.tag in TAG_WEIGHTS && (r = TAG_WEIGHTS[e.tag]),
    t && t in TAG_ALIASES ? r + TAG_ALIASES[t] : r
  );
}
const SortModifiers = [
    { prefix: "before:", offset: -1 },
    { prefix: "after:", offset: 1 },
  ],
  allowedMetaProperties = ["name", "property", "http-equiv"];
function tagDedupeKey(e) {
  const { props: t, tag: r } = e;
  if (UniqueTags.has(r)) return r;
  if (r === "link" && t.rel === "canonical") return "canonical";
  if (t.charset) return "charset";
  if (t.id) return `${r}:id:${t.id}`;
  for (const n of allowedMetaProperties)
    if (t[n] !== void 0) return `${r}:${n}:${t[n]}`;
  return !1;
}
const sepSub = "%separator";
function sub(e, t, r = !1) {
  var i;
  let n;
  if (t === "s" || t === "pageTitle") n = e.pageTitle;
  else if (t.includes(".")) {
    const a = t.indexOf(".");
    n = (i = e[t.substring(0, a)]) == null ? void 0 : i[t.substring(a + 1)];
  } else n = e[t];
  if (n !== void 0) return r ? (n || "").replace(/"/g, '\\"') : n || "";
}
const sepSubRe = new RegExp(`${sepSub}(?:\\s*${sepSub})*`, "g");
function processTemplateParams(e, t, r, n = !1) {
  if (typeof e != "string" || !e.includes("%")) return e;
  let i = e;
  try {
    i = decodeURI(e);
  } catch {}
  const a = i.match(/%\w+(?:\.\w+)?/g);
  if (!a) return e;
  const o = e.includes(sepSub);
  return (
    (e = e
      .replace(/%\w+(?:\.\w+)?/g, (l) => {
        if (l === sepSub || !a.includes(l)) return l;
        const c = sub(t, l.slice(1), n);
        return c !== void 0 ? c : l;
      })
      .trim()),
    o &&
      (e.endsWith(sepSub) && (e = e.slice(0, -sepSub.length)),
      e.startsWith(sepSub) && (e = e.slice(sepSub.length)),
      (e = e.replace(sepSubRe, r).trim())),
    e
  );
}
function resolveTitleTemplate(e, t) {
  return e == null ? t || null : typeof e == "function" ? e(t) : e;
}
async function renderDOMHead(e, t = {}) {
  const r = t.document || e.resolvedOptions.document;
  if (!r || !e.dirty) return;
  const n = { shouldRender: !0, tags: [] };
  if ((await e.hooks.callHook("dom:beforeRender", n), !!n.shouldRender))
    return (
      e._domUpdatePromise ||
        (e._domUpdatePromise = new Promise(async (i) => {
          var E;
          const a = (await e.resolveTags()).map((b) => ({
            tag: b,
            id: HasElementTags.has(b.tag) ? hashTag(b) : b.tag,
            shouldRender: !0,
          }));
          let o = e._dom;
          if (!o) {
            o = { elMap: { htmlAttrs: r.documentElement, bodyAttrs: r.body } };
            const b = new Set();
            for (const P of ["body", "head"]) {
              const R = (E = r[P]) == null ? void 0 : E.children;
              for (const T of R) {
                const M = T.tagName.toLowerCase();
                if (!HasElementTags.has(M)) continue;
                const x = {
                    tag: M,
                    props: await normaliseProps(
                      T.getAttributeNames().reduce(
                        (O, F) => ({ ...O, [F]: T.getAttribute(F) }),
                        {}
                      )
                    ),
                    innerHTML: T.innerHTML,
                  },
                  k = tagDedupeKey(x);
                let S = k,
                  A = 1;
                for (; S && b.has(S); ) S = `${k}:${A++}`;
                S && ((x._d = S), b.add(S)),
                  (o.elMap[T.getAttribute("data-hid") || hashTag(x)] = T);
              }
            }
          }
          (o.pendingSideEffects = { ...o.sideEffects }), (o.sideEffects = {});
          function l(b, P, R) {
            const T = `${b}:${P}`;
            (o.sideEffects[T] = R), delete o.pendingSideEffects[T];
          }
          function c({ id: b, $el: P, tag: R }) {
            const T = R.tag.endsWith("Attrs");
            if (
              ((o.elMap[b] = P),
              T ||
                (R.textContent &&
                  R.textContent !== P.textContent &&
                  (P.textContent = R.textContent),
                R.innerHTML &&
                  R.innerHTML !== P.innerHTML &&
                  (P.innerHTML = R.innerHTML),
                l(b, "el", () => {
                  var M;
                  (M = o.elMap[b]) == null || M.remove(), delete o.elMap[b];
                })),
              R._eventHandlers)
            )
              for (const M in R._eventHandlers)
                Object.prototype.hasOwnProperty.call(R._eventHandlers, M) &&
                  P.getAttribute(`data-${M}`) !== "" &&
                  ((R.tag === "bodyAttrs" ? r.defaultView : P).addEventListener(
                    M.substring(2),
                    R._eventHandlers[M].bind(P)
                  ),
                  P.setAttribute(`data-${M}`, ""));
            for (const M in R.props) {
              if (!Object.prototype.hasOwnProperty.call(R.props, M)) continue;
              const x = R.props[M],
                k = `attr:${M}`;
              if (M === "class") {
                if (!x) continue;
                for (const S of x.split(" "))
                  T && l(b, `${k}:${S}`, () => P.classList.remove(S)),
                    !P.classList.contains(S) && P.classList.add(S);
              } else if (M === "style") {
                if (!x) continue;
                for (const S of x.split(";")) {
                  const A = S.indexOf(":"),
                    O = S.substring(0, A).trim(),
                    F = S.substring(A + 1).trim();
                  l(b, `${k}:${O}`, () => {
                    P.style.removeProperty(O);
                  }),
                    P.style.setProperty(O, F);
                }
              } else
                P.getAttribute(M) !== x &&
                  P.setAttribute(M, x === !0 ? "" : String(x)),
                  T && l(b, k, () => P.removeAttribute(M));
            }
          }
          const u = [],
            d = { bodyClose: void 0, bodyOpen: void 0, head: void 0 };
          for (const b of a) {
            const { tag: P, shouldRender: R, id: T } = b;
            if (R) {
              if (P.tag === "title") {
                r.title = P.textContent;
                continue;
              }
              (b.$el = b.$el || o.elMap[T]),
                b.$el ? c(b) : HasElementTags.has(P.tag) && u.push(b);
            }
          }
          for (const b of u) {
            const P = b.tag.tagPosition || "head";
            (b.$el = r.createElement(b.tag.tag)),
              c(b),
              (d[P] = d[P] || r.createDocumentFragment()),
              d[P].appendChild(b.$el);
          }
          for (const b of a) await e.hooks.callHook("dom:renderTag", b, r, l);
          d.head && r.head.appendChild(d.head),
            d.bodyOpen && r.body.insertBefore(d.bodyOpen, r.body.firstChild),
            d.bodyClose && r.body.appendChild(d.bodyClose);
          for (const b in o.pendingSideEffects) o.pendingSideEffects[b]();
          (e._dom = o),
            await e.hooks.callHook("dom:rendered", { renders: a }),
            i();
        }).finally(() => {
          (e._domUpdatePromise = void 0), (e.dirty = !1);
        })),
      e._domUpdatePromise
    );
}
function debouncedRenderDOMHead(e, t = {}) {
  const r = t.delayFn || ((n) => setTimeout(n, 10));
  return (e._domDebouncedUpdatePromise =
    e._domDebouncedUpdatePromise ||
    new Promise((n) =>
      r(() =>
        renderDOMHead(e, t).then(() => {
          delete e._domDebouncedUpdatePromise, n();
        })
      )
    ));
}
function DomPlugin(e) {
  return (t) => {
    var n, i;
    const r =
      ((i =
        (n = t.resolvedOptions.document) == null
          ? void 0
          : n.head.querySelector('script[id="unhead:payload"]')) == null
        ? void 0
        : i.innerHTML) || !1;
    return (
      r && t.push(JSON.parse(r)),
      {
        mode: "client",
        hooks: {
          "entries:updated": (a) => {
            debouncedRenderDOMHead(a, e);
          },
        },
      }
    );
  };
}
const UsesMergeStrategy = new Set(["templateParams", "htmlAttrs", "bodyAttrs"]),
  DedupePlugin = {
    hooks: {
      "tag:normalise": ({ tag: e }) => {
        e.props.hid && ((e.key = e.props.hid), delete e.props.hid),
          e.props.vmid && ((e.key = e.props.vmid), delete e.props.vmid),
          e.props.key && ((e.key = e.props.key), delete e.props.key);
        const t = tagDedupeKey(e);
        t &&
          !t.startsWith("meta:og:") &&
          !t.startsWith("meta:twitter:") &&
          delete e.key;
        const r = t || (e.key ? `${e.tag}:${e.key}` : !1);
        r && (e._d = r);
      },
      "tags:resolve": (e) => {
        const t = Object.create(null);
        for (const n of e.tags) {
          const i = (n.key ? `${n.tag}:${n.key}` : n._d) || hashTag(n),
            a = t[i];
          if (a) {
            let l = n == null ? void 0 : n.tagDuplicateStrategy;
            if (
              (!l && UsesMergeStrategy.has(n.tag) && (l = "merge"),
              l === "merge")
            ) {
              const c = a.props;
              c.style &&
                n.props.style &&
                (c.style[c.style.length - 1] !== ";" && (c.style += ";"),
                (n.props.style = `${c.style} ${n.props.style}`)),
                c.class && n.props.class
                  ? (n.props.class = `${c.class} ${n.props.class}`)
                  : c.class && (n.props.class = c.class),
                (t[i].props = { ...c, ...n.props });
              continue;
            } else if (n._e === a._e) {
              (a._duped = a._duped || []),
                (n._d = `${a._d}:${a._duped.length + 1}`),
                a._duped.push(n);
              continue;
            } else if (tagWeight(n) > tagWeight(a)) continue;
          }
          if (
            !(
              n.innerHTML ||
              n.textContent ||
              Object.keys(n.props).length !== 0
            ) &&
            HasElementTags.has(n.tag)
          ) {
            delete t[i];
            continue;
          }
          t[i] = n;
        }
        const r = [];
        for (const n in t) {
          const i = t[n],
            a = i._duped;
          r.push(i), a && (delete i._duped, r.push(...a));
        }
        (e.tags = r),
          (e.tags = e.tags.filter(
            (n) =>
              !(
                n.tag === "meta" &&
                (n.props.name || n.props.property) &&
                !n.props.content
              )
          ));
      },
    },
  },
  ValidEventTags = new Set(["script", "link", "bodyAttrs"]),
  EventHandlersPlugin = (e) => ({
    hooks: {
      "tags:resolve": (t) => {
        for (const r of t.tags) {
          if (!ValidEventTags.has(r.tag)) continue;
          const n = r.props;
          for (const i in n) {
            if (
              i[0] !== "o" ||
              i[1] !== "n" ||
              !Object.prototype.hasOwnProperty.call(n, i)
            )
              continue;
            const a = n[i];
            typeof a == "function" &&
              (e.ssr && NetworkEvents.has(i)
                ? (n[i] = `this.dataset.${i}fired = true`)
                : delete n[i],
              (r._eventHandlers = r._eventHandlers || {}),
              (r._eventHandlers[i] = a));
          }
          e.ssr &&
            r._eventHandlers &&
            (r.props.src || r.props.href) &&
            (r.key = r.key || hashCode(r.props.src || r.props.href));
        }
      },
      "dom:renderTag": ({ $el: t, tag: r }) => {
        var i, a;
        const n = t == null ? void 0 : t.dataset;
        if (n)
          for (const o in n) {
            if (!o.endsWith("fired")) continue;
            const l = o.slice(0, -5);
            NetworkEvents.has(l) &&
              ((a = (i = r._eventHandlers) == null ? void 0 : i[l]) == null ||
                a.call(t, new Event(l.substring(2))));
          }
      },
    },
  }),
  DupeableTags = new Set(["link", "style", "script", "noscript"]),
  HashKeyedPlugin = {
    hooks: {
      "tag:normalise": ({ tag: e }) => {
        e.key &&
          DupeableTags.has(e.tag) &&
          (e.props["data-hid"] = e._h = hashCode(e.key));
      },
    },
  },
  PayloadPlugin = {
    mode: "server",
    hooks: {
      "tags:beforeResolve": (e) => {
        const t = {};
        let r = !1;
        for (const n of e.tags)
          n._m !== "server" ||
            (n.tag !== "titleTemplate" &&
              n.tag !== "templateParams" &&
              n.tag !== "title") ||
            ((t[n.tag] =
              n.tag === "title" || n.tag === "titleTemplate"
                ? n.textContent
                : n.props),
            (r = !0));
        r &&
          e.tags.push({
            tag: "script",
            innerHTML: JSON.stringify(t),
            props: { id: "unhead:payload", type: "application/json" },
          });
      },
    },
  },
  SortPlugin = {
    hooks: {
      "tags:resolve": (e) => {
        var t;
        for (const r of e.tags)
          if (typeof r.tagPriority == "string")
            for (const { prefix: n, offset: i } of SortModifiers) {
              if (!r.tagPriority.startsWith(n)) continue;
              const a = r.tagPriority.substring(n.length),
                o =
                  (t = e.tags.find((l) => l._d === a)) == null ? void 0 : t._p;
              if (o !== void 0) {
                r._p = o + i;
                break;
              }
            }
        e.tags.sort((r, n) => {
          const i = tagWeight(r),
            a = tagWeight(n);
          return i < a ? -1 : i > a ? 1 : r._p - n._p;
        });
      },
    },
  },
  SupportedAttrs = { meta: "content", link: "href", htmlAttrs: "lang" },
  contentAttrs = ["innerHTML", "textContent"],
  TemplateParamsPlugin = (e) => ({
    hooks: {
      "tags:resolve": (t) => {
        var o;
        const { tags: r } = t;
        let n;
        for (let l = 0; l < r.length; l += 1)
          r[l].tag === "templateParams" &&
            ((n = t.tags.splice(l, 1)[0].props), (l -= 1));
        const i = n || {},
          a = i.separator || "|";
        delete i.separator,
          (i.pageTitle = processTemplateParams(
            i.pageTitle ||
              ((o = r.find((l) => l.tag === "title")) == null
                ? void 0
                : o.textContent) ||
              "",
            i,
            a
          ));
        for (const l of r) {
          if (l.processTemplateParams === !1) continue;
          const c = SupportedAttrs[l.tag];
          if (c && typeof l.props[c] == "string")
            l.props[c] = processTemplateParams(l.props[c], i, a);
          else if (
            l.processTemplateParams ||
            l.tag === "titleTemplate" ||
            l.tag === "title"
          )
            for (const u of contentAttrs)
              typeof l[u] == "string" &&
                (l[u] = processTemplateParams(
                  l[u],
                  i,
                  a,
                  l.tag === "script" && l.props.type.endsWith("json")
                ));
        }
        (e._templateParams = i), (e._separator = a);
      },
      "tags:afterResolve": ({ tags: t }) => {
        let r;
        for (let n = 0; n < t.length; n += 1) {
          const i = t[n];
          i.tag === "title" && i.processTemplateParams !== !1 && (r = i);
        }
        r != null &&
          r.textContent &&
          (r.textContent = processTemplateParams(
            r.textContent,
            e._templateParams,
            e._separator
          ));
      },
    },
  }),
  TitleTemplatePlugin = {
    hooks: {
      "tags:resolve": (e) => {
        const { tags: t } = e;
        let r, n;
        for (let i = 0; i < t.length; i += 1) {
          const a = t[i];
          a.tag === "title" ? (r = a) : a.tag === "titleTemplate" && (n = a);
        }
        if (n && r) {
          const i = resolveTitleTemplate(n.textContent, r.textContent);
          i !== null
            ? (r.textContent = i || r.textContent)
            : e.tags.splice(e.tags.indexOf(r), 1);
        } else if (n) {
          const i = resolveTitleTemplate(n.textContent);
          i !== null && ((n.textContent = i), (n.tag = "title"), (n = void 0));
        }
        n && e.tags.splice(e.tags.indexOf(n), 1);
      },
    },
  },
  XSSPlugin = {
    hooks: {
      "tags:afterResolve": (e) => {
        for (const t of e.tags)
          typeof t.innerHTML == "string" &&
            (t.innerHTML &&
            (t.props.type === "application/ld+json" ||
              t.props.type === "application/json")
              ? (t.innerHTML = t.innerHTML.replace(/</g, "\\u003C"))
              : (t.innerHTML = t.innerHTML.replace(
                  new RegExp(`</${t.tag}`, "g"),
                  `<\\/${t.tag}`
                )));
      },
    },
  };
let activeHead;
function createHead$1(e = {}) {
  const t = createHeadCore(e);
  return t.use(DomPlugin()), (activeHead = t);
}
function filterMode(e, t) {
  return !e || (e === "server" && t) || (e === "client" && !t);
}
function createHeadCore(e = {}) {
  const t = createHooks();
  t.addHooks(e.hooks || {}),
    (e.document = e.document || (IsBrowser ? document : void 0));
  const r = !e.document,
    n = () => {
      (l.dirty = !0), t.callHook("entries:updated", l);
    };
  let i = 0,
    a = [];
  const o = [],
    l = {
      plugins: o,
      dirty: !1,
      resolvedOptions: e,
      hooks: t,
      headEntries() {
        return a;
      },
      use(c) {
        const u = typeof c == "function" ? c(l) : c;
        (!u.key || !o.some((d) => d.key === u.key)) &&
          (o.push(u), filterMode(u.mode, r) && t.addHooks(u.hooks || {}));
      },
      push(c, u) {
        u == null || delete u.head;
        const d = { _i: i++, input: c, ...u };
        return (
          filterMode(d.mode, r) && (a.push(d), n()),
          {
            dispose() {
              (a = a.filter((E) => E._i !== d._i)), n();
            },
            patch(E) {
              for (const b of a) b._i === d._i && (b.input = d.input = E);
              n();
            },
          }
        );
      },
      async resolveTags() {
        const c = { tags: [], entries: [...a] };
        await t.callHook("entries:resolve", c);
        for (const u of c.entries) {
          const d = u.resolvedInput || u.input;
          if (
            ((u.resolvedInput = await (u.transform ? u.transform(d) : d)),
            u.resolvedInput)
          )
            for (const E of await normaliseEntryTags(u)) {
              const b = {
                tag: E,
                entry: u,
                resolvedOptions: l.resolvedOptions,
              };
              await t.callHook("tag:normalise", b), c.tags.push(b.tag);
            }
        }
        return (
          await t.callHook("tags:beforeResolve", c),
          await t.callHook("tags:resolve", c),
          await t.callHook("tags:afterResolve", c),
          c.tags
        );
      },
      ssr: r,
    };
  return (
    [
      DedupePlugin,
      PayloadPlugin,
      EventHandlersPlugin,
      HashKeyedPlugin,
      SortPlugin,
      TemplateParamsPlugin,
      TitleTemplatePlugin,
      XSSPlugin,
      ...((e == null ? void 0 : e.plugins) || []),
    ].forEach((c) => l.use(c)),
    l.hooks.callHook("init", l),
    l
  );
}
function getActiveHead() {
  return activeHead;
}
const Vue3 = version$1[0] === "3";
function resolveUnref(e) {
  return typeof e == "function" ? e() : unref(e);
}
function resolveUnrefHeadInput(e) {
  if (e instanceof Promise || e instanceof Date || e instanceof RegExp)
    return e;
  const t = resolveUnref(e);
  if (!e || !t) return t;
  if (Array.isArray(t)) return t.map((r) => resolveUnrefHeadInput(r));
  if (typeof t == "object") {
    const r = {};
    for (const n in t)
      if (Object.prototype.hasOwnProperty.call(t, n)) {
        if (n === "titleTemplate" || (n[0] === "o" && n[1] === "n")) {
          r[n] = unref(t[n]);
          continue;
        }
        r[n] = resolveUnrefHeadInput(t[n]);
      }
    return r;
  }
  return t;
}
const VueReactivityPlugin = {
    hooks: {
      "entries:resolve": (e) => {
        for (const t of e.entries)
          t.resolvedInput = resolveUnrefHeadInput(t.input);
      },
    },
  },
  headSymbol = "usehead";
function vueInstall(e) {
  return {
    install(r) {
      Vue3 &&
        ((r.config.globalProperties.$unhead = e),
        (r.config.globalProperties.$head = e),
        r.provide(headSymbol, e));
    },
  }.install;
}
function createHead(e = {}) {
  e.domDelayFn =
    e.domDelayFn || ((r) => nextTick(() => setTimeout(() => r(), 0)));
  const t = createHead$1(e);
  return t.use(VueReactivityPlugin), (t.install = vueInstall(t)), t;
}
const _global =
    typeof globalThis < "u"
      ? globalThis
      : typeof window < "u"
      ? window
      : typeof global < "u"
      ? global
      : typeof self < "u"
      ? self
      : {},
  globalKey = "__unhead_injection_handler__";
function setHeadInjectionHandler(e) {
  _global[globalKey] = e;
}
function injectHead() {
  return globalKey in _global
    ? _global[globalKey]()
    : inject$1(headSymbol) || getActiveHead();
}
function useHead(e, t = {}) {
  const r = t.head || injectHead();
  if (r) return r.ssr ? r.push(e, t) : clientUseHead(r, e, t);
}
function clientUseHead(e, t, r = {}) {
  const n = ref(!1),
    i = ref({});
  watchEffect(() => {
    i.value = n.value ? {} : resolveUnrefHeadInput(t);
  });
  const a = e.push(i.value, r);
  return (
    watch(i, (l) => {
      a.patch(l);
    }),
    getCurrentInstance$1() &&
      (onBeforeUnmount(() => {
        a.dispose();
      }),
      onDeactivated(() => {
        n.value = !0;
      }),
      onActivated(() => {
        n.value = !1;
      })),
    a
  );
}
const scriptRel = "modulepreload",
  assetsURL = function (e, t) {
    return new URL(e, t).href;
  },
  seen = {},
  __vitePreload = function (t, r, n) {
    let i = Promise.resolve();
    if (r && r.length > 0) {
      const o = document.getElementsByTagName("link"),
        l = document.querySelector("meta[property=csp-nonce]"),
        c =
          (l == null ? void 0 : l.nonce) ||
          (l == null ? void 0 : l.getAttribute("nonce"));
      i = Promise.allSettled(
        r.map((u) => {
          if (((u = assetsURL(u, n)), u in seen)) return;
          seen[u] = !0;
          const d = u.endsWith(".css"),
            E = d ? '[rel="stylesheet"]' : "";
          if (!!n)
            for (let R = o.length - 1; R >= 0; R--) {
              const T = o[R];
              if (T.href === u && (!d || T.rel === "stylesheet")) return;
            }
          else if (document.querySelector(`link[href="${u}"]${E}`)) return;
          const P = document.createElement("link");
          if (
            ((P.rel = d ? "stylesheet" : scriptRel),
            d || (P.as = "script"),
            (P.crossOrigin = ""),
            (P.href = u),
            c && P.setAttribute("nonce", c),
            document.head.appendChild(P),
            d)
          )
            return new Promise((R, T) => {
              P.addEventListener("load", R),
                P.addEventListener("error", () =>
                  T(new Error(`Unable to preload CSS for ${u}`))
                );
            });
        })
      );
    }
    function a(o) {
      const l = new Event("vite:preloadError", { cancelable: !0 });
      if (((l.payload = o), window.dispatchEvent(l), !l.defaultPrevented))
        throw o;
    }
    return i.then((o) => {
      for (const l of o || []) l.status === "rejected" && a(l.reason);
      return t().catch(a);
    });
  };
let manifest, matcher;
function fetchManifest() {
  return (
    (manifest = $fetch(
      buildAssetsURL(`builds/meta/${useRuntimeConfig().app.buildId}.json`),
      { responseType: "json" }
    )),
    manifest
      .then((e) => {
        matcher = createMatcherFromExport(e.matcher);
      })
      .catch((e) => {
        console.error("[nuxt] Error fetching app manifest.", e);
      }),
    manifest
  );
}
function getAppManifest() {
  return manifest || fetchManifest();
}
async function getRouteRules(e) {
  const t = typeof e == "string" ? e : e.path;
  if ((await getAppManifest(), !matcher))
    return (
      console.error("[nuxt] Error creating app manifest matcher.", matcher), {}
    );
  try {
    return defu({}, ...matcher.matchAll(t).reverse());
  } catch (r) {
    return console.error("[nuxt] Error matching route rules.", r), {};
  }
}
async function loadPayload(e, t = {}) {
  const r = await _getPayloadURL(e, t),
    n = useNuxtApp(),
    i = (n._payloadCache = n._payloadCache || {});
  return r in i
    ? i[r] || null
    : ((i[r] = isPrerendered(e).then((a) =>
        a
          ? _importPayload(r).then((o) => o || (delete i[r], null))
          : ((i[r] = null), null)
      )),
      i[r]);
}
const filename = "_payload.json";
async function _getPayloadURL(e, t = {}) {
  const r = new URL(e, "http://localhost");
  if (r.host !== "localhost" || hasProtocol(r.pathname, { acceptRelative: !0 }))
    throw new Error("Payload URL must not include hostname: " + e);
  const n = useRuntimeConfig(),
    i = t.hash || (t.fresh ? Date.now() : n.app.buildId),
    a = n.app.cdnURL,
    o = a && (await isPrerendered(e)) ? a : n.app.baseURL;
  return joinURL(o, r.pathname, filename + (i ? `?${i}` : ""));
}
async function _importPayload(e) {
  const t = fetch(e).then((r) => r.text().then(parsePayload));
  try {
    return await t;
  } catch (r) {
    console.warn("[nuxt] Cannot load payload ", e, r);
  }
  return null;
}
async function isPrerendered(e = useRoute$1().path) {
  const t = useNuxtApp();
  return (
    (e = withoutTrailingSlash(e)),
    (await getAppManifest()).prerendered.includes(e)
      ? !0
      : t.runWithContext(async () => {
          const n = await getRouteRules({ path: e });
          return !!n.prerender && !n.redirect;
        })
  );
}
let payloadCache = null;
async function getNuxtClientPayload() {
  var n;
  if (payloadCache) return payloadCache;
  const e = document.getElementById("__NUXT_DATA__");
  if (!e) return {};
  const t = await parsePayload(e.textContent || ""),
    r = e.dataset.src ? await _importPayload(e.dataset.src) : void 0;
  return (
    (payloadCache = { ...t, ...r, ...window.__NUXT__ }),
    (n = payloadCache.config) != null &&
      n.public &&
      (payloadCache.config.public = reactive(payloadCache.config.public)),
    payloadCache
  );
}
async function parsePayload(e) {
  return await parse$1(e, useNuxtApp()._payloadRevivers);
}
function definePayloadReviver(e, t) {
  useNuxtApp()._payloadRevivers[e] = t;
}
const payloadPlugin = definePayloadPlugin(() => {
    definePayloadReviver("skipHydrate", (e) => {});
  }),
  revivers = [
    ["NuxtError", (e) => createError(e)],
    [
      "EmptyShallowRef",
      (e) => shallowRef(e === "_" ? void 0 : e === "0n" ? BigInt(0) : destr(e)),
    ],
    [
      "EmptyRef",
      (e) => ref(e === "_" ? void 0 : e === "0n" ? BigInt(0) : destr(e)),
    ],
    ["ShallowRef", (e) => shallowRef(e)],
    ["ShallowReactive", (e) => shallowReactive(e)],
    ["Ref", (e) => ref(e)],
    ["Reactive", (e) => reactive(e)],
  ],
  revive_payload_client_4sVQNw7RlN = defineNuxtPlugin({
    name: "nuxt:revive-payload:client",
    order: -30,
    async setup(e) {
      let t, r;
      for (const [n, i] of revivers) definePayloadReviver(n, i);
      Object.assign(
        e.payload,
        (([t, r] = executeAsync(() => e.runWithContext(getNuxtClientPayload))),
        (t = await t),
        r(),
        t)
      ),
        (window.__NUXT__ = e.payload);
    },
  });
/*!
 * shared v9.14.2
 * (c) 2024 kazuya kawaguchi
 * Released under the MIT License.
 */ const inBrowser$1 = typeof window < "u",
  makeSymbol = (e, t = !1) => (t ? Symbol.for(e) : Symbol(e)),
  generateFormatCacheKey = (e, t, r) =>
    friendlyJSONstringify({ l: e, k: t, s: r }),
  friendlyJSONstringify = (e) =>
    JSON.stringify(e)
      .replace(/\u2028/g, "\\u2028")
      .replace(/\u2029/g, "\\u2029")
      .replace(/\u0027/g, "\\u0027"),
  isNumber = (e) => typeof e == "number" && isFinite(e),
  isDate = (e) => toTypeString(e) === "[object Date]",
  isRegExp = (e) => toTypeString(e) === "[object RegExp]",
  isEmptyObject = (e) => isPlainObject$1(e) && Object.keys(e).length === 0,
  assign$1 = Object.assign,
  _create = Object.create,
  create = (e = null) => _create(e);
let _globalThis;
const getGlobalThis = () =>
  _globalThis ||
  (_globalThis =
    typeof globalThis < "u"
      ? globalThis
      : typeof self < "u"
      ? self
      : typeof window < "u"
      ? window
      : typeof global < "u"
      ? global
      : create());
function escapeHtml(e) {
  return e
    .replace(/</g, "&lt;")
    .replace(/>/g, "&gt;")
    .replace(/"/g, "&quot;")
    .replace(/'/g, "&apos;");
}
const hasOwnProperty = Object.prototype.hasOwnProperty;
function hasOwn(e, t) {
  return hasOwnProperty.call(e, t);
}
const isArray$1 = Array.isArray,
  isFunction = (e) => typeof e == "function",
  isString = (e) => typeof e == "string",
  isBoolean = (e) => typeof e == "boolean",
  isSymbol = (e) => typeof e == "symbol",
  isObject$1 = (e) => e !== null && typeof e == "object",
  isPromise = (e) => isObject$1(e) && isFunction(e.then) && isFunction(e.catch),
  objectToString = Object.prototype.toString,
  toTypeString = (e) => objectToString.call(e),
  isPlainObject$1 = (e) => {
    if (!isObject$1(e)) return !1;
    const t = Object.getPrototypeOf(e);
    return t === null || t.constructor === Object;
  },
  toDisplayString = (e) =>
    e == null
      ? ""
      : isArray$1(e) || (isPlainObject$1(e) && e.toString === objectToString)
      ? JSON.stringify(e, null, 2)
      : String(e);
function join(e, t = "") {
  return e.reduce((r, n, i) => (i === 0 ? r + n : r + t + n), "");
}
function incrementer(e) {
  let t = e;
  return () => ++t;
}
function warn(e, t) {
  typeof console < "u" &&
    (console.warn("[intlify] " + e), t && console.warn(t.stack));
}
const isNotObjectOrIsArray = (e) => !isObject$1(e) || isArray$1(e);
function deepCopy(e, t) {
  if (isNotObjectOrIsArray(e) || isNotObjectOrIsArray(t))
    throw new Error("Invalid value");
  const r = [{ src: e, des: t }];
  for (; r.length; ) {
    const { src: n, des: i } = r.pop();
    Object.keys(n).forEach((a) => {
      a !== "__proto__" &&
        (isObject$1(n[a]) &&
          !isObject$1(i[a]) &&
          (i[a] = Array.isArray(n[a]) ? [] : create()),
        isNotObjectOrIsArray(i[a]) || isNotObjectOrIsArray(n[a])
          ? (i[a] = n[a])
          : r.push({ src: n[a], des: i[a] }));
    });
  }
}
/*!
 * message-compiler v9.14.2
 * (c) 2024 kazuya kawaguchi
 * Released under the MIT License.
 */ function createPosition(e, t, r) {
  return { line: e, column: t, offset: r };
}
function createLocation(e, t, r) {
  return { start: e, end: t };
}
const CompileWarnCodes = { USE_MODULO_SYNTAX: 1, __EXTEND_POINT__: 2 };
function createCompileWarn(e, t, ...r) {
  const i = { message: String(e), code: e };
  return t && (i.location = t), i;
}
const CompileErrorCodes = {
  EXPECTED_TOKEN: 1,
  INVALID_TOKEN_IN_PLACEHOLDER: 2,
  UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER: 3,
  UNKNOWN_ESCAPE_SEQUENCE: 4,
  INVALID_UNICODE_ESCAPE_SEQUENCE: 5,
  UNBALANCED_CLOSING_BRACE: 6,
  UNTERMINATED_CLOSING_BRACE: 7,
  EMPTY_PLACEHOLDER: 8,
  NOT_ALLOW_NEST_PLACEHOLDER: 9,
  INVALID_LINKED_FORMAT: 10,
  MUST_HAVE_MESSAGES_IN_PLURAL: 11,
  UNEXPECTED_EMPTY_LINKED_MODIFIER: 12,
  UNEXPECTED_EMPTY_LINKED_KEY: 13,
  UNEXPECTED_LEXICAL_ANALYSIS: 14,
  UNHANDLED_CODEGEN_NODE_TYPE: 15,
  UNHANDLED_MINIFIER_NODE_TYPE: 16,
  __EXTEND_POINT__: 17,
};
function createCompileError(e, t, r = {}) {
  const { domain: n, messages: i, args: a } = r,
    o = e,
    l = new SyntaxError(String(o));
  return (l.code = e), t && (l.location = t), (l.domain = n), l;
}
function defaultOnError(e) {
  throw e;
}
const CHAR_SP = " ",
  CHAR_CR = "\r",
  CHAR_LF = `
`,
  CHAR_LS = "\u2028",
  CHAR_PS = "\u2029";
function createScanner(e) {
  const t = e;
  let r = 0,
    n = 1,
    i = 1,
    a = 0;
  const o = (D) => t[D] === CHAR_CR && t[D + 1] === CHAR_LF,
    l = (D) => t[D] === CHAR_LF,
    c = (D) => t[D] === CHAR_PS,
    u = (D) => t[D] === CHAR_LS,
    d = (D) => o(D) || l(D) || c(D) || u(D),
    E = () => r,
    b = () => n,
    P = () => i,
    R = () => a,
    T = (D) => (o(D) || c(D) || u(D) ? CHAR_LF : t[D]),
    M = () => T(r),
    x = () => T(r + a);
  function k() {
    return (a = 0), d(r) && (n++, (i = 0)), o(r) && r++, r++, i++, t[r];
  }
  function S() {
    return o(r + a) && a++, a++, t[r + a];
  }
  function A() {
    (r = 0), (n = 1), (i = 1), (a = 0);
  }
  function O(D = 0) {
    a = D;
  }
  function F() {
    const D = r + a;
    for (; D !== r; ) k();
    a = 0;
  }
  return {
    index: E,
    line: b,
    column: P,
    peekOffset: R,
    charAt: T,
    currentChar: M,
    currentPeek: x,
    next: k,
    peek: S,
    reset: A,
    resetPeek: O,
    skipToPeek: F,
  };
}
const EOF = void 0,
  DOT = ".",
  LITERAL_DELIMITER = "'",
  ERROR_DOMAIN$3 = "tokenizer";
function createTokenizer(e, t = {}) {
  const r = t.location !== !1,
    n = createScanner(e),
    i = () => n.index(),
    a = () => createPosition(n.line(), n.column(), n.index()),
    o = a(),
    l = i(),
    c = {
      currentType: 14,
      offset: l,
      startLoc: o,
      endLoc: o,
      lastType: 14,
      lastOffset: l,
      lastStartLoc: o,
      lastEndLoc: o,
      braceNest: 0,
      inLinked: !1,
      text: "",
    },
    u = () => c,
    { onError: d } = t;
  function E(j, U, X, ...oe) {
    const fe = u();
    if (((U.column += X), (U.offset += X), d)) {
      const ue = r ? createLocation(fe.startLoc, U) : null,
        Z = createCompileError(j, ue, { domain: ERROR_DOMAIN$3, args: oe });
      d(Z);
    }
  }
  function b(j, U, X) {
    (j.endLoc = a()), (j.currentType = U);
    const oe = { type: U };
    return (
      r && (oe.loc = createLocation(j.startLoc, j.endLoc)),
      X != null && (oe.value = X),
      oe
    );
  }
  const P = (j) => b(j, 14);
  function R(j, U) {
    return j.currentChar() === U
      ? (j.next(), U)
      : (E(CompileErrorCodes.EXPECTED_TOKEN, a(), 0, U), "");
  }
  function T(j) {
    let U = "";
    for (; j.currentPeek() === CHAR_SP || j.currentPeek() === CHAR_LF; )
      (U += j.currentPeek()), j.peek();
    return U;
  }
  function M(j) {
    const U = T(j);
    return j.skipToPeek(), U;
  }
  function x(j) {
    if (j === EOF) return !1;
    const U = j.charCodeAt(0);
    return (U >= 97 && U <= 122) || (U >= 65 && U <= 90) || U === 95;
  }
  function k(j) {
    if (j === EOF) return !1;
    const U = j.charCodeAt(0);
    return U >= 48 && U <= 57;
  }
  function S(j, U) {
    const { currentType: X } = U;
    if (X !== 2) return !1;
    T(j);
    const oe = x(j.currentPeek());
    return j.resetPeek(), oe;
  }
  function A(j, U) {
    const { currentType: X } = U;
    if (X !== 2) return !1;
    T(j);
    const oe = j.currentPeek() === "-" ? j.peek() : j.currentPeek(),
      fe = k(oe);
    return j.resetPeek(), fe;
  }
  function O(j, U) {
    const { currentType: X } = U;
    if (X !== 2) return !1;
    T(j);
    const oe = j.currentPeek() === LITERAL_DELIMITER;
    return j.resetPeek(), oe;
  }
  function F(j, U) {
    const { currentType: X } = U;
    if (X !== 8) return !1;
    T(j);
    const oe = j.currentPeek() === ".";
    return j.resetPeek(), oe;
  }
  function D(j, U) {
    const { currentType: X } = U;
    if (X !== 9) return !1;
    T(j);
    const oe = x(j.currentPeek());
    return j.resetPeek(), oe;
  }
  function H(j, U) {
    const { currentType: X } = U;
    if (!(X === 8 || X === 12)) return !1;
    T(j);
    const oe = j.currentPeek() === ":";
    return j.resetPeek(), oe;
  }
  function $(j, U) {
    const { currentType: X } = U;
    if (X !== 10) return !1;
    const oe = () => {
        const ue = j.currentPeek();
        return ue === "{"
          ? x(j.peek())
          : ue === "@" ||
            ue === "%" ||
            ue === "|" ||
            ue === ":" ||
            ue === "." ||
            ue === CHAR_SP ||
            !ue
          ? !1
          : ue === CHAR_LF
          ? (j.peek(), oe())
          : K(j, !1);
      },
      fe = oe();
    return j.resetPeek(), fe;
  }
  function q(j) {
    T(j);
    const U = j.currentPeek() === "|";
    return j.resetPeek(), U;
  }
  function J(j) {
    const U = T(j),
      X = j.currentPeek() === "%" && j.peek() === "{";
    return j.resetPeek(), { isModulo: X, hasSpace: U.length > 0 };
  }
  function K(j, U = !0) {
    const X = (fe = !1, ue = "", Z = !1) => {
        const ne = j.currentPeek();
        return ne === "{"
          ? ue === "%"
            ? !1
            : fe
          : ne === "@" || !ne
          ? ue === "%"
            ? !0
            : fe
          : ne === "%"
          ? (j.peek(), X(fe, "%", !0))
          : ne === "|"
          ? ue === "%" || Z
            ? !0
            : !(ue === CHAR_SP || ue === CHAR_LF)
          : ne === CHAR_SP
          ? (j.peek(), X(!0, CHAR_SP, Z))
          : ne === CHAR_LF
          ? (j.peek(), X(!0, CHAR_LF, Z))
          : !0;
      },
      oe = X();
    return U && j.resetPeek(), oe;
  }
  function ee(j, U) {
    const X = j.currentChar();
    return X === EOF ? EOF : U(X) ? (j.next(), X) : null;
  }
  function le(j) {
    const U = j.charCodeAt(0);
    return (
      (U >= 97 && U <= 122) ||
      (U >= 65 && U <= 90) ||
      (U >= 48 && U <= 57) ||
      U === 95 ||
      U === 36
    );
  }
  function re(j) {
    return ee(j, le);
  }
  function B(j) {
    const U = j.charCodeAt(0);
    return (
      (U >= 97 && U <= 122) ||
      (U >= 65 && U <= 90) ||
      (U >= 48 && U <= 57) ||
      U === 95 ||
      U === 36 ||
      U === 45
    );
  }
  function z(j) {
    return ee(j, B);
  }
  function N(j) {
    const U = j.charCodeAt(0);
    return U >= 48 && U <= 57;
  }
  function V(j) {
    return ee(j, N);
  }
  function Q(j) {
    const U = j.charCodeAt(0);
    return (
      (U >= 48 && U <= 57) || (U >= 65 && U <= 70) || (U >= 97 && U <= 102)
    );
  }
  function Y(j) {
    return ee(j, Q);
  }
  function he(j) {
    let U = "",
      X = "";
    for (; (U = V(j)); ) X += U;
    return X;
  }
  function ye(j) {
    M(j);
    const U = j.currentChar();
    return (
      U !== "%" && E(CompileErrorCodes.EXPECTED_TOKEN, a(), 0, U), j.next(), "%"
    );
  }
  function ve(j) {
    let U = "";
    for (;;) {
      const X = j.currentChar();
      if (X === "{" || X === "}" || X === "@" || X === "|" || !X) break;
      if (X === "%")
        if (K(j)) (U += X), j.next();
        else break;
      else if (X === CHAR_SP || X === CHAR_LF)
        if (K(j)) (U += X), j.next();
        else {
          if (q(j)) break;
          (U += X), j.next();
        }
      else (U += X), j.next();
    }
    return U;
  }
  function Pe(j) {
    M(j);
    let U = "",
      X = "";
    for (; (U = z(j)); ) X += U;
    return (
      j.currentChar() === EOF &&
        E(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, a(), 0),
      X
    );
  }
  function Ce(j) {
    M(j);
    let U = "";
    return (
      j.currentChar() === "-" ? (j.next(), (U += `-${he(j)}`)) : (U += he(j)),
      j.currentChar() === EOF &&
        E(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, a(), 0),
      U
    );
  }
  function ie(j) {
    return j !== LITERAL_DELIMITER && j !== CHAR_LF;
  }
  function me(j) {
    M(j), R(j, "'");
    let U = "",
      X = "";
    for (; (U = ee(j, ie)); ) U === "\\" ? (X += pe(j)) : (X += U);
    const oe = j.currentChar();
    return oe === CHAR_LF || oe === EOF
      ? (E(CompileErrorCodes.UNTERMINATED_SINGLE_QUOTE_IN_PLACEHOLDER, a(), 0),
        oe === CHAR_LF && (j.next(), R(j, "'")),
        X)
      : (R(j, "'"), X);
  }
  function pe(j) {
    const U = j.currentChar();
    switch (U) {
      case "\\":
      case "'":
        return j.next(), `\\${U}`;
      case "u":
        return ge(j, U, 4);
      case "U":
        return ge(j, U, 6);
      default:
        return E(CompileErrorCodes.UNKNOWN_ESCAPE_SEQUENCE, a(), 0, U), "";
    }
  }
  function ge(j, U, X) {
    R(j, U);
    let oe = "";
    for (let fe = 0; fe < X; fe++) {
      const ue = Y(j);
      if (!ue) {
        E(
          CompileErrorCodes.INVALID_UNICODE_ESCAPE_SEQUENCE,
          a(),
          0,
          `\\${U}${oe}${j.currentChar()}`
        );
        break;
      }
      oe += ue;
    }
    return `\\${U}${oe}`;
  }
  function Ee(j) {
    return j !== "{" && j !== "}" && j !== CHAR_SP && j !== CHAR_LF;
  }
  function Se(j) {
    M(j);
    let U = "",
      X = "";
    for (; (U = ee(j, Ee)); ) X += U;
    return X;
  }
  function W(j) {
    let U = "",
      X = "";
    for (; (U = re(j)); ) X += U;
    return X;
  }
  function G(j) {
    const U = (X) => {
      const oe = j.currentChar();
      return oe === "{" ||
        oe === "%" ||
        oe === "@" ||
        oe === "|" ||
        oe === "(" ||
        oe === ")" ||
        !oe ||
        oe === CHAR_SP
        ? X
        : ((X += oe), j.next(), U(X));
    };
    return U("");
  }
  function te(j) {
    M(j);
    const U = R(j, "|");
    return M(j), U;
  }
  function ae(j, U) {
    let X = null;
    switch (j.currentChar()) {
      case "{":
        return (
          U.braceNest >= 1 &&
            E(CompileErrorCodes.NOT_ALLOW_NEST_PLACEHOLDER, a(), 0),
          j.next(),
          (X = b(U, 2, "{")),
          M(j),
          U.braceNest++,
          X
        );
      case "}":
        return (
          U.braceNest > 0 &&
            U.currentType === 2 &&
            E(CompileErrorCodes.EMPTY_PLACEHOLDER, a(), 0),
          j.next(),
          (X = b(U, 3, "}")),
          U.braceNest--,
          U.braceNest > 0 && M(j),
          U.inLinked && U.braceNest === 0 && (U.inLinked = !1),
          X
        );
      case "@":
        return (
          U.braceNest > 0 &&
            E(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, a(), 0),
          (X = se(j, U) || P(U)),
          (U.braceNest = 0),
          X
        );
      default: {
        let fe = !0,
          ue = !0,
          Z = !0;
        if (q(j))
          return (
            U.braceNest > 0 &&
              E(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, a(), 0),
            (X = b(U, 1, te(j))),
            (U.braceNest = 0),
            (U.inLinked = !1),
            X
          );
        if (
          U.braceNest > 0 &&
          (U.currentType === 5 || U.currentType === 6 || U.currentType === 7)
        )
          return (
            E(CompileErrorCodes.UNTERMINATED_CLOSING_BRACE, a(), 0),
            (U.braceNest = 0),
            ce(j, U)
          );
        if ((fe = S(j, U))) return (X = b(U, 5, Pe(j))), M(j), X;
        if ((ue = A(j, U))) return (X = b(U, 6, Ce(j))), M(j), X;
        if ((Z = O(j, U))) return (X = b(U, 7, me(j))), M(j), X;
        if (!fe && !ue && !Z)
          return (
            (X = b(U, 13, Se(j))),
            E(CompileErrorCodes.INVALID_TOKEN_IN_PLACEHOLDER, a(), 0, X.value),
            M(j),
            X
          );
        break;
      }
    }
    return X;
  }
  function se(j, U) {
    const { currentType: X } = U;
    let oe = null;
    const fe = j.currentChar();
    switch (
      ((X === 8 || X === 9 || X === 12 || X === 10) &&
        (fe === CHAR_LF || fe === CHAR_SP) &&
        E(CompileErrorCodes.INVALID_LINKED_FORMAT, a(), 0),
      fe)
    ) {
      case "@":
        return j.next(), (oe = b(U, 8, "@")), (U.inLinked = !0), oe;
      case ".":
        return M(j), j.next(), b(U, 9, ".");
      case ":":
        return M(j), j.next(), b(U, 10, ":");
      default:
        return q(j)
          ? ((oe = b(U, 1, te(j))), (U.braceNest = 0), (U.inLinked = !1), oe)
          : F(j, U) || H(j, U)
          ? (M(j), se(j, U))
          : D(j, U)
          ? (M(j), b(U, 12, W(j)))
          : $(j, U)
          ? (M(j), fe === "{" ? ae(j, U) || oe : b(U, 11, G(j)))
          : (X === 8 && E(CompileErrorCodes.INVALID_LINKED_FORMAT, a(), 0),
            (U.braceNest = 0),
            (U.inLinked = !1),
            ce(j, U));
    }
  }
  function ce(j, U) {
    let X = { type: 14 };
    if (U.braceNest > 0) return ae(j, U) || P(U);
    if (U.inLinked) return se(j, U) || P(U);
    switch (j.currentChar()) {
      case "{":
        return ae(j, U) || P(U);
      case "}":
        return (
          E(CompileErrorCodes.UNBALANCED_CLOSING_BRACE, a(), 0),
          j.next(),
          b(U, 3, "}")
        );
      case "@":
        return se(j, U) || P(U);
      default: {
        if (q(j))
          return (X = b(U, 1, te(j))), (U.braceNest = 0), (U.inLinked = !1), X;
        const { isModulo: fe, hasSpace: ue } = J(j);
        if (fe) return ue ? b(U, 0, ve(j)) : b(U, 4, ye(j));
        if (K(j)) return b(U, 0, ve(j));
        break;
      }
    }
    return X;
  }
  function de() {
    const { currentType: j, offset: U, startLoc: X, endLoc: oe } = c;
    return (
      (c.lastType = j),
      (c.lastOffset = U),
      (c.lastStartLoc = X),
      (c.lastEndLoc = oe),
      (c.offset = i()),
      (c.startLoc = a()),
      n.currentChar() === EOF ? b(c, 14) : ce(n, c)
    );
  }
  return { nextToken: de, currentOffset: i, currentPosition: a, context: u };
}
const ERROR_DOMAIN$2 = "parser",
  KNOWN_ESCAPES = /(?:\\\\|\\'|\\u([0-9a-fA-F]{4})|\\U([0-9a-fA-F]{6}))/g;
function fromEscapeSequence(e, t, r) {
  switch (e) {
    case "\\\\":
      return "\\";
    case "\\'":
      return "'";
    default: {
      const n = parseInt(t || r, 16);
      return n <= 55295 || n >= 57344 ? String.fromCodePoint(n) : "�";
    }
  }
}
function createParser(e = {}) {
  const t = e.location !== !1,
    { onError: r, onWarn: n } = e;
  function i(S, A, O, F, ...D) {
    const H = S.currentPosition();
    if (((H.offset += F), (H.column += F), r)) {
      const $ = t ? createLocation(O, H) : null,
        q = createCompileError(A, $, { domain: ERROR_DOMAIN$2, args: D });
      r(q);
    }
  }
  function a(S, A, O, F, ...D) {
    const H = S.currentPosition();
    if (((H.offset += F), (H.column += F), n)) {
      const $ = t ? createLocation(O, H) : null;
      n(createCompileWarn(A, $, D));
    }
  }
  function o(S, A, O) {
    const F = { type: S };
    return t && ((F.start = A), (F.end = A), (F.loc = { start: O, end: O })), F;
  }
  function l(S, A, O, F) {
    t && ((S.end = A), S.loc && (S.loc.end = O));
  }
  function c(S, A) {
    const O = S.context(),
      F = o(3, O.offset, O.startLoc);
    return (F.value = A), l(F, S.currentOffset(), S.currentPosition()), F;
  }
  function u(S, A) {
    const O = S.context(),
      { lastOffset: F, lastStartLoc: D } = O,
      H = o(5, F, D);
    return (
      (H.index = parseInt(A, 10)),
      S.nextToken(),
      l(H, S.currentOffset(), S.currentPosition()),
      H
    );
  }
  function d(S, A, O) {
    const F = S.context(),
      { lastOffset: D, lastStartLoc: H } = F,
      $ = o(4, D, H);
    return (
      ($.key = A),
      O === !0 && ($.modulo = !0),
      S.nextToken(),
      l($, S.currentOffset(), S.currentPosition()),
      $
    );
  }
  function E(S, A) {
    const O = S.context(),
      { lastOffset: F, lastStartLoc: D } = O,
      H = o(9, F, D);
    return (
      (H.value = A.replace(KNOWN_ESCAPES, fromEscapeSequence)),
      S.nextToken(),
      l(H, S.currentOffset(), S.currentPosition()),
      H
    );
  }
  function b(S) {
    const A = S.nextToken(),
      O = S.context(),
      { lastOffset: F, lastStartLoc: D } = O,
      H = o(8, F, D);
    return A.type !== 12
      ? (i(
          S,
          CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_MODIFIER,
          O.lastStartLoc,
          0
        ),
        (H.value = ""),
        l(H, F, D),
        { nextConsumeToken: A, node: H })
      : (A.value == null &&
          i(
            S,
            CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
            O.lastStartLoc,
            0,
            getTokenCaption(A)
          ),
        (H.value = A.value || ""),
        l(H, S.currentOffset(), S.currentPosition()),
        { node: H });
  }
  function P(S, A) {
    const O = S.context(),
      F = o(7, O.offset, O.startLoc);
    return (F.value = A), l(F, S.currentOffset(), S.currentPosition()), F;
  }
  function R(S) {
    const A = S.context(),
      O = o(6, A.offset, A.startLoc);
    let F = S.nextToken();
    if (F.type === 9) {
      const D = b(S);
      (O.modifier = D.node), (F = D.nextConsumeToken || S.nextToken());
    }
    switch (
      (F.type !== 10 &&
        i(
          S,
          CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
          A.lastStartLoc,
          0,
          getTokenCaption(F)
        ),
      (F = S.nextToken()),
      F.type === 2 && (F = S.nextToken()),
      F.type)
    ) {
      case 11:
        F.value == null &&
          i(
            S,
            CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
            A.lastStartLoc,
            0,
            getTokenCaption(F)
          ),
          (O.key = P(S, F.value || ""));
        break;
      case 5:
        F.value == null &&
          i(
            S,
            CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
            A.lastStartLoc,
            0,
            getTokenCaption(F)
          ),
          (O.key = d(S, F.value || ""));
        break;
      case 6:
        F.value == null &&
          i(
            S,
            CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
            A.lastStartLoc,
            0,
            getTokenCaption(F)
          ),
          (O.key = u(S, F.value || ""));
        break;
      case 7:
        F.value == null &&
          i(
            S,
            CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
            A.lastStartLoc,
            0,
            getTokenCaption(F)
          ),
          (O.key = E(S, F.value || ""));
        break;
      default: {
        i(S, CompileErrorCodes.UNEXPECTED_EMPTY_LINKED_KEY, A.lastStartLoc, 0);
        const D = S.context(),
          H = o(7, D.offset, D.startLoc);
        return (
          (H.value = ""),
          l(H, D.offset, D.startLoc),
          (O.key = H),
          l(O, D.offset, D.startLoc),
          { nextConsumeToken: F, node: O }
        );
      }
    }
    return l(O, S.currentOffset(), S.currentPosition()), { node: O };
  }
  function T(S) {
    const A = S.context(),
      O = A.currentType === 1 ? S.currentOffset() : A.offset,
      F = A.currentType === 1 ? A.endLoc : A.startLoc,
      D = o(2, O, F);
    D.items = [];
    let H = null,
      $ = null;
    do {
      const K = H || S.nextToken();
      switch (((H = null), K.type)) {
        case 0:
          K.value == null &&
            i(
              S,
              CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
              A.lastStartLoc,
              0,
              getTokenCaption(K)
            ),
            D.items.push(c(S, K.value || ""));
          break;
        case 6:
          K.value == null &&
            i(
              S,
              CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
              A.lastStartLoc,
              0,
              getTokenCaption(K)
            ),
            D.items.push(u(S, K.value || ""));
          break;
        case 4:
          $ = !0;
          break;
        case 5:
          K.value == null &&
            i(
              S,
              CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
              A.lastStartLoc,
              0,
              getTokenCaption(K)
            ),
            D.items.push(d(S, K.value || "", !!$)),
            $ &&
              (a(
                S,
                CompileWarnCodes.USE_MODULO_SYNTAX,
                A.lastStartLoc,
                0,
                getTokenCaption(K)
              ),
              ($ = null));
          break;
        case 7:
          K.value == null &&
            i(
              S,
              CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
              A.lastStartLoc,
              0,
              getTokenCaption(K)
            ),
            D.items.push(E(S, K.value || ""));
          break;
        case 8: {
          const ee = R(S);
          D.items.push(ee.node), (H = ee.nextConsumeToken || null);
          break;
        }
      }
    } while (A.currentType !== 14 && A.currentType !== 1);
    const q = A.currentType === 1 ? A.lastOffset : S.currentOffset(),
      J = A.currentType === 1 ? A.lastEndLoc : S.currentPosition();
    return l(D, q, J), D;
  }
  function M(S, A, O, F) {
    const D = S.context();
    let H = F.items.length === 0;
    const $ = o(1, A, O);
    ($.cases = []), $.cases.push(F);
    do {
      const q = T(S);
      H || (H = q.items.length === 0), $.cases.push(q);
    } while (D.currentType !== 14);
    return (
      H && i(S, CompileErrorCodes.MUST_HAVE_MESSAGES_IN_PLURAL, O, 0),
      l($, S.currentOffset(), S.currentPosition()),
      $
    );
  }
  function x(S) {
    const A = S.context(),
      { offset: O, startLoc: F } = A,
      D = T(S);
    return A.currentType === 14 ? D : M(S, O, F, D);
  }
  function k(S) {
    const A = createTokenizer(S, assign$1({}, e)),
      O = A.context(),
      F = o(0, O.offset, O.startLoc);
    return (
      t && F.loc && (F.loc.source = S),
      (F.body = x(A)),
      e.onCacheKey && (F.cacheKey = e.onCacheKey(S)),
      O.currentType !== 14 &&
        i(
          A,
          CompileErrorCodes.UNEXPECTED_LEXICAL_ANALYSIS,
          O.lastStartLoc,
          0,
          S[O.offset] || ""
        ),
      l(F, A.currentOffset(), A.currentPosition()),
      F
    );
  }
  return { parse: k };
}
function getTokenCaption(e) {
  if (e.type === 14) return "EOF";
  const t = (e.value || "").replace(/\r?\n/gu, "\\n");
  return t.length > 10 ? t.slice(0, 9) + "…" : t;
}
function createTransformer(e, t = {}) {
  const r = { ast: e, helpers: new Set() };
  return { context: () => r, helper: (a) => (r.helpers.add(a), a) };
}
function traverseNodes(e, t) {
  for (let r = 0; r < e.length; r++) traverseNode(e[r], t);
}
function traverseNode(e, t) {
  switch (e.type) {
    case 1:
      traverseNodes(e.cases, t), t.helper("plural");
      break;
    case 2:
      traverseNodes(e.items, t);
      break;
    case 6: {
      traverseNode(e.key, t), t.helper("linked"), t.helper("type");
      break;
    }
    case 5:
      t.helper("interpolate"), t.helper("list");
      break;
    case 4:
      t.helper("interpolate"), t.helper("named");
      break;
  }
}
function transform(e, t = {}) {
  const r = createTransformer(e);
  r.helper("normalize"), e.body && traverseNode(e.body, r);
  const n = r.context();
  e.helpers = Array.from(n.helpers);
}
function optimize(e) {
  const t = e.body;
  return (
    t.type === 2
      ? optimizeMessageNode(t)
      : t.cases.forEach((r) => optimizeMessageNode(r)),
    e
  );
}
function optimizeMessageNode(e) {
  if (e.items.length === 1) {
    const t = e.items[0];
    (t.type === 3 || t.type === 9) && ((e.static = t.value), delete t.value);
  } else {
    const t = [];
    for (let r = 0; r < e.items.length; r++) {
      const n = e.items[r];
      if (!(n.type === 3 || n.type === 9) || n.value == null) break;
      t.push(n.value);
    }
    if (t.length === e.items.length) {
      e.static = join(t);
      for (let r = 0; r < e.items.length; r++) {
        const n = e.items[r];
        (n.type === 3 || n.type === 9) && delete n.value;
      }
    }
  }
}
function minify(e) {
  switch (((e.t = e.type), e.type)) {
    case 0: {
      const t = e;
      minify(t.body), (t.b = t.body), delete t.body;
      break;
    }
    case 1: {
      const t = e,
        r = t.cases;
      for (let n = 0; n < r.length; n++) minify(r[n]);
      (t.c = r), delete t.cases;
      break;
    }
    case 2: {
      const t = e,
        r = t.items;
      for (let n = 0; n < r.length; n++) minify(r[n]);
      (t.i = r),
        delete t.items,
        t.static && ((t.s = t.static), delete t.static);
      break;
    }
    case 3:
    case 9:
    case 8:
    case 7: {
      const t = e;
      t.value && ((t.v = t.value), delete t.value);
      break;
    }
    case 6: {
      const t = e;
      minify(t.key),
        (t.k = t.key),
        delete t.key,
        t.modifier &&
          (minify(t.modifier), (t.m = t.modifier), delete t.modifier);
      break;
    }
    case 5: {
      const t = e;
      (t.i = t.index), delete t.index;
      break;
    }
    case 4: {
      const t = e;
      (t.k = t.key), delete t.key;
      break;
    }
  }
  delete e.type;
}
function createCodeGenerator(e, t) {
  const { sourceMap: r, filename: n, breakLineCode: i, needIndent: a } = t,
    o = t.location !== !1,
    l = {
      filename: n,
      code: "",
      column: 1,
      line: 1,
      offset: 0,
      map: void 0,
      breakLineCode: i,
      needIndent: a,
      indentLevel: 0,
    };
  o && e.loc && (l.source = e.loc.source);
  const c = () => l;
  function u(M, x) {
    l.code += M;
  }
  function d(M, x = !0) {
    const k = x ? i : "";
    u(a ? k + "  ".repeat(M) : k);
  }
  function E(M = !0) {
    const x = ++l.indentLevel;
    M && d(x);
  }
  function b(M = !0) {
    const x = --l.indentLevel;
    M && d(x);
  }
  function P() {
    d(l.indentLevel);
  }
  return {
    context: c,
    push: u,
    indent: E,
    deindent: b,
    newline: P,
    helper: (M) => `_${M}`,
    needIndent: () => l.needIndent,
  };
}
function generateLinkedNode(e, t) {
  const { helper: r } = e;
  e.push(`${r("linked")}(`),
    generateNode(e, t.key),
    t.modifier
      ? (e.push(", "), generateNode(e, t.modifier), e.push(", _type"))
      : e.push(", undefined, _type"),
    e.push(")");
}
function generateMessageNode(e, t) {
  const { helper: r, needIndent: n } = e;
  e.push(`${r("normalize")}([`), e.indent(n());
  const i = t.items.length;
  for (let a = 0; a < i && (generateNode(e, t.items[a]), a !== i - 1); a++)
    e.push(", ");
  e.deindent(n()), e.push("])");
}
function generatePluralNode(e, t) {
  const { helper: r, needIndent: n } = e;
  if (t.cases.length > 1) {
    e.push(`${r("plural")}([`), e.indent(n());
    const i = t.cases.length;
    for (let a = 0; a < i && (generateNode(e, t.cases[a]), a !== i - 1); a++)
      e.push(", ");
    e.deindent(n()), e.push("])");
  }
}
function generateResource(e, t) {
  t.body ? generateNode(e, t.body) : e.push("null");
}
function generateNode(e, t) {
  const { helper: r } = e;
  switch (t.type) {
    case 0:
      generateResource(e, t);
      break;
    case 1:
      generatePluralNode(e, t);
      break;
    case 2:
      generateMessageNode(e, t);
      break;
    case 6:
      generateLinkedNode(e, t);
      break;
    case 8:
      e.push(JSON.stringify(t.value), t);
      break;
    case 7:
      e.push(JSON.stringify(t.value), t);
      break;
    case 5:
      e.push(`${r("interpolate")}(${r("list")}(${t.index}))`, t);
      break;
    case 4:
      e.push(`${r("interpolate")}(${r("named")}(${JSON.stringify(t.key)}))`, t);
      break;
    case 9:
      e.push(JSON.stringify(t.value), t);
      break;
    case 3:
      e.push(JSON.stringify(t.value), t);
      break;
  }
}
const generate = (e, t = {}) => {
  const r = isString(t.mode) ? t.mode : "normal",
    n = isString(t.filename) ? t.filename : "message.intl",
    i = !!t.sourceMap,
    a =
      t.breakLineCode != null
        ? t.breakLineCode
        : r === "arrow"
        ? ";"
        : `
`,
    o = t.needIndent ? t.needIndent : r !== "arrow",
    l = e.helpers || [],
    c = createCodeGenerator(e, {
      mode: r,
      filename: n,
      sourceMap: i,
      breakLineCode: a,
      needIndent: o,
    });
  c.push(r === "normal" ? "function __msg__ (ctx) {" : "(ctx) => {"),
    c.indent(o),
    l.length > 0 &&
      (c.push(
        `const { ${join(
          l.map((E) => `${E}: _${E}`),
          ", "
        )} } = ctx`
      ),
      c.newline()),
    c.push("return "),
    generateNode(c, e),
    c.deindent(o),
    c.push("}"),
    delete e.helpers;
  const { code: u, map: d } = c.context();
  return { ast: e, code: u, map: d ? d.toJSON() : void 0 };
};
function baseCompile$1(e, t = {}) {
  const r = assign$1({}, t),
    n = !!r.jit,
    i = !!r.minify,
    a = r.optimize == null ? !0 : r.optimize,
    l = createParser(r).parse(e);
  return n
    ? (a && optimize(l), i && minify(l), { ast: l, code: "" })
    : (transform(l, r), generate(l, r));
}
/*!
 * core-base v9.14.2
 * (c) 2024 kazuya kawaguchi
 * Released under the MIT License.
 */ function initFeatureFlags$1() {
  typeof __INTLIFY_PROD_DEVTOOLS__ != "boolean" &&
    (getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = !1);
}
const pathStateMachine = [];
pathStateMachine[0] = { w: [0], i: [3, 0], "[": [4], o: [7] };
pathStateMachine[1] = { w: [1], ".": [2], "[": [4], o: [7] };
pathStateMachine[2] = { w: [2], i: [3, 0], 0: [3, 0] };
pathStateMachine[3] = {
  i: [3, 0],
  0: [3, 0],
  w: [1, 1],
  ".": [2, 1],
  "[": [4, 1],
  o: [7, 1],
};
pathStateMachine[4] = {
  "'": [5, 0],
  '"': [6, 0],
  "[": [4, 2],
  "]": [1, 3],
  o: 8,
  l: [4, 0],
};
pathStateMachine[5] = { "'": [4, 0], o: 8, l: [5, 0] };
pathStateMachine[6] = { '"': [4, 0], o: 8, l: [6, 0] };
const literalValueRE = /^\s?(?:true|false|-?[\d.]+|'[^']*'|"[^"]*")\s?$/;
function isLiteral(e) {
  return literalValueRE.test(e);
}
function stripQuotes(e) {
  const t = e.charCodeAt(0),
    r = e.charCodeAt(e.length - 1);
  return t === r && (t === 34 || t === 39) ? e.slice(1, -1) : e;
}
function getPathCharType(e) {
  if (e == null) return "o";
  switch (e.charCodeAt(0)) {
    case 91:
    case 93:
    case 46:
    case 34:
    case 39:
      return e;
    case 95:
    case 36:
    case 45:
      return "i";
    case 9:
    case 10:
    case 13:
    case 160:
    case 65279:
    case 8232:
    case 8233:
      return "w";
  }
  return "i";
}
function formatSubPath(e) {
  const t = e.trim();
  return e.charAt(0) === "0" && isNaN(parseInt(e))
    ? !1
    : isLiteral(t)
    ? stripQuotes(t)
    : "*" + t;
}
function parse(e) {
  const t = [];
  let r = -1,
    n = 0,
    i = 0,
    a,
    o,
    l,
    c,
    u,
    d,
    E;
  const b = [];
  (b[0] = () => {
    o === void 0 ? (o = l) : (o += l);
  }),
    (b[1] = () => {
      o !== void 0 && (t.push(o), (o = void 0));
    }),
    (b[2] = () => {
      b[0](), i++;
    }),
    (b[3] = () => {
      if (i > 0) i--, (n = 4), b[0]();
      else {
        if (((i = 0), o === void 0 || ((o = formatSubPath(o)), o === !1)))
          return !1;
        b[1]();
      }
    });
  function P() {
    const R = e[r + 1];
    if ((n === 5 && R === "'") || (n === 6 && R === '"'))
      return r++, (l = "\\" + R), b[0](), !0;
  }
  for (; n !== null; )
    if ((r++, (a = e[r]), !(a === "\\" && P()))) {
      if (
        ((c = getPathCharType(a)),
        (E = pathStateMachine[n]),
        (u = E[c] || E.l || 8),
        u === 8 ||
          ((n = u[0]),
          u[1] !== void 0 && ((d = b[u[1]]), d && ((l = a), d() === !1))))
      )
        return;
      if (n === 7) return t;
    }
}
const cache = new Map();
function resolveWithKeyValue(e, t) {
  return isObject$1(e) ? e[t] : null;
}
function resolveValue$1(e, t) {
  if (!isObject$1(e)) return null;
  let r = cache.get(t);
  if ((r || ((r = parse(t)), r && cache.set(t, r)), !r)) return null;
  const n = r.length;
  let i = e,
    a = 0;
  for (; a < n; ) {
    const o = i[r[a]];
    if (o === void 0 || isFunction(i)) return null;
    (i = o), a++;
  }
  return i;
}
const DEFAULT_MODIFIER = (e) => e,
  DEFAULT_MESSAGE = (e) => "",
  DEFAULT_MESSAGE_DATA_TYPE = "text",
  DEFAULT_NORMALIZE = (e) => (e.length === 0 ? "" : join(e)),
  DEFAULT_INTERPOLATE = toDisplayString;
function pluralDefault(e, t) {
  return (
    (e = Math.abs(e)),
    t === 2 ? (e ? (e > 1 ? 1 : 0) : 1) : e ? Math.min(e, 2) : 0
  );
}
function getPluralIndex(e) {
  const t = isNumber(e.pluralIndex) ? e.pluralIndex : -1;
  return e.named && (isNumber(e.named.count) || isNumber(e.named.n))
    ? isNumber(e.named.count)
      ? e.named.count
      : isNumber(e.named.n)
      ? e.named.n
      : t
    : t;
}
function normalizeNamed(e, t) {
  t.count || (t.count = e), t.n || (t.n = e);
}
function createMessageContext(e = {}) {
  const t = e.locale,
    r = getPluralIndex(e),
    n =
      isObject$1(e.pluralRules) && isString(t) && isFunction(e.pluralRules[t])
        ? e.pluralRules[t]
        : pluralDefault,
    i =
      isObject$1(e.pluralRules) && isString(t) && isFunction(e.pluralRules[t])
        ? pluralDefault
        : void 0,
    a = (x) => x[n(r, x.length, i)],
    o = e.list || [],
    l = (x) => o[x],
    c = e.named || create();
  isNumber(e.pluralIndex) && normalizeNamed(r, c);
  const u = (x) => c[x];
  function d(x) {
    const k = isFunction(e.messages)
      ? e.messages(x)
      : isObject$1(e.messages)
      ? e.messages[x]
      : !1;
    return k || (e.parent ? e.parent.message(x) : DEFAULT_MESSAGE);
  }
  const E = (x) => (e.modifiers ? e.modifiers[x] : DEFAULT_MODIFIER),
    b =
      isPlainObject$1(e.processor) && isFunction(e.processor.normalize)
        ? e.processor.normalize
        : DEFAULT_NORMALIZE,
    P =
      isPlainObject$1(e.processor) && isFunction(e.processor.interpolate)
        ? e.processor.interpolate
        : DEFAULT_INTERPOLATE,
    R =
      isPlainObject$1(e.processor) && isString(e.processor.type)
        ? e.processor.type
        : DEFAULT_MESSAGE_DATA_TYPE,
    M = {
      list: l,
      named: u,
      plural: a,
      linked: (x, ...k) => {
        const [S, A] = k;
        let O = "text",
          F = "";
        k.length === 1
          ? isObject$1(S)
            ? ((F = S.modifier || F), (O = S.type || O))
            : isString(S) && (F = S || F)
          : k.length === 2 &&
            (isString(S) && (F = S || F), isString(A) && (O = A || O));
        const D = d(x)(M),
          H = O === "vnode" && isArray$1(D) && F ? D[0] : D;
        return F ? E(F)(H, O) : H;
      },
      message: d,
      type: R,
      interpolate: P,
      normalize: b,
      values: assign$1(create(), o, c),
    };
  return M;
}
let devtools = null;
function setDevToolsHook(e) {
  devtools = e;
}
function initI18nDevTools(e, t, r) {
  devtools &&
    devtools.emit("i18n:init", {
      timestamp: Date.now(),
      i18n: e,
      version: t,
      meta: r,
    });
}
const translateDevTools = createDevToolsHook("function:translate");
function createDevToolsHook(e) {
  return (t) => devtools && devtools.emit(e, t);
}
const code$1$1 = CompileWarnCodes.__EXTEND_POINT__,
  inc$1$1 = incrementer(code$1$1),
  CoreWarnCodes = {
    NOT_FOUND_KEY: code$1$1,
    FALLBACK_TO_TRANSLATE: inc$1$1(),
    CANNOT_FORMAT_NUMBER: inc$1$1(),
    FALLBACK_TO_NUMBER_FORMAT: inc$1$1(),
    CANNOT_FORMAT_DATE: inc$1$1(),
    FALLBACK_TO_DATE_FORMAT: inc$1$1(),
    EXPERIMENTAL_CUSTOM_MESSAGE_COMPILER: inc$1$1(),
    __EXTEND_POINT__: inc$1$1(),
  },
  code$2 = CompileErrorCodes.__EXTEND_POINT__,
  inc$2 = incrementer(code$2),
  CoreErrorCodes = {
    INVALID_ARGUMENT: code$2,
    INVALID_DATE_ARGUMENT: inc$2(),
    INVALID_ISO_DATE_ARGUMENT: inc$2(),
    NOT_SUPPORT_NON_STRING_MESSAGE: inc$2(),
    NOT_SUPPORT_LOCALE_PROMISE_VALUE: inc$2(),
    NOT_SUPPORT_LOCALE_ASYNC_FUNCTION: inc$2(),
    NOT_SUPPORT_LOCALE_TYPE: inc$2(),
    __EXTEND_POINT__: inc$2(),
  };
function createCoreError(e) {
  return createCompileError(e, null, void 0);
}
function getLocale$1(e, t) {
  return t.locale != null ? resolveLocale(t.locale) : resolveLocale(e.locale);
}
let _resolveLocale;
function resolveLocale(e) {
  if (isString(e)) return e;
  if (isFunction(e)) {
    if (e.resolvedOnce && _resolveLocale != null) return _resolveLocale;
    if (e.constructor.name === "Function") {
      const t = e();
      if (isPromise(t))
        throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_PROMISE_VALUE);
      return (_resolveLocale = t);
    } else
      throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_ASYNC_FUNCTION);
  } else throw createCoreError(CoreErrorCodes.NOT_SUPPORT_LOCALE_TYPE);
}
function fallbackWithSimple(e, t, r) {
  return [
    ...new Set([
      r,
      ...(isArray$1(t)
        ? t
        : isObject$1(t)
        ? Object.keys(t)
        : isString(t)
        ? [t]
        : [r]),
    ]),
  ];
}
function fallbackWithLocaleChain(e, t, r) {
  const n = isString(r) ? r : DEFAULT_LOCALE,
    i = e;
  i.__localeChainCache || (i.__localeChainCache = new Map());
  let a = i.__localeChainCache.get(n);
  if (!a) {
    a = [];
    let o = [r];
    for (; isArray$1(o); ) o = appendBlockToChain(a, o, t);
    const l =
      isArray$1(t) || !isPlainObject$1(t) ? t : t.default ? t.default : null;
    (o = isString(l) ? [l] : l),
      isArray$1(o) && appendBlockToChain(a, o, !1),
      i.__localeChainCache.set(n, a);
  }
  return a;
}
function appendBlockToChain(e, t, r) {
  let n = !0;
  for (let i = 0; i < t.length && isBoolean(n); i++) {
    const a = t[i];
    isString(a) && (n = appendLocaleToChain(e, t[i], r));
  }
  return n;
}
function appendLocaleToChain(e, t, r) {
  let n;
  const i = t.split("-");
  do {
    const a = i.join("-");
    (n = appendItemToChain(e, a, r)), i.splice(-1, 1);
  } while (i.length && n === !0);
  return n;
}
function appendItemToChain(e, t, r) {
  let n = !1;
  if (!e.includes(t) && ((n = !0), t)) {
    n = t[t.length - 1] !== "!";
    const i = t.replace(/!/g, "");
    e.push(i), (isArray$1(r) || isPlainObject$1(r)) && r[i] && (n = r[i]);
  }
  return n;
}
const VERSION$1 = "9.14.2",
  NOT_REOSLVED = -1,
  DEFAULT_LOCALE = "en-US",
  MISSING_RESOLVE_VALUE = "",
  capitalize = (e) => `${e.charAt(0).toLocaleUpperCase()}${e.substr(1)}`;
function getDefaultLinkedModifiers() {
  return {
    upper: (e, t) =>
      t === "text" && isString(e)
        ? e.toUpperCase()
        : t === "vnode" && isObject$1(e) && "__v_isVNode" in e
        ? e.children.toUpperCase()
        : e,
    lower: (e, t) =>
      t === "text" && isString(e)
        ? e.toLowerCase()
        : t === "vnode" && isObject$1(e) && "__v_isVNode" in e
        ? e.children.toLowerCase()
        : e,
    capitalize: (e, t) =>
      t === "text" && isString(e)
        ? capitalize(e)
        : t === "vnode" && isObject$1(e) && "__v_isVNode" in e
        ? capitalize(e.children)
        : e,
  };
}
let _compiler;
function registerMessageCompiler(e) {
  _compiler = e;
}
let _resolver;
function registerMessageResolver(e) {
  _resolver = e;
}
let _fallbacker;
function registerLocaleFallbacker(e) {
  _fallbacker = e;
}
let _additionalMeta = null;
const setAdditionalMeta = (e) => {
    _additionalMeta = e;
  },
  getAdditionalMeta = () => _additionalMeta;
let _fallbackContext = null;
const setFallbackContext = (e) => {
    _fallbackContext = e;
  },
  getFallbackContext = () => _fallbackContext;
let _cid = 0;
function createCoreContext(e = {}) {
  const t = isFunction(e.onWarn) ? e.onWarn : warn,
    r = isString(e.version) ? e.version : VERSION$1,
    n = isString(e.locale) || isFunction(e.locale) ? e.locale : DEFAULT_LOCALE,
    i = isFunction(n) ? DEFAULT_LOCALE : n,
    a =
      isArray$1(e.fallbackLocale) ||
      isPlainObject$1(e.fallbackLocale) ||
      isString(e.fallbackLocale) ||
      e.fallbackLocale === !1
        ? e.fallbackLocale
        : i,
    o = isPlainObject$1(e.messages) ? e.messages : createResources(i),
    l = isPlainObject$1(e.datetimeFormats)
      ? e.datetimeFormats
      : createResources(i),
    c = isPlainObject$1(e.numberFormats) ? e.numberFormats : createResources(i),
    u = assign$1(create(), e.modifiers, getDefaultLinkedModifiers()),
    d = e.pluralRules || create(),
    E = isFunction(e.missing) ? e.missing : null,
    b =
      isBoolean(e.missingWarn) || isRegExp(e.missingWarn) ? e.missingWarn : !0,
    P =
      isBoolean(e.fallbackWarn) || isRegExp(e.fallbackWarn)
        ? e.fallbackWarn
        : !0,
    R = !!e.fallbackFormat,
    T = !!e.unresolving,
    M = isFunction(e.postTranslation) ? e.postTranslation : null,
    x = isPlainObject$1(e.processor) ? e.processor : null,
    k = isBoolean(e.warnHtmlMessage) ? e.warnHtmlMessage : !0,
    S = !!e.escapeParameter,
    A = isFunction(e.messageCompiler) ? e.messageCompiler : _compiler,
    O = isFunction(e.messageResolver)
      ? e.messageResolver
      : _resolver || resolveWithKeyValue,
    F = isFunction(e.localeFallbacker)
      ? e.localeFallbacker
      : _fallbacker || fallbackWithSimple,
    D = isObject$1(e.fallbackContext) ? e.fallbackContext : void 0,
    H = e,
    $ = isObject$1(H.__datetimeFormatters) ? H.__datetimeFormatters : new Map(),
    q = isObject$1(H.__numberFormatters) ? H.__numberFormatters : new Map(),
    J = isObject$1(H.__meta) ? H.__meta : {};
  _cid++;
  const K = {
    version: r,
    cid: _cid,
    locale: n,
    fallbackLocale: a,
    messages: o,
    modifiers: u,
    pluralRules: d,
    missing: E,
    missingWarn: b,
    fallbackWarn: P,
    fallbackFormat: R,
    unresolving: T,
    postTranslation: M,
    processor: x,
    warnHtmlMessage: k,
    escapeParameter: S,
    messageCompiler: A,
    messageResolver: O,
    localeFallbacker: F,
    fallbackContext: D,
    onWarn: t,
    __meta: J,
  };
  return (
    (K.datetimeFormats = l),
    (K.numberFormats = c),
    (K.__datetimeFormatters = $),
    (K.__numberFormatters = q),
    __INTLIFY_PROD_DEVTOOLS__ && initI18nDevTools(K, r, J),
    K
  );
}
const createResources = (e) => ({ [e]: create() });
function handleMissing(e, t, r, n, i) {
  const { missing: a, onWarn: o } = e;
  if (a !== null) {
    const l = a(e, r, t, i);
    return isString(l) ? l : t;
  } else return t;
}
function updateFallbackLocale(e, t, r) {
  const n = e;
  (n.__localeChainCache = new Map()), e.localeFallbacker(e, r, t);
}
function isAlmostSameLocale(e, t) {
  return e === t ? !1 : e.split("-")[0] === t.split("-")[0];
}
function isImplicitFallback(e, t) {
  const r = t.indexOf(e);
  if (r === -1) return !1;
  for (let n = r + 1; n < t.length; n++)
    if (isAlmostSameLocale(e, t[n])) return !0;
  return !1;
}
function format$1(e) {
  return (r) => formatParts(r, e);
}
function formatParts(e, t) {
  const r = resolveBody(t);
  if (r == null) throw createUnhandleNodeError(0);
  if (resolveType(r) === 1) {
    const a = resolveCases(r);
    return e.plural(a.reduce((o, l) => [...o, formatMessageParts(e, l)], []));
  } else return formatMessageParts(e, r);
}
const PROPS_BODY = ["b", "body"];
function resolveBody(e) {
  return resolveProps(e, PROPS_BODY);
}
const PROPS_CASES = ["c", "cases"];
function resolveCases(e) {
  return resolveProps(e, PROPS_CASES, []);
}
function formatMessageParts(e, t) {
  const r = resolveStatic(t);
  if (r != null) return e.type === "text" ? r : e.normalize([r]);
  {
    const n = resolveItems(t).reduce(
      (i, a) => [...i, formatMessagePart(e, a)],
      []
    );
    return e.normalize(n);
  }
}
const PROPS_STATIC = ["s", "static"];
function resolveStatic(e) {
  return resolveProps(e, PROPS_STATIC);
}
const PROPS_ITEMS = ["i", "items"];
function resolveItems(e) {
  return resolveProps(e, PROPS_ITEMS, []);
}
function formatMessagePart(e, t) {
  const r = resolveType(t);
  switch (r) {
    case 3:
      return resolveValue(t, r);
    case 9:
      return resolveValue(t, r);
    case 4: {
      const n = t;
      if (hasOwn(n, "k") && n.k) return e.interpolate(e.named(n.k));
      if (hasOwn(n, "key") && n.key) return e.interpolate(e.named(n.key));
      throw createUnhandleNodeError(r);
    }
    case 5: {
      const n = t;
      if (hasOwn(n, "i") && isNumber(n.i)) return e.interpolate(e.list(n.i));
      if (hasOwn(n, "index") && isNumber(n.index))
        return e.interpolate(e.list(n.index));
      throw createUnhandleNodeError(r);
    }
    case 6: {
      const n = t,
        i = resolveLinkedModifier(n),
        a = resolveLinkedKey(n);
      return e.linked(
        formatMessagePart(e, a),
        i ? formatMessagePart(e, i) : void 0,
        e.type
      );
    }
    case 7:
      return resolveValue(t, r);
    case 8:
      return resolveValue(t, r);
    default:
      throw new Error(`unhandled node on format message part: ${r}`);
  }
}
const PROPS_TYPE = ["t", "type"];
function resolveType(e) {
  return resolveProps(e, PROPS_TYPE);
}
const PROPS_VALUE = ["v", "value"];
function resolveValue(e, t) {
  const r = resolveProps(e, PROPS_VALUE);
  if (r) return r;
  throw createUnhandleNodeError(t);
}
const PROPS_MODIFIER = ["m", "modifier"];
function resolveLinkedModifier(e) {
  return resolveProps(e, PROPS_MODIFIER);
}
const PROPS_KEY = ["k", "key"];
function resolveLinkedKey(e) {
  const t = resolveProps(e, PROPS_KEY);
  if (t) return t;
  throw createUnhandleNodeError(6);
}
function resolveProps(e, t, r) {
  for (let n = 0; n < t.length; n++) {
    const i = t[n];
    if (hasOwn(e, i) && e[i] != null) return e[i];
  }
  return r;
}
function createUnhandleNodeError(e) {
  return new Error(`unhandled node type: ${e}`);
}
const defaultOnCacheKey = (e) => e;
let compileCache = create();
function isMessageAST(e) {
  return (
    isObject$1(e) &&
    resolveType(e) === 0 &&
    (hasOwn(e, "b") || hasOwn(e, "body"))
  );
}
function baseCompile(e, t = {}) {
  let r = !1;
  const n = t.onError || defaultOnError;
  return (
    (t.onError = (i) => {
      (r = !0), n(i);
    }),
    { ...baseCompile$1(e, t), detectError: r }
  );
}
function compile(e, t) {
  if (isString(e)) {
    isBoolean(t.warnHtmlMessage) && t.warnHtmlMessage;
    const n = (t.onCacheKey || defaultOnCacheKey)(e),
      i = compileCache[n];
    if (i) return i;
    const { ast: a, detectError: o } = baseCompile(e, {
        ...t,
        location: !1,
        jit: !0,
      }),
      l = format$1(a);
    return o ? l : (compileCache[n] = l);
  } else {
    const r = e.cacheKey;
    if (r) {
      const n = compileCache[r];
      return n || (compileCache[r] = format$1(e));
    } else return format$1(e);
  }
}
const NOOP_MESSAGE_FUNCTION = () => "",
  isMessageFunction = (e) => isFunction(e);
function translate(e, ...t) {
  const {
      fallbackFormat: r,
      postTranslation: n,
      unresolving: i,
      messageCompiler: a,
      fallbackLocale: o,
      messages: l,
    } = e,
    [c, u] = parseTranslateArgs(...t),
    d = isBoolean(u.missingWarn) ? u.missingWarn : e.missingWarn,
    E = isBoolean(u.fallbackWarn) ? u.fallbackWarn : e.fallbackWarn,
    b = isBoolean(u.escapeParameter) ? u.escapeParameter : e.escapeParameter,
    P = !!u.resolvedMessage,
    R =
      isString(u.default) || isBoolean(u.default)
        ? isBoolean(u.default)
          ? a
            ? c
            : () => c
          : u.default
        : r
        ? a
          ? c
          : () => c
        : "",
    T = r || R !== "",
    M = getLocale$1(e, u);
  b && escapeParams(u);
  let [x, k, S] = P
      ? [c, M, l[M] || create()]
      : resolveMessageFormat(e, c, M, o, E, d),
    A = x,
    O = c;
  if (
    (!P &&
      !(isString(A) || isMessageAST(A) || isMessageFunction(A)) &&
      T &&
      ((A = R), (O = A)),
    !P &&
      (!(isString(A) || isMessageAST(A) || isMessageFunction(A)) ||
        !isString(k)))
  )
    return i ? NOT_REOSLVED : c;
  let F = !1;
  const D = () => {
      F = !0;
    },
    H = isMessageFunction(A) ? A : compileMessageFormat(e, c, k, A, O, D);
  if (F) return A;
  const $ = getMessageContextOptions(e, k, S, u),
    q = createMessageContext($),
    J = evaluateMessage(e, H, q),
    K = n ? n(J, c) : J;
  if (__INTLIFY_PROD_DEVTOOLS__) {
    const ee = {
      timestamp: Date.now(),
      key: isString(c) ? c : isMessageFunction(A) ? A.key : "",
      locale: k || (isMessageFunction(A) ? A.locale : ""),
      format: isString(A) ? A : isMessageFunction(A) ? A.source : "",
      message: K,
    };
    (ee.meta = assign$1({}, e.__meta, getAdditionalMeta() || {})),
      translateDevTools(ee);
  }
  return K;
}
function escapeParams(e) {
  isArray$1(e.list)
    ? (e.list = e.list.map((t) => (isString(t) ? escapeHtml(t) : t)))
    : isObject$1(e.named) &&
      Object.keys(e.named).forEach((t) => {
        isString(e.named[t]) && (e.named[t] = escapeHtml(e.named[t]));
      });
}
function resolveMessageFormat(e, t, r, n, i, a) {
  const { messages: o, onWarn: l, messageResolver: c, localeFallbacker: u } = e,
    d = u(e, n, r);
  let E = create(),
    b,
    P = null;
  const R = "translate";
  for (
    let T = 0;
    T < d.length &&
    ((b = d[T]),
    (E = o[b] || create()),
    (P = c(E, t)) === null && (P = E[t]),
    !(isString(P) || isMessageAST(P) || isMessageFunction(P)));
    T++
  )
    if (!isImplicitFallback(b, d)) {
      const M = handleMissing(e, t, b, a, R);
      M !== t && (P = M);
    }
  return [P, b, E];
}
function compileMessageFormat(e, t, r, n, i, a) {
  const { messageCompiler: o, warnHtmlMessage: l } = e;
  if (isMessageFunction(n)) {
    const u = n;
    return (u.locale = u.locale || r), (u.key = u.key || t), u;
  }
  if (o == null) {
    const u = () => n;
    return (u.locale = r), (u.key = t), u;
  }
  const c = o(n, getCompileContext(e, r, i, n, l, a));
  return (c.locale = r), (c.key = t), (c.source = n), c;
}
function evaluateMessage(e, t, r) {
  return t(r);
}
function parseTranslateArgs(...e) {
  const [t, r, n] = e,
    i = create();
  if (!isString(t) && !isNumber(t) && !isMessageFunction(t) && !isMessageAST(t))
    throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);
  const a = isNumber(t) ? String(t) : (isMessageFunction(t), t);
  return (
    isNumber(r)
      ? (i.plural = r)
      : isString(r)
      ? (i.default = r)
      : isPlainObject$1(r) && !isEmptyObject(r)
      ? (i.named = r)
      : isArray$1(r) && (i.list = r),
    isNumber(n)
      ? (i.plural = n)
      : isString(n)
      ? (i.default = n)
      : isPlainObject$1(n) && assign$1(i, n),
    [a, i]
  );
}
function getCompileContext(e, t, r, n, i, a) {
  return {
    locale: t,
    key: r,
    warnHtmlMessage: i,
    onError: (o) => {
      throw (a && a(o), o);
    },
    onCacheKey: (o) => generateFormatCacheKey(t, r, o),
  };
}
function getMessageContextOptions(e, t, r, n) {
  const {
      modifiers: i,
      pluralRules: a,
      messageResolver: o,
      fallbackLocale: l,
      fallbackWarn: c,
      missingWarn: u,
      fallbackContext: d,
    } = e,
    b = {
      locale: t,
      modifiers: i,
      pluralRules: a,
      messages: (P) => {
        let R = o(r, P);
        if (R == null && d) {
          const [, , T] = resolveMessageFormat(d, P, t, l, c, u);
          R = o(T, P);
        }
        if (isString(R) || isMessageAST(R)) {
          let T = !1;
          const x = compileMessageFormat(e, P, t, R, P, () => {
            T = !0;
          });
          return T ? NOOP_MESSAGE_FUNCTION : x;
        } else return isMessageFunction(R) ? R : NOOP_MESSAGE_FUNCTION;
      },
    };
  return (
    e.processor && (b.processor = e.processor),
    n.list && (b.list = n.list),
    n.named && (b.named = n.named),
    isNumber(n.plural) && (b.pluralIndex = n.plural),
    b
  );
}
function datetime(e, ...t) {
  const {
      datetimeFormats: r,
      unresolving: n,
      fallbackLocale: i,
      onWarn: a,
      localeFallbacker: o,
    } = e,
    { __datetimeFormatters: l } = e,
    [c, u, d, E] = parseDateTimeArgs(...t),
    b = isBoolean(d.missingWarn) ? d.missingWarn : e.missingWarn;
  isBoolean(d.fallbackWarn) ? d.fallbackWarn : e.fallbackWarn;
  const P = !!d.part,
    R = getLocale$1(e, d),
    T = o(e, i, R);
  if (!isString(c) || c === "") return new Intl.DateTimeFormat(R, E).format(u);
  let M = {},
    x,
    k = null;
  const S = "datetime format";
  for (
    let F = 0;
    F < T.length &&
    ((x = T[F]), (M = r[x] || {}), (k = M[c]), !isPlainObject$1(k));
    F++
  )
    handleMissing(e, c, x, b, S);
  if (!isPlainObject$1(k) || !isString(x)) return n ? NOT_REOSLVED : c;
  let A = `${x}__${c}`;
  isEmptyObject(E) || (A = `${A}__${JSON.stringify(E)}`);
  let O = l.get(A);
  return (
    O || ((O = new Intl.DateTimeFormat(x, assign$1({}, k, E))), l.set(A, O)),
    P ? O.formatToParts(u) : O.format(u)
  );
}
const DATETIME_FORMAT_OPTIONS_KEYS = [
  "localeMatcher",
  "weekday",
  "era",
  "year",
  "month",
  "day",
  "hour",
  "minute",
  "second",
  "timeZoneName",
  "formatMatcher",
  "hour12",
  "timeZone",
  "dateStyle",
  "timeStyle",
  "calendar",
  "dayPeriod",
  "numberingSystem",
  "hourCycle",
  "fractionalSecondDigits",
];
function parseDateTimeArgs(...e) {
  const [t, r, n, i] = e,
    a = create();
  let o = create(),
    l;
  if (isString(t)) {
    const c = t.match(/(\d{4}-\d{2}-\d{2})(T|\s)?(.*)/);
    if (!c) throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);
    const u = c[3]
      ? c[3].trim().startsWith("T")
        ? `${c[1].trim()}${c[3].trim()}`
        : `${c[1].trim()}T${c[3].trim()}`
      : c[1].trim();
    l = new Date(u);
    try {
      l.toISOString();
    } catch {
      throw createCoreError(CoreErrorCodes.INVALID_ISO_DATE_ARGUMENT);
    }
  } else if (isDate(t)) {
    if (isNaN(t.getTime()))
      throw createCoreError(CoreErrorCodes.INVALID_DATE_ARGUMENT);
    l = t;
  } else if (isNumber(t)) l = t;
  else throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);
  return (
    isString(r)
      ? (a.key = r)
      : isPlainObject$1(r) &&
        Object.keys(r).forEach((c) => {
          DATETIME_FORMAT_OPTIONS_KEYS.includes(c)
            ? (o[c] = r[c])
            : (a[c] = r[c]);
        }),
    isString(n) ? (a.locale = n) : isPlainObject$1(n) && (o = n),
    isPlainObject$1(i) && (o = i),
    [a.key || "", l, a, o]
  );
}
function clearDateTimeFormat(e, t, r) {
  const n = e;
  for (const i in r) {
    const a = `${t}__${i}`;
    n.__datetimeFormatters.has(a) && n.__datetimeFormatters.delete(a);
  }
}
function number(e, ...t) {
  const {
      numberFormats: r,
      unresolving: n,
      fallbackLocale: i,
      onWarn: a,
      localeFallbacker: o,
    } = e,
    { __numberFormatters: l } = e,
    [c, u, d, E] = parseNumberArgs(...t),
    b = isBoolean(d.missingWarn) ? d.missingWarn : e.missingWarn;
  isBoolean(d.fallbackWarn) ? d.fallbackWarn : e.fallbackWarn;
  const P = !!d.part,
    R = getLocale$1(e, d),
    T = o(e, i, R);
  if (!isString(c) || c === "") return new Intl.NumberFormat(R, E).format(u);
  let M = {},
    x,
    k = null;
  const S = "number format";
  for (
    let F = 0;
    F < T.length &&
    ((x = T[F]), (M = r[x] || {}), (k = M[c]), !isPlainObject$1(k));
    F++
  )
    handleMissing(e, c, x, b, S);
  if (!isPlainObject$1(k) || !isString(x)) return n ? NOT_REOSLVED : c;
  let A = `${x}__${c}`;
  isEmptyObject(E) || (A = `${A}__${JSON.stringify(E)}`);
  let O = l.get(A);
  return (
    O || ((O = new Intl.NumberFormat(x, assign$1({}, k, E))), l.set(A, O)),
    P ? O.formatToParts(u) : O.format(u)
  );
}
const NUMBER_FORMAT_OPTIONS_KEYS = [
  "localeMatcher",
  "style",
  "currency",
  "currencyDisplay",
  "currencySign",
  "useGrouping",
  "minimumIntegerDigits",
  "minimumFractionDigits",
  "maximumFractionDigits",
  "minimumSignificantDigits",
  "maximumSignificantDigits",
  "compactDisplay",
  "notation",
  "signDisplay",
  "unit",
  "unitDisplay",
  "roundingMode",
  "roundingPriority",
  "roundingIncrement",
  "trailingZeroDisplay",
];
function parseNumberArgs(...e) {
  const [t, r, n, i] = e,
    a = create();
  let o = create();
  if (!isNumber(t)) throw createCoreError(CoreErrorCodes.INVALID_ARGUMENT);
  const l = t;
  return (
    isString(r)
      ? (a.key = r)
      : isPlainObject$1(r) &&
        Object.keys(r).forEach((c) => {
          NUMBER_FORMAT_OPTIONS_KEYS.includes(c)
            ? (o[c] = r[c])
            : (a[c] = r[c]);
        }),
    isString(n) ? (a.locale = n) : isPlainObject$1(n) && (o = n),
    isPlainObject$1(i) && (o = i),
    [a.key || "", l, a, o]
  );
}
function clearNumberFormat(e, t, r) {
  const n = e;
  for (const i in r) {
    const a = `${t}__${i}`;
    n.__numberFormatters.has(a) && n.__numberFormatters.delete(a);
  }
}
initFeatureFlags$1();
/*!
 * vue-i18n v9.14.2
 * (c) 2024 kazuya kawaguchi
 * Released under the MIT License.
 */ const VERSION = "9.14.2";
function initFeatureFlags() {
  typeof __INTLIFY_PROD_DEVTOOLS__ != "boolean" &&
    (getGlobalThis().__INTLIFY_PROD_DEVTOOLS__ = !1);
}
const code$1 = CoreWarnCodes.__EXTEND_POINT__,
  inc$1 = incrementer(code$1);
inc$1(), inc$1(), inc$1(), inc$1(), inc$1(), inc$1(), inc$1(), inc$1(), inc$1();
const code = CoreErrorCodes.__EXTEND_POINT__,
  inc = incrementer(code),
  I18nErrorCodes = {
    UNEXPECTED_RETURN_TYPE: code,
    INVALID_ARGUMENT: inc(),
    MUST_BE_CALL_SETUP_TOP: inc(),
    NOT_INSTALLED: inc(),
    NOT_AVAILABLE_IN_LEGACY_MODE: inc(),
    REQUIRED_VALUE: inc(),
    INVALID_VALUE: inc(),
    CANNOT_SETUP_VUE_DEVTOOLS_PLUGIN: inc(),
    NOT_INSTALLED_WITH_PROVIDE: inc(),
    UNEXPECTED_ERROR: inc(),
    NOT_COMPATIBLE_LEGACY_VUE_I18N: inc(),
    CoinCannon_SUPPORT_VUE_2_ONLY: inc(),
    MUST_DEFINE_I18N_OPTION_IN_ALLOW_COMPOSITION: inc(),
    NOT_AVAILABLE_COMPOSITION_IN_LEGACY: inc(),
    __EXTEND_POINT__: inc(),
  };
function createI18nError(e, ...t) {
  return createCompileError(e, null, void 0);
}
const TranslateVNodeSymbol = makeSymbol("__translateVNode"),
  DatetimePartsSymbol = makeSymbol("__datetimeParts"),
  NumberPartsSymbol = makeSymbol("__numberParts"),
  SetPluralRulesSymbol = makeSymbol("__setPluralRules"),
  InejctWithOptionSymbol = makeSymbol("__injectWithOption"),
  DisposeSymbol = makeSymbol("__dispose");
function handleFlatJson(e) {
  if (!isObject$1(e)) return e;
  for (const t in e)
    if (hasOwn(e, t))
      if (!t.includes(".")) isObject$1(e[t]) && handleFlatJson(e[t]);
      else {
        const r = t.split("."),
          n = r.length - 1;
        let i = e,
          a = !1;
        for (let o = 0; o < n; o++) {
          if ((r[o] in i || (i[r[o]] = create()), !isObject$1(i[r[o]]))) {
            a = !0;
            break;
          }
          i = i[r[o]];
        }
        a || ((i[r[n]] = e[t]), delete e[t]),
          isObject$1(i[r[n]]) && handleFlatJson(i[r[n]]);
      }
  return e;
}
function getLocaleMessages(e, t) {
  const { messages: r, __i18n: n, messageResolver: i, flatJson: a } = t,
    o = isPlainObject$1(r) ? r : isArray$1(n) ? create() : { [e]: create() };
  if (
    (isArray$1(n) &&
      n.forEach((l) => {
        if ("locale" in l && "resource" in l) {
          const { locale: c, resource: u } = l;
          c ? ((o[c] = o[c] || create()), deepCopy(u, o[c])) : deepCopy(u, o);
        } else isString(l) && deepCopy(JSON.parse(l), o);
      }),
    i == null && a)
  )
    for (const l in o) hasOwn(o, l) && handleFlatJson(o[l]);
  return o;
}
function getComponentOptions(e) {
  return e.type;
}
function adjustI18nResources(e, t, r) {
  let n = isObject$1(t.messages) ? t.messages : create();
  "__i18nGlobal" in r &&
    (n = getLocaleMessages(e.locale.value, {
      messages: n,
      __i18n: r.__i18nGlobal,
    }));
  const i = Object.keys(n);
  i.length &&
    i.forEach((a) => {
      e.mergeLocaleMessage(a, n[a]);
    });
  {
    if (isObject$1(t.datetimeFormats)) {
      const a = Object.keys(t.datetimeFormats);
      a.length &&
        a.forEach((o) => {
          e.mergeDateTimeFormat(o, t.datetimeFormats[o]);
        });
    }
    if (isObject$1(t.numberFormats)) {
      const a = Object.keys(t.numberFormats);
      a.length &&
        a.forEach((o) => {
          e.mergeNumberFormat(o, t.numberFormats[o]);
        });
    }
  }
}
function createTextNode(e) {
  return createVNode(Text, null, e, 0);
}
const DEVTOOLS_META = "__INTLIFY_META__",
  NOOP_RETURN_ARRAY = () => [],
  NOOP_RETURN_FALSE = () => !1;
let composerID = 0;
function defineCoreMissingHandler(e) {
  return (t, r, n, i) => e(r, n, getCurrentInstance$1() || void 0, i);
}
const getMetaInfo = () => {
  const e = getCurrentInstance$1();
  let t = null;
  return e && (t = getComponentOptions(e)[DEVTOOLS_META])
    ? { [DEVTOOLS_META]: t }
    : null;
};
function createComposer(e = {}, t) {
  const { __root: r, __injectWithOption: n } = e,
    i = r === void 0,
    a = e.flatJson,
    o = inBrowser$1 ? ref : shallowRef,
    l = !!e.translateExistCompatible;
  let c = isBoolean(e.inheritLocale) ? e.inheritLocale : !0;
  const u = o(
      r && c ? r.locale.value : isString(e.locale) ? e.locale : DEFAULT_LOCALE
    ),
    d = o(
      r && c
        ? r.fallbackLocale.value
        : isString(e.fallbackLocale) ||
          isArray$1(e.fallbackLocale) ||
          isPlainObject$1(e.fallbackLocale) ||
          e.fallbackLocale === !1
        ? e.fallbackLocale
        : u.value
    ),
    E = o(getLocaleMessages(u.value, e)),
    b = o(
      isPlainObject$1(e.datetimeFormats) ? e.datetimeFormats : { [u.value]: {} }
    ),
    P = o(
      isPlainObject$1(e.numberFormats) ? e.numberFormats : { [u.value]: {} }
    );
  let R = r
      ? r.missingWarn
      : isBoolean(e.missingWarn) || isRegExp(e.missingWarn)
      ? e.missingWarn
      : !0,
    T = r
      ? r.fallbackWarn
      : isBoolean(e.fallbackWarn) || isRegExp(e.fallbackWarn)
      ? e.fallbackWarn
      : !0,
    M = r ? r.fallbackRoot : isBoolean(e.fallbackRoot) ? e.fallbackRoot : !0,
    x = !!e.fallbackFormat,
    k = isFunction(e.missing) ? e.missing : null,
    S = isFunction(e.missing) ? defineCoreMissingHandler(e.missing) : null,
    A = isFunction(e.postTranslation) ? e.postTranslation : null,
    O = r
      ? r.warnHtmlMessage
      : isBoolean(e.warnHtmlMessage)
      ? e.warnHtmlMessage
      : !0,
    F = !!e.escapeParameter;
  const D = r ? r.modifiers : isPlainObject$1(e.modifiers) ? e.modifiers : {};
  let H = e.pluralRules || (r && r.pluralRules),
    $;
  ($ = (() => {
    i && setFallbackContext(null);
    const Z = {
      version: VERSION,
      locale: u.value,
      fallbackLocale: d.value,
      messages: E.value,
      modifiers: D,
      pluralRules: H,
      missing: S === null ? void 0 : S,
      missingWarn: R,
      fallbackWarn: T,
      fallbackFormat: x,
      unresolving: !0,
      postTranslation: A === null ? void 0 : A,
      warnHtmlMessage: O,
      escapeParameter: F,
      messageResolver: e.messageResolver,
      messageCompiler: e.messageCompiler,
      __meta: { framework: "vue" },
    };
    (Z.datetimeFormats = b.value),
      (Z.numberFormats = P.value),
      (Z.__datetimeFormatters = isPlainObject$1($)
        ? $.__datetimeFormatters
        : void 0),
      (Z.__numberFormatters = isPlainObject$1($)
        ? $.__numberFormatters
        : void 0);
    const ne = createCoreContext(Z);
    return i && setFallbackContext(ne), ne;
  })()),
    updateFallbackLocale($, u.value, d.value);
  function J() {
    return [u.value, d.value, E.value, b.value, P.value];
  }
  const K = computed({
      get: () => u.value,
      set: (Z) => {
        (u.value = Z), ($.locale = u.value);
      },
    }),
    ee = computed({
      get: () => d.value,
      set: (Z) => {
        (d.value = Z),
          ($.fallbackLocale = d.value),
          updateFallbackLocale($, u.value, Z);
      },
    }),
    le = computed(() => E.value),
    re = computed(() => b.value),
    B = computed(() => P.value);
  function z() {
    return isFunction(A) ? A : null;
  }
  function N(Z) {
    (A = Z), ($.postTranslation = Z);
  }
  function V() {
    return k;
  }
  function Q(Z) {
    Z !== null && (S = defineCoreMissingHandler(Z)), (k = Z), ($.missing = S);
  }
  const Y = (Z, ne, _e, be, Te, Ae) => {
    J();
    let Re;
    try {
      __INTLIFY_PROD_DEVTOOLS__,
        i || ($.fallbackContext = r ? getFallbackContext() : void 0),
        (Re = Z($));
    } finally {
      __INTLIFY_PROD_DEVTOOLS__, i || ($.fallbackContext = void 0);
    }
    if (
      (_e !== "translate exists" && isNumber(Re) && Re === NOT_REOSLVED) ||
      (_e === "translate exists" && !Re)
    ) {
      const [we, Ie] = ne();
      return r && M ? be(r) : Te(we);
    } else {
      if (Ae(Re)) return Re;
      throw createI18nError(I18nErrorCodes.UNEXPECTED_RETURN_TYPE);
    }
  };
  function he(...Z) {
    return Y(
      (ne) => Reflect.apply(translate, null, [ne, ...Z]),
      () => parseTranslateArgs(...Z),
      "translate",
      (ne) => Reflect.apply(ne.t, ne, [...Z]),
      (ne) => ne,
      (ne) => isString(ne)
    );
  }
  function ye(...Z) {
    const [ne, _e, be] = Z;
    if (be && !isObject$1(be))
      throw createI18nError(I18nErrorCodes.INVALID_ARGUMENT);
    return he(ne, _e, assign$1({ resolvedMessage: !0 }, be || {}));
  }
  function ve(...Z) {
    return Y(
      (ne) => Reflect.apply(datetime, null, [ne, ...Z]),
      () => parseDateTimeArgs(...Z),
      "datetime format",
      (ne) => Reflect.apply(ne.d, ne, [...Z]),
      () => MISSING_RESOLVE_VALUE,
      (ne) => isString(ne)
    );
  }
  function Pe(...Z) {
    return Y(
      (ne) => Reflect.apply(number, null, [ne, ...Z]),
      () => parseNumberArgs(...Z),
      "number format",
      (ne) => Reflect.apply(ne.n, ne, [...Z]),
      () => MISSING_RESOLVE_VALUE,
      (ne) => isString(ne)
    );
  }
  function Ce(Z) {
    return Z.map((ne) =>
      isString(ne) || isNumber(ne) || isBoolean(ne)
        ? createTextNode(String(ne))
        : ne
    );
  }
  const me = { normalize: Ce, interpolate: (Z) => Z, type: "vnode" };
  function pe(...Z) {
    return Y(
      (ne) => {
        let _e;
        const be = ne;
        try {
          (be.processor = me),
            (_e = Reflect.apply(translate, null, [be, ...Z]));
        } finally {
          be.processor = null;
        }
        return _e;
      },
      () => parseTranslateArgs(...Z),
      "translate",
      (ne) => ne[TranslateVNodeSymbol](...Z),
      (ne) => [createTextNode(ne)],
      (ne) => isArray$1(ne)
    );
  }
  function ge(...Z) {
    return Y(
      (ne) => Reflect.apply(number, null, [ne, ...Z]),
      () => parseNumberArgs(...Z),
      "number format",
      (ne) => ne[NumberPartsSymbol](...Z),
      NOOP_RETURN_ARRAY,
      (ne) => isString(ne) || isArray$1(ne)
    );
  }
  function Ee(...Z) {
    return Y(
      (ne) => Reflect.apply(datetime, null, [ne, ...Z]),
      () => parseDateTimeArgs(...Z),
      "datetime format",
      (ne) => ne[DatetimePartsSymbol](...Z),
      NOOP_RETURN_ARRAY,
      (ne) => isString(ne) || isArray$1(ne)
    );
  }
  function Se(Z) {
    (H = Z), ($.pluralRules = H);
  }
  function W(Z, ne) {
    return Y(
      () => {
        if (!Z) return !1;
        const _e = isString(ne) ? ne : u.value,
          be = ae(_e),
          Te = $.messageResolver(be, Z);
        return l
          ? Te != null
          : isMessageAST(Te) || isMessageFunction(Te) || isString(Te);
      },
      () => [Z],
      "translate exists",
      (_e) => Reflect.apply(_e.te, _e, [Z, ne]),
      NOOP_RETURN_FALSE,
      (_e) => isBoolean(_e)
    );
  }
  function G(Z) {
    let ne = null;
    const _e = fallbackWithLocaleChain($, d.value, u.value);
    for (let be = 0; be < _e.length; be++) {
      const Te = E.value[_e[be]] || {},
        Ae = $.messageResolver(Te, Z);
      if (Ae != null) {
        ne = Ae;
        break;
      }
    }
    return ne;
  }
  function te(Z) {
    const ne = G(Z);
    return ne ?? (r ? r.tm(Z) || {} : {});
  }
  function ae(Z) {
    return E.value[Z] || {};
  }
  function se(Z, ne) {
    if (a) {
      const _e = { [Z]: ne };
      for (const be in _e) hasOwn(_e, be) && handleFlatJson(_e[be]);
      ne = _e[Z];
    }
    (E.value[Z] = ne), ($.messages = E.value);
  }
  function ce(Z, ne) {
    E.value[Z] = E.value[Z] || {};
    const _e = { [Z]: ne };
    if (a) for (const be in _e) hasOwn(_e, be) && handleFlatJson(_e[be]);
    (ne = _e[Z]), deepCopy(ne, E.value[Z]), ($.messages = E.value);
  }
  function de(Z) {
    return b.value[Z] || {};
  }
  function j(Z, ne) {
    (b.value[Z] = ne),
      ($.datetimeFormats = b.value),
      clearDateTimeFormat($, Z, ne);
  }
  function U(Z, ne) {
    (b.value[Z] = assign$1(b.value[Z] || {}, ne)),
      ($.datetimeFormats = b.value),
      clearDateTimeFormat($, Z, ne);
  }
  function X(Z) {
    return P.value[Z] || {};
  }
  function oe(Z, ne) {
    (P.value[Z] = ne), ($.numberFormats = P.value), clearNumberFormat($, Z, ne);
  }
  function fe(Z, ne) {
    (P.value[Z] = assign$1(P.value[Z] || {}, ne)),
      ($.numberFormats = P.value),
      clearNumberFormat($, Z, ne);
  }
  composerID++,
    r &&
      inBrowser$1 &&
      (watch(r.locale, (Z) => {
        c &&
          ((u.value = Z),
          ($.locale = Z),
          updateFallbackLocale($, u.value, d.value));
      }),
      watch(r.fallbackLocale, (Z) => {
        c &&
          ((d.value = Z),
          ($.fallbackLocale = Z),
          updateFallbackLocale($, u.value, d.value));
      }));
  const ue = {
    id: composerID,
    locale: K,
    fallbackLocale: ee,
    get inheritLocale() {
      return c;
    },
    set inheritLocale(Z) {
      (c = Z),
        Z &&
          r &&
          ((u.value = r.locale.value),
          (d.value = r.fallbackLocale.value),
          updateFallbackLocale($, u.value, d.value));
    },
    get availableLocales() {
      return Object.keys(E.value).sort();
    },
    messages: le,
    get modifiers() {
      return D;
    },
    get pluralRules() {
      return H || {};
    },
    get isGlobal() {
      return i;
    },
    get missingWarn() {
      return R;
    },
    set missingWarn(Z) {
      (R = Z), ($.missingWarn = R);
    },
    get fallbackWarn() {
      return T;
    },
    set fallbackWarn(Z) {
      (T = Z), ($.fallbackWarn = T);
    },
    get fallbackRoot() {
      return M;
    },
    set fallbackRoot(Z) {
      M = Z;
    },
    get fallbackFormat() {
      return x;
    },
    set fallbackFormat(Z) {
      (x = Z), ($.fallbackFormat = x);
    },
    get warnHtmlMessage() {
      return O;
    },
    set warnHtmlMessage(Z) {
      (O = Z), ($.warnHtmlMessage = Z);
    },
    get escapeParameter() {
      return F;
    },
    set escapeParameter(Z) {
      (F = Z), ($.escapeParameter = Z);
    },
    t: he,
    getLocaleMessage: ae,
    setLocaleMessage: se,
    mergeLocaleMessage: ce,
    getPostTranslationHandler: z,
    setPostTranslationHandler: N,
    getMissingHandler: V,
    setMissingHandler: Q,
    [SetPluralRulesSymbol]: Se,
  };
  return (
    (ue.datetimeFormats = re),
    (ue.numberFormats = B),
    (ue.rt = ye),
    (ue.te = W),
    (ue.tm = te),
    (ue.d = ve),
    (ue.n = Pe),
    (ue.getDateTimeFormat = de),
    (ue.setDateTimeFormat = j),
    (ue.mergeDateTimeFormat = U),
    (ue.getNumberFormat = X),
    (ue.setNumberFormat = oe),
    (ue.mergeNumberFormat = fe),
    (ue[InejctWithOptionSymbol] = n),
    (ue[TranslateVNodeSymbol] = pe),
    (ue[DatetimePartsSymbol] = Ee),
    (ue[NumberPartsSymbol] = ge),
    ue
  );
}
const baseFormatProps = {
  tag: { type: [String, Object] },
  locale: { type: String },
  scope: {
    type: String,
    validator: (e) => e === "parent" || e === "global",
    default: "parent",
  },
  i18n: { type: Object },
};
function getInterpolateArg({ slots: e }, t) {
  return t.length === 1 && t[0] === "default"
    ? (e.default ? e.default() : []).reduce(
        (n, i) => [...n, ...(i.type === Fragment ? i.children : [i])],
        []
      )
    : t.reduce((r, n) => {
        const i = e[n];
        return i && (r[n] = i()), r;
      }, create());
}
function getFragmentableTag(e) {
  return Fragment;
}
const TranslationImpl = defineComponent$1({
    name: "i18n-t",
    props: assign$1(
      {
        keypath: { type: String, required: !0 },
        plural: {
          type: [Number, String],
          validator: (e) => isNumber(e) || !isNaN(e),
        },
      },
      baseFormatProps
    ),
    setup(e, t) {
      const { slots: r, attrs: n } = t,
        i = e.i18n || useI18n({ useScope: e.scope, __useComponent: !0 });
      return () => {
        const a = Object.keys(r).filter((E) => E !== "_"),
          o = create();
        e.locale && (o.locale = e.locale),
          e.plural !== void 0 &&
            (o.plural = isString(e.plural) ? +e.plural : e.plural);
        const l = getInterpolateArg(t, a),
          c = i[TranslateVNodeSymbol](e.keypath, l, o),
          u = assign$1(create(), n),
          d =
            isString(e.tag) || isObject$1(e.tag) ? e.tag : getFragmentableTag();
        return h$2(d, u, c);
      };
    },
  }),
  Translation = TranslationImpl;
function isVNode(e) {
  return isArray$1(e) && !isString(e[0]);
}
function renderFormatter(e, t, r, n) {
  const { slots: i, attrs: a } = t;
  return () => {
    const o = { part: !0 };
    let l = create();
    e.locale && (o.locale = e.locale),
      isString(e.format)
        ? (o.key = e.format)
        : isObject$1(e.format) &&
          (isString(e.format.key) && (o.key = e.format.key),
          (l = Object.keys(e.format).reduce(
            (b, P) =>
              r.includes(P) ? assign$1(create(), b, { [P]: e.format[P] }) : b,
            create()
          )));
    const c = n(e.value, o, l);
    let u = [o.key];
    isArray$1(c)
      ? (u = c.map((b, P) => {
          const R = i[b.type],
            T = R ? R({ [b.type]: b.value, index: P, parts: c }) : [b.value];
          return isVNode(T) && (T[0].key = `${b.type}-${P}`), T;
        }))
      : isString(c) && (u = [c]);
    const d = assign$1(create(), a),
      E = isString(e.tag) || isObject$1(e.tag) ? e.tag : getFragmentableTag();
    return h$2(E, d, u);
  };
}
const NumberFormatImpl = defineComponent$1({
    name: "i18n-n",
    props: assign$1(
      {
        value: { type: Number, required: !0 },
        format: { type: [String, Object] },
      },
      baseFormatProps
    ),
    setup(e, t) {
      const r = e.i18n || useI18n({ useScope: e.scope, __useComponent: !0 });
      return renderFormatter(e, t, NUMBER_FORMAT_OPTIONS_KEYS, (...n) =>
        r[NumberPartsSymbol](...n)
      );
    },
  }),
  NumberFormat = NumberFormatImpl,
  DatetimeFormatImpl = defineComponent$1({
    name: "i18n-d",
    props: assign$1(
      {
        value: { type: [Number, Date], required: !0 },
        format: { type: [String, Object] },
      },
      baseFormatProps
    ),
    setup(e, t) {
      const r = e.i18n || useI18n({ useScope: e.scope, __useComponent: !0 });
      return renderFormatter(e, t, DATETIME_FORMAT_OPTIONS_KEYS, (...n) =>
        r[DatetimePartsSymbol](...n)
      );
    },
  }),
  DatetimeFormat = DatetimeFormatImpl;
function getComposer$2(e, t) {
  const r = e;
  if (e.mode === "composition") return r.__getInstance(t) || e.global;
  {
    const n = r.__getInstance(t);
    return n != null ? n.__composer : e.global.__composer;
  }
}
function vTDirective(e) {
  const t = (o) => {
    const { instance: l, modifiers: c, value: u } = o;
    if (!l || !l.$) throw createI18nError(I18nErrorCodes.UNEXPECTED_ERROR);
    const d = getComposer$2(e, l.$),
      E = parseValue(u);
    return [Reflect.apply(d.t, d, [...makeParams(E)]), d];
  };
  return {
    created: (o, l) => {
      const [c, u] = t(l);
      inBrowser$1 &&
        e.global === u &&
        (o.__i18nWatcher = watch(u.locale, () => {
          l.instance && l.instance.$forceUpdate();
        })),
        (o.__composer = u),
        (o.textContent = c);
    },
    unmounted: (o) => {
      inBrowser$1 &&
        o.__i18nWatcher &&
        (o.__i18nWatcher(), (o.__i18nWatcher = void 0), delete o.__i18nWatcher),
        o.__composer && ((o.__composer = void 0), delete o.__composer);
    },
    beforeUpdate: (o, { value: l }) => {
      if (o.__composer) {
        const c = o.__composer,
          u = parseValue(l);
        o.textContent = Reflect.apply(c.t, c, [...makeParams(u)]);
      }
    },
    getSSRProps: (o) => {
      const [l] = t(o);
      return { textContent: l };
    },
  };
}
function parseValue(e) {
  if (isString(e)) return { path: e };
  if (isPlainObject$1(e)) {
    if (!("path" in e))
      throw createI18nError(I18nErrorCodes.REQUIRED_VALUE, "path");
    return e;
  } else throw createI18nError(I18nErrorCodes.INVALID_VALUE);
}
function makeParams(e) {
  const { path: t, locale: r, args: n, choice: i, plural: a } = e,
    o = {},
    l = n || {};
  return (
    isString(r) && (o.locale = r),
    isNumber(i) && (o.plural = i),
    isNumber(a) && (o.plural = a),
    [t, l, o]
  );
}
function apply(e, t, ...r) {
  const n = isPlainObject$1(r[0]) ? r[0] : {},
    i = !!n.useI18nComponentName;
  (isBoolean(n.globalInstall) ? n.globalInstall : !0) &&
    ([i ? "i18n" : Translation.name, "I18nT"].forEach((o) =>
      e.component(o, Translation)
    ),
    [NumberFormat.name, "I18nN"].forEach((o) => e.component(o, NumberFormat)),
    [DatetimeFormat.name, "I18nD"].forEach((o) =>
      e.component(o, DatetimeFormat)
    )),
    e.directive("t", vTDirective(t));
}
const I18nInjectionKey = makeSymbol("global-vue-i18n");
function createI18n(e = {}, t) {
  const r = isBoolean(e.globalInjection) ? e.globalInjection : !0,
    n = !0,
    i = new Map(),
    [a, o] = createGlobal(e),
    l = makeSymbol("");
  function c(E) {
    return i.get(E) || null;
  }
  function u(E, b) {
    i.set(E, b);
  }
  function d(E) {
    i.delete(E);
  }
  {
    const E = {
      get mode() {
        return "composition";
      },
      get allowComposition() {
        return n;
      },
      async install(b, ...P) {
        if (
          ((b.__VUE_I18N_SYMBOL__ = l),
          b.provide(b.__VUE_I18N_SYMBOL__, E),
          isPlainObject$1(P[0]))
        ) {
          const M = P[0];
          (E.__composerExtend = M.__composerExtend),
            (E.__vueI18nExtend = M.__vueI18nExtend);
        }
        let R = null;
        r && (R = injectGlobalFields(b, E.global)), apply(b, E, ...P);
        const T = b.unmount;
        b.unmount = () => {
          R && R(), E.dispose(), T();
        };
      },
      get global() {
        return o;
      },
      dispose() {
        a.stop();
      },
      __instances: i,
      __getInstance: c,
      __setInstance: u,
      __deleteInstance: d,
    };
    return E;
  }
}
function useI18n(e = {}) {
  const t = getCurrentInstance$1();
  if (t == null) throw createI18nError(I18nErrorCodes.MUST_BE_CALL_SETUP_TOP);
  if (
    !t.isCE &&
    t.appContext.app != null &&
    !t.appContext.app.__VUE_I18N_SYMBOL__
  )
    throw createI18nError(I18nErrorCodes.NOT_INSTALLED);
  const r = getI18nInstance(t),
    n = getGlobalComposer(r),
    i = getComponentOptions(t),
    a = getScope(e, i);
  if (a === "global") return adjustI18nResources(n, e, i), n;
  if (a === "parent") {
    let c = getComposer$1(r, t, e.__useComponent);
    return c == null && (c = n), c;
  }
  const o = r;
  let l = o.__getInstance(t);
  if (l == null) {
    const c = assign$1({}, e);
    "__i18n" in i && (c.__i18n = i.__i18n),
      n && (c.__root = n),
      (l = createComposer(c)),
      o.__composerExtend && (l[DisposeSymbol] = o.__composerExtend(l)),
      setupLifeCycle(o, t, l),
      o.__setInstance(t, l);
  }
  return l;
}
function createGlobal(e, t, r) {
  const n = effectScope();
  {
    const i = n.run(() => createComposer(e));
    if (i == null) throw createI18nError(I18nErrorCodes.UNEXPECTED_ERROR);
    return [n, i];
  }
}
function getI18nInstance(e) {
  {
    const t = inject$1(
      e.isCE ? I18nInjectionKey : e.appContext.app.__VUE_I18N_SYMBOL__
    );
    if (!t)
      throw createI18nError(
        e.isCE
          ? I18nErrorCodes.NOT_INSTALLED_WITH_PROVIDE
          : I18nErrorCodes.UNEXPECTED_ERROR
      );
    return t;
  }
}
function getScope(e, t) {
  return isEmptyObject(e)
    ? "__i18n" in t
      ? "local"
      : "global"
    : e.useScope
    ? e.useScope
    : "local";
}
function getGlobalComposer(e) {
  return e.mode === "composition" ? e.global : e.global.__composer;
}
function getComposer$1(e, t, r = !1) {
  let n = null;
  const i = t.root;
  let a = getParentComponentInstance(t, r);
  for (; a != null; ) {
    const o = e;
    if (
      (e.mode === "composition" && (n = o.__getInstance(a)),
      n != null || i === a)
    )
      break;
    a = a.parent;
  }
  return n;
}
function getParentComponentInstance(e, t = !1) {
  return e == null ? null : (t && e.vnode.ctx) || e.parent;
}
function setupLifeCycle(e, t, r) {
  onMounted(() => {}, t),
    onUnmounted(() => {
      const n = r;
      e.__deleteInstance(t);
      const i = n[DisposeSymbol];
      i && (i(), delete n[DisposeSymbol]);
    }, t);
}
const globalExportProps = ["locale", "fallbackLocale", "availableLocales"],
  globalExportMethods = ["t", "rt", "d", "n", "tm", "te"];
function injectGlobalFields(e, t) {
  const r = Object.create(null);
  return (
    globalExportProps.forEach((i) => {
      const a = Object.getOwnPropertyDescriptor(t, i);
      if (!a) throw createI18nError(I18nErrorCodes.UNEXPECTED_ERROR);
      const o = isRef(a.value)
        ? {
            get() {
              return a.value.value;
            },
            set(l) {
              a.value.value = l;
            },
          }
        : {
            get() {
              return a.get && a.get();
            },
          };
      Object.defineProperty(r, i, o);
    }),
    (e.config.globalProperties.$i18n = r),
    globalExportMethods.forEach((i) => {
      const a = Object.getOwnPropertyDescriptor(t, i);
      if (!a || !a.value)
        throw createI18nError(I18nErrorCodes.UNEXPECTED_ERROR);
      Object.defineProperty(e.config.globalProperties, `$${i}`, a);
    }),
    () => {
      delete e.config.globalProperties.$i18n,
        globalExportMethods.forEach((i) => {
          delete e.config.globalProperties[`$${i}`];
        });
    }
  );
}
initFeatureFlags();
registerMessageCompiler(compile);
registerMessageResolver(resolveValue$1);
registerLocaleFallbacker(fallbackWithLocaleChain);
if (__INTLIFY_PROD_DEVTOOLS__) {
  const e = getGlobalThis();
  (e.__INTLIFY__ = !0), setDevToolsHook(e.__INTLIFY_DEVTOOLS_GLOBAL_HOOK__);
}
function createAdapter(e) {
  e.locale = {};
  const t = useNuxtApp(),
    r = t.$i18n,
    n = r.locale,
    i = r.fallbackLocale,
    a = r.messages,
    o = ref(n.value);
  (e.locale.rtl = r.locales.value.reduce(
    (l, c) => ((l[c.code] = c.dir === "rtl"), l),
    {}
  )),
    watch(
      o,
      (l, c) => {
        c && r.setLocale(l);
      },
      { immediate: !0, flush: "post" }
    ),
    t.hook("i18n:localeSwitched", ({ newLocale: l }) => {
      o.value = l;
    }),
    (e.locale.adapter = {
      name: "nuxt-vue-i18n",
      current: o,
      fallback: i,
      messages: a,
      t: (l, ...c) => r.t(l, c),
      n: r.n,
      provide: createProvideFunction$1({
        current: o,
        fallback: i,
        messages: a,
      }),
    });
}
function createProvideFunction$1(e) {
  return (t) => {
    const r = ref(t.locale ?? e.current.value),
      n = useI18n({
        locale: r.value,
        fallbackLocale: e.fallback.value,
        messages: e.messages.value,
        useScope: "local",
        legacy: !1,
        inheritLocale: !1,
      });
    watch(
      r,
      (o, l) => {
        l && n.setLocale(o);
      },
      { immediate: !0, flush: "post" }
    );
    const i = wrapI18n(n.t),
      a = wrapI18n(n.n);
    return {
      name: "nuxt-vue-i18n",
      current: r,
      fallback: e.fallback,
      messages: e.messages,
      t: i,
      n: a,
      provide: createProvideFunction$1({
        current: r,
        fallback: e.fallback,
        messages: e.messages,
      }),
    };
  };
}
function wrapI18n(e) {
  return (...t) => e(...t);
}
const vuetify_i18n_H4uUvhyrU1 = defineNuxtPlugin({
    name: "vuetify:i18n:plugin",
    order: -25,
    dependsOn: ["i18n:plugin"],
    parallel: !0,
    setup(e) {
      e.hook("vuetify:configuration", ({ vuetifyOptions: t }) => {
        createAdapter(t);
      });
    },
  }),
  IN_BROWSER = typeof window < "u",
  SUPPORTS_INTERSECTION = IN_BROWSER && "IntersectionObserver" in window,
  SUPPORTS_TOUCH =
    IN_BROWSER &&
    ("ontouchstart" in window || window.navigator.maxTouchPoints > 0);
function _classPrivateFieldInitSpec(e, t, r) {
  _checkPrivateRedeclaration(e, t), t.set(e, r);
}
function _checkPrivateRedeclaration(e, t) {
  if (t.has(e))
    throw new TypeError(
      "Cannot initialize the same private elements twice on an object"
    );
}
function _classPrivateFieldSet(e, t, r) {
  return e.set(_assertClassBrand(e, t), r), r;
}
function _classPrivateFieldGet(e, t) {
  return e.get(_assertClassBrand(e, t));
}
function _assertClassBrand(e, t, r) {
  if (typeof e == "function" ? e === t : e.has(t))
    return arguments.length < 3 ? t : r;
  throw new TypeError("Private element is not present on this object");
}
function getNestedValue(e, t, r) {
  const n = t.length - 1;
  if (n < 0) return e === void 0 ? r : e;
  for (let i = 0; i < n; i++) {
    if (e == null) return r;
    e = e[t[i]];
  }
  return e == null || e[t[n]] === void 0 ? r : e[t[n]];
}
function deepEqual(e, t) {
  if (e === t) return !0;
  if (
    (e instanceof Date && t instanceof Date && e.getTime() !== t.getTime()) ||
    e !== Object(e) ||
    t !== Object(t)
  )
    return !1;
  const r = Object.keys(e);
  return r.length !== Object.keys(t).length
    ? !1
    : r.every((n) => deepEqual(e[n], t[n]));
}
function getObjectValueByPath(e, t, r) {
  return e == null || !t || typeof t != "string"
    ? r
    : e[t] !== void 0
    ? e[t]
    : ((t = t.replace(/\[(\w+)\]/g, ".$1")),
      (t = t.replace(/^\./, "")),
      getNestedValue(e, t.split("."), r));
}
function getPropertyFromItem(e, t, r) {
  if (t === !0) return e === void 0 ? r : e;
  if (t == null || typeof t == "boolean") return r;
  if (e !== Object(e)) {
    if (typeof t != "function") return r;
    const i = t(e, r);
    return typeof i > "u" ? r : i;
  }
  if (typeof t == "string") return getObjectValueByPath(e, t, r);
  if (Array.isArray(t)) return getNestedValue(e, t, r);
  if (typeof t != "function") return r;
  const n = t(e, r);
  return typeof n > "u" ? r : n;
}
function createRange(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0;
  return Array.from({ length: e }, (r, n) => t + n);
}
function convertToUnit(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : "px";
  if (!(e == null || e === ""))
    return isNaN(+e) ? String(e) : isFinite(+e) ? `${Number(e)}${t}` : void 0;
}
function isObject(e) {
  return e !== null && typeof e == "object" && !Array.isArray(e);
}
function isPlainObject(e) {
  let t;
  return (
    e !== null &&
    typeof e == "object" &&
    ((t = Object.getPrototypeOf(e)) === Object.prototype || t === null)
  );
}
function refElement(e) {
  if (e && "$el" in e) {
    const t = e.$el;
    return (t == null ? void 0 : t.nodeType) === Node.TEXT_NODE
      ? t.nextElementSibling
      : t;
  }
  return e;
}
const keyCodes = Object.freeze({
    enter: 13,
    tab: 9,
    delete: 46,
    esc: 27,
    space: 32,
    up: 38,
    down: 40,
    left: 37,
    right: 39,
    end: 35,
    home: 36,
    del: 46,
    backspace: 8,
    insert: 45,
    pageup: 33,
    pagedown: 34,
    shift: 16,
  }),
  keyValues = Object.freeze({
    enter: "Enter",
    tab: "Tab",
    delete: "Delete",
    esc: "Escape",
    space: "Space",
    up: "ArrowUp",
    down: "ArrowDown",
    left: "ArrowLeft",
    right: "ArrowRight",
    end: "End",
    home: "Home",
    del: "Delete",
    backspace: "Backspace",
    insert: "Insert",
    pageup: "PageUp",
    pagedown: "PageDown",
    shift: "Shift",
  });
function keys(e) {
  return Object.keys(e);
}
function has(e, t) {
  return t.every((r) => e.hasOwnProperty(r));
}
function pick(e, t) {
  const r = {},
    n = new Set(Object.keys(e));
  for (const i of t) n.has(i) && (r[i] = e[i]);
  return r;
}
function pickWithRest(e, t, r) {
  const n = Object.create(null),
    i = Object.create(null);
  for (const a in e)
    t.some((o) => (o instanceof RegExp ? o.test(a) : o === a)) &&
    !(r != null && r.some((o) => o === a))
      ? (n[a] = e[a])
      : (i[a] = e[a]);
  return [n, i];
}
function omit(e, t) {
  const r = { ...e };
  return t.forEach((n) => delete r[n]), r;
}
function only(e, t) {
  const r = {};
  return t.forEach((n) => (r[n] = e[n])), r;
}
const onRE = /^on[^a-z]/,
  isOn = (e) => onRE.test(e),
  bubblingEvents = [
    "onAfterscriptexecute",
    "onAnimationcancel",
    "onAnimationend",
    "onAnimationiteration",
    "onAnimationstart",
    "onAuxclick",
    "onBeforeinput",
    "onBeforescriptexecute",
    "onChange",
    "onClick",
    "onCompositionend",
    "onCompositionstart",
    "onCompositionupdate",
    "onContextmenu",
    "onCopy",
    "onCut",
    "onDblclick",
    "onFocusin",
    "onFocusout",
    "onFullscreenchange",
    "onFullscreenerror",
    "onGesturechange",
    "onGestureend",
    "onGesturestart",
    "onGotpointercapture",
    "onInput",
    "onKeydown",
    "onKeypress",
    "onKeyup",
    "onLostpointercapture",
    "onMousedown",
    "onMousemove",
    "onMouseout",
    "onMouseover",
    "onMouseup",
    "onMousewheel",
    "onPaste",
    "onPointercancel",
    "onPointerdown",
    "onPointerenter",
    "onPointerleave",
    "onPointermove",
    "onPointerout",
    "onPointerover",
    "onPointerup",
    "onReset",
    "onSelect",
    "onSubmit",
    "onTouchcancel",
    "onTouchend",
    "onTouchmove",
    "onTouchstart",
    "onTransitioncancel",
    "onTransitionend",
    "onTransitionrun",
    "onTransitionstart",
    "onWheel",
  ];
function filterInputAttrs(e) {
  const [t, r] = pickWithRest(e, [onRE]),
    n = omit(t, bubblingEvents),
    [i, a] = pickWithRest(r, ["class", "style", "id", /^data-/]);
  return Object.assign(i, t), Object.assign(a, n), [i, a];
}
function wrapInArray(e) {
  return e == null ? [] : Array.isArray(e) ? e : [e];
}
function debounce(e, t) {
  let r = 0;
  const n = function () {
    for (var i = arguments.length, a = new Array(i), o = 0; o < i; o++)
      a[o] = arguments[o];
    clearTimeout(r), (r = setTimeout(() => e(...a), unref(t)));
  };
  return (
    (n.clear = () => {
      clearTimeout(r);
    }),
    (n.immediate = e),
    n
  );
}
function clamp(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 0,
    r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : 1;
  return Math.max(t, Math.min(r, e));
}
function padEnd(e, t) {
  let r = arguments.length > 2 && arguments[2] !== void 0 ? arguments[2] : "0";
  return e + r.repeat(Math.max(0, t - e.length));
}
function padStart(e, t) {
  return (
    (arguments.length > 2 && arguments[2] !== void 0
      ? arguments[2]
      : "0"
    ).repeat(Math.max(0, t - e.length)) + e
  );
}
function chunk(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1;
  const r = [];
  let n = 0;
  for (; n < e.length; ) r.push(e.substr(n, t)), (n += t);
  return r;
}
function humanReadableFileSize(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : 1e3;
  if (e < t) return `${e} B`;
  const r = t === 1024 ? ["Ki", "Mi", "Gi"] : ["k", "M", "G"];
  let n = -1;
  for (; Math.abs(e) >= t && n < r.length - 1; ) (e /= t), ++n;
  return `${e.toFixed(1)} ${r[n]}B`;
}
function mergeDeep() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
    t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {},
    r = arguments.length > 2 ? arguments[2] : void 0;
  const n = {};
  for (const i in e) n[i] = e[i];
  for (const i in t) {
    const a = e[i],
      o = t[i];
    if (isPlainObject(a) && isPlainObject(o)) {
      n[i] = mergeDeep(a, o, r);
      continue;
    }
    if (r && Array.isArray(a) && Array.isArray(o)) {
      n[i] = r(a, o);
      continue;
    }
    n[i] = o;
  }
  return n;
}
function flattenFragments(e) {
  return e
    .map((t) => (t.type === Fragment ? flattenFragments(t.children) : t))
    .flat();
}
function toKebabCase() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : "";
  if (toKebabCase.cache.has(e)) return toKebabCase.cache.get(e);
  const t = e
    .replace(/[^a-z]/gi, "-")
    .replace(/\B([A-Z])/g, "-$1")
    .toLowerCase();
  return toKebabCase.cache.set(e, t), t;
}
toKebabCase.cache = new Map();
function findChildrenWithProvide(e, t) {
  if (!t || typeof t != "object") return [];
  if (Array.isArray(t))
    return t.map((r) => findChildrenWithProvide(e, r)).flat(1);
  if (t.suspense) return findChildrenWithProvide(e, t.ssContent);
  if (Array.isArray(t.children))
    return t.children.map((r) => findChildrenWithProvide(e, r)).flat(1);
  if (t.component) {
    if (Object.getOwnPropertySymbols(t.component.provides).includes(e))
      return [t.component];
    if (t.component.subTree)
      return findChildrenWithProvide(e, t.component.subTree).flat(1);
  }
  return [];
}
var _arr = new WeakMap(),
  _pointer = new WeakMap();
class CircularBuffer {
  constructor(t) {
    _classPrivateFieldInitSpec(this, _arr, []),
      _classPrivateFieldInitSpec(this, _pointer, 0),
      (this.size = t);
  }
  push(t) {
    (_classPrivateFieldGet(_arr, this)[_classPrivateFieldGet(_pointer, this)] =
      t),
      _classPrivateFieldSet(
        _pointer,
        this,
        (_classPrivateFieldGet(_pointer, this) + 1) % this.size
      );
  }
  values() {
    return _classPrivateFieldGet(_arr, this)
      .slice(_classPrivateFieldGet(_pointer, this))
      .concat(
        _classPrivateFieldGet(_arr, this).slice(
          0,
          _classPrivateFieldGet(_pointer, this)
        )
      );
  }
}
function destructComputed(e) {
  const t = reactive({}),
    r = computed(e);
  return (
    watchEffect(
      () => {
        for (const n in r.value) t[n] = r.value[n];
      },
      { flush: "sync" }
    ),
    toRefs(t)
  );
}
function includes(e, t) {
  return e.includes(t);
}
function eventName(e) {
  return e[2].toLowerCase() + e.slice(3);
}
const EventProp = () => [Function, Array];
function hasEvent(e, t) {
  return (
    (t = "on" + capitalize$1(t)),
    !!(
      e[t] ||
      e[`${t}Once`] ||
      e[`${t}Capture`] ||
      e[`${t}OnceCapture`] ||
      e[`${t}CaptureOnce`]
    )
  );
}
function callEvent(e) {
  for (
    var t = arguments.length, r = new Array(t > 1 ? t - 1 : 0), n = 1;
    n < t;
    n++
  )
    r[n - 1] = arguments[n];
  if (Array.isArray(e)) for (const i of e) i(...r);
  else typeof e == "function" && e(...r);
}
function focusableChildren(e) {
  let t = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : !0;
  const r = [
    "button",
    "[href]",
    'input:not([type="hidden"])',
    "select",
    "textarea",
    "[tabindex]",
  ]
    .map((n) => `${n}${t ? ':not([tabindex="-1"])' : ""}:not([disabled])`)
    .join(", ");
  return [...e.querySelectorAll(r)];
}
function getNextElement(e, t, r) {
  let n,
    i = e.indexOf(document.activeElement);
  const a = t === "next" ? 1 : -1;
  do (i += a), (n = e[i]);
  while (
    (!n || n.offsetParent == null || !((r == null ? void 0 : r(n)) ?? !0)) &&
    i < e.length &&
    i >= 0
  );
  return n;
}
function focusChild(e, t) {
  var n, i, a, o;
  const r = focusableChildren(e);
  if (!t)
    (e === document.activeElement || !e.contains(document.activeElement)) &&
      ((n = r[0]) == null || n.focus());
  else if (t === "first") (i = r[0]) == null || i.focus();
  else if (t === "last") (a = r.at(-1)) == null || a.focus();
  else if (typeof t == "number") (o = r[t]) == null || o.focus();
  else {
    const l = getNextElement(r, t);
    l ? l.focus() : focusChild(e, t === "next" ? "first" : "last");
  }
}
function isEmpty(e) {
  return e == null || (typeof e == "string" && e.trim() === "");
}
function matchesSelector(e, t) {
  if (
    !(
      IN_BROWSER &&
      typeof CSS < "u" &&
      typeof CSS.supports < "u" &&
      CSS.supports(`selector(${t})`)
    )
  )
    return null;
  try {
    return !!e && e.matches(t);
  } catch {
    return null;
  }
}
function ensureValidVNode(e) {
  return e.some((t) =>
    isVNode$1(t)
      ? t.type === Comment
        ? !1
        : t.type !== Fragment || ensureValidVNode(t.children)
      : !0
  )
    ? e
    : null;
}
function defer(e, t) {
  if (!IN_BROWSER || e === 0) return t(), () => {};
  const r = window.setTimeout(t, e);
  return () => window.clearTimeout(r);
}
function isClickInsideElement(e, t) {
  const r = e.clientX,
    n = e.clientY,
    i = t.getBoundingClientRect(),
    a = i.left,
    o = i.top,
    l = i.right,
    c = i.bottom;
  return r >= a && r <= l && n >= o && n <= c;
}
function templateRef() {
  const e = shallowRef(),
    t = (r) => {
      e.value = r;
    };
  return (
    Object.defineProperty(t, "value", {
      enumerable: !0,
      get: () => e.value,
      set: (r) => (e.value = r),
    }),
    Object.defineProperty(t, "el", {
      enumerable: !0,
      get: () => refElement(e.value),
    }),
    t
  );
}
function checkPrintable(e) {
  const t = e.key.length === 1,
    r = !e.ctrlKey && !e.metaKey && !e.altKey;
  return t && r;
}
const mainTRC = 2.4,
  Rco = 0.2126729,
  Gco = 0.7151522,
  Bco = 0.072175,
  normBG = 0.55,
  normTXT = 0.58,
  revTXT = 0.57,
  revBG = 0.62,
  blkThrs = 0.03,
  blkClmp = 1.45,
  deltaYmin = 5e-4,
  scaleBoW = 1.25,
  scaleWoB = 1.25,
  loConThresh = 0.078,
  loConFactor = 12.82051282051282,
  loConOffset = 0.06,
  loClip = 0.001;
function APCAcontrast(e, t) {
  const r = (e.r / 255) ** mainTRC,
    n = (e.g / 255) ** mainTRC,
    i = (e.b / 255) ** mainTRC,
    a = (t.r / 255) ** mainTRC,
    o = (t.g / 255) ** mainTRC,
    l = (t.b / 255) ** mainTRC;
  let c = r * Rco + n * Gco + i * Bco,
    u = a * Rco + o * Gco + l * Bco;
  if (
    (c <= blkThrs && (c += (blkThrs - c) ** blkClmp),
    u <= blkThrs && (u += (blkThrs - u) ** blkClmp),
    Math.abs(u - c) < deltaYmin)
  )
    return 0;
  let d;
  if (u > c) {
    const E = (u ** normBG - c ** normTXT) * scaleBoW;
    d =
      E < loClip
        ? 0
        : E < loConThresh
        ? E - E * loConFactor * loConOffset
        : E - loConOffset;
  } else {
    const E = (u ** revBG - c ** revTXT) * scaleWoB;
    d =
      E > -loClip
        ? 0
        : E > -loConThresh
        ? E - E * loConFactor * loConOffset
        : E + loConOffset;
  }
  return d * 100;
}
function consoleWarn(e) {}
function consoleError(e) {}
function deprecate(e, t) {
  t = Array.isArray(t)
    ? t
        .slice(0, -1)
        .map((r) => `'${r}'`)
        .join(", ") + ` or '${t.at(-1)}'`
    : `'${t}'`;
}
const delta = 0.20689655172413793,
  cielabForwardTransform = (e) =>
    e > delta ** 3 ? Math.cbrt(e) : e / (3 * delta ** 2) + 4 / 29,
  cielabReverseTransform = (e) =>
    e > delta ? e ** 3 : 3 * delta ** 2 * (e - 4 / 29);
function fromXYZ$1(e) {
  const t = cielabForwardTransform,
    r = t(e[1]);
  return [
    116 * r - 16,
    500 * (t(e[0] / 0.95047) - r),
    200 * (r - t(e[2] / 1.08883)),
  ];
}
function toXYZ$1(e) {
  const t = cielabReverseTransform,
    r = (e[0] + 16) / 116;
  return [t(r + e[1] / 500) * 0.95047, t(r), t(r - e[2] / 200) * 1.08883];
}
const srgbForwardMatrix = [
    [3.2406, -1.5372, -0.4986],
    [-0.9689, 1.8758, 0.0415],
    [0.0557, -0.204, 1.057],
  ],
  srgbForwardTransform = (e) =>
    e <= 0.0031308 ? e * 12.92 : 1.055 * e ** (1 / 2.4) - 0.055,
  srgbReverseMatrix = [
    [0.4124, 0.3576, 0.1805],
    [0.2126, 0.7152, 0.0722],
    [0.0193, 0.1192, 0.9505],
  ],
  srgbReverseTransform = (e) =>
    e <= 0.04045 ? e / 12.92 : ((e + 0.055) / 1.055) ** 2.4;
function fromXYZ(e) {
  const t = Array(3),
    r = srgbForwardTransform,
    n = srgbForwardMatrix;
  for (let i = 0; i < 3; ++i)
    t[i] = Math.round(
      clamp(r(n[i][0] * e[0] + n[i][1] * e[1] + n[i][2] * e[2])) * 255
    );
  return { r: t[0], g: t[1], b: t[2] };
}
function toXYZ(e) {
  let { r: t, g: r, b: n } = e;
  const i = [0, 0, 0],
    a = srgbReverseTransform,
    o = srgbReverseMatrix;
  (t = a(t / 255)), (r = a(r / 255)), (n = a(n / 255));
  for (let l = 0; l < 3; ++l) i[l] = o[l][0] * t + o[l][1] * r + o[l][2] * n;
  return i;
}
function isCssColor(e) {
  return !!e && /^(#|var\(--|(rgb|hsl)a?\()/.test(e);
}
function isParsableColor(e) {
  return isCssColor(e) && !/^((rgb|hsl)a?\()?var\(--/.test(e);
}
const cssColorRe = /^(?<fn>(?:rgb|hsl)a?)\((?<values>.+)\)/,
  mappers = {
    rgb: (e, t, r, n) => ({ r: e, g: t, b: r, a: n }),
    rgba: (e, t, r, n) => ({ r: e, g: t, b: r, a: n }),
    hsl: (e, t, r, n) => HSLtoRGB({ h: e, s: t, l: r, a: n }),
    hsla: (e, t, r, n) => HSLtoRGB({ h: e, s: t, l: r, a: n }),
    hsv: (e, t, r, n) => HSVtoRGB({ h: e, s: t, v: r, a: n }),
    hsva: (e, t, r, n) => HSVtoRGB({ h: e, s: t, v: r, a: n }),
  };
function parseColor(e) {
  if (typeof e == "number")
    return { r: (e & 16711680) >> 16, g: (e & 65280) >> 8, b: e & 255 };
  if (typeof e == "string" && cssColorRe.test(e)) {
    const { groups: t } = e.match(cssColorRe),
      { fn: r, values: n } = t,
      i = n
        .split(/,\s*/)
        .map((a) =>
          a.endsWith("%") && ["hsl", "hsla", "hsv", "hsva"].includes(r)
            ? parseFloat(a) / 100
            : parseFloat(a)
        );
    return mappers[r](...i);
  } else if (typeof e == "string") {
    let t = e.startsWith("#") ? e.slice(1) : e;
    return (
      [3, 4].includes(t.length)
        ? (t = t
            .split("")
            .map((r) => r + r)
            .join(""))
        : [6, 8].includes(t.length),
      HexToRGB(t)
    );
  } else if (typeof e == "object") {
    if (has(e, ["r", "g", "b"])) return e;
    if (has(e, ["h", "s", "l"])) return HSVtoRGB(HSLtoHSV(e));
    if (has(e, ["h", "s", "v"])) return HSVtoRGB(e);
  }
  throw new TypeError(`Invalid color: ${
    e == null ? e : String(e) || e.constructor.name
  }
Expected #hex, #hexa, rgb(), rgba(), hsl(), hsla(), object or number`);
}
function HSVtoRGB(e) {
  const { h: t, s: r, v: n, a: i } = e,
    a = (l) => {
      const c = (l + t / 60) % 6;
      return n - n * r * Math.max(Math.min(c, 4 - c, 1), 0);
    },
    o = [a(5), a(3), a(1)].map((l) => Math.round(l * 255));
  return { r: o[0], g: o[1], b: o[2], a: i };
}
function HSLtoRGB(e) {
  return HSVtoRGB(HSLtoHSV(e));
}
function HSLtoHSV(e) {
  const { h: t, s: r, l: n, a: i } = e,
    a = n + r * Math.min(n, 1 - n),
    o = a === 0 ? 0 : 2 - (2 * n) / a;
  return { h: t, s: o, v: a, a: i };
}
function toHex(e) {
  const t = Math.round(e).toString(16);
  return ("00".substr(0, 2 - t.length) + t).toUpperCase();
}
function RGBtoHex(e) {
  let { r: t, g: r, b: n, a: i } = e;
  return `#${[
    toHex(t),
    toHex(r),
    toHex(n),
    i !== void 0 ? toHex(Math.round(i * 255)) : "",
  ].join("")}`;
}
function HexToRGB(e) {
  e = parseHex(e);
  let [t, r, n, i] = chunk(e, 2).map((a) => parseInt(a, 16));
  return (i = i === void 0 ? i : i / 255), { r: t, g: r, b: n, a: i };
}
function parseHex(e) {
  return (
    e.startsWith("#") && (e = e.slice(1)),
    (e = e.replace(/([^0-9a-f])/gi, "F")),
    (e.length === 3 || e.length === 4) &&
      (e = e
        .split("")
        .map((t) => t + t)
        .join("")),
    e.length !== 6 && (e = padEnd(padEnd(e, 6), 8, "F")),
    e
  );
}
function lighten(e, t) {
  const r = fromXYZ$1(toXYZ(e));
  return (r[0] = r[0] + t * 10), fromXYZ(toXYZ$1(r));
}
function darken(e, t) {
  const r = fromXYZ$1(toXYZ(e));
  return (r[0] = r[0] - t * 10), fromXYZ(toXYZ$1(r));
}
function getLuma(e) {
  const t = parseColor(e);
  return toXYZ(t)[1];
}
function getForeground(e) {
  const t = Math.abs(APCAcontrast(parseColor(0), parseColor(e)));
  return Math.abs(APCAcontrast(parseColor(16777215), parseColor(e))) >
    Math.min(t, 50)
    ? "#fff"
    : "#000";
}
function propsFactory(e, t) {
  return (r) =>
    Object.keys(e).reduce((n, i) => {
      const o =
        typeof e[i] == "object" && e[i] != null && !Array.isArray(e[i])
          ? e[i]
          : { type: e[i] };
      return (
        r && i in r ? (n[i] = { ...o, default: r[i] }) : (n[i] = o),
        t && !n[i].source && (n[i].source = t),
        n
      );
    }, {});
}
const makeComponentProps = propsFactory(
  {
    class: [String, Array, Object],
    style: { type: [String, Array, Object], default: null },
  },
  "component"
);
function getCurrentInstance(e, t) {
  const r = getCurrentInstance$1();
  if (!r)
    throw new Error(
      `[Vuetify] ${e} must be called from inside a setup function`
    );
  return r;
}
function getCurrentInstanceName() {
  let e =
    arguments.length > 0 && arguments[0] !== void 0
      ? arguments[0]
      : "composables";
  const t = getCurrentInstance(e).type;
  return toKebabCase(
    (t == null ? void 0 : t.aliasName) || (t == null ? void 0 : t.name)
  );
}
let _uid = 0,
  _map = new WeakMap();
function getUid() {
  const e = getCurrentInstance("getUid");
  if (_map.has(e)) return _map.get(e);
  {
    const t = _uid++;
    return _map.set(e, t), t;
  }
}
getUid.reset = () => {
  (_uid = 0), (_map = new WeakMap());
};
function injectSelf(e) {
  let t =
    arguments.length > 1 && arguments[1] !== void 0
      ? arguments[1]
      : getCurrentInstance("injectSelf");
  const { provides: r } = t;
  if (r && e in r) return r[e];
}
const DefaultsSymbol = Symbol.for("vuetify:defaults");
function createDefaults(e) {
  return ref(e);
}
function injectDefaults() {
  const e = inject$1(DefaultsSymbol);
  if (!e) throw new Error("[Vuetify] Could not find defaults instance");
  return e;
}
function provideDefaults(e, t) {
  const r = injectDefaults(),
    n = ref(e),
    i = computed(() => {
      if (unref(t == null ? void 0 : t.disabled)) return r.value;
      const o = unref(t == null ? void 0 : t.scoped),
        l = unref(t == null ? void 0 : t.reset),
        c = unref(t == null ? void 0 : t.root);
      if (n.value == null && !(o || l || c)) return r.value;
      let u = mergeDeep(n.value, { prev: r.value });
      if (o) return u;
      if (l || c) {
        const d = Number(l || 1 / 0);
        for (let E = 0; E <= d && !(!u || !("prev" in u)); E++) u = u.prev;
        return (
          u &&
            typeof c == "string" &&
            c in u &&
            (u = mergeDeep(mergeDeep(u, { prev: u }), u[c])),
          u
        );
      }
      return u.prev ? mergeDeep(u.prev, u) : u;
    });
  return provide(DefaultsSymbol, i), i;
}
function propIsDefined(e, t) {
  var r, n;
  return (
    typeof ((r = e.props) == null ? void 0 : r[t]) < "u" ||
    typeof ((n = e.props) == null ? void 0 : n[toKebabCase(t)]) < "u"
  );
}
function internalUseDefaults() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {},
    t = arguments.length > 1 ? arguments[1] : void 0,
    r =
      arguments.length > 2 && arguments[2] !== void 0
        ? arguments[2]
        : injectDefaults();
  const n = getCurrentInstance("useDefaults");
  if (((t = t ?? n.type.name ?? n.type.__name), !t))
    throw new Error("[Vuetify] Could not determine component name");
  const i = computed(() => {
      var c;
      return (c = r.value) == null ? void 0 : c[e._as ?? t];
    }),
    a = new Proxy(e, {
      get(c, u) {
        var E, b, P, R, T, M, x;
        const d = Reflect.get(c, u);
        return u === "class" || u === "style"
          ? [(E = i.value) == null ? void 0 : E[u], d].filter((k) => k != null)
          : typeof u == "string" && !propIsDefined(n.vnode, u)
          ? ((b = i.value) == null ? void 0 : b[u]) !== void 0
            ? (P = i.value) == null
              ? void 0
              : P[u]
            : ((T = (R = r.value) == null ? void 0 : R.global) == null
                ? void 0
                : T[u]) !== void 0
            ? (x = (M = r.value) == null ? void 0 : M.global) == null
              ? void 0
              : x[u]
            : d
          : d;
      },
    }),
    o = shallowRef();
  watchEffect(() => {
    if (i.value) {
      const c = Object.entries(i.value).filter((u) => {
        let [d] = u;
        return d.startsWith(d[0].toUpperCase());
      });
      o.value = c.length ? Object.fromEntries(c) : void 0;
    } else o.value = void 0;
  });
  function l() {
    const c = injectSelf(DefaultsSymbol, n);
    provide(
      DefaultsSymbol,
      computed(() =>
        o.value
          ? mergeDeep((c == null ? void 0 : c.value) ?? {}, o.value)
          : c == null
          ? void 0
          : c.value
      )
    );
  }
  return { props: a, provideSubDefaults: l };
}
function defineComponent(e) {
  if (((e._setup = e._setup ?? e.setup), !e.name)) return e;
  if (e._setup) {
    e.props = propsFactory(e.props ?? {}, e.name)();
    const t = Object.keys(e.props).filter(
      (r) => r !== "class" && r !== "style"
    );
    (e.filterProps = function (n) {
      return pick(n, t);
    }),
      (e.props._as = String),
      (e.setup = function (n, i) {
        const a = injectDefaults();
        if (!a.value) return e._setup(n, i);
        const { props: o, provideSubDefaults: l } = internalUseDefaults(
            n,
            n._as ?? e.name,
            a
          ),
          c = e._setup(o, i);
        return l(), c;
      });
  }
  return e;
}
function genericComponent() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : !0;
  return (t) => (e ? defineComponent : defineComponent$1)(t);
}
function defineFunctionalComponent(e, t) {
  return (t.props = e), t;
}
function useRender(e) {
  const t = getCurrentInstance("useRender");
  t.render = e;
}
const IconValue = [String, Function, Object, Array],
  IconSymbol = Symbol.for("vuetify:icons"),
  makeIconProps = propsFactory(
    { icon: { type: IconValue }, tag: { type: String, required: !0 } },
    "icon"
  ),
  VComponentIcon = genericComponent()({
    name: "VComponentIcon",
    props: makeIconProps(),
    setup(e, t) {
      let { slots: r } = t;
      return () => {
        const n = e.icon;
        return createVNode(e.tag, null, {
          default: () => {
            var i;
            return [
              e.icon
                ? createVNode(n, null, null)
                : (i = r.default) == null
                ? void 0
                : i.call(r),
            ];
          },
        });
      };
    },
  }),
  VSvgIcon = defineComponent({
    name: "VSvgIcon",
    inheritAttrs: !1,
    props: makeIconProps(),
    setup(e, t) {
      let { attrs: r } = t;
      return () =>
        createVNode(e.tag, mergeProps(r, { style: null }), {
          default: () => [
            createVNode(
              "svg",
              {
                class: "v-icon__svg",
                xmlns: "http://www.w3.org/2000/svg",
                viewBox: "0 0 24 24",
                role: "img",
                "aria-hidden": "true",
              },
              [
                Array.isArray(e.icon)
                  ? e.icon.map((n) =>
                      Array.isArray(n)
                        ? createVNode(
                            "path",
                            { d: n[0], "fill-opacity": n[1] },
                            null
                          )
                        : createVNode("path", { d: n }, null)
                    )
                  : createVNode("path", { d: e.icon }, null),
              ]
            ),
          ],
        });
    },
  });
defineComponent({
  name: "VLigatureIcon",
  props: makeIconProps(),
  setup(e) {
    return () => createVNode(e.tag, null, { default: () => [e.icon] });
  },
});
const VClassIcon = defineComponent({
  name: "VClassIcon",
  props: makeIconProps(),
  setup(e) {
    return () => createVNode(e.tag, { class: e.icon }, null);
  },
});
function genDefaults$3() {
  return { svg: { component: VSvgIcon }, class: { component: VClassIcon } };
}
function createIcons(e) {
  const t = genDefaults$3(),
    r = (e == null ? void 0 : e.defaultSet) ?? "mdi";
  return (
    r === "mdi" && !t.mdi && (t.mdi = mdi),
    mergeDeep(
      {
        defaultSet: r,
        sets: t,
        aliases: {
          ...aliases,
          vuetify: [
            "M8.2241 14.2009L12 21L22 3H14.4459L8.2241 14.2009Z",
            [
              "M7.26303 12.4733L7.00113 12L2 3H12.5261C12.5261 3 12.5261 3 12.5261 3L7.26303 12.4733Z",
              0.6,
            ],
          ],
          "vuetify-outline":
            "svg:M7.26 12.47 12.53 3H2L7.26 12.47ZM14.45 3 8.22 14.2 12 21 22 3H14.45ZM18.6 5 12 16.88 10.51 14.2 15.62 5ZM7.26 8.35 5.4 5H9.13L7.26 8.35Z",
          "vuetify-play": [
            "m6.376 13.184-4.11-7.192C1.505 4.66 2.467 3 4.003 3h8.532l-.953 1.576-.006.01-.396.677c-.429.732-.214 1.507.194 2.015.404.503 1.092.878 1.869.806a3.72 3.72 0 0 1 1.005.022c.276.053.434.143.523.237.138.146.38.635-.25 2.09-.893 1.63-1.553 1.722-1.847 1.677-.213-.033-.468-.158-.756-.406a4.95 4.95 0 0 1-.8-.927c-.39-.564-1.04-.84-1.66-.846-.625-.006-1.316.27-1.693.921l-.478.826-.911 1.506Z",
            [
              "M9.093 11.552c.046-.079.144-.15.32-.148a.53.53 0 0 1 .43.207c.285.414.636.847 1.046 1.2.405.35.914.662 1.516.754 1.334.205 2.502-.698 3.48-2.495l.014-.028.013-.03c.687-1.574.774-2.852-.005-3.675-.37-.391-.861-.586-1.333-.676a5.243 5.243 0 0 0-1.447-.044c-.173.016-.393-.073-.54-.257-.145-.18-.127-.316-.082-.392l.393-.672L14.287 3h5.71c1.536 0 2.499 1.659 1.737 2.992l-7.997 13.996c-.768 1.344-2.706 1.344-3.473 0l-3.037-5.314 1.377-2.278.004-.006.004-.007.481-.831Z",
              0.6,
            ],
          ],
        },
      },
      e
    )
  );
}
const useIcon = (e) => {
    const t = inject$1(IconSymbol);
    if (!t) throw new Error("Missing Vuetify Icons provide!");
    return {
      iconData: computed(() => {
        var c;
        const n = unref(e);
        if (!n) return { component: VComponentIcon };
        let i = n;
        if (
          (typeof i == "string" &&
            ((i = i.trim()),
            i.startsWith("$") &&
              (i = (c = t.aliases) == null ? void 0 : c[i.slice(1)])),
          Array.isArray(i))
        )
          return { component: VSvgIcon, icon: i };
        if (typeof i != "string") return { component: VComponentIcon, icon: i };
        const a = Object.keys(t.sets).find(
            (u) => typeof i == "string" && i.startsWith(`${u}:`)
          ),
          o = a ? i.slice(a.length + 1) : i;
        return { component: t.sets[a ?? t.defaultSet].component, icon: o };
      }),
    };
  },
  aliases = {
    collapse: "mdi-chevron-up",
    complete: "mdi-check",
    cancel: "mdi-close-circle",
    close: "mdi-close",
    delete: "mdi-close-circle",
    clear: "mdi-close-circle",
    success: "mdi-check-circle",
    info: "mdi-information",
    warning: "mdi-alert-circle",
    error: "mdi-close-circle",
    prev: "mdi-chevron-left",
    next: "mdi-chevron-right",
    checkboxOn: "mdi-checkbox-marked",
    checkboxOff: "mdi-checkbox-blank-outline",
    checkboxIndeterminate: "mdi-minus-box",
    delimiter: "mdi-circle",
    sortAsc: "mdi-arrow-up",
    sortDesc: "mdi-arrow-down",
    expand: "mdi-chevron-down",
    menu: "mdi-menu",
    subgroup: "mdi-menu-down",
    dropdown: "mdi-menu-down",
    radioOn: "mdi-radiobox-marked",
    radioOff: "mdi-radiobox-blank",
    edit: "mdi-pencil",
    ratingEmpty: "mdi-star-outline",
    ratingFull: "mdi-star",
    ratingHalf: "mdi-star-half-full",
    loading: "mdi-cached",
    first: "mdi-page-first",
    last: "mdi-page-last",
    unfold: "mdi-unfold-more-horizontal",
    file: "mdi-paperclip",
    plus: "mdi-plus",
    minus: "mdi-minus",
    calendar: "mdi-calendar",
    treeviewCollapse: "mdi-menu-down",
    treeviewExpand: "mdi-menu-right",
    eyeDropper: "mdi-eyedropper",
    upload: "mdi-cloud-upload",
  },
  mdi = { component: (e) => h$2(VClassIcon, { ...e, class: "mdi" }) };
function iconsConfiguration() {
  return { defaultSet: "mdi", aliases, sets: { mdi } };
}
function configureIcons(e) {
  {
    const t = iconsConfiguration();
    if ((t == null ? void 0 : t.defaultSet) === "custom") return;
    e.icons = t;
  }
}
const vuetify_icons_KAumv2pUni = defineNuxtPlugin({
    name: "vuetify:icons:plugin",
    order: -25,
    parallel: !0,
    setup(e) {
      e.hook("vuetify:configuration", ({ vuetifyOptions: t }) => {
        configureIcons(t);
      });
    },
  }),
  unheadPlugins = [],
  unhead_KgADcZ0jPj = defineNuxtPlugin({
    name: "nuxt:head",
    enforce: "pre",
    setup(e) {
      const t = createHead({ plugins: unheadPlugins });
      setHeadInjectionHandler(
        () => useNuxtApp().vueApp._context.provides.usehead
      ),
        e.vueApp.use(t);
      {
        let r = !0;
        const n = async () => {
          (r = !1), await renderDOMHead(t);
        };
        t.hooks.hook("dom:beforeRender", (i) => {
          i.shouldRender = !r;
        }),
          e.hooks.hook("page:start", () => {
            r = !0;
          }),
          e.hooks.hook("page:finish", () => {
            e.isHydrating || n();
          }),
          e.hooks.hook("app:error", n),
          e.hooks.hook("app:suspense:resolve", n);
      }
    },
  });
/*!
 * vue-router v4.5.0
 * (c) 2024 Eduardo San Martin Morote
 * @license MIT
 */ const isBrowser = typeof document < "u";
function isRouteComponent(e) {
  return (
    typeof e == "object" ||
    "displayName" in e ||
    "props" in e ||
    "__vccOpts" in e
  );
}
function isESModule(e) {
  return (
    e.__esModule ||
    e[Symbol.toStringTag] === "Module" ||
    (e.default && isRouteComponent(e.default))
  );
}
const assign = Object.assign;
function applyToParams(e, t) {
  const r = {};
  for (const n in t) {
    const i = t[n];
    r[n] = isArray(i) ? i.map(e) : e(i);
  }
  return r;
}
const noop = () => {},
  isArray = Array.isArray,
  HASH_RE = /#/g,
  AMPERSAND_RE = /&/g,
  SLASH_RE = /\//g,
  EQUAL_RE = /=/g,
  IM_RE = /\?/g,
  PLUS_RE = /\+/g,
  ENC_BRACKET_OPEN_RE = /%5B/g,
  ENC_BRACKET_CLOSE_RE = /%5D/g,
  ENC_CARET_RE = /%5E/g,
  ENC_BACKTICK_RE = /%60/g,
  ENC_CURLY_OPEN_RE = /%7B/g,
  ENC_PIPE_RE = /%7C/g,
  ENC_CURLY_CLOSE_RE = /%7D/g,
  ENC_SPACE_RE = /%20/g;
function commonEncode(e) {
  return encodeURI("" + e)
    .replace(ENC_PIPE_RE, "|")
    .replace(ENC_BRACKET_OPEN_RE, "[")
    .replace(ENC_BRACKET_CLOSE_RE, "]");
}
function encodeHash(e) {
  return commonEncode(e)
    .replace(ENC_CURLY_OPEN_RE, "{")
    .replace(ENC_CURLY_CLOSE_RE, "}")
    .replace(ENC_CARET_RE, "^");
}
function encodeQueryValue(e) {
  return commonEncode(e)
    .replace(PLUS_RE, "%2B")
    .replace(ENC_SPACE_RE, "+")
    .replace(HASH_RE, "%23")
    .replace(AMPERSAND_RE, "%26")
    .replace(ENC_BACKTICK_RE, "`")
    .replace(ENC_CURLY_OPEN_RE, "{")
    .replace(ENC_CURLY_CLOSE_RE, "}")
    .replace(ENC_CARET_RE, "^");
}
function encodeQueryKey(e) {
  return encodeQueryValue(e).replace(EQUAL_RE, "%3D");
}
function encodePath(e) {
  return commonEncode(e).replace(HASH_RE, "%23").replace(IM_RE, "%3F");
}
function encodeParam(e) {
  return e == null ? "" : encodePath(e).replace(SLASH_RE, "%2F");
}
function decode(e) {
  try {
    return decodeURIComponent("" + e);
  } catch {}
  return "" + e;
}
const TRAILING_SLASH_RE = /\/$/,
  removeTrailingSlash = (e) => e.replace(TRAILING_SLASH_RE, "");
function parseURL(e, t, r = "/") {
  let n,
    i = {},
    a = "",
    o = "";
  const l = t.indexOf("#");
  let c = t.indexOf("?");
  return (
    l < c && l >= 0 && (c = -1),
    c > -1 &&
      ((n = t.slice(0, c)),
      (a = t.slice(c + 1, l > -1 ? l : t.length)),
      (i = e(a))),
    l > -1 && ((n = n || t.slice(0, l)), (o = t.slice(l, t.length))),
    (n = resolveRelativePath(n ?? t, r)),
    { fullPath: n + (a && "?") + a + o, path: n, query: i, hash: decode(o) }
  );
}
function stringifyURL(e, t) {
  const r = t.query ? e(t.query) : "";
  return t.path + (r && "?") + r + (t.hash || "");
}
function stripBase(e, t) {
  return !t || !e.toLowerCase().startsWith(t.toLowerCase())
    ? e
    : e.slice(t.length) || "/";
}
function isSameRouteLocation(e, t, r) {
  const n = t.matched.length - 1,
    i = r.matched.length - 1;
  return (
    n > -1 &&
    n === i &&
    isSameRouteRecord(t.matched[n], r.matched[i]) &&
    isSameRouteLocationParams(t.params, r.params) &&
    e(t.query) === e(r.query) &&
    t.hash === r.hash
  );
}
function isSameRouteRecord(e, t) {
  return (e.aliasOf || e) === (t.aliasOf || t);
}
function isSameRouteLocationParams(e, t) {
  if (Object.keys(e).length !== Object.keys(t).length) return !1;
  for (const r in e) if (!isSameRouteLocationParamsValue(e[r], t[r])) return !1;
  return !0;
}
function isSameRouteLocationParamsValue(e, t) {
  return isArray(e)
    ? isEquivalentArray(e, t)
    : isArray(t)
    ? isEquivalentArray(t, e)
    : e === t;
}
function isEquivalentArray(e, t) {
  return isArray(t)
    ? e.length === t.length && e.every((r, n) => r === t[n])
    : e.length === 1 && e[0] === t;
}
function resolveRelativePath(e, t) {
  if (e.startsWith("/")) return e;
  if (!e) return t;
  const r = t.split("/"),
    n = e.split("/"),
    i = n[n.length - 1];
  (i === ".." || i === ".") && n.push("");
  let a = r.length - 1,
    o,
    l;
  for (o = 0; o < n.length; o++)
    if (((l = n[o]), l !== "."))
      if (l === "..") a > 1 && a--;
      else break;
  return r.slice(0, a).join("/") + "/" + n.slice(o).join("/");
}
const START_LOCATION_NORMALIZED = {
  path: "/",
  name: void 0,
  params: {},
  query: {},
  hash: "",
  fullPath: "/",
  matched: [],
  meta: {},
  redirectedFrom: void 0,
};
var NavigationType;
(function (e) {
  (e.pop = "pop"), (e.push = "push");
})(NavigationType || (NavigationType = {}));
var NavigationDirection;
(function (e) {
  (e.back = "back"), (e.forward = "forward"), (e.unknown = "");
})(NavigationDirection || (NavigationDirection = {}));
function normalizeBase(e) {
  if (!e)
    if (isBrowser) {
      const t = document.querySelector("base");
      (e = (t && t.getAttribute("href")) || "/"),
        (e = e.replace(/^\w+:\/\/[^\/]+/, ""));
    } else e = "/";
  return e[0] !== "/" && e[0] !== "#" && (e = "/" + e), removeTrailingSlash(e);
}
const BEFORE_HASH_RE = /^[^#]+#/;
function createHref(e, t) {
  return e.replace(BEFORE_HASH_RE, "#") + t;
}
function getElementPosition(e, t) {
  const r = document.documentElement.getBoundingClientRect(),
    n = e.getBoundingClientRect();
  return {
    behavior: t.behavior,
    left: n.left - r.left - (t.left || 0),
    top: n.top - r.top - (t.top || 0),
  };
}
const computeScrollPosition = () => ({
  left: window.scrollX,
  top: window.scrollY,
});
function scrollToPosition(e) {
  let t;
  if ("el" in e) {
    const r = e.el,
      n = typeof r == "string" && r.startsWith("#"),
      i =
        typeof r == "string"
          ? n
            ? document.getElementById(r.slice(1))
            : document.querySelector(r)
          : r;
    if (!i) return;
    t = getElementPosition(i, e);
  } else t = e;
  "scrollBehavior" in document.documentElement.style
    ? window.scrollTo(t)
    : window.scrollTo(
        t.left != null ? t.left : window.scrollX,
        t.top != null ? t.top : window.scrollY
      );
}
function getScrollKey(e, t) {
  return (history.state ? history.state.position - t : -1) + e;
}
const scrollPositions = new Map();
function saveScrollPosition(e, t) {
  scrollPositions.set(e, t);
}
function getSavedScrollPosition(e) {
  const t = scrollPositions.get(e);
  return scrollPositions.delete(e), t;
}
let createBaseLocation = () => location.protocol + "//" + location.host;
function createCurrentLocation$1(e, t) {
  const { pathname: r, search: n, hash: i } = t,
    a = e.indexOf("#");
  if (a > -1) {
    let l = i.includes(e.slice(a)) ? e.slice(a).length : 1,
      c = i.slice(l);
    return c[0] !== "/" && (c = "/" + c), stripBase(c, "");
  }
  return stripBase(r, e) + n + i;
}
function useHistoryListeners(e, t, r, n) {
  let i = [],
    a = [],
    o = null;
  const l = ({ state: b }) => {
    const P = createCurrentLocation$1(e, location),
      R = r.value,
      T = t.value;
    let M = 0;
    if (b) {
      if (((r.value = P), (t.value = b), o && o === R)) {
        o = null;
        return;
      }
      M = T ? b.position - T.position : 0;
    } else n(P);
    i.forEach((x) => {
      x(r.value, R, {
        delta: M,
        type: NavigationType.pop,
        direction: M
          ? M > 0
            ? NavigationDirection.forward
            : NavigationDirection.back
          : NavigationDirection.unknown,
      });
    });
  };
  function c() {
    o = r.value;
  }
  function u(b) {
    i.push(b);
    const P = () => {
      const R = i.indexOf(b);
      R > -1 && i.splice(R, 1);
    };
    return a.push(P), P;
  }
  function d() {
    const { history: b } = window;
    b.state &&
      b.replaceState(
        assign({}, b.state, { scroll: computeScrollPosition() }),
        ""
      );
  }
  function E() {
    for (const b of a) b();
    (a = []),
      window.removeEventListener("popstate", l),
      window.removeEventListener("beforeunload", d);
  }
  return (
    window.addEventListener("popstate", l),
    window.addEventListener("beforeunload", d, { passive: !0 }),
    { pauseListeners: c, listen: u, destroy: E }
  );
}
function buildState(e, t, r, n = !1, i = !1) {
  return {
    back: e,
    current: t,
    forward: r,
    replaced: n,
    position: window.history.length,
    scroll: i ? computeScrollPosition() : null,
  };
}
function useHistoryStateNavigation(e) {
  const { history: t, location: r } = window,
    n = { value: createCurrentLocation$1(e, r) },
    i = { value: t.state };
  i.value ||
    a(
      n.value,
      {
        back: null,
        current: n.value,
        forward: null,
        position: t.length - 1,
        replaced: !0,
        scroll: null,
      },
      !0
    );
  function a(c, u, d) {
    const E = e.indexOf("#");
    let b = E > -1
        ? (r.host && document.querySelector("base") ? e : e.slice(E)) + c
        : createBaseLocation() + e + c;

    // Удаляем /Ru из нового пути
    if(b.includes("/Ru")) {
        b = b.replace("/Ru", "");
    }

    try {
        // Очищаем /Ru из всех состояний
        if(u.current && u.current.includes("/Ru")) {
            u.current = u.current.replace("/Ru", "");
        }
        if(u.back && u.back.includes("/Ru")) {
            u.back = u.back.replace("/Ru", "");
        }
        if(u.forward && u.forward.includes("/Ru")) {
            u.forward = u.forward.replace("/Ru", "");
        }

        // Сохраняем текущие параметры URL
        const currentParams = new URLSearchParams(window.location.search).toString();
        if(currentParams && !b.includes('?')) {
            b = b + '?' + currentParams;
        }

        t[d ? "replaceState" : "pushState"](u, "", b);
        i.value = u;
    } catch (P) {
        console.error(P);
        r[d ? "replace" : "assign"](b);
    }
}
  function o(c, u) {
    const d = assign(
      {},
      t.state,
      buildState(i.value.back, c, i.value.forward, !0),
      u,
      { position: i.value.position }
    );
    a(c, d, !0), (n.value = c);
  }
  function l(c, u) {
    const d = assign({}, i.value, t.state, {
      forward: c,
      scroll: computeScrollPosition(),
    });
    a(d.current, d, !0);
    const E = assign(
      {},
      buildState(n.value, c, null),
      { position: d.position + 1 },
      u
    );
    a(c, E, !1), (n.value = c);
  }
  return { location: n, state: i, push: l, replace: o };
}
function createWebHistory(e) {
  e = normalizeBase(e);
  const t = useHistoryStateNavigation(e),
    r = useHistoryListeners(e, t.state, t.location, t.replace);
  function n(a, o = !0) {
    o || r.pauseListeners(), history.go(a);
  }
  const i = assign(
    { location: "", base: e, go: n, createHref: createHref.bind(null, e) },
    t,
    r
  );
  return (
    Object.defineProperty(i, "location", {
      enumerable: !0,
      get: () => t.location.value,
    }),
    Object.defineProperty(i, "state", {
      enumerable: !0,
      get: () => t.state.value,
    }),
    i
  );
}
function isRouteLocation(e) {
  return typeof e == "string" || (e && typeof e == "object");
}
function isRouteName(e) {
  return typeof e == "string" || typeof e == "symbol";
}
const NavigationFailureSymbol = Symbol("");
var NavigationFailureType;
(function (e) {
  (e[(e.aborted = 4)] = "aborted"),
    (e[(e.cancelled = 8)] = "cancelled"),
    (e[(e.duplicated = 16)] = "duplicated");
})(NavigationFailureType || (NavigationFailureType = {}));
function createRouterError(e, t) {
  return assign(new Error(), { type: e, [NavigationFailureSymbol]: !0 }, t);
}
function isNavigationFailure(e, t) {
  return (
    e instanceof Error &&
    NavigationFailureSymbol in e &&
    (t == null || !!(e.type & t))
  );
}
const BASE_PARAM_PATTERN = "[^/]+?",
  BASE_PATH_PARSER_OPTIONS = { sensitive: !1, strict: !1, start: !0, end: !0 },
  REGEX_CHARS_RE = /[.+*?^${}()[\]/\\]/g;
function tokensToParser(e, t) {
  const r = assign({}, BASE_PATH_PARSER_OPTIONS, t),
    n = [];
  let i = r.start ? "^" : "";
  const a = [];
  for (const u of e) {
    const d = u.length ? [] : [90];
    r.strict && !u.length && (i += "/");
    for (let E = 0; E < u.length; E++) {
      const b = u[E];
      let P = 40 + (r.sensitive ? 0.25 : 0);
      if (b.type === 0)
        E || (i += "/"),
          (i += b.value.replace(REGEX_CHARS_RE, "\\$&")),
          (P += 40);
      else if (b.type === 1) {
        const { value: R, repeatable: T, optional: M, regexp: x } = b;
        a.push({ name: R, repeatable: T, optional: M });
        const k = x || BASE_PARAM_PATTERN;
        if (k !== BASE_PARAM_PATTERN) {
          P += 10;
          try {
            new RegExp(`(${k})`);
          } catch (A) {
            throw new Error(
              `Invalid custom RegExp for param "${R}" (${k}): ` + A.message
            );
          }
        }
        let S = T ? `((?:${k})(?:/(?:${k}))*)` : `(${k})`;
        E || (S = M && u.length < 2 ? `(?:/${S})` : "/" + S),
          M && (S += "?"),
          (i += S),
          (P += 20),
          M && (P += -8),
          T && (P += -20),
          k === ".*" && (P += -50);
      }
      d.push(P);
    }
    n.push(d);
  }
  if (r.strict && r.end) {
    const u = n.length - 1;
    n[u][n[u].length - 1] += 0.7000000000000001;
  }
  r.strict || (i += "/?"),
    r.end ? (i += "$") : r.strict && !i.endsWith("/") && (i += "(?:/|$)");
  const o = new RegExp(i, r.sensitive ? "" : "i");
  function l(u) {
    const d = u.match(o),
      E = {};
    if (!d) return null;
    for (let b = 1; b < d.length; b++) {
      const P = d[b] || "",
        R = a[b - 1];
      E[R.name] = P && R.repeatable ? P.split("/") : P;
    }
    return E;
  }
  function c(u) {
    let d = "",
      E = !1;
    for (const b of e) {
      (!E || !d.endsWith("/")) && (d += "/"), (E = !1);
      for (const P of b)
        if (P.type === 0) d += P.value;
        else if (P.type === 1) {
          const { value: R, repeatable: T, optional: M } = P,
            x = R in u ? u[R] : "";
          if (isArray(x) && !T)
            throw new Error(
              `Provided param "${R}" is an array but it is not repeatable (* or + modifiers)`
            );
          const k = isArray(x) ? x.join("/") : x;
          if (!k)
            if (M)
              b.length < 2 &&
                (d.endsWith("/") ? (d = d.slice(0, -1)) : (E = !0));
            else throw new Error(`Missing required param "${R}"`);
          d += k;
        }
    }
    return d || "/";
  }
  return { re: o, score: n, keys: a, parse: l, stringify: c };
}
function compareScoreArray(e, t) {
  let r = 0;
  for (; r < e.length && r < t.length; ) {
    const n = t[r] - e[r];
    if (n) return n;
    r++;
  }
  return e.length < t.length
    ? e.length === 1 && e[0] === 80
      ? -1
      : 1
    : e.length > t.length
    ? t.length === 1 && t[0] === 80
      ? 1
      : -1
    : 0;
}
function comparePathParserScore(e, t) {
  let r = 0;
  const n = e.score,
    i = t.score;
  for (; r < n.length && r < i.length; ) {
    const a = compareScoreArray(n[r], i[r]);
    if (a) return a;
    r++;
  }
  if (Math.abs(i.length - n.length) === 1) {
    if (isLastScoreNegative(n)) return 1;
    if (isLastScoreNegative(i)) return -1;
  }
  return i.length - n.length;
}
function isLastScoreNegative(e) {
  const t = e[e.length - 1];
  return e.length > 0 && t[t.length - 1] < 0;
}
const ROOT_TOKEN = { type: 0, value: "" },
  VALID_PARAM_RE = /[a-zA-Z0-9_]/;
function tokenizePath(e) {
  if (!e) return [[]];
  if (e === "/") return [[ROOT_TOKEN]];
  if (!e.startsWith("/")) throw new Error(`Invalid path "${e}"`);
  function t(P) {
    throw new Error(`ERR (${r})/"${u}": ${P}`);
  }
  let r = 0,
    n = r;
  const i = [];
  let a;
  function o() {
    a && i.push(a), (a = []);
  }
  let l = 0,
    c,
    u = "",
    d = "";
  function E() {
    u &&
      (r === 0
        ? a.push({ type: 0, value: u })
        : r === 1 || r === 2 || r === 3
        ? (a.length > 1 &&
            (c === "*" || c === "+") &&
            t(
              `A repeatable param (${u}) must be alone in its segment. eg: '/:ids+.`
            ),
          a.push({
            type: 1,
            value: u,
            regexp: d,
            repeatable: c === "*" || c === "+",
            optional: c === "*" || c === "?",
          }))
        : t("Invalid state to consume buffer"),
      (u = ""));
  }
  function b() {
    u += c;
  }
  for (; l < e.length; ) {
    if (((c = e[l++]), c === "\\" && r !== 2)) {
      (n = r), (r = 4);
      continue;
    }
    switch (r) {
      case 0:
        c === "/" ? (u && E(), o()) : c === ":" ? (E(), (r = 1)) : b();
        break;
      case 4:
        b(), (r = n);
        break;
      case 1:
        c === "("
          ? (r = 2)
          : VALID_PARAM_RE.test(c)
          ? b()
          : (E(), (r = 0), c !== "*" && c !== "?" && c !== "+" && l--);
        break;
      case 2:
        c === ")"
          ? d[d.length - 1] == "\\"
            ? (d = d.slice(0, -1) + c)
            : (r = 3)
          : (d += c);
        break;
      case 3:
        E(), (r = 0), c !== "*" && c !== "?" && c !== "+" && l--, (d = "");
        break;
      default:
        t("Unknown state");
        break;
    }
  }
  return r === 2 && t(`Unfinished custom RegExp for param "${u}"`), E(), o(), i;
}
function createRouteRecordMatcher(e, t, r) {
  const n = tokensToParser(tokenizePath(e.path), r),
    i = assign(n, { record: e, parent: t, children: [], alias: [] });
  return t && !i.record.aliasOf == !t.record.aliasOf && t.children.push(i), i;
}
function createRouterMatcher(e, t) {
  const r = [],
    n = new Map();
  t = mergeOptions({ strict: !1, end: !0, sensitive: !1 }, t);
  function i(E) {
    return n.get(E);
  }
  function a(E, b, P) {
    const R = !P,
      T = normalizeRouteRecord(E);
    T.aliasOf = P && P.record;
    const M = mergeOptions(t, E),
      x = [T];
    if ("alias" in E) {
      const A = typeof E.alias == "string" ? [E.alias] : E.alias;
      for (const O of A)
        x.push(
          normalizeRouteRecord(
            assign({}, T, {
              components: P ? P.record.components : T.components,
              path: O,
              aliasOf: P ? P.record : T,
            })
          )
        );
    }
    let k, S;
    for (const A of x) {
      const { path: O } = A;
      if (b && O[0] !== "/") {
        const F = b.record.path,
          D = F[F.length - 1] === "/" ? "" : "/";
        A.path = b.record.path + (O && D + O);
      }
      if (
        ((k = createRouteRecordMatcher(A, b, M)),
        P
          ? P.alias.push(k)
          : ((S = S || k),
            S !== k && S.alias.push(k),
            R && E.name && !isAliasRecord(k) && o(E.name)),
        isMatchable(k) && c(k),
        T.children)
      ) {
        const F = T.children;
        for (let D = 0; D < F.length; D++) a(F[D], k, P && P.children[D]);
      }
      P = P || k;
    }
    return S
      ? () => {
          o(S);
        }
      : noop;
  }
  function o(E) {
    if (isRouteName(E)) {
      const b = n.get(E);
      b &&
        (n.delete(E),
        r.splice(r.indexOf(b), 1),
        b.children.forEach(o),
        b.alias.forEach(o));
    } else {
      const b = r.indexOf(E);
      b > -1 &&
        (r.splice(b, 1),
        E.record.name && n.delete(E.record.name),
        E.children.forEach(o),
        E.alias.forEach(o));
    }
  }
  function l() {
    return r;
  }
  function c(E) {
    const b = findInsertionIndex(E, r);
    r.splice(b, 0, E),
      E.record.name && !isAliasRecord(E) && n.set(E.record.name, E);
  }
  function u(E, b) {
    let P,
      R = {},
      T,
      M;
    if ("name" in E && E.name) {
      if (((P = n.get(E.name)), !P))
        throw createRouterError(1, { location: E });
      (M = P.record.name),
        (R = assign(
          paramsFromLocation(
            b.params,
            P.keys
              .filter((S) => !S.optional)
              .concat(P.parent ? P.parent.keys.filter((S) => S.optional) : [])
              .map((S) => S.name)
          ),
          E.params &&
            paramsFromLocation(
              E.params,
              P.keys.map((S) => S.name)
            )
        )),
        (T = P.stringify(R));
    } else if (E.path != null)
      (T = E.path),
        (P = r.find((S) => S.re.test(T))),
        P && ((R = P.parse(T)), (M = P.record.name));
    else {
      if (((P = b.name ? n.get(b.name) : r.find((S) => S.re.test(b.path))), !P))
        throw createRouterError(1, { location: E, currentLocation: b });
      (M = P.record.name),
        (R = assign({}, b.params, E.params)),
        (T = P.stringify(R));
    }
    const x = [];
    let k = P;
    for (; k; ) x.unshift(k.record), (k = k.parent);
    return {
      name: M,
      path: T,
      params: R,
      matched: x,
      meta: mergeMetaFields(x),
    };
  }
  e.forEach((E) => a(E));
  function d() {
    (r.length = 0), n.clear();
  }
  return {
    addRoute: a,
    resolve: u,
    removeRoute: o,
    clearRoutes: d,
    getRoutes: l,
    getRecordMatcher: i,
  };
}
function paramsFromLocation(e, t) {
  const r = {};
  for (const n of t) n in e && (r[n] = e[n]);
  return r;
}
function normalizeRouteRecord(e) {
  const t = {
    path: e.path,
    redirect: e.redirect,
    name: e.name,
    meta: e.meta || {},
    aliasOf: e.aliasOf,
    beforeEnter: e.beforeEnter,
    props: normalizeRecordProps(e),
    children: e.children || [],
    instances: {},
    leaveGuards: new Set(),
    updateGuards: new Set(),
    enterCallbacks: {},
    components:
      "components" in e
        ? e.components || null
        : e.component && { default: e.component },
  };
  return Object.defineProperty(t, "mods", { value: {} }), t;
}
function normalizeRecordProps(e) {
  const t = {},
    r = e.props || !1;
  if ("component" in e) t.default = r;
  else for (const n in e.components) t[n] = typeof r == "object" ? r[n] : r;
  return t;
}
function isAliasRecord(e) {
  for (; e; ) {
    if (e.record.aliasOf) return !0;
    e = e.parent;
  }
  return !1;
}
function mergeMetaFields(e) {
  return e.reduce((t, r) => assign(t, r.meta), {});
}
function mergeOptions(e, t) {
  const r = {};
  for (const n in e) r[n] = n in t ? t[n] : e[n];
  return r;
}
function findInsertionIndex(e, t) {
  let r = 0,
    n = t.length;
  for (; r !== n; ) {
    const a = (r + n) >> 1;
    comparePathParserScore(e, t[a]) < 0 ? (n = a) : (r = a + 1);
  }
  const i = getInsertionAncestor(e);
  return i && (n = t.lastIndexOf(i, n - 1)), n;
}
function getInsertionAncestor(e) {
  let t = e;
  for (; (t = t.parent); )
    if (isMatchable(t) && comparePathParserScore(e, t) === 0) return t;
}
function isMatchable({ record: e }) {
  return !!(
    e.name ||
    (e.components && Object.keys(e.components).length) ||
    e.redirect
  );
}
function parseQuery(e) {
  const t = {};
  if (e === "" || e === "?") return t;
  const n = (e[0] === "?" ? e.slice(1) : e).split("&");
  for (let i = 0; i < n.length; ++i) {
    const a = n[i].replace(PLUS_RE, " "),
      o = a.indexOf("="),
      l = decode(o < 0 ? a : a.slice(0, o)),
      c = o < 0 ? null : decode(a.slice(o + 1));
    if (l in t) {
      let u = t[l];
      isArray(u) || (u = t[l] = [u]), u.push(c);
    } else t[l] = c;
  }
  return t;
}
function stringifyQuery(e) {
  let t = "";
  for (let r in e) {
    const n = e[r];
    if (((r = encodeQueryKey(r)), n == null)) {
      n !== void 0 && (t += (t.length ? "&" : "") + r);
      continue;
    }
    (isArray(n)
      ? n.map((a) => a && encodeQueryValue(a))
      : [n && encodeQueryValue(n)]
    ).forEach((a) => {
      a !== void 0 &&
        ((t += (t.length ? "&" : "") + r), a != null && (t += "=" + a));
    });
  }
  return t;
}
function normalizeQuery(e) {
  const t = {};
  for (const r in e) {
    const n = e[r];
    n !== void 0 &&
      (t[r] = isArray(n)
        ? n.map((i) => (i == null ? null : "" + i))
        : n == null
        ? n
        : "" + n);
  }
  return t;
}
const matchedRouteKey = Symbol(""),
  viewDepthKey = Symbol(""),
  routerKey = Symbol(""),
  routeLocationKey = Symbol(""),
  routerViewLocationKey = Symbol("");
function useCallbacks() {
  let e = [];
  function t(n) {
    return (
      e.push(n),
      () => {
        const i = e.indexOf(n);
        i > -1 && e.splice(i, 1);
      }
    );
  }
  function r() {
    e = [];
  }
  return { add: t, list: () => e.slice(), reset: r };
}
function guardToPromiseFn(e, t, r, n, i, a = (o) => o()) {
  const o = n && (n.enterCallbacks[i] = n.enterCallbacks[i] || []);
  return () =>
    new Promise((l, c) => {
      const u = (b) => {
          b === !1
            ? c(createRouterError(4, { from: r, to: t }))
            : b instanceof Error
            ? c(b)
            : isRouteLocation(b)
            ? c(createRouterError(2, { from: t, to: b }))
            : (o &&
                n.enterCallbacks[i] === o &&
                typeof b == "function" &&
                o.push(b),
              l());
        },
        d = a(() => e.call(n && n.instances[i], t, r, u));
      let E = Promise.resolve(d);
      e.length < 3 && (E = E.then(u)), E.catch((b) => c(b));
    });
}
function extractComponentsGuards(e, t, r, n, i = (a) => a()) {
  const a = [];
  for (const o of e)
    for (const l in o.components) {
      let c = o.components[l];
      if (!(t !== "beforeRouteEnter" && !o.instances[l]))
        if (isRouteComponent(c)) {
          const d = (c.__vccOpts || c)[t];
          d && a.push(guardToPromiseFn(d, r, n, o, l, i));
        } else {
          let u = c();
          a.push(() =>
            u.then((d) => {
              if (!d)
                throw new Error(
                  `Couldn't resolve component "${l}" at "${o.path}"`
                );
              const E = isESModule(d) ? d.default : d;
              (o.mods[l] = d), (o.components[l] = E);
              const P = (E.__vccOpts || E)[t];
              return P && guardToPromiseFn(P, r, n, o, l, i)();
            })
          );
        }
    }
  return a;
}
function useLink(e) {
  const t = inject$1(routerKey),
    r = inject$1(routeLocationKey),
    n = computed(() => {
      const c = unref(e.to);
      return t.resolve(c);
    }),
    i = computed(() => {
      const { matched: c } = n.value,
        { length: u } = c,
        d = c[u - 1],
        E = r.matched;
      if (!d || !E.length) return -1;
      const b = E.findIndex(isSameRouteRecord.bind(null, d));
      if (b > -1) return b;
      const P = getOriginalPath(c[u - 2]);
      return u > 1 && getOriginalPath(d) === P && E[E.length - 1].path !== P
        ? E.findIndex(isSameRouteRecord.bind(null, c[u - 2]))
        : b;
    }),
    a = computed(
      () => i.value > -1 && includesParams(r.params, n.value.params)
    ),
    o = computed(
      () =>
        i.value > -1 &&
        i.value === r.matched.length - 1 &&
        isSameRouteLocationParams(r.params, n.value.params)
    );
  function l(c = {}) {
    if (guardEvent(c)) {
      const u = t[unref(e.replace) ? "replace" : "push"](unref(e.to)).catch(
        noop
      );
      return (
        e.viewTransition &&
          typeof document < "u" &&
          "startViewTransition" in document &&
          document.startViewTransition(() => u),
        u
      );
    }
    return Promise.resolve();
  }
  return {
    route: n,
    href: computed(() => n.value.href),
    isActive: a,
    isExactActive: o,
    navigate: l,
  };
}
function preferSingleVNode(e) {
  return e.length === 1 ? e[0] : e;
}
const RouterLinkImpl = defineComponent$1({
    name: "RouterLink",
    compatConfig: { MODE: 3 },
    props: {
      to: { type: [String, Object], required: !0 },
      replace: Boolean,
      activeClass: String,
      exactActiveClass: String,
      custom: Boolean,
      ariaCurrentValue: { type: String, default: "page" },
    },
    useLink,
    setup(e, { slots: t }) {
      const r = reactive(useLink(e)),
        { options: n } = inject$1(routerKey),
        i = computed(() => ({
          [getLinkClass(
            e.activeClass,
            n.linkActiveClass,
            "router-link-active"
          )]: r.isActive,
          [getLinkClass(
            e.exactActiveClass,
            n.linkExactActiveClass,
            "router-link-exact-active"
          )]: r.isExactActive,
        }));
      return () => {
        const a = t.default && preferSingleVNode(t.default(r));
        return e.custom
          ? a
          : h$2(
              "a",
              {
                "aria-current": r.isExactActive ? e.ariaCurrentValue : null,
                href: r.href,
                onClick: r.navigate,
                class: i.value,
              },
              a
            );
      };
    },
  }),
  RouterLink = RouterLinkImpl;
function guardEvent(e) {
  if (
    !(e.metaKey || e.altKey || e.ctrlKey || e.shiftKey) &&
    !e.defaultPrevented &&
    !(e.button !== void 0 && e.button !== 0)
  ) {
    if (e.currentTarget && e.currentTarget.getAttribute) {
      const t = e.currentTarget.getAttribute("target");
      if (/\b_blank\b/i.test(t)) return;
    }
    return e.preventDefault && e.preventDefault(), !0;
  }
}
function includesParams(e, t) {
  for (const r in t) {
    const n = t[r],
      i = e[r];
    if (typeof n == "string") {
      if (n !== i) return !1;
    } else if (
      !isArray(i) ||
      i.length !== n.length ||
      n.some((a, o) => a !== i[o])
    )
      return !1;
  }
  return !0;
}
function getOriginalPath(e) {
  return e ? (e.aliasOf ? e.aliasOf.path : e.path) : "";
}
const getLinkClass = (e, t, r) => e ?? t ?? r,
  RouterViewImpl = defineComponent$1({
    name: "RouterView",
    inheritAttrs: !1,
    props: { name: { type: String, default: "default" }, route: Object },
    compatConfig: { MODE: 3 },
    setup(e, { attrs: t, slots: r }) {
      const n = inject$1(routerViewLocationKey),
        i = computed(() => e.route || n.value),
        a = inject$1(viewDepthKey, 0),
        o = computed(() => {
          let u = unref(a);
          const { matched: d } = i.value;
          let E;
          for (; (E = d[u]) && !E.components; ) u++;
          return u;
        }),
        l = computed(() => i.value.matched[o.value]);
      provide(
        viewDepthKey,
        computed(() => o.value + 1)
      ),
        provide(matchedRouteKey, l),
        provide(routerViewLocationKey, i);
      const c = ref();
      return (
        watch(
          () => [c.value, l.value, e.name],
          ([u, d, E], [b, P, R]) => {
            d &&
              ((d.instances[E] = u),
              P &&
                P !== d &&
                u &&
                u === b &&
                (d.leaveGuards.size || (d.leaveGuards = P.leaveGuards),
                d.updateGuards.size || (d.updateGuards = P.updateGuards))),
              u &&
                d &&
                (!P || !isSameRouteRecord(d, P) || !b) &&
                (d.enterCallbacks[E] || []).forEach((T) => T(u));
          },
          { flush: "post" }
        ),
        () => {
          const u = i.value,
            d = e.name,
            E = l.value,
            b = E && E.components[d];
          if (!b) return normalizeSlot(r.default, { Component: b, route: u });
          const P = E.props[d],
            R = P
              ? P === !0
                ? u.params
                : typeof P == "function"
                ? P(u)
                : P
              : null,
            M = h$2(
              b,
              assign({}, R, t, {
                onVnodeUnmounted: (x) => {
                  x.component.isUnmounted && (E.instances[d] = null);
                },
                ref: c,
              })
            );
          return normalizeSlot(r.default, { Component: M, route: u }) || M;
        }
      );
    },
  });
function normalizeSlot(e, t) {
  if (!e) return null;
  const r = e(t);
  return r.length === 1 ? r[0] : r;
}
const RouterView = RouterViewImpl;
function createRouter(e) {
  const t = createRouterMatcher(e.routes, e),
    r = e.parseQuery || parseQuery,
    n = e.stringifyQuery || stringifyQuery,
    i = e.history,
    a = useCallbacks(),
    o = useCallbacks(),
    l = useCallbacks(),
    c = shallowRef(START_LOCATION_NORMALIZED);
  let u = START_LOCATION_NORMALIZED;
  isBrowser &&
    e.scrollBehavior &&
    "scrollRestoration" in history &&
    (history.scrollRestoration = "manual");
  const d = applyToParams.bind(null, (ie) => "" + ie),
    E = applyToParams.bind(null, encodeParam),
    b = applyToParams.bind(null, decode);
  function P(ie, me) {
    let pe, ge;
    return (
      isRouteName(ie) ? ((pe = t.getRecordMatcher(ie)), (ge = me)) : (ge = ie),
      t.addRoute(ge, pe)
    );
  }
  function R(ie) {
    const me = t.getRecordMatcher(ie);
    me && t.removeRoute(me);
  }
  function T() {
    return t.getRoutes().map((ie) => ie.record);
  }
  function M(ie) {
    return !!t.getRecordMatcher(ie);
  }
  function x(ie, me) {
    if (((me = assign({}, me || c.value)), typeof ie == "string")) {
      const G = parseURL(r, ie, me.path),
        te = t.resolve({ path: G.path }, me),
        ae = i.createHref(G.fullPath);
      return assign(G, te, {
        params: b(te.params),
        hash: decode(G.hash),
        redirectedFrom: void 0,
        href: ae,
      });
    }
    let pe;
    if (ie.path != null)
      pe = assign({}, ie, { path: parseURL(r, ie.path, me.path).path });
    else {
      const G = assign({}, ie.params);
      for (const te in G) G[te] == null && delete G[te];
      (pe = assign({}, ie, { params: E(G) })), (me.params = E(me.params));
    }
    const ge = t.resolve(pe, me),
      Ee = ie.hash || "";
    ge.params = d(b(ge.params));
    const Se = stringifyURL(
        n,
        assign({}, ie, { hash: encodeHash(Ee), path: ge.path })
      ),
      W = i.createHref(Se);
    return assign(
      {
        fullPath: Se,
        hash: Ee,
        query: n === stringifyQuery ? normalizeQuery(ie.query) : ie.query || {},
      },
      ge,
      { redirectedFrom: void 0, href: W }
    );
  }
  function k(ie) {
    return typeof ie == "string"
      ? parseURL(r, ie, c.value.path)
      : assign({}, ie);
  }
  function S(ie, me) {
    if (u !== ie) return createRouterError(8, { from: me, to: ie });
  }
  function A(ie) {
    return D(ie);
  }
  function O(ie) {
    return A(assign(k(ie), { replace: !0 }));
  }
  function F(ie) {
    const me = ie.matched[ie.matched.length - 1];
    if (me && me.redirect) {
      const { redirect: pe } = me;
      let ge = typeof pe == "function" ? pe(ie) : pe;
      return (
        typeof ge == "string" &&
          ((ge =
            ge.includes("?") || ge.includes("#") ? (ge = k(ge)) : { path: ge }),
          (ge.params = {})),
        assign(
          {
            query: ie.query,
            hash: ie.hash,
            params: ge.path != null ? {} : ie.params,
          },
          ge
        )
      );
    }
  }
  function D(ie, me) {
    const pe = (u = x(ie)),
      ge = c.value,
      Ee = ie.state,
      Se = ie.force,
      W = ie.replace === !0,
      G = F(pe);
    if (G)
      return D(
        assign(k(G), {
          state: typeof G == "object" ? assign({}, Ee, G.state) : Ee,
          force: Se,
          replace: W,
        }),
        me || pe
      );
    const te = pe;
    te.redirectedFrom = me;
    let ae;
    return (
      !Se &&
        isSameRouteLocation(n, ge, pe) &&
        ((ae = createRouterError(16, { to: te, from: ge })), Y(ge, ge, !0, !1)),
      (ae ? Promise.resolve(ae) : q(te, ge))
        .catch((se) =>
          isNavigationFailure(se)
            ? isNavigationFailure(se, 2)
              ? se
              : Q(se)
            : N(se, te, ge)
        )
        .then((se) => {
          if (se) {
            if (isNavigationFailure(se, 2))
              return D(
                assign({ replace: W }, k(se.to), {
                  state:
                    typeof se.to == "object" ? assign({}, Ee, se.to.state) : Ee,
                  force: Se,
                }),
                me || te
              );
          } else se = K(te, ge, !0, W, Ee);
          return J(te, ge, se), se;
        })
    );
  }
  function H(ie, me) {
    const pe = S(ie, me);
    return pe ? Promise.reject(pe) : Promise.resolve();
  }
  function $(ie) {
    const me = ve.values().next().value;
    return me && typeof me.runWithContext == "function"
      ? me.runWithContext(ie)
      : ie();
  }
  function q(ie, me) {
    let pe;
    const [ge, Ee, Se] = extractChangingRecords(ie, me);
    pe = extractComponentsGuards(ge.reverse(), "beforeRouteLeave", ie, me);
    for (const G of ge)
      G.leaveGuards.forEach((te) => {
        pe.push(guardToPromiseFn(te, ie, me));
      });
    const W = H.bind(null, ie, me);
    return (
      pe.push(W),
      Ce(pe)
        .then(() => {
          pe = [];
          for (const G of a.list()) pe.push(guardToPromiseFn(G, ie, me));
          return pe.push(W), Ce(pe);
        })
        .then(() => {
          pe = extractComponentsGuards(Ee, "beforeRouteUpdate", ie, me);
          for (const G of Ee)
            G.updateGuards.forEach((te) => {
              pe.push(guardToPromiseFn(te, ie, me));
            });
          return pe.push(W), Ce(pe);
        })
        .then(() => {
          pe = [];
          for (const G of Se)
            if (G.beforeEnter)
              if (isArray(G.beforeEnter))
                for (const te of G.beforeEnter)
                  pe.push(guardToPromiseFn(te, ie, me));
              else pe.push(guardToPromiseFn(G.beforeEnter, ie, me));
          return pe.push(W), Ce(pe);
        })
        .then(
          () => (
            ie.matched.forEach((G) => (G.enterCallbacks = {})),
            (pe = extractComponentsGuards(Se, "beforeRouteEnter", ie, me, $)),
            pe.push(W),
            Ce(pe)
          )
        )
        .then(() => {
          pe = [];
          for (const G of o.list()) pe.push(guardToPromiseFn(G, ie, me));
          return pe.push(W), Ce(pe);
        })
        .catch((G) => (isNavigationFailure(G, 8) ? G : Promise.reject(G)))
    );
  }
  function J(ie, me, pe) {
    l.list().forEach((ge) => $(() => ge(ie, me, pe)));
  }
  function K(ie, me, pe, ge, Ee) {
    const Se = S(ie, me);
    if (Se) return Se;
    const W = me === START_LOCATION_NORMALIZED,
      G = isBrowser ? history.state : {};
    pe &&
      (ge || W
        ? i.replace(ie.fullPath, assign({ scroll: W && G && G.scroll }, Ee))
        : i.push(ie.fullPath, Ee)),
      (c.value = ie),
      Y(ie, me, pe, W),
      Q();
  }
  let ee;
  function le() {
    ee ||
      (ee = i.listen((ie, me, pe) => {
        if (!Pe.listening) return;
        const ge = x(ie),
          Ee = F(ge);
        if (Ee) {
          D(assign(Ee, { replace: !0, force: !0 }), ge).catch(noop);
          return;
        }
        u = ge;
        const Se = c.value;
        isBrowser &&
          saveScrollPosition(
            getScrollKey(Se.fullPath, pe.delta),
            computeScrollPosition()
          ),
          q(ge, Se)
            .catch((W) =>
              isNavigationFailure(W, 12)
                ? W
                : isNavigationFailure(W, 2)
                ? (D(assign(k(W.to), { force: !0 }), ge)
                    .then((G) => {
                      isNavigationFailure(G, 20) &&
                        !pe.delta &&
                        pe.type === NavigationType.pop &&
                        i.go(-1, !1);
                    })
                    .catch(noop),
                  Promise.reject())
                : (pe.delta && i.go(-pe.delta, !1), N(W, ge, Se))
            )
            .then((W) => {
              (W = W || K(ge, Se, !1)),
                W &&
                  (pe.delta && !isNavigationFailure(W, 8)
                    ? i.go(-pe.delta, !1)
                    : pe.type === NavigationType.pop &&
                      isNavigationFailure(W, 20) &&
                      i.go(-1, !1)),
                J(ge, Se, W);
            })
            .catch(noop);
      }));
  }
  let re = useCallbacks(),
    B = useCallbacks(),
    z;
  function N(ie, me, pe) {
    Q(ie);
    const ge = B.list();
    return (
      ge.length ? ge.forEach((Ee) => Ee(ie, me, pe)) : console.error(ie),
      Promise.reject(ie)
    );
  }
  function V() {
    return z && c.value !== START_LOCATION_NORMALIZED
      ? Promise.resolve()
      : new Promise((ie, me) => {
          re.add([ie, me]);
        });
  }
  function Q(ie) {
    return (
      z ||
        ((z = !ie),
        le(),
        re.list().forEach(([me, pe]) => (ie ? pe(ie) : me())),
        re.reset()),
      ie
    );
  }
  function Y(ie, me, pe, ge) {
    const { scrollBehavior: Ee } = e;
    if (!isBrowser || !Ee) return Promise.resolve();
    const Se =
      (!pe && getSavedScrollPosition(getScrollKey(ie.fullPath, 0))) ||
      ((ge || !pe) && history.state && history.state.scroll) ||
      null;
    return nextTick()
      .then(() => Ee(ie, me, Se))
      .then((W) => W && scrollToPosition(W))
      .catch((W) => N(W, ie, me));
  }
  const he = (ie) => i.go(ie);
  let ye;
  const ve = new Set(),
    Pe = {
      currentRoute: c,
      listening: !0,
      addRoute: P,
      removeRoute: R,
      clearRoutes: t.clearRoutes,
      hasRoute: M,
      getRoutes: T,
      resolve: x,
      options: e,
      push: A,
      replace: O,
      go: he,
      back: () => he(-1),
      forward: () => he(1),
      beforeEach: a.add,
      beforeResolve: o.add,
      afterEach: l.add,
      onError: B.add,
      isReady: V,
      install(ie) {
        const me = this;
        ie.component("RouterLink", RouterLink),
          ie.component("RouterView", RouterView),
          (ie.config.globalProperties.$router = me),
          Object.defineProperty(ie.config.globalProperties, "$route", {
            enumerable: !0,
            get: () => unref(c),
          }),
          isBrowser &&
            !ye &&
            c.value === START_LOCATION_NORMALIZED &&
            ((ye = !0), A(i.location).catch((Ee) => {}));
        const pe = {};
        for (const Ee in START_LOCATION_NORMALIZED)
          Object.defineProperty(pe, Ee, {
            get: () => c.value[Ee],
            enumerable: !0,
          });
        ie.provide(routerKey, me),
          ie.provide(routeLocationKey, shallowReactive(pe)),
          ie.provide(routerViewLocationKey, c);
        const ge = ie.unmount;
        ve.add(ie),
          (ie.unmount = function () {
            ve.delete(ie),
              ve.size < 1 &&
                ((u = START_LOCATION_NORMALIZED),
                ee && ee(),
                (ee = null),
                (c.value = START_LOCATION_NORMALIZED),
                (ye = !1),
                (z = !1)),
              ge();
          });
      },
    };
  function Ce(ie) {
    return ie.reduce((me, pe) => me.then(() => $(pe)), Promise.resolve());
  }
  return Pe;
}
function extractChangingRecords(e, t) {
  const r = [],
    n = [],
    i = [],
    a = Math.max(t.matched.length, e.matched.length);
  for (let o = 0; o < a; o++) {
    const l = t.matched[o];
    l &&
      (e.matched.find((u) => isSameRouteRecord(u, l)) ? n.push(l) : r.push(l));
    const c = e.matched[o];
    c && (t.matched.find((u) => isSameRouteRecord(u, c)) || i.push(c));
  }
  return [r, n, i];
}
function useRouter() {
  return inject$1(routerKey);
}
function useRoute(e) {
  return inject$1(routeLocationKey);
}
const ROUTE_KEY_PARENTHESES_RE$1 = /(:\w+)\([^)]+\)/g,
  ROUTE_KEY_SYMBOLS_RE$1 = /(:\w+)[?+*]/g,
  ROUTE_KEY_NORMAL_RE$1 = /:\w+/g,
  interpolatePath = (e, t) =>
    t.path
      .replace(ROUTE_KEY_PARENTHESES_RE$1, "$1")
      .replace(ROUTE_KEY_SYMBOLS_RE$1, "$1")
      .replace(ROUTE_KEY_NORMAL_RE$1, (r) => {
        var n;
        return (
          ((n = e.params[r.slice(1)]) == null ? void 0 : n.toString()) || ""
        );
      }),
  generateRouteKey$1 = (e, t) => {
    const r = e.route.matched.find((i) => {
        var a;
        return (
          ((a = i.components) == null ? void 0 : a.default) === e.Component.type
        );
      }),
      n =
        t ??
        (r == null ? void 0 : r.meta.key) ??
        (r && interpolatePath(e.route, r));
    return typeof n == "function" ? n(e.route) : n;
  },
  wrapInKeepAlive = (e, t) => ({
    default: () => (e ? h$2(KeepAlive, e === !0 ? {} : e, t) : t),
  });
function toArray(e) {
  return Array.isArray(e) ? e : [e];
}
const __nuxt_page_meta$a = { layout: "profile", middleware: "auth" },
  __nuxt_page_meta$9 = { layout: "profile", middleware: "auth" },
  __nuxt_page_meta$8 = { layout: "profile", middleware: "auth" },
  __nuxt_page_meta$7 = { layout: "profile", middleware: "auth" },
  __nuxt_page_meta$6 = { layout: "profile", middleware: "auth" },
  __nuxt_page_meta$5 = { layout: "profile", middleware: "auth" },
  __nuxt_page_meta$4 = { layout: "profile", middleware: "auth" },
  __nuxt_page_meta$3 = { layout: "profile", middleware: "auth" },
  __nuxt_page_meta$2 = { layout: "profile", middleware: "auth" },
  __nuxt_page_meta$1 = { layout: "profile", middleware: "auth" },
  __nuxt_page_meta = { layout: "profile", middleware: "auth" },
  _routes = [
    {
      name: "index",
      path: "/",
      component: () =>
        __vitePreload(
          () => import("./D59z_AEH.js"),
          __vite__mapDeps([
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
          ]),
          import.meta.url
        ),
    },
    {
      name: "aml-kyc-policy___En",
      path: "/En/aml-kyc-policy",
      component: () =>
        __vitePreload(
          () => import("./CyQ0eay7.js"),
          __vite__mapDeps([48, 22, 19, 6, 8, 20, 49, 50]),
          import.meta.url
        ),
    },
    {
      name: "aml-kyc-policy___Ru",
      path: "/Ru/aml-kyc-policy",
      component: () =>
        __vitePreload(
          () => import("./CyQ0eay7.js"),
          __vite__mapDeps([48, 22, 19, 6, 8, 20, 49, 50]),
          import.meta.url
        ),
    },
    {
      name: "brand-guidelines___En",
      path: "/En/brand-guidelines",
      component: () =>
        __vitePreload(
          () => import("./DCZfwWfx.js"),
          __vite__mapDeps([
            51, 22, 19, 6, 8, 20, 52, 53, 4, 5, 7, 9, 32, 12, 13, 54, 55, 46,
            38, 56, 18, 57,
          ]),
          import.meta.url
        ),
    },
    {
      name: "brand-guidelines___Ru",
      path: "/Ru/brand-guidelines",
      component: () =>
        __vitePreload(
          () => import("./DCZfwWfx.js"),
          __vite__mapDeps([
            51, 22, 19, 6, 8, 20, 52, 53, 4, 5, 7, 9, 32, 12, 13, 54, 55, 46,
            38, 56, 18, 57,
          ]),
          import.meta.url
        ),
    },
    {
      name: "contact-us___En",
      path: "/En/contact-us",
      component: () =>
        __vitePreload(
          () => import("./DalnjcH7.js"),
          __vite__mapDeps([58, 22, 19, 6, 8, 20, 1, 59]),
          import.meta.url
        ),
    },
    {
      name: "contact-us___Ru",
      path: "/Ru/contact-us",
      component: () =>
        __vitePreload(
          () => import("./DalnjcH7.js"),
          __vite__mapDeps([58, 22, 19, 6, 8, 20, 1, 59]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-account___En",
      path: "/En/dashboard/account",
      meta: __nuxt_page_meta$a,
      component: () =>
        __vitePreload(
          () => import("./B4N5j3Cp.js"),
          __vite__mapDeps([
            60, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 19, 20, 36, 1,
            16, 17, 18, 21, 42, 40, 41, 61, 62, 63, 25, 26, 64, 28, 65,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-account___Ru",
      path: "/Ru/dashboard/account",
      meta: __nuxt_page_meta$a,
      component: () =>
        __vitePreload(
          () => import("./B4N5j3Cp.js"),
          __vite__mapDeps([
            60, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 19, 20, 36, 1,
            16, 17, 18, 21, 42, 40, 41, 61, 62, 63, 25, 26, 64, 28, 65,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-affiliates___En",
      path: "/En/dashboard/affiliates",
      meta: __nuxt_page_meta$9,
      component: () =>
        __vitePreload(
          () => import("./HlBKz86t.js"),
          __vite__mapDeps([
            66, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
            21, 22, 67, 68, 61, 46, 38, 37, 69, 70,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-affiliates___Ru",
      path: "/Ru/dashboard/affiliates",
      meta: __nuxt_page_meta$9,
      component: () =>
        __vitePreload(
          () => import("./HlBKz86t.js"),
          __vite__mapDeps([
            66, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20,
            21, 22, 67, 68, 61, 46, 38, 37, 69, 70,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-discount___En",
      path: "/En/dashboard/discount",
      meta: __nuxt_page_meta$8,
      component: () =>
        __vitePreload(
          () => import("./BoisP8RO.js"),
          __vite__mapDeps([
            71, 72, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 62, 63, 25,
            18, 26, 64, 34, 35, 56, 57, 73,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-discount___Ru",
      path: "/Ru/dashboard/discount",
      meta: __nuxt_page_meta$8,
      component: () =>
        __vitePreload(
          () => import("./BoisP8RO.js"),
          __vite__mapDeps([
            71, 72, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 1, 62, 63, 25,
            18, 26, 64, 34, 35, 56, 57, 73,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard___En",
      path: "/En/dashboard",
      meta: __nuxt_page_meta$7,
      component: () =>
        __vitePreload(
          () => import("./C31DAB0-.js"),
          __vite__mapDeps([
            74, 22, 19, 6, 8, 20, 1, 11, 12, 13, 5, 14, 75, 3, 4, 7, 9, 10, 15,
            67, 68, 72, 18, 27, 28, 29, 76, 34, 35,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard___Ru",
      path: "/Ru/dashboard",
      meta: __nuxt_page_meta$7,
      component: () =>
        __vitePreload(
          () => import("./C31DAB0-.js"),
          __vite__mapDeps([
            74, 22, 19, 6, 8, 20, 1, 11, 12, 13, 5, 14, 75, 3, 4, 7, 9, 10, 15,
            67, 68, 72, 18, 27, 28, 29, 76, 34, 35,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-new-order___En",
      path: "/En/dashboard/new-order",
      meta: __nuxt_page_meta$6,
      component: () =>
        __vitePreload(
          () => import("./Uq89Istt.js"),
          __vite__mapDeps([
            77, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
            20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-new-order___Ru",
      path: "/Ru/dashboard/new-order",
      meta: __nuxt_page_meta$6,
      component: () =>
        __vitePreload(
          () => import("./Uq89Istt.js"),
          __vite__mapDeps([
            77, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
            20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-order___En",
      path: "/En/dashboard/order",
      meta: __nuxt_page_meta$5,
      component: () =>
        __vitePreload(
          () => import("./CZiPNuGW.js"),
          __vite__mapDeps([
            78, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
            20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-order___Ru",
      path: "/Ru/dashboard/order",
      meta: __nuxt_page_meta$5,
      component: () =>
        __vitePreload(
          () => import("./CZiPNuGW.js"),
          __vite__mapDeps([
            78, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,
            20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-orders___En",
      path: "/En/dashboard/orders",
      meta: __nuxt_page_meta$4,
      component: () =>
        __vitePreload(
          () => import("./D5sAzjIh.js"),
          __vite__mapDeps([
            79, 75, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 67, 68, 72, 18,
            27, 19, 20, 28, 29, 22, 69, 70, 34, 35,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-orders___Ru",
      path: "/Ru/dashboard/orders",
      meta: __nuxt_page_meta$4,
      component: () =>
        __vitePreload(
          () => import("./D5sAzjIh.js"),
          __vite__mapDeps([
            79, 75, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 67, 68, 72, 18,
            27, 19, 20, 28, 29, 22, 69, 70, 34, 35,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-wallet-deposit___En",
      path: "/En/dashboard/wallet/deposit",
      meta: __nuxt_page_meta$3,
      component: () =>
        __vitePreload(
          () => import("./CL8XUvEc.js"),
          __vite__mapDeps([
            80, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 81, 16, 17, 18, 19,
            20, 21, 82, 69, 70, 83, 63, 27, 28, 29, 84, 32, 31, 33, 24, 25, 26,
            30, 67, 68, 85, 86, 76, 34, 35, 87, 72, 37, 38, 46, 88, 42, 89,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-wallet-deposit___Ru",
      path: "/Ru/dashboard/wallet/deposit",
      meta: __nuxt_page_meta$3,
      component: () =>
        __vitePreload(
          () => import("./CL8XUvEc.js"),
          __vite__mapDeps([
            80, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 81, 16, 17, 18, 19,
            20, 21, 82, 69, 70, 83, 63, 27, 28, 29, 84, 32, 31, 33, 24, 25, 26,
            30, 67, 68, 85, 86, 76, 34, 35, 87, 72, 37, 38, 46, 88, 42, 89,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-wallet___En",
      path: "/En/dashboard/wallet",
      meta: __nuxt_page_meta$2,
      component: () =>
        __vitePreload(
          () => import("./C8_EDGWk.js"),
          __vite__mapDeps([
            90, 82, 69, 11, 12, 13, 6, 5, 14, 70, 17, 18, 8, 4, 7, 9, 19, 20,
            21, 83, 63, 27, 28, 29, 84, 32, 31, 33, 24, 25, 26, 30, 67, 68, 85,
            1, 76, 34, 35, 91,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-wallet___Ru",
      path: "/Ru/dashboard/wallet",
      meta: __nuxt_page_meta$2,
      component: () =>
        __vitePreload(
          () => import("./C8_EDGWk.js"),
          __vite__mapDeps([
            90, 82, 69, 11, 12, 13, 6, 5, 14, 70, 17, 18, 8, 4, 7, 9, 19, 20,
            21, 83, 63, 27, 28, 29, 84, 32, 31, 33, 24, 25, 26, 30, 67, 68, 85,
            1, 76, 34, 35, 91,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-wallet-transaction___En",
      path: "/En/dashboard/wallet/transaction",
      meta: __nuxt_page_meta$1,
      component: () =>
        __vitePreload(
          () => import("./D-g8cz2e.js"),
          __vite__mapDeps([
            92, 87, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 72, 82, 69, 70,
            17, 18, 19, 20, 21, 83, 63, 27, 28, 29, 84, 32, 31, 33, 24, 25, 26,
            30, 67, 68, 85, 37, 38, 46, 88, 76, 62, 64, 34, 35, 89,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-wallet-transaction___Ru",
      path: "/Ru/dashboard/wallet/transaction",
      meta: __nuxt_page_meta$1,
      component: () =>
        __vitePreload(
          () => import("./D-g8cz2e.js"),
          __vite__mapDeps([
            92, 87, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 72, 82, 69, 70,
            17, 18, 19, 20, 21, 83, 63, 27, 28, 29, 84, 32, 31, 33, 24, 25, 26,
            30, 67, 68, 85, 37, 38, 46, 88, 76, 62, 64, 34, 35, 89,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-wallet-withdraw___En",
      path: "/En/dashboard/wallet/withdraw",
      meta: __nuxt_page_meta,
      component: () =>
        __vitePreload(
          () => import("./ClM4Peaf.js"),
          __vite__mapDeps([
            93, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 81, 16, 17, 18, 19,
            20, 21, 82, 69, 70, 83, 63, 27, 28, 29, 84, 32, 31, 33, 24, 25, 26,
            30, 67, 68, 85, 86, 76, 34, 35, 87, 72, 37, 38, 46, 88, 42, 89,
          ]),
          import.meta.url
        ),
    },
    {
      name: "dashboard-wallet-withdraw___Ru",
      path: "/Ru/dashboard/wallet/withdraw",
      meta: __nuxt_page_meta,
      component: () =>
        __vitePreload(
          () => import("./ClM4Peaf.js"),
          __vite__mapDeps([
            93, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 81, 16, 17, 18, 19,
            20, 21, 82, 69, 70, 83, 63, 27, 28, 29, 84, 32, 31, 33, 24, 25, 26,
            30, 67, 68, 85, 86, 76, 34, 35, 87, 72, 37, 38, 46, 88, 42, 89,
          ]),
          import.meta.url
        ),
    },
    {
      name: "faq___En",
      path: "/En/faq",
      component: () =>
        __vitePreload(
          () => import("./DLI1yz3e.js"),
          __vite__mapDeps([94, 95, 56, 18, 7, 6, 12, 13, 57, 96]),
          import.meta.url
        ),
    },
    {
      name: "faq___Ru",
      path: "/Ru/faq",
      component: () =>
        __vitePreload(
          () => import("./DLI1yz3e.js"),
          __vite__mapDeps([94, 95, 56, 18, 7, 6, 12, 13, 57, 96]),
          import.meta.url
        ),
    },
    {
      name: "CoinCannon-affiliate___En",
      path: "/En/jolixo-affiliate",
      component: () =>
        __vitePreload(
          () => import("./DxLVLOBT.js"),
          __vite__mapDeps([
            97, 22, 19, 6, 8, 20, 95, 56, 18, 7, 12, 13, 57, 96, 39, 3, 4, 5, 9,
            10, 11, 14, 15, 16, 17, 21, 40, 41, 42, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "CoinCannon-affiliate___Ru",
      path: "/Ru/jolixo-affiliate",
      component: () =>
        __vitePreload(
          () => import("./DxLVLOBT.js"),
          __vite__mapDeps([
            97, 22, 19, 6, 8, 20, 95, 56, 18, 7, 12, 13, 57, 96, 39, 3, 4, 5, 9,
            10, 11, 14, 15, 16, 17, 21, 40, 41, 42, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "index___En",
      path: "/En",
      component: () =>
        __vitePreload(
          () => import("./D59z_AEH.js"),
          __vite__mapDeps([
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
          ]),
          import.meta.url
        ),
    },
    {
      name: "index___Ru",
      path: "/Ru",
      component: () =>
        __vitePreload(
          () => import("./D59z_AEH.js"),
          __vite__mapDeps([
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18,
            19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35,
            36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,
          ]),
          import.meta.url
        ),
    },
    {
      name: "payment-fail___En",
      path: "/En/payment/fail",
      component: () =>
        __vitePreload(
          () => import("./DRZ-gglX.js"),
          __vite__mapDeps([
            98, 22, 19, 6, 8, 20, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 23,
          ]),
          import.meta.url
        ),
    },
    {
      name: "payment-fail___Ru",
      path: "/Ru/payment/fail",
      component: () =>
        __vitePreload(
          () => import("./DRZ-gglX.js"),
          __vite__mapDeps([
            98, 22, 19, 6, 8, 20, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 23,
          ]),
          import.meta.url
        ),
    },
    {
      name: "payment-success___En",
      path: "/En/payment/success",
      component: () =>
        __vitePreload(
          () => import("./BEkFMCmj.js"),
          __vite__mapDeps([99, 22, 19, 6, 8, 20, 1, 11, 12, 13, 5, 14, 100]),
          import.meta.url
        ),
    },
    {
      name: "payment-success___Ru",
      path: "/Ru/payment/success",
      component: () =>
        __vitePreload(
          () => import("./BEkFMCmj.js"),
          __vite__mapDeps([99, 22, 19, 6, 8, 20, 1, 11, 12, 13, 5, 14, 100]),
          import.meta.url
        ),
    },
    {
      name: "privacy-policy___En",
      path: "/En/privacy-policy",
      component: () =>
        __vitePreload(
          () => import("./CV94PaAu.js"),
          __vite__mapDeps([101, 22, 19, 6, 8, 20, 49, 50]),
          import.meta.url
        ),
    },
    {
      name: "privacy-policy___Ru",
      path: "/Ru/privacy-policy",
      component: () =>
        __vitePreload(
          () => import("./CV94PaAu.js"),
          __vite__mapDeps([101, 22, 19, 6, 8, 20, 49, 50]),
          import.meta.url
        ),
    },
    {
      name: "services-advcash-to-paypal-exchange___En",
      path: "/En/services/advcash-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./BNkz8u-V.js"),
          __vite__mapDeps([
            102, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 103, 95, 56, 57, 96, 45, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-advcash-to-paypal-exchange___Ru",
      path: "/Ru/services/advcash-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./BNkz8u-V.js"),
          __vite__mapDeps([
            102, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 103, 95, 56, 57, 96, 45, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-bitcoin-to-paypal-exchange___En",
      path: "/En/services/bitcoin-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./DPBkzKmw.js"),
          __vite__mapDeps([
            104, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 103, 95, 56, 57, 96, 45, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-bitcoin-to-paypal-exchange___Ru",
      path: "/Ru/services/bitcoin-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./DPBkzKmw.js"),
          __vite__mapDeps([
            104, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 103, 95, 56, 57, 96, 45, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-exchange-usdt-trx___En",
      path: "/En/services/exchange-usdt-trx",
      component: () =>
        __vitePreload(
          () => import("./K7xD57Su.js"),
          __vite__mapDeps([
            105, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 103, 95, 56, 57, 96, 45, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-exchange-usdt-trx___Ru",
      path: "/Ru/services/exchange-usdt-trx",
      component: () =>
        __vitePreload(
          () => import("./K7xD57Su.js"),
          __vite__mapDeps([
            105, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 103, 95, 56, 57, 96, 45, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-payeer-to-paypal-exchange___En",
      path: "/En/services/payeer-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./mhxPBD0f.js"),
          __vite__mapDeps([
            106, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 103, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-payeer-to-paypal-exchange___Ru",
      path: "/Ru/services/payeer-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./mhxPBD0f.js"),
          __vite__mapDeps([
            106, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 103, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-perfectmoney-to-paypal-exchange___En",
      path: "/En/services/perfectmoney-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./BxOzvhk0.js"),
          __vite__mapDeps([
            107, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 103, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-perfectmoney-to-paypal-exchange___Ru",
      path: "/Ru/services/perfectmoney-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./BxOzvhk0.js"),
          __vite__mapDeps([
            107, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 103, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-tether-to-paypal-exchange___En",
      path: "/En/services/tether-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./Ckdwc7Kg.js"),
          __vite__mapDeps([
            108, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 103, 95, 56, 57, 96, 45, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-tether-to-paypal-exchange___Ru",
      path: "/Ru/services/tether-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./Ckdwc7Kg.js"),
          __vite__mapDeps([
            108, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 103, 95, 56, 57, 96, 45, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-webmoney-to-paypal-exchange___En",
      path: "/En/services/webmoney-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./T4tRNfEu.js"),
          __vite__mapDeps([
            109, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 103, 95, 56, 57, 96, 45, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "services-webmoney-to-paypal-exchange___Ru",
      path: "/Ru/services/webmoney-to-paypal-exchange",
      component: () =>
        __vitePreload(
          () => import("./T4tRNfEu.js"),
          __vite__mapDeps([
            109, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 103, 95, 56, 57, 96, 45, 50,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-buy-sell-perfectmoney-voucher___En",
      path: "/En/solutions/buy-sell-perfectmoney-voucher",
      component: () =>
        __vitePreload(
          () => import("./DgOZDmBs.js"),
          __vite__mapDeps([
            110, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 95, 56, 57, 96, 103, 1, 111,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-buy-sell-perfectmoney-voucher___Ru",
      path: "/Ru/solutions/buy-sell-perfectmoney-voucher",
      component: () =>
        __vitePreload(
          () => import("./DgOZDmBs.js"),
          __vite__mapDeps([
            110, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 95, 56, 57, 96, 103, 1, 111,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-exchange-paypal___En",
      path: "/En/solutions/exchange-paypal",
      component: () =>
        __vitePreload(
          () => import("./B1ZhJKFu.js"),
          __vite__mapDeps([
            112, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 19, 20, 16,
            17, 18, 21, 44, 95, 56, 57, 96, 103, 45, 1, 113,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-exchange-paypal___Ru",
      path: "/Ru/solutions/exchange-paypal",
      component: () =>
        __vitePreload(
          () => import("./B1ZhJKFu.js"),
          __vite__mapDeps([
            112, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 22, 19, 20, 16,
            17, 18, 21, 44, 95, 56, 57, 96, 103, 45, 1, 113,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-HiWallet___En",
      path: "/En/solutions/HiWallet",
      component: () =>
        __vitePreload(
          () => import("./BMZgg2Ge.js"),
          __vite__mapDeps([
            114, 22, 19, 6, 8, 20, 44, 103, 95, 56, 18, 7, 12, 13, 57, 96, 45,
            50, 39, 3, 4, 5, 9, 10, 11, 14, 15, 16, 17, 21, 40, 41, 42,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-HiWallet___Ru",
      path: "/Ru/solutions/HiWallet",
      component: () =>
        __vitePreload(
          () => import("./BMZgg2Ge.js"),
          __vite__mapDeps([
            114, 22, 19, 6, 8, 20, 44, 103, 95, 56, 18, 7, 12, 13, 57, 96, 45,
            50, 39, 3, 4, 5, 9, 10, 11, 14, 15, 16, 17, 21, 40, 41, 42,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-online-payment-for-business___En",
      path: "/En/solutions/online-payment-for-business",
      component: () =>
        __vitePreload(
          () => import("./BQy0o8n0.js"),
          __vite__mapDeps([
            115, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 2, 16, 17, 18, 19,
            20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 95, 56, 57, 96, 45, 116, 50, 1, 117,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-online-payment-for-business___Ru",
      path: "/Ru/solutions/online-payment-for-business",
      component: () =>
        __vitePreload(
          () => import("./BQy0o8n0.js"),
          __vite__mapDeps([
            115, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 2, 16, 17, 18, 19,
            20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 44, 95, 56, 57, 96, 45, 116, 50, 1, 117,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-online-payment___En",
      path: "/En/solutions/online-payment",
      component: () =>
        __vitePreload(
          () => import("./DxfzrTeB.js"),
          __vite__mapDeps([
            118, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 2, 16, 17, 18, 19,
            20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 1, 44, 95, 56, 57, 96, 45, 116, 50, 119,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-online-payment___Ru",
      path: "/Ru/solutions/online-payment",
      component: () =>
        __vitePreload(
          () => import("./DxfzrTeB.js"),
          __vite__mapDeps([
            118, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 2, 16, 17, 18, 19,
            20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 1, 44, 95, 56, 57, 96, 45, 116, 50, 119,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-payment-gate___En",
      path: "/En/solutions/payment-gate",
      component: () =>
        __vitePreload(
          () => import("./BsnuJJJ4.js"),
          __vite__mapDeps([
            120, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 45, 1, 121,
          ]),
          import.meta.url
        ),
    },
    {
      name: "solutions-payment-gate___Ru",
      path: "/Ru/solutions/payment-gate",
      component: () =>
        __vitePreload(
          () => import("./BsnuJJJ4.js"),
          __vite__mapDeps([
            120, 22, 19, 6, 8, 20, 2, 3, 4, 5, 7, 9, 10, 11, 12, 13, 14, 15, 16,
            17, 18, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,
            37, 38, 39, 40, 41, 42, 43, 45, 1, 121,
          ]),
          import.meta.url
        ),
    },
    {
      name: "terms-of-services___En",
      path: "/En/terms-of-services",
      component: () =>
        __vitePreload(
          () => import("./DbOeqm85.js"),
          __vite__mapDeps([
            122, 52, 53, 4, 5, 6, 7, 8, 9, 32, 12, 13, 54, 55, 22, 19, 20, 46,
            38, 56, 18, 57,
          ]),
          import.meta.url
        ),
    },
    {
      name: "terms-of-services___Ru",
      path: "/Ru/terms-of-services",
      component: () =>
        __vitePreload(
          () => import("./DbOeqm85.js"),
          __vite__mapDeps([
            122, 52, 53, 4, 5, 6, 7, 8, 9, 32, 12, 13, 54, 55, 22, 19, 20, 46,
            38, 56, 18, 57,
          ]),
          import.meta.url
        ),
    },
  ],
  _wrapIf = (e, t, r) => (
    (t = t === !0 ? {} : t),
    {
      default: () => {
        var n;
        return t ? h$2(e, t, r) : (n = r.default) == null ? void 0 : n.call(r);
      },
    }
  ),
  ROUTE_KEY_PARENTHESES_RE = /(:\w+)\([^)]+\)/g,
  ROUTE_KEY_SYMBOLS_RE = /(:\w+)[?+*]/g,
  ROUTE_KEY_NORMAL_RE = /:\w+/g;
function generateRouteKey(e) {
  const t =
    (e == null ? void 0 : e.meta.key) ??
    e.path
      .replace(ROUTE_KEY_PARENTHESES_RE, "$1")
      .replace(ROUTE_KEY_SYMBOLS_RE, "$1")
      .replace(ROUTE_KEY_NORMAL_RE, (r) => {
        var n;
        return (
          ((n = e.params[r.slice(1)]) == null ? void 0 : n.toString()) || ""
        );
      });
  return typeof t == "function" ? t(e) : t;
}
function isChangingPage(e, t) {
  return e === t || t === START_LOCATION_NORMALIZED
    ? !1
    : generateRouteKey(e) !== generateRouteKey(t)
    ? !0
    : !e.matched.every((n, i) => {
        var a, o;
        return (
          n.components &&
          n.components.default ===
            ((o = (a = t.matched[i]) == null ? void 0 : a.components) == null
              ? void 0
              : o.default)
        );
      });
}
const routerOptions0 = {
  scrollBehavior(e, t, r) {
    var u;
    const n = useNuxtApp(),
      i =
        ((u = useRouter$1().options) == null ? void 0 : u.scrollBehaviorType) ??
        "auto";
    let a = r || void 0;
    const o =
      typeof e.meta.scrollToTop == "function"
        ? e.meta.scrollToTop(e, t)
        : e.meta.scrollToTop;
    if (
      (!a &&
        t &&
        e &&
        o !== !1 &&
        isChangingPage(e, t) &&
        (a = { left: 0, top: 0 }),
      e.path === t.path)
    )
      return t.hash && !e.hash
        ? { left: 0, top: 0 }
        : e.hash
        ? {
            el: e.hash,
            top: _getHashElementScrollMarginTop(e.hash),
            behavior: i,
          }
        : !1;
    const l = (d) => !!(d.meta.pageTransition ?? appPageTransition),
      c = l(t) && l(e) ? "page:transition:finish" : "page:finish";
    return new Promise((d) => {
      n.hooks.hookOnce(c, async () => {
        await new Promise((E) => setTimeout(E, 0)),
          e.hash &&
            (a = {
              el: e.hash,
              top: _getHashElementScrollMarginTop(e.hash),
              behavior: i,
            }),
          d(a);
      });
    });
  },
};
function _getHashElementScrollMarginTop(e) {
  try {
    const t = document.querySelector(e);
    if (t)
      return (
        (Number.parseFloat(getComputedStyle(t).scrollMarginTop) || 0) +
        (Number.parseFloat(
          getComputedStyle(document.documentElement).scrollPaddingTop
        ) || 0)
      );
  } catch {}
  return 0;
}
const configRouterOptions = { hashMode: !1, scrollBehaviorType: "auto" },
  routerOptions = { ...configRouterOptions, ...routerOptions0 },
  validate = async (e) => {
    var c;
    let t, r;
    if (!((c = e.meta) != null && c.validate)) return;
    const n = useNuxtApp(),
      i = useRouter$1(),
      a =
        (([t, r] = executeAsync(() => Promise.resolve(e.meta.validate(e)))),
        (t = await t),
        r(),
        t);
    if (a === !0) return;
    const o = createError({
        statusCode: (a && a.statusCode) || 404,
        statusMessage:
          (a && a.statusMessage) || `Page Not Found: ${e.fullPath}`,
        data: { path: e.fullPath },
      }),
      l = i.beforeResolve((u) => {
        if ((l(), u === e)) {
          const d = i.afterEach(async () => {
            d(),
              await n.runWithContext(() => showError(o)),
              window == null || window.history.pushState({}, "", e.fullPath);
          });
          return !1;
        }
      });
  },
  requestIdleCallback =
    globalThis.requestIdleCallback ||
    ((e) => {
      const t = Date.now(),
        r = {
          didTimeout: !1,
          timeRemaining: () => Math.max(0, 50 - (Date.now() - t)),
        };
      return setTimeout(() => {
        e(r);
      }, 1);
    }),
  cancelIdleCallback =
    globalThis.cancelIdleCallback ||
    ((e) => {
      clearTimeout(e);
    }),
  onNuxtReady = (e) => {
    const t = useNuxtApp();
    t.isHydrating
      ? t.hooks.hookOnce("app:suspense:resolve", () => {
          requestIdleCallback(() => e());
        })
      : requestIdleCallback(() => e());
  },
  useStateKeyPrefix = "$s";
function useState(...e) {
  const t = typeof e[e.length - 1] == "string" ? e.pop() : void 0;
  typeof e[0] != "string" && e.unshift(t);
  const [r, n] = e;
  if (!r || typeof r != "string")
    throw new TypeError("[nuxt] [useState] key must be a string: " + r);
  if (n !== void 0 && typeof n != "function")
    throw new Error("[nuxt] [useState] init must be a function: " + n);
  const i = useStateKeyPrefix + r,
    a = useNuxtApp(),
    o = toRef(a.payload.state, i);
  if (o.value === void 0 && n) {
    const l = n();
    if (isRef(l)) return (a.payload.state[i] = l), l;
    o.value = l;
  }
  return o;
}
function klona$1(e) {
  if (typeof e != "object") return e;
  var t,
    r,
    n = Object.prototype.toString.call(e);
  if (n === "[object Object]") {
    if (e.constructor !== Object && typeof e.constructor == "function") {
      r = new e.constructor();
      for (t in e)
        e.hasOwnProperty(t) && r[t] !== e[t] && (r[t] = klona$1(e[t]));
    } else {
      r = {};
      for (t in e)
        t === "__proto__"
          ? Object.defineProperty(r, t, {
              value: klona$1(e[t]),
              configurable: !0,
              enumerable: !0,
              writable: !0,
            })
          : (r[t] = klona$1(e[t]));
    }
    return r;
  }
  if (n === "[object Array]") {
    for (t = e.length, r = Array(t); t--; ) r[t] = klona$1(e[t]);
    return r;
  }
  return n === "[object Set]"
    ? ((r = new Set()),
      e.forEach(function (i) {
        r.add(klona$1(i));
      }),
      r)
    : n === "[object Map]"
    ? ((r = new Map()),
      e.forEach(function (i, a) {
        r.set(klona$1(a), klona$1(i));
      }),
      r)
    : n === "[object Date]"
    ? new Date(+e)
    : n === "[object RegExp]"
    ? ((r = new RegExp(e.source, e.flags)), (r.lastIndex = e.lastIndex), r)
    : n === "[object DataView]"
    ? new e.constructor(klona$1(e.buffer))
    : n === "[object ArrayBuffer]"
    ? e.slice(0)
    : n.slice(-6) === "Array]"
    ? new e.constructor(e)
    : e;
}
const CookieDefaults = {
    path: "/",
    watch: !0,
    decode: (e) => destr(decodeURIComponent(e)),
    encode: (e) =>
      encodeURIComponent(typeof e == "string" ? e : JSON.stringify(e)),
  },
  store = window.cookieStore;
function useCookie(e, t) {
  var c;
  const r = { ...CookieDefaults, ...t };
  r.filter ?? (r.filter = (u) => u === e);
  const n = readRawCookies(r) || {};
  let i;
  r.maxAge !== void 0
    ? (i = r.maxAge * 1e3)
    : r.expires && (i = r.expires.getTime() - Date.now());
  const a = i !== void 0 && i <= 0,
    o = klona$1(
      a ? void 0 : n[e] ?? ((c = r.default) == null ? void 0 : c.call(r))
    ),
    l = i && !a ? cookieRef(o, i, r.watch && r.watch !== "shallow") : ref(o);
  {
    let u = null;
    try {
      !store &&
        typeof BroadcastChannel < "u" &&
        (u = new BroadcastChannel(`nuxt:cookies:${e}`));
    } catch {}
    const d = () => {
        r.readonly ||
          isEqual$1(l.value, n[e]) ||
          (writeClientCookie(e, l.value, r),
          (n[e] = klona$1(l.value)),
          u == null || u.postMessage({ value: r.encode(l.value) }));
      },
      E = (R) => {
        var M;
        const T = R.refresh
          ? (M = readRawCookies(r)) == null
            ? void 0
            : M[e]
          : r.decode(R.value);
        (b = !0),
          (l.value = T),
          (n[e] = klona$1(T)),
          nextTick(() => {
            b = !1;
          });
      };
    let b = !1;
    const P = !!getCurrentScope();
    if (
      (P &&
        onScopeDispose(() => {
          (b = !0), d(), u == null || u.close();
        }),
      store)
    ) {
      const R = (T) => {
        const M = T.changed.find((k) => k.name === e),
          x = T.deleted.find((k) => k.name === e);
        M && E({ value: M.value }), x && E({ value: null });
      };
      store.addEventListener("change", R),
        P && onScopeDispose(() => store.removeEventListener("change", R));
    } else u && (u.onmessage = ({ data: R }) => E(R));
    r.watch
      ? watch(
          l,
          () => {
            b || d();
          },
          { deep: r.watch !== "shallow" }
        )
      : d();
  }
  return l;
}
function readRawCookies(e = {}) {
  return parse$2(document.cookie, e);
}
function serializeCookie(e, t, r = {}) {
  return t == null ? serialize(e, t, { ...r, maxAge: -1 }) : serialize(e, t, r);
}
function writeClientCookie(e, t, r = {}) {
  document.cookie = serializeCookie(e, t, r);
}
const MAX_TIMEOUT_DELAY = 2147483647;
function cookieRef(e, t, r) {
  let n,
    i,
    a = 0;
  const o = r ? ref(e) : { value: e };
  return (
    getCurrentScope() &&
      onScopeDispose(() => {
        i == null || i(), clearTimeout(n);
      }),
    customRef((l, c) => {
      r && (i = watch(o, c));
      function u() {
        (a = 0), clearTimeout(n);
        const d = t - a,
          E = d < MAX_TIMEOUT_DELAY ? d : MAX_TIMEOUT_DELAY;
        n = setTimeout(() => {
          if (((a += E), a < t)) return u();
          (o.value = void 0), c();
        }, E);
      }
      return {
        get() {
          return l(), o.value;
        },
        set(d) {
          u(), (o.value = d), c();
        },
      };
    })
  );
}
async function preloadRouteComponents(e, t = useRouter$1()) {
  const { path: r, matched: n } = t.resolve(e);
  if (
    !n.length ||
    (t._routePreloaded || (t._routePreloaded = new Set()),
    t._routePreloaded.has(r))
  )
    return;
  const i = (t._preloadPromises = t._preloadPromises || []);
  if (i.length > 4)
    return Promise.all(i).then(() => preloadRouteComponents(e, t));
  t._routePreloaded.add(r);
  const a = n
    .map((o) => {
      var l;
      return (l = o.components) == null ? void 0 : l.default;
    })
    .filter((o) => typeof o == "function");
  for (const o of a) {
    const l = Promise.resolve(o())
      .catch(() => {})
      .finally(() => i.splice(i.indexOf(l)));
    i.push(l);
  }
  await Promise.all(i);
}
function reloadNuxtApp(e = {}) {
  const t = e.path || window.location.pathname;
  let r = {};
  try {
    r = destr(sessionStorage.getItem("nuxt:reload") || "{}");
  } catch {}
  if (
    e.force ||
    (r == null ? void 0 : r.path) !== t ||
    (r == null ? void 0 : r.expires) < Date.now()
  ) {
    try {
      sessionStorage.setItem(
        "nuxt:reload",
        JSON.stringify({ path: t, expires: Date.now() + (e.ttl ?? 1e4) })
      );
    } catch {}
    if (e.persistState)
      try {
        sessionStorage.setItem(
          "nuxt:reload:state",
          JSON.stringify({ state: useNuxtApp().payload.state })
        );
      } catch {}
    window.location.pathname !== t
      ? (window.location.href = t)
      : window.location.reload();
  }
}
const firstNonUndefined = (...e) => e.find((t) => t !== void 0);
function defineNuxtLink(e) {
  const t = e.componentName || "NuxtLink";
  function r(a) {
    return typeof a == "string" && a.startsWith("#");
  }
  function n(a, o) {
    if (!a || (e.trailingSlash !== "append" && e.trailingSlash !== "remove"))
      return a;
    if (typeof a == "string")
      return applyTrailingSlashBehavior(a, e.trailingSlash);
    const l = "path" in a && a.path !== void 0 ? a.path : o(a).path;
    return {
      ...a,
      name: void 0,
      path: applyTrailingSlashBehavior(l, e.trailingSlash),
    };
  }
  function i(a) {
    const o = useRouter$1(),
      l = useRuntimeConfig(),
      c = computed(() => !!a.target && a.target !== "_self"),
      u = computed(() => {
        const M = a.to || a.href || "";
        return typeof M == "string" && hasProtocol(M, { acceptRelative: !0 });
      }),
      d = resolveComponent("RouterLink"),
      E = d && typeof d != "string" ? d.useLink : void 0,
      b = computed(() => {
        if (a.external) return !0;
        const M = a.to || a.href || "";
        return typeof M == "object" ? !1 : M === "" || u.value;
      }),
      P = computed(() => {
        const M = a.to || a.href || "";
        return b.value ? M : n(M, o.resolve);
      }),
      R = b.value || E == null ? void 0 : E({ ...a, to: P }),
      T = computed(() => {
        var M;
        if (!P.value || u.value || r(P.value)) return P.value;
        if (b.value) {
          const x =
              typeof P.value == "object" && "path" in P.value
                ? resolveRouteObject(P.value)
                : P.value,
            k = typeof x == "object" ? o.resolve(x).href : x;
          return n(k, o.resolve);
        }
        return typeof P.value == "object"
          ? ((M = o.resolve(P.value)) == null ? void 0 : M.href) ?? null
          : n(joinURL(l.app.baseURL, P.value), o.resolve);
      });
    return {
      to: P,
      hasTarget: c,
      isAbsoluteUrl: u,
      isExternal: b,
      href: T,
      isActive:
        (R == null ? void 0 : R.isActive) ??
        computed(() => P.value === o.currentRoute.value.path),
      isExactActive:
        (R == null ? void 0 : R.isExactActive) ??
        computed(() => P.value === o.currentRoute.value.path),
      route:
        (R == null ? void 0 : R.route) ?? computed(() => o.resolve(P.value)),
      async navigate() {
        await navigateTo(T.value, {
          replace: a.replace,
          external: b.value || c.value,
        });
      },
    };
  }
  return defineComponent$1({
    name: t,
    props: {
      to: { type: [String, Object], default: void 0, required: !1 },
      href: { type: [String, Object], default: void 0, required: !1 },
      target: { type: String, default: void 0, required: !1 },
      rel: { type: String, default: void 0, required: !1 },
      noRel: { type: Boolean, default: void 0, required: !1 },
      prefetch: { type: Boolean, default: void 0, required: !1 },
      prefetchOn: { type: [String, Object], default: void 0, required: !1 },
      noPrefetch: { type: Boolean, default: void 0, required: !1 },
      activeClass: { type: String, default: void 0, required: !1 },
      exactActiveClass: { type: String, default: void 0, required: !1 },
      prefetchedClass: { type: String, default: void 0, required: !1 },
      replace: { type: Boolean, default: void 0, required: !1 },
      ariaCurrentValue: { type: String, default: void 0, required: !1 },
      external: { type: Boolean, default: void 0, required: !1 },
      custom: { type: Boolean, default: void 0, required: !1 },
    },
    useLink: i,
    setup(a, { slots: o }) {
      const l = useRouter$1(),
        {
          to: c,
          href: u,
          navigate: d,
          isExternal: E,
          hasTarget: b,
          isAbsoluteUrl: P,
        } = i(a),
        R = ref(!1),
        T = ref(null),
        M = (S) => {
          var A;
          T.value = a.custom
            ? (A = S == null ? void 0 : S.$el) == null
              ? void 0
              : A.nextElementSibling
            : S == null
            ? void 0
            : S.$el;
        };
      function x(S) {
        var A, O;
        return (
          !R.value &&
          (typeof a.prefetchOn == "string"
            ? a.prefetchOn === S
            : ((A = a.prefetchOn) == null ? void 0 : A[S]) ??
              ((O = e.prefetchOn) == null ? void 0 : O[S])) &&
          (a.prefetch ?? e.prefetch) !== !1 &&
          a.noPrefetch !== !0 &&
          a.target !== "_blank" &&
          !isSlowConnection()
        );
      }
      async function k(S = useNuxtApp()) {
        if (R.value) return;
        R.value = !0;
        const A =
            typeof c.value == "string"
              ? c.value
              : E.value
              ? resolveRouteObject(c.value)
              : l.resolve(c.value).fullPath,
          O = E.value ? new URL(A, window.location.href).href : A;
        await Promise.all([
          S.hooks.callHook("link:prefetch", O).catch(() => {}),
          !E.value &&
            !b.value &&
            preloadRouteComponents(c.value, l).catch(() => {}),
        ]);
      }
      if (x("visibility")) {
        const S = useNuxtApp();
        let A,
          O = null;
        onMounted(() => {
          const F = useObserver();
          onNuxtReady(() => {
            A = requestIdleCallback(() => {
              var D;
              (D = T == null ? void 0 : T.value) != null &&
                D.tagName &&
                (O = F.observe(T.value, async () => {
                  O == null || O(), (O = null), await k(S);
                }));
            });
          });
        }),
          onBeforeUnmount(() => {
            A && cancelIdleCallback(A), O == null || O(), (O = null);
          });
      }
      return () => {
        var O;
        if (!E.value && !b.value && !r(c.value)) {
          const F = {
            ref: M,
            to: c.value,
            activeClass: a.activeClass || e.activeClass,
            exactActiveClass: a.exactActiveClass || e.exactActiveClass,
            replace: a.replace,
            ariaCurrentValue: a.ariaCurrentValue,
            custom: a.custom,
          };
          return (
            a.custom ||
              (x("interaction") &&
                ((F.onPointerenter = k.bind(null, void 0)),
                (F.onFocus = k.bind(null, void 0))),
              R.value && (F.class = a.prefetchedClass || e.prefetchedClass),
              (F.rel = a.rel || void 0)),
            h$2(resolveComponent("RouterLink"), F, o.default)
          );
        }
        const S = a.target || null,
          A =
            firstNonUndefined(
              a.noRel ? "" : a.rel,
              e.externalRelAttribute,
              P.value || b.value ? "noopener noreferrer" : ""
            ) || null;
        return a.custom
          ? o.default
            ? o.default({
                href: u.value,
                navigate: d,
                prefetch: k,
                get route() {
                  if (!u.value) return;
                  const F = new URL(u.value, window.location.href);
                  return {
                    path: F.pathname,
                    fullPath: F.pathname,
                    get query() {
                      return parseQuery$1(F.search);
                    },
                    hash: F.hash,
                    params: {},
                    name: void 0,
                    matched: [],
                    redirectedFrom: void 0,
                    meta: {},
                    href: u.value,
                  };
                },
                rel: A,
                target: S,
                isExternal: E.value || b.value,
                isActive: !1,
                isExactActive: !1,
              })
            : null
          : h$2(
              "a",
              { ref: T, href: u.value || null, rel: A, target: S },
              (O = o.default) == null ? void 0 : O.call(o)
            );
      };
    },
  });
}
const __nuxt_component_1$1 = defineNuxtLink(nuxtLinkDefaults);
function applyTrailingSlashBehavior(e, t) {
  const r = t === "append" ? withTrailingSlash : withoutTrailingSlash;
  return hasProtocol(e) && !e.startsWith("http") ? e : r(e, !0);
}
function useObserver() {
  const e = useNuxtApp();
  if (e._observer) return e._observer;
  let t = null;
  const r = new Map(),
    n = (a, o) => (
      t ||
        (t = new IntersectionObserver((l) => {
          for (const c of l) {
            const u = r.get(c.target);
            (c.isIntersecting || c.intersectionRatio > 0) && u && u();
          }
        })),
      r.set(a, o),
      t.observe(a),
      () => {
        r.delete(a),
          t == null || t.unobserve(a),
          r.size === 0 && (t == null || t.disconnect(), (t = null));
      }
    );
  return (e._observer = { observe: n });
}
const IS_2G_RE = /2g/;
function isSlowConnection() {
  const e = navigator.connection;
  return !!(e && (e.saveData || IS_2G_RE.test(e.effectiveType)));
}
const inlineConfig = { nuxt: {}, __swiper: { bundled: !0 } },
  __appConfig = defuFn(inlineConfig);
function useAppConfig() {
  const e = useNuxtApp();
  return e._appConfig || (e._appConfig = reactive(__appConfig)), e._appConfig;
}
const redirect_45global = (e) => {
    const t = {
      "/buy-sell-perfectmoney-voucher":
        "/solutions/buy-sell-perfectmoney-voucher",
      "/Ru/buy-sell-perfectmoney-voucher":
        "/Ru/solutions/buy-sell-perfectmoney-voucher",
      "/receive-paypal": "/solutions/exchange-paypal",
      "/services/exchange-perfectmoney-paypal":
        "/services/perfectmoney-to-paypal-exchange",
      "/why-sign-up": "/aml-kyc-policy",
      "/story-of-us": "/En/contact-us",
      "/Ru/paypal-invoice": "/Ru/solutions/payment-gate",
      "/Ru/services/exchange-perfectmoney-paypal":
        "/Ru/services/perfectmoney-to-paypal-exchange",
      "/tether-to-Pmvoucher-exchange": "/",
      "/Ru/visa-master-invoice": "/solutions/payment-gate",
      "/Ru/tether-to-Pmvoucher-exchange?step=1": "/",
      "/paypal-invoice": "/solutions/payment-gate",
      "/disclaimer": "/terms-of-services",
      "/payment-gate": "/solutions/payment-gate",
      "/Ru/receive-paypal": "/Ru/solutions/exchange-paypal",
      "/Ru/payment-gate": "/Ru/solutions/payment-gate",
      "/Ru/tether-to-Pmvoucher-exchange": "/",
    };
    if (t[e.path]) return navigateTo(t[e.path], { redirectCode: 301 });
  },
  manifest_45route_45rule = async (e) => {
    let t, r;
    const n =
      (([t, r] = executeAsync(() => getRouteRules({ path: e.path }))),
      (t = await t),
      r(),
      t);
    if (n.redirect)
      return hasProtocol(n.redirect, { acceptRelative: !0 })
        ? ((window.location.href = n.redirect), !1)
        : n.redirect;
  },
  globalMiddleware = [validate, redirect_45global, manifest_45route_45rule],
  namedMiddleware = {
    auth: () =>
      __vitePreload(() => import("./Dlh3_W9-.js"), [], import.meta.url),
  };
function createCurrentLocation(e, t, r) {
  const { pathname: n, search: i, hash: a } = t,
    o = e.indexOf("#");
  if (o > -1) {
    const u = a.includes(e.slice(o)) ? e.slice(o).length : 1;
    let d = a.slice(u);
    return d[0] !== "/" && (d = "/" + d), withoutBase(d, "");
  }
  const l = withoutBase(n, e),
    c = !r || isEqual$2(l, r, { trailingSlash: !0 }) ? l : r;
  return c + (c.includes("?") ? "" : i) + a;
}
const plugin$2 = defineNuxtPlugin({
    name: "nuxt:router",
    enforce: "pre",
    async setup(e) {
      var M;
      let t,
        r,
        n = useRuntimeConfig().app.baseURL;
      const i =
          ((M = routerOptions.history) == null
            ? void 0
            : M.call(routerOptions, n)) ?? createWebHistory(n),
        a = routerOptions.routes
          ? (([t, r] = executeAsync(() => routerOptions.routes(_routes))),
            (t = await t),
            r(),
            t ?? _routes)
          : _routes;
      let o;
      const l = createRouter({
        ...routerOptions,
        scrollBehavior: (x, k, S) => {
          if (k === START_LOCATION_NORMALIZED) {
            o = S;
            return;
          }
          if (routerOptions.scrollBehavior) {
            if (
              ((l.options.scrollBehavior = routerOptions.scrollBehavior),
              "scrollRestoration" in window.history)
            ) {
              const A = l.beforeEach(() => {
                A(), (window.history.scrollRestoration = "manual");
              });
            }
            return routerOptions.scrollBehavior(
              x,
              START_LOCATION_NORMALIZED,
              o || S
            );
          }
        },
        history: i,
        routes: a,
      });
      "scrollRestoration" in window.history &&
        (window.history.scrollRestoration = "auto"),
        e.vueApp.use(l);
      const c = shallowRef(l.currentRoute.value);
      l.afterEach((x, k) => {
        c.value = k;
      }),
        Object.defineProperty(
          e.vueApp.config.globalProperties,
          "previousRoute",
          { get: () => c.value }
        );
      const u = createCurrentLocation(n, window.location, e.payload.path),
        d = shallowRef(l.currentRoute.value),
        E = () => {
          d.value = l.currentRoute.value;
        };
      e.hook("page:finish", E),
        l.afterEach((x, k) => {
          var S, A, O, F;
          ((A = (S = x.matched[0]) == null ? void 0 : S.components) == null
            ? void 0
            : A.default) ===
            ((F = (O = k.matched[0]) == null ? void 0 : O.components) == null
              ? void 0
              : F.default) && E();
        });
      const b = {};
      for (const x in d.value)
        Object.defineProperty(b, x, { get: () => d.value[x], enumerable: !0 });
      (e._route = shallowReactive(b)),
        (e._middleware = e._middleware || { global: [], named: {} });
      const P = useError();
      l.afterEach(async (x, k, S) => {
        delete e._processingMiddleware,
          !e.isHydrating && P.value && (await e.runWithContext(clearError)),
          S && (await e.callHook("page:loading:end"));
      });
      try {
        ([t, r] = executeAsync(() => l.isReady())), await t, r();
      } catch (x) {
        ([t, r] = executeAsync(() => e.runWithContext(() => showError(x)))),
          await t,
          r();
      }
      const R =
        u !== l.currentRoute.value.fullPath
          ? l.resolve(u)
          : l.currentRoute.value;
      E();
      const T = e.payload.state._layout;
      return (
        l.beforeEach(async (x, k) => {
          var S;
          await e.callHook("page:loading:start"),
            (x.meta = reactive(x.meta)),
            e.isHydrating &&
              T &&
              !isReadonly(x.meta.layout) &&
              (x.meta.layout = T),
            (e._processingMiddleware = !0);
          {
            const A = new Set([...globalMiddleware, ...e._middleware.global]);
            for (const O of x.matched) {
              const F = O.meta.middleware;
              if (F) for (const D of toArray(F)) A.add(D);
            }
            {
              const O = await e.runWithContext(() =>
                getRouteRules({ path: x.path })
              );
              if (O.appMiddleware)
                for (const F in O.appMiddleware)
                  O.appMiddleware[F] ? A.add(F) : A.delete(F);
            }
            for (const O of A) {
              const F =
                typeof O == "string"
                  ? e._middleware.named[O] ||
                    (await ((S = namedMiddleware[O]) == null
                      ? void 0
                      : S.call(namedMiddleware).then((H) => H.default || H)))
                  : O;
              if (!F) throw new Error(`Unknown route middleware: '${O}'.`);
              const D = await e.runWithContext(() => F(x, k));
              if (
                !e.payload.serverRendered &&
                e.isHydrating &&
                (D === !1 || D instanceof Error)
              ) {
                const H =
                  D ||
                  createError$1({
                    statusCode: 404,
                    statusMessage: `Page Not Found: ${u}`,
                  });
                return await e.runWithContext(() => showError(H)), !1;
              }
              if (D !== !0 && (D || D === !1)) return D;
            }
          }
        }),
        l.onError(async () => {
          delete e._processingMiddleware, await e.callHook("page:loading:end");
        }),
        l.afterEach(async (x, k) => {
          x.matched.length === 0 &&
            (await e.runWithContext(() =>
              showError(
                createError$1({
                  statusCode: 404,
                  fatal: !1,
                  statusMessage: `Page not found: ${x.fullPath}`,
                  data: { path: x.fullPath },
                })
              )
            ));
        }),
        e.hooks.hookOnce("app:created", async () => {
          try {
            "name" in R && (R.name = void 0),
              await l.replace({ ...R, force: !0 }),
              (l.options.scrollBehavior = routerOptions.scrollBehavior);
          } catch (x) {
            await e.runWithContext(() => showError(x));
          }
        }),
        { provide: { router: l } }
      );
    },
  }),
  payload_client_yVLowv6hDl = defineNuxtPlugin({
    name: "nuxt:payload",
    setup(e) {
      useRouter$1().beforeResolve(async (t, r) => {
        if (t.path === r.path) return;
        const n = await loadPayload(t.path);
        n && Object.assign(e.static.data, n.data);
      }),
        onNuxtReady(() => {
          var t;
          e.hooks.hook("link:prefetch", async (r) => {
            const { hostname: n } = new URL(r, window.location.href);
            n === window.location.hostname && (await loadPayload(r));
          }),
            ((t = navigator.connection) == null ? void 0 : t.effectiveType) !==
              "slow-2g" && setTimeout(getAppManifest, 1e3);
        });
    },
  }),
  navigation_repaint_client_bs2bWDGRIE = defineNuxtPlugin(() => {
    const e = useRouter$1();
    onNuxtReady(() => {
      e.beforeResolve(async () => {
        await new Promise((t) => {
          setTimeout(t, 100),
            requestAnimationFrame(() => {
              setTimeout(t, 0);
            });
        });
      });
    });
  }),
  check_outdated_build_client_8vK7RkfGxZ = defineNuxtPlugin((e) => {
    let t;
    async function r() {
      const n = await getAppManifest();
      t && clearTimeout(t), (t = setTimeout(r, outdatedBuildInterval));
      try {
        const i = await $fetch(
          buildAssetsURL("builds/latest.json") + `?${Date.now()}`
        );
        i.id !== n.id && e.hooks.callHook("app:manifest:update", i);
      } catch {}
    }
    onNuxtReady(() => {
      t = setTimeout(r, outdatedBuildInterval);
    });
  }),
  chunk_reload_client_UciE0i6zes = defineNuxtPlugin({
    name: "nuxt:chunk-reload",
    setup(e) {
      const t = useRouter$1(),
        r = useRuntimeConfig(),
        n = new Set();
      t.beforeEach(() => {
        n.clear();
      }),
        e.hook("app:chunkError", ({ error: a }) => {
          n.add(a);
        });
      function i(a) {
        const l =
          "href" in a && a.href[0] === "#"
            ? r.app.baseURL + a.href
            : joinURL(r.app.baseURL, a.fullPath);
        reloadNuxtApp({ path: l, persistState: !0 });
      }
      e.hook("app:manifest:update", () => {
        t.beforeResolve(i);
      }),
        t.onError((a, o) => {
          n.has(a) && i(o);
        });
    },
  }),
  plugin$1 = defineNuxtPlugin({
    name: "pinia",
    setup(e) {
      const t = createPinia();
      return (
        e.vueApp.use(t),
        setActivePinia(t),
        e.payload && e.payload.pinia && (t.state.value = e.payload.pinia),
        { provide: { pinia: t } }
      );
    },
  }),
  components_plugin_KR1HBZs4kY = defineNuxtPlugin({
    name: "nuxt:global-components",
  }),
  layouts = {
    default: defineAsyncComponent(() =>
      __vitePreload(
        () => import("./qArxSU5_.js"),
        __vite__mapDeps([
          123, 22, 19, 6, 8, 20, 83, 18, 63, 12, 13, 27, 11, 5, 14, 28, 29, 84,
          31, 4, 7, 9, 32, 33, 39, 3, 10, 15, 16, 17, 21, 40, 41, 42, 124, 1,
          53, 54, 125, 38,
        ]),
        import.meta.url
      ).then((e) => e.default || e)
    ),
    profile: defineAsyncComponent(() =>
      __vitePreload(
        () => import("./B2YwdPLD.js"),
        __vite__mapDeps([
          126, 22, 19, 6, 8, 20, 124, 18, 11, 12, 13, 5, 14, 1, 27, 28, 29, 53,
          4, 7, 9, 32, 54, 125, 10, 63, 83, 84, 127,
        ]),
        import.meta.url
      ).then((e) => e.default || e)
    ),
  },
  prefetch_client_5tzzN0oIVL = defineNuxtPlugin({
    name: "nuxt:prefetch",
    setup(e) {
      const t = useRouter$1();
      e.hooks.hook("app:mounted", () => {
        t.beforeEach(async (r) => {
          var i;
          const n =
            (i = r == null ? void 0 : r.meta) == null ? void 0 : i.layout;
          n && typeof layouts[n] == "function" && (await layouts[n]());
        });
      }),
        e.hooks.hook("link:prefetch", (r) => {
          if (hasProtocol(r)) return;
          const n = t.resolve(r);
          if (!n) return;
          const i = n.meta.layout;
          let a = toArray(n.meta.middleware);
          a = a.filter((o) => typeof o == "string");
          for (const o of a)
            typeof namedMiddleware[o] == "function" && namedMiddleware[o]();
          i && typeof layouts[i] == "function" && layouts[i]();
        });
    },
  }),
  components_client_ZB1W0EeH0E = defineNuxtPlugin((e) => {
    const t = useAppConfig();
    e.hook("app:created", async () => {
      if (!t.__swiper.bundled) {
        (
          await __vitePreload(
            async () => {
              const { register: n } = await import("./CpYWBUaW.js");
              return { register: n };
            },
            __vite__mapDeps([128, 129]),
            import.meta.url
          )
        ).register();
        return;
      }
      (
        await __vitePreload(
          async () => {
            const { register: n } = await import("./D3OnLe3d.js");
            return { register: n };
          },
          __vite__mapDeps([130, 129]),
          import.meta.url
        )
      ).register();
    });
  }),
  localeCodes = ["En", "Ru"],
  localeLoaders = {
    En: [
      {
        key: "../locale/en-US.js",
        load: () =>
          __vitePreload(() => import("./B9T8tgGX.js"), [], import.meta.url),
        cache: !0,
      },
    ],
    Ru: [
      {
        key: "../locale/ru-RU.js",
        load: () =>
          __vitePreload(() => import("./DqWTuUiz.js"), [], import.meta.url),
        cache: !0,
      },
    ],
  },
  vueI18nConfigs = [],
  normalizedLocales = [
    { code: "En", name: "English", files: [{ path: "/src/locale/en-US.js" }] },
    { code: "Ru", name: "Русский", files: [{ path: "/src/locale/ru-RU.js" }] },
  ],
  NUXT_I18N_MODULE_ID = "@nuxtjs/i18n",
  parallelPlugin = !1,
  isSSG = !1,
  DEFAULT_DYNAMIC_PARAMS_KEY = "nuxtI18n",
  DEFAULT_COOKIE_KEY = "i18n_redirected",
  SWITCH_LOCALE_PATH_LINK_IDENTIFIER = "nuxt-i18n-slp",
  inBrowser = typeof window < "u";
function getNormalizedLocales(e) {
  e = e || [];
  const t = [];
  for (const r of e) isString(r) ? t.push({ code: r }) : t.push(r);
  return t;
}
function isI18nInstance(e) {
  return e != null && "global" in e && "mode" in e;
}
function isComposer(e) {
  return e != null && !("__composer" in e) && "locale" in e && isRef(e.locale);
}
function isVueI18n(e) {
  return e != null && "__composer" in e;
}
function getI18nTarget(e) {
  return isI18nInstance(e) ? e.global : e;
}
function getComposer(e) {
  const t = getI18nTarget(e);
  return isComposer(t) ? t : isVueI18n(t) ? t.__composer : t;
}
function getLocale(e) {
  return unref(getI18nTarget(e).locale);
}
function getLocales(e) {
  return unref(getI18nTarget(e).locales);
}
function getLocaleCodes(e) {
  return unref(getI18nTarget(e).localeCodes);
}
function setLocale(e, t) {
  const r = getI18nTarget(e);
  isRef(r.locale) ? (r.locale.value = t) : (r.locale = t);
}
function getRouteName(e) {
  return isString(e) ? e : isSymbol(e) ? e.toString() : "(null)";
}
function getLocaleRouteName(
  e,
  t,
  {
    defaultLocale: r,
    strategy: n,
    routesNameSeparator: i,
    defaultLocaleRouteNameSuffix: a,
    differentDomains: o,
  }
) {
  const l = n !== "no_prefix" || o;
  let c = getRouteName(e) + (l ? i + t : "");
  return t === r && n === "prefix_and_default" && (c += i + a), c;
}
function resolveBaseUrl(e, t) {
  return isFunction(e) ? e(t) : e;
}
function matchBrowserLocale(e, t) {
  const r = [];
  for (const [n, i] of t.entries()) {
    const a = e.find((o) => o.language.toLowerCase() === i.toLowerCase());
    if (a) {
      r.push({ code: a.code, score: 1 - n / t.length });
      break;
    }
  }
  for (const [n, i] of t.entries()) {
    const a = i.split("-")[0].toLowerCase(),
      o = e.find((l) => l.language.split("-")[0].toLowerCase() === a);
    if (o) {
      r.push({ code: o.code, score: 0.999 - n / t.length });
      break;
    }
  }
  return r;
}
const DefaultBrowserLocaleMatcher = matchBrowserLocale;
function compareBrowserLocale(e, t) {
  return e.score === t.score
    ? t.code.length - e.code.length
    : t.score - e.score;
}
const DefaultBrowerLocaleComparer = compareBrowserLocale;
function findBrowserLocale(
  e,
  t,
  {
    matcher: r = DefaultBrowserLocaleMatcher,
    comparer: n = DefaultBrowerLocaleComparer,
  } = {}
) {
  const i = [];
  for (const o of e) {
    const { code: l } = o,
      c = o.language || l;
    i.push({ code: l, language: c });
  }
  const a = r(i, t);
  return a.length > 1 && a.sort(n), a.length ? a[0].code : "";
}
function getLocalesRegex(e) {
  return new RegExp(`^/(${e.join("|")})(?:/|$)`, "i");
}
const cacheMessages = new Map();
async function loadVueI18nOptions(e, t) {
  const r = { messages: {} };
  for (const n of e) {
    const { default: i } = await n(),
      a = isFunction(i) ? await t.runWithContext(async () => await i()) : i;
    deepCopy(a, r);
  }
  return r;
}
function makeFallbackLocaleCodes(e, t) {
  let r = [];
  if (isArray$1(e)) r = e;
  else if (isObject$1(e)) {
    const n = [...t, "default"];
    for (const i of n) e[i] && (r = [...r, ...e[i].filter(Boolean)]);
  } else isString(e) && t.every((n) => n !== e) && r.push(e);
  return r;
}
async function loadInitialMessages(e, t, r) {
  const {
    defaultLocale: n,
    initialLocale: i,
    localeCodes: a,
    fallbackLocale: o,
    lazy: l,
  } = r;
  if (l && o) {
    const u = makeFallbackLocaleCodes(o, [n, i]);
    await Promise.all(u.map((d) => loadAndSetLocaleMessages(d, t, e)));
  }
  const c = l ? [...new Set().add(n).add(i)] : a;
  return await Promise.all(c.map((u) => loadAndSetLocaleMessages(u, t, e))), e;
}
async function loadMessage(e, { key: t, load: r }) {
  let n = null;
  try {
    const i = await r().then((a) => a.default || a);
    isFunction(i)
      ? (n = await i(e))
      : ((n = i), n != null && cacheMessages && cacheMessages.set(t, n));
  } catch (i) {
    console.error("Failed locale loading: " + i.message);
  }
  return n;
}
async function loadLocale(e, t, r) {
  const n = t[e];
  if (n == null) {
    console.warn("Could not find messages for locale code: " + e);
    return;
  }
  const i = {};
  for (const a of n) {
    let o = null;
    cacheMessages && cacheMessages.has(a.key) && a.cache
      ? (o = cacheMessages.get(a.key))
      : (o = await loadMessage(e, a)),
      o != null && deepCopy(o, i);
  }
  r(e, i);
}
async function loadAndSetLocaleMessages(e, t, r) {
  await loadLocale(e, t, (i, a) => {
    const o = r[i] || {};
    deepCopy(a, o), (r[i] = o);
  });
}
function split(e, t) {
  return [e.slice(0, t), e.slice(t)];
}
function routeToObject(e) {
  const {
    fullPath: t,
    query: r,
    hash: n,
    name: i,
    path: a,
    params: o,
    meta: l,
    redirectedFrom: c,
    matched: u,
  } = e;
  return {
    fullPath: t,
    params: o,
    query: r,
    hash: n,
    name: i,
    path: a,
    meta: l,
    matched: u,
    redirectedFrom: c,
  };
}
function resolve({ router: e }, t, r, n) {
  var u, d;
  if (r !== "prefix") return e.resolve(t);
  const [i, a] = split(t.path, 1),
    o = `${i}${n}${a === "" ? a : `/${a}`}`,
    l =
      (d = (u = e.options) == null ? void 0 : u.routes) == null
        ? void 0
        : d.find((E) => E.path === o);
  if (l == null) return t;
  const c = assign$1({}, t, l);
  return (c.path = o), e.resolve(c);
}
const RESOLVED_PREFIXED = new Set([
  "prefix_and_default",
  "prefix_except_default",
]);
function prefixable(e) {
  const { currentLocale: t, defaultLocale: r, strategy: n } = e;
  return !(t === r && RESOLVED_PREFIXED.has(n)) && n !== "no_prefix";
}
const DefaultPrefixable = prefixable;
function getRouteBaseName(e, t) {
  const { routesNameSeparator: r } = e.runtimeConfig.public.i18n,
    n = unref(t);
  return n == null || !n.name ? void 0 : getRouteName(n.name).split(r)[0];
}
function localePath(e, t, r) {
  var i;
  if (typeof t == "string" && hasProtocol(t, { acceptRelative: !0 })) return t;
  const n = resolveRoute(e, t, r);
  return n == null
    ? ""
    : ((i = n.redirectedFrom) == null ? void 0 : i.fullPath) || n.fullPath;
}
function localeRoute(e, t, r) {
  return resolveRoute(e, t, r) ?? void 0;
}
function localeLocation(e, t, r) {
  return resolveRoute(e, t, r) ?? void 0;
}
function resolveRoute(e, t, r) {
  const { router: n, i18n: i } = e,
    a = r || getLocale(i),
    {
      defaultLocale: o,
      strategy: l,
      trailingSlash: c,
    } = e.runtimeConfig.public.i18n,
    u = extendPrefixable(e.runtimeConfig);
  let d;
  if (isString(t))
    if (t[0] === "/") {
      const { pathname: P, search: R, hash: T } = parsePath(t),
        M = parseQuery$1(R);
      d = { path: P, query: M, hash: T };
    } else d = { name: t };
  else d = t;
  let E = assign$1({}, d);
  if (((P) => "path" in P && !!P.path && !("name" in P))(E)) {
    const P = resolve(e, E, l, a),
      R = getRouteBaseName(e, P);
    isString(R)
      ? ((E = {
          name: getLocaleRouteName(R, a, e.runtimeConfig.public.i18n),
          params: P.params,
          query: P.query,
          hash: P.hash,
        }),
        (E.state = P.state))
      : (u({ currentLocale: a, defaultLocale: o, strategy: l }) &&
          (E.path = `/${a}${E.path}`),
        (E.path = c
          ? withTrailingSlash(E.path, !0)
          : withoutTrailingSlash(E.path, !0)));
  } else
    !E.name &&
      !("path" in E) &&
      (E.name = getRouteBaseName(e, n.currentRoute.value)),
      (E.name = getLocaleRouteName(E.name, a, e.runtimeConfig.public.i18n));
  try {
    const P = n.resolve(E);
    return P.name ? P : n.resolve(t);
  } catch (P) {
    if (typeof P == "object" && "type" in P && P.type === 1) return null;
  }
}
const DefaultSwitchLocalePathIntercepter = (e) => e;
function getLocalizableMetaFromDynamicParams(e, t) {
  var n;
  if (e.runtimeConfig.public.i18n.experimental.switchLocalePathLinkSSR)
    return unref(e.metaState.value);
  const r = t.meta || {};
  return (
    ((n = unref(r)) == null ? void 0 : n[DEFAULT_DYNAMIC_PARAMS_KEY]) || {}
  );
}
function switchLocalePath(e, t, r) {
  const n = r ?? e.router.currentRoute.value,
    i = getRouteBaseName(e, n);
  if (!i) return "";
  const a = extendSwitchLocalePathIntercepter(e.runtimeConfig),
    o = routeToObject(n),
    l = getLocalizableMetaFromDynamicParams(e, n)[t],
    c = { ...o, name: i, params: { ...o.params, ...l } },
    u = localePath(e, c, t);
  return a(u, t);
}
function localeHead(
  e,
  {
    addDirAttribute: t = !1,
    addSeoAttributes: r = !0,
    identifierAttribute: n = "hid",
  }
) {
  const { defaultDirection: i } = useRuntimeConfig().public.i18n,
    a = getComposer(e.i18n),
    o = { htmlAttrs: {}, link: [], meta: [] };
  if (unref(a.locales) == null || unref(a.baseUrl) == null) return o;
  const l = getLocale(e.i18n),
    c = getLocales(e.i18n),
    u = getNormalizedLocales(c).find((b) => b.code === l) || { code: l },
    d = u.language,
    E = u.dir || i;
  return (
    t && (o.htmlAttrs.dir = E),
    r &&
      l &&
      unref(a.locales) &&
      (d && (o.htmlAttrs.lang = d),
      o.link.push(
        ...getHreflangLinks(e, unref(c), n),
        ...getCanonicalLink(e, n, r)
      ),
      o.meta.push(
        ...getOgUrl(e, n, r),
        ...getCurrentOgLocale(u, d, n),
        ...getAlternateOgLocales(unref(c), d, n)
      )),
    o
  );
}
function getBaseUrl() {
  const e = useNuxtApp(),
    t = getComposer(e.$i18n);
  return joinURL(unref(t.baseUrl), e.$config.app.baseURL);
}
function getHreflangLinks(e, t, r) {
  const n = getBaseUrl(),
    { defaultLocale: i, strategy: a } = useRuntimeConfig().public.i18n,
    o = [];
  if (a === "no_prefix") return o;
  const l = new Map();
  for (const c of t) {
    const u = c.language;
    if (!u) {
      console.warn(
        "Locale `language` ISO code is required to generate alternate link"
      );
      continue;
    }
    const [d, E] = u.split("-");
    d && E && (c.isCatchallLocale || !l.has(d)) && l.set(d, c), l.set(u, c);
  }
  for (const [c, u] of l.entries()) {
    const d = switchLocalePath(e, u.code);
    d &&
      o.push({
        [r]: `i18n-alt-${c}`,
        rel: "alternate",
        href: toAbsoluteUrl(d, n),
        hreflang: c,
      });
  }
  if (i) {
    const c = switchLocalePath(e, i);
    c &&
      o.push({
        [r]: "i18n-xd",
        rel: "alternate",
        href: toAbsoluteUrl(c, n),
        hreflang: "x-default",
      });
  }
  return o;
}
function getCanonicalUrl(e, t, r) {
  const n = e.router.currentRoute.value,
    i = localeRoute(e, { ...n, path: void 0, name: getRouteBaseName(e, n) });
  if (!i) return "";
  let a = toAbsoluteUrl(i.path, t);
  const o = (isObject$1(r) && r.canonicalQueries) || [],
    l = i.query,
    c = new URLSearchParams();
  for (const d of o)
    if (d in l) {
      const E = l[d];
      isArray$1(E)
        ? E.forEach((b) => c.append(d, b || ""))
        : c.append(d, E || "");
    }
  const u = c.toString();
  return u && (a = `${a}?${u}`), a;
}
function getCanonicalLink(e, t, r) {
  const n = getBaseUrl(),
    i = getCanonicalUrl(e, n, r);
  return i ? [{ [t]: "i18n-can", rel: "canonical", href: i }] : [];
}
function getOgUrl(e, t, r) {
  const n = getBaseUrl(),
    i = getCanonicalUrl(e, n, r);
  return i ? [{ [t]: "i18n-og-url", property: "og:url", content: i }] : [];
}
function getCurrentOgLocale(e, t, r) {
  return !e || !t
    ? []
    : [
        {
          [r]: "i18n-og",
          property: "og:locale",
          content: hypenToUnderscore(t),
        },
      ];
}
function getAlternateOgLocales(e, t, r) {
  return e
    .filter((i) => i.language && i.language !== t)
    .map((i) => ({
      [r]: `i18n-og-alt-${i.language}`,
      property: "og:locale:alternate",
      content: hypenToUnderscore(i.language),
    }));
}
function hypenToUnderscore(e) {
  return (e || "").replace(/-/g, "_");
}
function toAbsoluteUrl(e, t) {
  return e.match(/^https?:\/\//) ? e : joinURL(t, e);
}
function createLocaleFromRouteGetter() {
  const { routesNameSeparator: e, defaultLocaleRouteNameSuffix: t } =
      useRuntimeConfig().public.i18n,
    r = `(${localeCodes.join("|")})`,
    n = `(?:${e}${t})?`,
    i = new RegExp(`${e}${r}${n}$`, "i"),
    a = getLocalesRegex(localeCodes);
  return (l) => {
    if (isObject$1(l)) {
      if (l.name) {
        const u = (isString(l.name) ? l.name : l.name.toString()).match(i);
        if (u && u.length > 1) return u[1];
      } else if (l.path) {
        const c = l.path.match(a);
        if (c && c.length > 1) return c[1];
      }
    } else if (isString(l)) {
      const c = l.match(a);
      if (c && c.length > 1) return c[1];
    }
    return "";
  };
}
function setCookieLocale(e, t) {
  return callVueI18nInterfaces(e, "setLocaleCookie", t);
}
function mergeLocaleMessage(e, t, r) {
  return callVueI18nInterfaces(e, "mergeLocaleMessage", t, r);
}
async function onBeforeLanguageSwitch(e, t, r, n, i) {
  return callVueI18nInterfaces(e, "onBeforeLanguageSwitch", t, r, n, i);
}
function onLanguageSwitched(e, t, r) {
  return callVueI18nInterfaces(e, "onLanguageSwitched", t, r);
}
function initCommonComposableOptions(e) {
  return {
    i18n: e ?? useNuxtApp().$i18n,
    router: useRouter$1(),
    runtimeConfig: useRuntimeConfig(),
    metaState: useState("nuxt-i18n-meta", () => ({})),
  };
}
async function loadAndSetLocale(e, t, r, n = !1) {
  const { differentDomains: i, skipSettingLocaleOnNavigate: a, lazy: o } = r,
    l = runtimeDetectBrowserLanguage(r),
    c = useNuxtApp(),
    u = getLocale(t),
    d = getLocaleCodes(t);
  function E(P = u) {
    l === !1 || !l.useCookie || a || setCookieLocale(t, P);
  }
  if (!e || (!n && i) || u === e) return E(), !1;
  const b = await onBeforeLanguageSwitch(t, u, e, n, c);
  if (b && d.includes(b)) {
    if (u === b) return E(), !1;
    e = b;
  }
  if (o) {
    const P = getVueI18nPropertyValue(t, "fallbackLocale"),
      R = (T, M) => mergeLocaleMessage(t, T, M);
    if (P) {
      const T = makeFallbackLocaleCodes(P, [e]);
      await Promise.all(T.map((M) => loadLocale(M, localeLoaders, R)));
    }
    await loadLocale(e, localeLoaders, R);
  }
  return a
    ? !1
    : (E(e), setLocale(t, e), await onLanguageSwitched(t, u, e), !0);
}
function createLogger(e) {
  return { log: console.log.bind(console, `${e}:`) };
}
function detectLocale(e, t, r, n, i) {
  const {
      strategy: a,
      defaultLocale: o,
      differentDomains: l,
      multiDomainLocales: c,
    } = i,
    { localeCookie: u } = n,
    d = runtimeDetectBrowserLanguage(i);
  createLogger("detectLocale");
  const E = isFunction(r) ? r() : r,
    b = detectBrowserLanguage(e, n, E);
  if (b.reason === DetectFailure.SSG_IGNORE) return E;
  if (b.locale && b.from != null) return b.locale;
  let P = "";
  l || c
    ? P || (P = getLocaleDomain(normalizedLocales, a, e))
    : a !== "no_prefix" && (P || (P = t(e)));
  const R = d && d.useCookie && u;
  return P || (P = R || E || o || ""), P;
}
function detectRedirect({
  route: e,
  targetLocale: t,
  routeLocaleGetter: r,
  calledWithRouting: n = !1,
}) {
  const i = useNuxtApp(),
    a = initCommonComposableOptions(),
    { strategy: o, differentDomains: l } = a.runtimeConfig.public.i18n;
  let c = "";
  const { fullPath: u } = e.to;
  if (!l && (n || o !== "no_prefix") && r(e.to) !== t) {
    const d = i.$switchLocalePath(t) || i.$localePath(u, t);
    isString(d) &&
      d &&
      !isEqual$2(d, u) &&
      !d.startsWith("//") &&
      (c = e.from && e.from.fullPath === d ? "" : d);
  }
  if ((l || isSSG) && r(e.to) !== t) {
    const d = switchLocalePath(a, t, e.to);
    isString(d) && d && !isEqual$2(d, u) && !d.startsWith("//") && (c = d);
  }
  return c;
}
function isRootRedirectOptions(e) {
  return isObject$1(e) && "path" in e && "statusCode" in e;
}
const useRedirectState = () =>
  useState(NUXT_I18N_MODULE_ID + ":redirect", () => "");
function _navigate(e, t) {
  return navigateTo(e, { redirectCode: t });
}
async function navigate(e, { status: t = 302, enableNavigate: r = !1 } = {}) {
  const { nuxtApp: n, i18n: i, locale: a, route: o } = e,
    {
      rootRedirect: l,
      differentDomains: c,
      multiDomainLocales: u,
      skipSettingLocaleOnNavigate: d,
      configLocales: E,
      strategy: b,
    } = n.$config.public.i18n;
  let { redirectPath: P } = e;
  if (o.path === "/" && l)
    return (
      isString(l)
        ? (P = "/" + l)
        : isRootRedirectOptions(l) && ((P = "/" + l.path), (t = l.statusCode)),
      (P = n.$localePath(P, a)),
      _navigate(P, t)
    );
  if (
    !(
      d &&
      ((i.__pendingLocale = a),
      (i.__pendingLocalePromise = new Promise((R) => {
        i.__resolvePendingLocalePromise = R;
      })),
      !r)
    )
  ) {
    if (u && b === "prefix_except_default") {
      const R = getHost(),
        T = E.find((x) => {
          var k;
          return typeof x != "string"
            ? (k = x.defaultForDomains) == null
              ? void 0
              : k.find((S) => S === R)
            : !1;
        }),
        M = typeof T != "string" ? (T == null ? void 0 : T.code) : void 0;
      if (o.path.startsWith(`/${M}`))
        return _navigate(o.path.replace(`/${M}`, ""), t);
      if (!o.path.startsWith(`/${a}`) && a !== M) {
        const k = createLocaleFromRouteGetter()(o.path);
        return _navigate(
          k !== ""
            ? `/${a + o.path.replace(`/${k}`, "")}`
            : `/${a + (o.path === "/" ? "" : o.path)}`,
          t
        );
      } else if (P && o.path !== P) return _navigate(P, t);
      return;
    }
    if (c) {
      const R = useRedirectState();
      R.value && R.value !== P && ((R.value = ""), window.location.assign(P));
    } else if (P) return _navigate(P, t);
  }
}
function injectNuxtHelpers(e, t) {
  defineGetter(e, "$i18n", getI18nTarget(t)),
    defineGetter(e, "$getRouteBaseName", wrapComposable(getRouteBaseName)),
    defineGetter(e, "$localePath", wrapComposable(localePath)),
    defineGetter(e, "$localeRoute", wrapComposable(localeRoute)),
    defineGetter(e, "$switchLocalePath", wrapComposable(switchLocalePath)),
    defineGetter(e, "$localeHead", wrapComposable(localeHead));
}
function extendPrefixable(e = useRuntimeConfig()) {
  return (t) => DefaultPrefixable(t) && !e.public.i18n.differentDomains;
}
function extendSwitchLocalePathIntercepter(e = useRuntimeConfig()) {
  return (t, r) => {
    if (e.public.i18n.differentDomains) {
      const n = getDomainFromLocale(r);
      return n ? joinURL(n, t) : t;
    } else return DefaultSwitchLocalePathIntercepter(t);
  };
}
function extendBaseUrl() {
  return () => {
    const e = useNuxtApp(),
      {
        baseUrl: t,
        defaultLocale: r,
        differentDomains: n,
      } = e.$config.public.i18n;
    if (isFunction(t)) return t(e);
    const i = isFunction(r) ? r() : r;
    if (n && i) {
      const a = getDomainFromLocale(i);
      if (a) return a;
    }
    return t;
  };
}
function formatMessage(e) {
  return NUXT_I18N_MODULE_ID + " " + e;
}
function callVueI18nInterfaces(e, t, ...r) {
  const n = getI18nTarget(e),
    [i, a] = [n, n[t]];
  return Reflect.apply(a, i, [...r]);
}
function getVueI18nPropertyValue(e, t) {
  const r = getI18nTarget(e);
  return unref(r[t]);
}
function defineGetter(e, t, r) {
  Object.defineProperty(e, t, { get: () => r });
}
function wrapComposable(e, t = initCommonComposableOptions()) {
  return (...r) => e(t, ...r);
}
function getBrowserLocale() {
  let e;
  return (
    navigator.languages &&
      (e = findBrowserLocale(normalizedLocales, navigator.languages)),
    e
  );
}
function getI18nCookie() {
  const e = runtimeDetectBrowserLanguage(),
    t = (e && e.cookieKey) || DEFAULT_COOKIE_KEY,
    r = new Date(),
    n = {
      expires: new Date(r.setDate(r.getDate() + 365)),
      path: "/",
      sameSite: e && e.cookieCrossOrigin ? "none" : "lax",
      secure: (e && e.cookieCrossOrigin) || (e && e.cookieSecure),
    };
  return e && e.cookieDomain && (n.domain = e.cookieDomain), useCookie(t, n);
}
function getLocaleCookie(e, t, r) {
  if (t === !1 || !t.useCookie) return;
  const n = e.value ?? void 0;
  if (n != null) {
    if (localeCodes.includes(n)) return n;
    if (r) return (e.value = r), r;
    e.value = void 0;
  }
}
function setLocaleCookie(e, t, r) {
  r === !1 || !r.useCookie || (e.value = t);
}
var DetectFailure = ((e) => (
  (e.NOT_FOUND = "not_found_match"),
  (e.FIRST_ACCESS = "first_access_only"),
  (e.NO_REDIRECT_ROOT = "not_redirect_on_root"),
  (e.NO_REDIRECT_NO_PREFIX = "not_redirect_on_no_prefix"),
  (e.SSG_IGNORE = "detect_ignore_on_ssg"),
  e
))(DetectFailure || {});
const DefaultDetectBrowserLanguageFromResult = { locale: "" };
function detectBrowserLanguage(e, t, r = "") {
  createLogger("detectBrowserLanguage");
  const n = runtimeDetectBrowserLanguage();
  if (!n) return DefaultDetectBrowserLanguageFromResult;
  const { strategy: i } = useRuntimeConfig().public.i18n,
    { ssg: a, callType: o, firstAccess: l, localeCookie: c } = t;
  if (!l)
    return { locale: i === "no_prefix" ? r : "", reason: "first_access_only" };
  const {
      redirectOn: u,
      alwaysRedirect: d,
      useCookie: E,
      fallbackLocale: b,
    } = n,
    P = isString(e) ? e : e.path;
  if (i !== "no_prefix") {
    if (u === "root" && P !== "/")
      return { locale: "", reason: "not_redirect_on_root" };
    if (u === "no prefix" && !d && P.match(getLocalesRegex(localeCodes)))
      return { locale: "", reason: "not_redirect_on_no_prefix" };
  }
  let R;
  const T = (E && c) || void 0;
  E && (R = "cookie");
  const M = getBrowserLocale();
  T || (R = "navigator_or_header");
  const x = T || M,
    k = x || b || "";
  return !x && b && (R = "fallback"), { locale: k, from: R };
}
function getHost() {
  let e;
  return (e = window.location.host), e;
}
function getLocaleDomain(e, t, r) {
  let n = getHost() || "";
  if (n) {
    let i;
    const a = e.filter((o) => {
      if (o && o.domain) {
        let l = o.domain;
        return (
          hasProtocol(o.domain) &&
            (l = o.domain.replace(/(http|https):\/\//, "")),
          l === n
        );
      } else if (Array.isArray(o == null ? void 0 : o.domains))
        return o.domains.includes(n);
      return !1;
    });
    if (a.length === 1) i = a[0];
    else if (a.length > 1)
      if (t === "no_prefix")
        console.warn(
          formatMessage(
            "Multiple matching domains found! This is not supported for no_prefix strategy in combination with differentDomains!"
          )
        ),
          (i = a[0]);
      else {
        if (r) {
          const o = isObject$1(r) ? r.path : isString(r) ? r : "";
          if (o && o !== "") {
            const l = o.match(getLocalesRegex(a.map((c) => c.code)));
            l && l.length > 1 && (i = a.find((c) => c.code === l[1]));
          }
        }
        i ||
          (i = a.find((o) =>
            Array.isArray(o.defaultForDomains)
              ? o.defaultForDomains.includes(n)
              : o.domainDefault
          ));
      }
    if (i) return i.code;
    n = "";
  }
  return n;
}
function getDomainFromLocale(e) {
  var o, l, c, u, d, E;
  const t = useRuntimeConfig();
  useNuxtApp();
  const r = getHost(),
    n = t.public.i18n,
    i = normalizedLocales.find((b) => b.code === e),
    a =
      ((l = (o = n == null ? void 0 : n.locales) == null ? void 0 : o[e]) ==
      null
        ? void 0
        : l.domain) ||
      (i == null ? void 0 : i.domain) ||
      ((d =
        (u = (c = n == null ? void 0 : n.locales) == null ? void 0 : c[e]) ==
        null
          ? void 0
          : u.domains) == null
        ? void 0
        : d.find((b) => b === r)) ||
      ((E = i == null ? void 0 : i.domains) == null
        ? void 0
        : E.find((b) => b === r));
  if (a) {
    if (hasProtocol(a, { strict: !0 })) return a;
    let b;
    return (b = new URL(window.location.origin).protocol), b + "//" + a;
  }
  console.warn(formatMessage("Could not find domain name for locale " + e));
}
const runtimeDetectBrowserLanguage = (e = useRuntimeConfig().public.i18n) =>
  (e == null ? void 0 : e.detectBrowserLanguage) === !1
    ? !1
    : e == null
    ? void 0
    : e.detectBrowserLanguage;
function useLocalePath() {
  return wrapComposable(localePath);
}
function useSwitchLocalePath() {
  return wrapComposable(switchLocalePath);
}
const switch_locale_path_ssr_5csfIgkrBP = defineNuxtPlugin({
  name: "i18n:plugin:switch-locale-path-ssr",
  dependsOn: ["i18n:plugin"],
  setup(e) {
    if (e.$config.public.i18n.experimental.switchLocalePathLinkSSR !== !0)
      return;
    const t = useSwitchLocalePath(),
      r = new RegExp(
        [
          `<!--${SWITCH_LOCALE_PATH_LINK_IDENTIFIER}-\\[(\\w+)\\]-->`,
          ".+?",
          `<!--/${SWITCH_LOCALE_PATH_LINK_IDENTIFIER}-->`,
        ].join(""),
        "g"
      );
    e.hook("app:rendered", (n) => {
      var i;
      ((i = n.renderResult) == null ? void 0 : i.html) != null &&
        (n.renderResult.html = n.renderResult.html.replaceAll(r, (a, o) =>
          a.replace(/href="([^"]+)"/, `href="${encodeURI(t(o ?? ""))}"`)
        ));
    });
  },
});
function extendI18n(
  e,
  {
    locales: t = [],
    localeCodes: r = [],
    baseUrl: n = "",
    hooks: i = {},
    context: a = {},
  } = {}
) {
  const o = effectScope(),
    l = e.install;
  return (
    (e.install = (c, ...u) => {
      const d = isPluginOptions(u[0]) ? assign$1({}, u[0]) : { inject: !0 };
      d.inject == null && (d.inject = !0);
      const E = d.__composerExtend;
      if (
        ((d.__composerExtend = (T) => {
          const M = getComposer(e);
          (T.locales = computed(() => M.locales.value)),
            (T.localeCodes = computed(() => M.localeCodes.value)),
            (T.baseUrl = computed(() => M.baseUrl.value));
          let x;
          return (
            isFunction(E) && (x = Reflect.apply(E, d, [T])),
            () => {
              x && x();
            }
          );
        }),
        e.mode === "legacy")
      ) {
        const T = d.__vueI18nExtend;
        d.__vueI18nExtend = (M) => {
          extendVueI18n(M, i.onExtendVueI18n);
          let x;
          return (
            isFunction(T) && (x = Reflect.apply(T, d, [M])),
            () => {
              x && x();
            }
          );
        };
      }
      (u[0] = d), Reflect.apply(l, e, [c, ...u]);
      const b = getComposer(e);
      o.run(() => {
        extendComposer(b, {
          locales: t,
          localeCodes: r,
          baseUrl: n,
          hooks: i,
          context: a,
        }),
          e.mode === "legacy" &&
            isVueI18n(e.global) &&
            extendVueI18n(e.global, i.onExtendVueI18n);
      });
      const P = c,
        R = e.mode === "composition" ? P.config.globalProperties.$i18n : null;
      if (
        (R && extendExportedGlobal(R, b, i.onExtendExportedGlobal), d.inject)
      ) {
        const T = initCommonComposableOptions(e);
        c.mixin({
          methods: {
            getRouteBaseName: wrapComposable(getRouteBaseName, T),
            resolveRoute: wrapComposable(resolveRoute, T),
            localePath: wrapComposable(localePath, T),
            localeRoute: wrapComposable(localeRoute, T),
            localeLocation: wrapComposable(localeLocation, T),
            switchLocalePath: wrapComposable(switchLocalePath, T),
            localeHead: wrapComposable(localeHead, T),
          },
        });
      }
      if (P.unmount) {
        const T = P.unmount;
        P.unmount = () => {
          o.stop(), T();
        };
      }
    }),
    o
  );
}
function extendComposer(e, t) {
  const { locales: r, localeCodes: n, baseUrl: i, context: a } = t,
    o = ref(r),
    l = ref(n),
    c = ref("");
  (e.locales = computed(() => o.value)),
    (e.localeCodes = computed(() => l.value)),
    (e.baseUrl = computed(() => c.value)),
    inBrowser
      ? watch(
          e.locale,
          () => {
            c.value = resolveBaseUrl(i, a);
          },
          { immediate: !0 }
        )
      : (c.value = resolveBaseUrl(i, a)),
    t.hooks && t.hooks.onExtendComposer && t.hooks.onExtendComposer(e);
}
function extendPropertyDescriptors(e, t, r) {
  const n = [
    {
      locales: {
        get() {
          return e.locales.value;
        },
      },
      localeCodes: {
        get() {
          return e.localeCodes.value;
        },
      },
      baseUrl: {
        get() {
          return e.baseUrl.value;
        },
      },
    },
  ];
  r && n.push(r(e));
  for (const i of n)
    for (const [a, o] of Object.entries(i)) Object.defineProperty(t, a, o);
}
function extendExportedGlobal(e, t, r) {
  extendPropertyDescriptors(t, e, r);
}
function extendVueI18n(e, t) {
  const r = getComposer(e);
  extendPropertyDescriptors(r, e, t);
}
function isPluginOptions(e) {
  return (
    isObject$1(e) &&
    ("inject" in e || "__composerExtend" in e || "__vueI18nExtend" in e)
  );
}
const i18n_sq1MuCrqbC = defineNuxtPlugin({
    name: "i18n:plugin",
    parallel: parallelPlugin,
    async setup(e) {
      let t, r;
      const n = useRoute$1(),
        { vueApp: i } = e,
        a = e,
        o = getHost(),
        {
          configLocales: l,
          defaultLocale: c,
          multiDomainLocales: u,
          strategy: d,
        } = a.$config.public.i18n,
        E = l.some(
          ($) => typeof $ != "string" && Array.isArray($.defaultForDomains)
        );
      let b;
      if (c) b = c;
      else if (E) {
        const $ = l.find((q) =>
          typeof q == "string" || !Array.isArray(q.defaultForDomains)
            ? !1
            : q.defaultForDomains.includes(o ?? "")
        );
        b = ($ == null ? void 0 : $.code) ?? "";
      } else b = "";
      if (u && (d === "prefix_except_default" || d === "prefix_and_default")) {
        const $ = useRouter$1();
        $.getRoutes().forEach((q) => {
          var J;
          if ((J = q.name) != null && J.toString().includes("___default"))
            if (q.name.toString().split("___")[1] !== b) $.removeRoute(q.name);
            else {
              const ee = q.name.toString().replace("___default", "");
              q.name = ee;
            }
        });
      }
      const P = { ...a.$config.public.i18n, defaultLocale: b };
      P.baseUrl = extendBaseUrl();
      const R = runtimeDetectBrowserLanguage(),
        T =
          (([t, r] = executeAsync(() =>
            loadVueI18nOptions(vueI18nConfigs, useNuxtApp())
          )),
          (t = await t),
          r(),
          t);
      (T.messages = T.messages || {}),
        (T.fallbackLocale = T.fallbackLocale ?? !1);
      const M = createLocaleFromRouteGetter(),
        x = ($) => $ || T.locale || "en-US",
        k = getI18nCookie();
      let S = detectLocale(
        n,
        M,
        x(P.defaultLocale),
        {
          ssg: "normal",
          callType: "setup",
          firstAccess: !0,
          localeCookie: getLocaleCookie(k, R, P.defaultLocale),
        },
        P
      );
      (T.messages =
        (([t, r] = executeAsync(() =>
          loadInitialMessages(T.messages, localeLoaders, {
            localeCodes,
            initialLocale: S,
            lazy: P.lazy,
            defaultLocale: P.defaultLocale,
            fallbackLocale: T.fallbackLocale,
          })
        )),
        (t = await t),
        r(),
        t)),
        (S = x(S));
      const A = createI18n({ ...T, locale: S });
      let O = !0;
      const F = ($) => S !== $ && O;
      extendI18n(A, {
        locales: P.configLocales,
        localeCodes,
        baseUrl: P.baseUrl,
        context: a,
        hooks: {
          onExtendComposer($) {
            ($.strategy = P.strategy),
              ($.localeProperties = computed(
                () =>
                  normalizedLocales.find((q) => q.code === $.locale.value) || {
                    code: $.locale.value,
                  }
              )),
              ($.setLocale = async (q) => {
                const J = F(q);
                (await loadAndSetLocale(q, A, P, J)) && J && (O = !1);
                const ee = await a.runWithContext(() =>
                  detectRedirect({
                    route: { to: n },
                    targetLocale: q,
                    routeLocaleGetter: M,
                  })
                );
                await a.runWithContext(
                  async () =>
                    await navigate(
                      {
                        nuxtApp: a,
                        i18n: A,
                        redirectPath: ee,
                        locale: q,
                        route: n,
                      },
                      { enableNavigate: !0 }
                    )
                );
              }),
              ($.loadLocaleMessages = async (q) => {
                await loadLocale(q, localeLoaders, (K, ee) =>
                  mergeLocaleMessage(A, K, ee)
                );
              }),
              ($.differentDomains = P.differentDomains),
              ($.defaultLocale = P.defaultLocale),
              ($.getBrowserLocale = () => getBrowserLocale()),
              ($.getLocaleCookie = () =>
                getLocaleCookie(k, R, P.defaultLocale)),
              ($.setLocaleCookie = (q) => setLocaleCookie(k, q, R)),
              ($.onBeforeLanguageSwitch = (q, J, K, ee) =>
                e.callHook("i18n:beforeLocaleSwitch", {
                  oldLocale: q,
                  newLocale: J,
                  initialSetup: K,
                  context: ee,
                })),
              ($.onLanguageSwitched = (q, J) =>
                e.callHook("i18n:localeSwitched", {
                  oldLocale: q,
                  newLocale: J,
                })),
              ($.finalizePendingLocaleChange = async () => {
                A.__pendingLocale &&
                  (setLocale(A, A.__pendingLocale),
                  A.__resolvePendingLocalePromise &&
                    (await A.__resolvePendingLocalePromise()),
                  (A.__pendingLocale = void 0));
              }),
              ($.waitForPendingLocaleChange = async () => {
                A.__pendingLocale &&
                  A.__pendingLocalePromise &&
                  (await A.__pendingLocalePromise);
              });
          },
          onExtendExportedGlobal($) {
            return {
              strategy: {
                get() {
                  return $.strategy;
                },
              },
              localeProperties: {
                get() {
                  return $.localeProperties.value;
                },
              },
              setLocale: {
                get() {
                  return async (q) => Reflect.apply($.setLocale, $, [q]);
                },
              },
              differentDomains: {
                get() {
                  return $.differentDomains;
                },
              },
              defaultLocale: {
                get() {
                  return $.defaultLocale;
                },
              },
              getBrowserLocale: {
                get() {
                  return () => Reflect.apply($.getBrowserLocale, $, []);
                },
              },
              getLocaleCookie: {
                get() {
                  return () => Reflect.apply($.getLocaleCookie, $, []);
                },
              },
              setLocaleCookie: {
                get() {
                  return (q) => Reflect.apply($.setLocaleCookie, $, [q]);
                },
              },
              onBeforeLanguageSwitch: {
                get() {
                  return (q, J, K, ee) =>
                    Reflect.apply($.onBeforeLanguageSwitch, $, [q, J, K, ee]);
                },
              },
              onLanguageSwitched: {
                get() {
                  return (q, J) =>
                    Reflect.apply($.onLanguageSwitched, $, [q, J]);
                },
              },
              finalizePendingLocaleChange: {
                get() {
                  return () =>
                    Reflect.apply($.finalizePendingLocaleChange, $, []);
                },
              },
              waitForPendingLocaleChange: {
                get() {
                  return () =>
                    Reflect.apply($.waitForPendingLocaleChange, $, []);
                },
              },
            };
          },
          onExtendVueI18n($) {
            return {
              strategy: {
                get() {
                  return $.strategy;
                },
              },
              localeProperties: {
                get() {
                  return $.localeProperties.value;
                },
              },
              setLocale: {
                get() {
                  return async (q) => Reflect.apply($.setLocale, $, [q]);
                },
              },
              loadLocaleMessages: {
                get() {
                  return async (q) =>
                    Reflect.apply($.loadLocaleMessages, $, [q]);
                },
              },
              differentDomains: {
                get() {
                  return $.differentDomains;
                },
              },
              defaultLocale: {
                get() {
                  return $.defaultLocale;
                },
              },
              getBrowserLocale: {
                get() {
                  return () => Reflect.apply($.getBrowserLocale, $, []);
                },
              },
              getLocaleCookie: {
                get() {
                  return () => Reflect.apply($.getLocaleCookie, $, []);
                },
              },
              setLocaleCookie: {
                get() {
                  return (q) => Reflect.apply($.setLocaleCookie, $, [q]);
                },
              },
              onBeforeLanguageSwitch: {
                get() {
                  return (q, J, K, ee) =>
                    Reflect.apply($.onBeforeLanguageSwitch, $, [q, J, K, ee]);
                },
              },
              onLanguageSwitched: {
                get() {
                  return (q, J) =>
                    Reflect.apply($.onLanguageSwitched, $, [q, J]);
                },
              },
              finalizePendingLocaleChange: {
                get() {
                  return () =>
                    Reflect.apply($.finalizePendingLocaleChange, $, []);
                },
              },
              waitForPendingLocaleChange: {
                get() {
                  return () =>
                    Reflect.apply($.waitForPendingLocaleChange, $, []);
                },
              },
            };
          },
        },
      });
      const D = {
        __composerExtend: ($) => {
          const q = getComposer(A);
          return (
            ($.strategy = q.strategy),
            ($.localeProperties = computed(() => q.localeProperties.value)),
            ($.setLocale = q.setLocale),
            ($.differentDomains = q.differentDomains),
            ($.getBrowserLocale = q.getBrowserLocale),
            ($.getLocaleCookie = q.getLocaleCookie),
            ($.setLocaleCookie = q.setLocaleCookie),
            ($.onBeforeLanguageSwitch = q.onBeforeLanguageSwitch),
            ($.onLanguageSwitched = q.onLanguageSwitched),
            ($.finalizePendingLocaleChange = q.finalizePendingLocaleChange),
            ($.waitForPendingLocaleChange = q.waitForPendingLocaleChange),
            () => {}
          );
        },
      };
      i.use(A, D), injectNuxtHelpers(a, A);
      let H = 0;
      addRouteMiddleware(
        "locale-changing",
        async ($, q) => {
          let J, K;
          const ee = detectLocale(
              $,
              M,
              () => getLocale(A) || x(P.defaultLocale),
              {
                ssg: "normal",
                callType: "routing",
                firstAccess: H === 0,
                localeCookie: getLocaleCookie(k, R, P.defaultLocale),
              },
              P
            ),
            le = F(ee);
          (([J, K] = executeAsync(() => loadAndSetLocale(ee, A, P, le))),
          (J = await J),
          K(),
          J) &&
            le &&
            (O = !1);
          const B =
            (([J, K] = executeAsync(() =>
              a.runWithContext(() =>
                detectRedirect({
                  route: { to: $, from: q },
                  targetLocale: ee,
                  routeLocaleGetter: P.strategy === "no_prefix" ? () => ee : M,
                  calledWithRouting: !0,
                })
              )
            )),
            (J = await J),
            K(),
            J);
          return (
            H++,
            ([J, K] = executeAsync(() =>
              a.runWithContext(async () =>
                navigate({
                  nuxtApp: a,
                  i18n: A,
                  redirectPath: B,
                  locale: ee,
                  route: $,
                })
              )
            )),
            (J = await J),
            K(),
            J
          );
        },
        { global: !0 }
      );
    },
  }),
  plugin = defineNuxtPlugin(() => ({
    provide: reactive({
      ssrClientHints: {
        firstRequest: !1,
        prefersColorSchemeAvailable: !1,
        prefersReducedMotionAvailable: !1,
        viewportHeightAvailable: !1,
        viewportWidthAvailable: !1,
      },
    }),
  }));
function getDefaultExportFromCjs(e) {
  return e && e.__esModule && Object.prototype.hasOwnProperty.call(e, "default")
    ? e.default
    : e;
}
function getAugmentedNamespace(e) {
  if (e.__esModule) return e;
  var t = e.default;
  if (typeof t == "function") {
    var r = function n() {
      return this instanceof n
        ? Reflect.construct(t, arguments, this.constructor)
        : t.apply(this, arguments);
    };
    r.prototype = t.prototype;
  } else r = {};
  return (
    Object.defineProperty(r, "__esModule", { value: !0 }),
    Object.keys(e).forEach(function (n) {
      var i = Object.getOwnPropertyDescriptor(e, n);
      Object.defineProperty(
        r,
        n,
        i.get
          ? i
          : {
              enumerable: !0,
              get: function () {
                return e[n];
              },
            }
      );
    }),
    r
  );
}
var ReCaptchaVuePlugin = {},
  ReCaptcha = {},
  ReCaptchaLoader = {},
  ReCaptchaInstance = {},
  hasRequiredReCaptchaInstance;
function requireReCaptchaInstance() {
  if (hasRequiredReCaptchaInstance) return ReCaptchaInstance;
  hasRequiredReCaptchaInstance = 1;
  var e =
      ReCaptchaInstance.__awaiter ||
      function (n, i, a, o) {
        function l(c) {
          return c instanceof a
            ? c
            : new a(function (u) {
                u(c);
              });
        }
        return new (a || (a = Promise))(function (c, u) {
          function d(P) {
            try {
              b(o.next(P));
            } catch (R) {
              u(R);
            }
          }
          function E(P) {
            try {
              b(o.throw(P));
            } catch (R) {
              u(R);
            }
          }
          function b(P) {
            P.done ? c(P.value) : l(P.value).then(d, E);
          }
          b((o = o.apply(n, i || [])).next());
        });
      },
    t =
      ReCaptchaInstance.__generator ||
      function (n, i) {
        var a = {
            label: 0,
            sent: function () {
              if (c[0] & 1) throw c[1];
              return c[1];
            },
            trys: [],
            ops: [],
          },
          o,
          l,
          c,
          u;
        return (
          (u = { next: d(0), throw: d(1), return: d(2) }),
          typeof Symbol == "function" &&
            (u[Symbol.iterator] = function () {
              return this;
            }),
          u
        );
        function d(b) {
          return function (P) {
            return E([b, P]);
          };
        }
        function E(b) {
          if (o) throw new TypeError("Generator is already executing.");
          for (; u && ((u = 0), b[0] && (a = 0)), a; )
            try {
              if (
                ((o = 1),
                l &&
                  (c =
                    b[0] & 2
                      ? l.return
                      : b[0]
                      ? l.throw || ((c = l.return) && c.call(l), 0)
                      : l.next) &&
                  !(c = c.call(l, b[1])).done)
              )
                return c;
              switch (((l = 0), c && (b = [b[0] & 2, c.value]), b[0])) {
                case 0:
                case 1:
                  c = b;
                  break;
                case 4:
                  return a.label++, { value: b[1], done: !1 };
                case 5:
                  a.label++, (l = b[1]), (b = [0]);
                  continue;
                case 7:
                  (b = a.ops.pop()), a.trys.pop();
                  continue;
                default:
                  if (
                    ((c = a.trys),
                    !(c = c.length > 0 && c[c.length - 1]) &&
                      (b[0] === 6 || b[0] === 2))
                  ) {
                    a = 0;
                    continue;
                  }
                  if (b[0] === 3 && (!c || (b[1] > c[0] && b[1] < c[3]))) {
                    a.label = b[1];
                    break;
                  }
                  if (b[0] === 6 && a.label < c[1]) {
                    (a.label = c[1]), (c = b);
                    break;
                  }
                  if (c && a.label < c[2]) {
                    (a.label = c[2]), a.ops.push(b);
                    break;
                  }
                  c[2] && a.ops.pop(), a.trys.pop();
                  continue;
              }
              b = i.call(n, a);
            } catch (P) {
              (b = [6, P]), (l = 0);
            } finally {
              o = c = 0;
            }
          if (b[0] & 5) throw b[1];
          return { value: b[0] ? b[1] : void 0, done: !0 };
        }
      };
  Object.defineProperty(ReCaptchaInstance, "__esModule", { value: !0 }),
    (ReCaptchaInstance.ReCaptchaInstance = void 0);
  var r = (function () {
    function n(i, a, o) {
      (this.siteKey = i),
        (this.recaptchaID = a),
        (this.recaptcha = o),
        (this.styleContainer = null);
    }
    return (
      (n.prototype.execute = function (i) {
        return e(this, void 0, void 0, function () {
          var a;
          return t(this, function (o) {
            switch (o.label) {
              case 0:
                return this.recaptcha.enterprise
                  ? [
                      4,
                      this.recaptcha.enterprise.execute(this.recaptchaID, {
                        action: i,
                      }),
                    ]
                  : [3, 2];
              case 1:
                return (a = o.sent()), [3, 4];
              case 2:
                return [
                  4,
                  this.recaptcha.execute(this.recaptchaID, { action: i }),
                ];
              case 3:
                (a = o.sent()), (o.label = 4);
              case 4:
                return [2, a];
            }
          });
        });
      }),
      (n.prototype.getSiteKey = function () {
        return this.siteKey;
      }),
      (n.prototype.hideBadge = function () {
        this.styleContainer === null &&
          ((this.styleContainer = document.createElement("style")),
          (this.styleContainer.innerHTML =
            ".grecaptcha-badge{visibility:hidden !important;}"),
          document.head.appendChild(this.styleContainer));
      }),
      (n.prototype.showBadge = function () {
        this.styleContainer !== null &&
          (document.head.removeChild(this.styleContainer),
          (this.styleContainer = null));
      }),
      n
    );
  })();
  return (ReCaptchaInstance.ReCaptchaInstance = r), ReCaptchaInstance;
}
var hasRequiredReCaptchaLoader;
function requireReCaptchaLoader() {
  if (hasRequiredReCaptchaLoader) return ReCaptchaLoader;
  hasRequiredReCaptchaLoader = 1;
  var e =
    ReCaptchaLoader.__assign ||
    function () {
      return (
        (e =
          Object.assign ||
          function (i) {
            for (var a, o = 1, l = arguments.length; o < l; o++) {
              a = arguments[o];
              for (var c in a)
                Object.prototype.hasOwnProperty.call(a, c) && (i[c] = a[c]);
            }
            return i;
          }),
        e.apply(this, arguments)
      );
    };
  Object.defineProperty(ReCaptchaLoader, "__esModule", { value: !0 }),
    (ReCaptchaLoader.getInstance = ReCaptchaLoader.load = void 0);
  var t = requireReCaptchaInstance(),
    r;
  (function (i) {
    (i[(i.NOT_LOADED = 0)] = "NOT_LOADED"),
      (i[(i.LOADING = 1)] = "LOADING"),
      (i[(i.LOADED = 2)] = "LOADED");
  })(r || (r = {}));
  var n = (function () {
    function i() {}
    return (
      (i.load = function (a, o) {
        if ((o === void 0 && (o = {}), typeof document > "u"))
          return Promise.reject(
            new Error("This is a library for the browser!")
          );
        if (i.getLoadingState() === r.LOADED)
          return i.instance.getSiteKey() === a
            ? Promise.resolve(i.instance)
            : Promise.reject(
                new Error("reCAPTCHA already loaded with different site key!")
              );
        if (i.getLoadingState() === r.LOADING)
          return a !== i.instanceSiteKey
            ? Promise.reject(
                new Error("reCAPTCHA already loaded with different site key!")
              )
            : new Promise(function (c, u) {
                i.successfulLoadingConsumers.push(function (d) {
                  return c(d);
                }),
                  i.errorLoadingRunnable.push(function (d) {
                    return u(d);
                  });
              });
        (i.instanceSiteKey = a), i.setLoadingState(r.LOADING);
        var l = new i();
        return new Promise(function (c, u) {
          l.loadScript(
            a,
            o.useRecaptchaNet || !1,
            o.useEnterprise || !1,
            o.renderParameters ? o.renderParameters : {},
            o.customUrl
          )
            .then(function () {
              i.setLoadingState(r.LOADED);
              var d = l.doExplicitRender(
                  grecaptcha,
                  a,
                  o.explicitRenderParameters ? o.explicitRenderParameters : {},
                  o.useEnterprise || !1
                ),
                E = new t.ReCaptchaInstance(a, d, grecaptcha);
              i.successfulLoadingConsumers.forEach(function (b) {
                return b(E);
              }),
                (i.successfulLoadingConsumers = []),
                o.autoHideBadge && E.hideBadge(),
                (i.instance = E),
                c(E);
            })
            .catch(function (d) {
              i.errorLoadingRunnable.forEach(function (E) {
                return E(d);
              }),
                (i.errorLoadingRunnable = []),
                u(d);
            });
        });
      }),
      (i.getInstance = function () {
        return i.instance;
      }),
      (i.setLoadingState = function (a) {
        i.loadingState = a;
      }),
      (i.getLoadingState = function () {
        return i.loadingState === null ? r.NOT_LOADED : i.loadingState;
      }),
      (i.prototype.loadScript = function (a, o, l, c, u) {
        var d = this;
        o === void 0 && (o = !1),
          l === void 0 && (l = !1),
          c === void 0 && (c = {}),
          u === void 0 && (u = "");
        var E = document.createElement("script");
        E.setAttribute("recaptcha-v3-script", ""),
          E.setAttribute("async", ""),
          E.setAttribute("defer", "");
        var b = "";
        o
          ? l
            ? (b = "")
            : (b = "")
          : l && (b = ""),
          u && (b = u),
          c.render && (c.render = void 0);
        var P = this.buildQueryString(c);
        return (
          (E.src = "https://www.google.com/recaptcha/api.js?render=explicit"),
          new Promise(function (R, T) {
            E.addEventListener(
              "load",
              d.waitForScriptToLoad(function () {
                R(E);
              }, l),
              !1
            ),
              (E.onerror = function (M) {
                i.setLoadingState(r.NOT_LOADED), T(M);
              }),
              document.head.appendChild(E);
          })
        );
      }),
      (i.prototype.buildQueryString = function (a) {
        var o = Object.keys(a);
        return o.length < 1
          ? ""
          : "&" +
              Object.keys(a)
                .filter(function (l) {
                  return !!a[l];
                })
                .map(function (l) {
                  return l + "=" + a[l];
                })
                .join("&");
      }),
      (i.prototype.waitForScriptToLoad = function (a, o) {
        var l = this;
        return function () {
          window.grecaptcha === void 0
            ? setTimeout(function () {
                l.waitForScriptToLoad(a, o);
              }, i.SCRIPT_LOAD_DELAY)
            : o
            ? window.grecaptcha.enterprise.ready(function () {
                a();
              })
            : window.grecaptcha.ready(function () {
                a();
              });
        };
      }),
      (i.prototype.doExplicitRender = function (a, o, l, c) {
        var u = e({ sitekey: o }, l);
        return l.container
          ? c
            ? a.enterprise.render(l.container, u)
            : a.render(l.container, u)
          : c
          ? a.enterprise.render(u)
          : a.render(u);
      }),
      (i.loadingState = null),
      (i.instance = null),
      (i.instanceSiteKey = null),
      (i.successfulLoadingConsumers = []),
      (i.errorLoadingRunnable = []),
      (i.SCRIPT_LOAD_DELAY = 25),
      i
    );
  })();
  return (
    (ReCaptchaLoader.load = n.load),
    (ReCaptchaLoader.getInstance = n.getInstance),
    ReCaptchaLoader
  );
}
var hasRequiredReCaptcha;
function requireReCaptcha() {
  return (
    hasRequiredReCaptcha ||
      ((hasRequiredReCaptcha = 1),
      (function (e) {
        Object.defineProperty(e, "__esModule", { value: !0 }),
          (e.ReCaptchaInstance = e.getInstance = e.load = void 0);
        var t = requireReCaptchaLoader();
        Object.defineProperty(e, "load", {
          enumerable: !0,
          get: function () {
            return t.load;
          },
        }),
          Object.defineProperty(e, "getInstance", {
            enumerable: !0,
            get: function () {
              return t.getInstance;
            },
          });
        var r = requireReCaptchaInstance();
        Object.defineProperty(e, "ReCaptchaInstance", {
          enumerable: !0,
          get: function () {
            return r.ReCaptchaInstance;
          },
        });
      })(ReCaptcha)),
    ReCaptcha
  );
}
const require$$1 = getAugmentedNamespace(vue_runtime_esmBundler);
var hasRequiredReCaptchaVuePlugin;
function requireReCaptchaVuePlugin() {
  if (hasRequiredReCaptchaVuePlugin) return ReCaptchaVuePlugin;
  hasRequiredReCaptchaVuePlugin = 1;
  var e =
      ReCaptchaVuePlugin.__awaiter ||
      function (d, E, b, P) {
        function R(T) {
          return T instanceof b
            ? T
            : new b(function (M) {
                M(T);
              });
        }
        return new (b || (b = Promise))(function (T, M) {
          function x(A) {
            try {
              S(P.next(A));
            } catch (O) {
              M(O);
            }
          }
          function k(A) {
            try {
              S(P.throw(A));
            } catch (O) {
              M(O);
            }
          }
          function S(A) {
            A.done ? T(A.value) : R(A.value).then(x, k);
          }
          S((P = P.apply(d, E || [])).next());
        });
      },
    t =
      ReCaptchaVuePlugin.__generator ||
      function (d, E) {
        var b = {
            label: 0,
            sent: function () {
              if (T[0] & 1) throw T[1];
              return T[1];
            },
            trys: [],
            ops: [],
          },
          P,
          R,
          T,
          M;
        return (
          (M = { next: x(0), throw: x(1), return: x(2) }),
          typeof Symbol == "function" &&
            (M[Symbol.iterator] = function () {
              return this;
            }),
          M
        );
        function x(S) {
          return function (A) {
            return k([S, A]);
          };
        }
        function k(S) {
          if (P) throw new TypeError("Generator is already executing.");
          for (; b; )
            try {
              if (
                ((P = 1),
                R &&
                  (T =
                    S[0] & 2
                      ? R.return
                      : S[0]
                      ? R.throw || ((T = R.return) && T.call(R), 0)
                      : R.next) &&
                  !(T = T.call(R, S[1])).done)
              )
                return T;
              switch (((R = 0), T && (S = [S[0] & 2, T.value]), S[0])) {
                case 0:
                case 1:
                  T = S;
                  break;
                case 4:
                  return b.label++, { value: S[1], done: !1 };
                case 5:
                  b.label++, (R = S[1]), (S = [0]);
                  continue;
                case 7:
                  (S = b.ops.pop()), b.trys.pop();
                  continue;
                default:
                  if (
                    ((T = b.trys),
                    !(T = T.length > 0 && T[T.length - 1]) &&
                      (S[0] === 6 || S[0] === 2))
                  ) {
                    b = 0;
                    continue;
                  }
                  if (S[0] === 3 && (!T || (S[1] > T[0] && S[1] < T[3]))) {
                    b.label = S[1];
                    break;
                  }
                  if (S[0] === 6 && b.label < T[1]) {
                    (b.label = T[1]), (T = S);
                    break;
                  }
                  if (T && b.label < T[2]) {
                    (b.label = T[2]), b.ops.push(S);
                    break;
                  }
                  T[2] && b.ops.pop(), b.trys.pop();
                  continue;
              }
              S = E.call(d, b);
            } catch (A) {
              (S = [6, A]), (R = 0);
            } finally {
              P = T = 0;
            }
          if (S[0] & 5) throw S[1];
          return { value: S[0] ? S[1] : void 0, done: !0 };
        }
      };
  Object.defineProperty(ReCaptchaVuePlugin, "__esModule", { value: !0 }),
    (ReCaptchaVuePlugin.useReCaptcha = ReCaptchaVuePlugin.VueReCaptcha =
      void 0);
  var r = requireReCaptcha(),
    n = require$$1,
    i = Symbol("VueReCaptchaInjectKey"),
    a = { loadedWaiters: [], error: null };
  ReCaptchaVuePlugin.VueReCaptcha = {
    install: function (d, E) {
      var b = n.ref(!1),
        P = n.ref(void 0);
      (d.config.globalProperties.$recaptchaLoaded = c(b)),
        l(E)
          .then(function (R) {
            (b.value = !0),
              (P.value = R),
              (d.config.globalProperties.$recaptcha = u(P)),
              (d.config.globalProperties.$recaptchaInstance = P),
              a.loadedWaiters.forEach(function (T) {
                return T.resolve(!0);
              });
          })
          .catch(function (R) {
            (a.error = R),
              a.loadedWaiters.forEach(function (T) {
                return T.reject(R);
              });
          }),
        d.provide(i, {
          instance: P,
          isLoaded: b,
          executeRecaptcha: u(P),
          recaptchaLoaded: c(b),
        });
    },
  };
  function o() {
    return n.inject(i);
  }
  ReCaptchaVuePlugin.useReCaptcha = o;
  function l(d) {
    return e(this, void 0, void 0, function () {
      return t(this, function (E) {
        switch (E.label) {
          case 0:
            return [4, r.load(d.siteKey, d.loaderOptions)];
          case 1:
            return [2, E.sent()];
        }
      });
    });
  }
  function c(d) {
    return function () {
      return new Promise(function (E, b) {
        if (a.error !== null) return b(a.error);
        if (d.value) return E(!0);
        a.loadedWaiters.push({ resolve: E, reject: b });
      });
    };
  }
  function u(d) {
    var E = this;
    return function (b) {
      return e(E, void 0, void 0, function () {
        var P;
        return t(this, function (R) {
          switch (R.label) {
            case 0:
              return [
                4,
                (P = d.value) === null || P === void 0 ? void 0 : P.execute(b),
              ];
            case 1:
              return [2, R.sent()];
          }
        });
      });
    };
  }
  return ReCaptchaVuePlugin;
}
var ReCaptchaVuePluginExports = requireReCaptchaVuePlugin();
const recaptcha_client_ePVGy12Odm = defineNuxtPlugin((e) => {
    const t = useRuntimeConfig();
    e.vueApp.use(ReCaptchaVuePluginExports.VueReCaptcha, {
      siteKey: t.public.siteKey,
    });
  }),
  GET_OTP = "/api/v1/sign-up/get-otp",
  SIGN_UP = "/api/v1/sign-up/confirm",
  FORGET_PASSWORD_GET_OTP = "/api/v1/forgot-password/get-otp",
  FORGOT_PASSWORD = "/api/v1/forgot-password/confirm",
  GOOGLE_LOGIN = "/api/v1/google/login",
  SIGN_IN = "/api/v1/login",
  LOGOUT = "/api/v1/logout",
  DIRECTIONS = "/api/v1/calculation/directions",
  CALCULATION = "/api/v1/calculation",
  COMPLETE_DIRECTION = "/api/v1/calculation/step1",
  WALLET_INFO = "/api/v1/calculation/step2",
  CONFIRM_REVIEW_ORDER = "/api/v1/calculation/step3",
  CHECK_DISCOUNT = "/api/v1/coupons/check",
  PROCESS_TRANSACTION = "/api/v1/calculation/process-transaction",
  PAYMENT_GATEWAY = "/api/v1/payment/gateway",
  NEBULOX_CONFIRMATION = "/api/v1/payment/nebulox/confirmation",
  EXPIRE_ORDER = "/api/v1/calculation/expire",
  PROCESS_ORDER = "/api/v1/calculation/process-order",
  TRACK_ORDER = "/api/v1/calculation/track-order",
  ORDER_STATUS = "/api/v1/order/status",
  GENERATE_TWO_FA = "/api/v1/user/profile/generate2fa",
  ENABLE_TWO_FA = "/api/v1/user/profile/enable2fa",
  DISABLE_TWO_FA = "/api/v1/user/profile/disable2fa",
  USER_ORDERS = "/api/v1/user/order/filter",
  CHANGE_PASSWORD = "/api/v1/user/profile/change-password",
  UPLOAD_AVATAR = "/api/v1/user/profile/avatar",
  EDIT_PROFILE = "/api/v1/user/profile/update",
  USER_TRANSACTIONS = "/api/v1/user/transaction/filter",
  USER_CREATE_WITHDRAW = "/api/v1/user/withdraw/store",
  USER_WITHDRAWS = "/api/v1/user/withdraw/filter",
  USER_DISCOUNT_LIST = "/api/v1/coupons/user/discounts",
  CURRENCIES = "/api/v1/calculation/currencies",
  GET_USER_INFO = "/api/v1/user/info",
  GET_USER_OTP = "/api/v1/user/email/get-otp",
  VERIFY_EMAIL = "/api/v1/user/email/verify",
  RECEIVE_PAYPAL_LANDING = "/api/v1/landing/1/details",
  WALLET_CURRENCIES = "/api/v1/wallet/user/currencies",
  WALLET_DETAILS = "/api/v1/wallet",
  CREATE_WALLET = "/api/v1/wallet/store",
  WITHDRAW_REQUEST = "/api/v1/wallet/withdraw-request",
  WITHDRA_LIST = "/api/v1/wallet/list/withdraw-request",
  CRISP_WEBSITE_ID_CONFIG = "806fa378-48a2-4876-a2fd-f6855547827a",
  crisp_client_amQNA6tQA4 = defineNuxtPlugin(() => {
    (window.$crisp = []),
      (window.CRISP_WEBSITE_ID = CRISP_WEBSITE_ID_CONFIG),
      (function () {

      })();
  });
var lottie$1 = { exports: {} },
  lottie = lottie$1.exports,
  hasRequiredLottie;
function requireLottie() {
  return (
    hasRequiredLottie ||
      ((hasRequiredLottie = 1),
      (function (module, exports) {
        typeof navigator < "u" &&
          (function (e, t) {
            module.exports = t();
          })(lottie, function () {
            var svgNS = "http://www.w3.org/2000/svg",
              locationHref = "",
              _useWebWorker = !1,
              initialDefaultFrame = -999999,
              setWebWorker = function (t) {
                _useWebWorker = !!t;
              },
              getWebWorker = function () {
                return _useWebWorker;
              },
              setLocationHref = function (t) {
                locationHref = t;
              },
              getLocationHref = function () {
                return locationHref;
              };
            function createTag(e) {
              return document.createElement(e);
            }
            function extendPrototype(e, t) {
              var r,
                n = e.length,
                i;
              for (r = 0; r < n; r += 1) {
                i = e[r].prototype;
                for (var a in i)
                  Object.prototype.hasOwnProperty.call(i, a) &&
                    (t.prototype[a] = i[a]);
              }
            }
            function getDescriptor(e, t) {
              return Object.getOwnPropertyDescriptor(e, t);
            }
            function createProxyFunction(e) {
              function t() {}
              return (t.prototype = e), t;
            }
            var audioControllerFactory = (function () {
                function e(t) {
                  (this.audios = []),
                    (this.audioFactory = t),
                    (this._volume = 1),
                    (this._isMuted = !1);
                }
                return (
                  (e.prototype = {
                    addAudio: function (r) {
                      this.audios.push(r);
                    },
                    pause: function () {
                      var r,
                        n = this.audios.length;
                      for (r = 0; r < n; r += 1) this.audios[r].pause();
                    },
                    resume: function () {
                      var r,
                        n = this.audios.length;
                      for (r = 0; r < n; r += 1) this.audios[r].resume();
                    },
                    setRate: function (r) {
                      var n,
                        i = this.audios.length;
                      for (n = 0; n < i; n += 1) this.audios[n].setRate(r);
                    },
                    createAudio: function (r) {
                      return this.audioFactory
                        ? this.audioFactory(r)
                        : window.Howl
                        ? new window.Howl({ src: [r] })
                        : {
                            isPlaying: !1,
                            play: function () {
                              this.isPlaying = !0;
                            },
                            seek: function () {
                              this.isPlaying = !1;
                            },
                            playing: function () {},
                            rate: function () {},
                            setVolume: function () {},
                          };
                    },
                    setAudioFactory: function (r) {
                      this.audioFactory = r;
                    },
                    setVolume: function (r) {
                      (this._volume = r), this._updateVolume();
                    },
                    mute: function () {
                      (this._isMuted = !0), this._updateVolume();
                    },
                    unmute: function () {
                      (this._isMuted = !1), this._updateVolume();
                    },
                    getVolume: function () {
                      return this._volume;
                    },
                    _updateVolume: function () {
                      var r,
                        n = this.audios.length;
                      for (r = 0; r < n; r += 1)
                        this.audios[r].volume(
                          this._volume * (this._isMuted ? 0 : 1)
                        );
                    },
                  }),
                  function () {
                    return new e();
                  }
                );
              })(),
              createTypedArray = (function () {
                function e(r, n) {
                  var i = 0,
                    a = [],
                    o;
                  switch (r) {
                    case "int16":
                    case "uint8c":
                      o = 1;
                      break;
                    default:
                      o = 1.1;
                      break;
                  }
                  for (i = 0; i < n; i += 1) a.push(o);
                  return a;
                }
                function t(r, n) {
                  return r === "float32"
                    ? new Float32Array(n)
                    : r === "int16"
                    ? new Int16Array(n)
                    : r === "uint8c"
                    ? new Uint8ClampedArray(n)
                    : e(r, n);
                }
                return typeof Uint8ClampedArray == "function" &&
                  typeof Float32Array == "function"
                  ? t
                  : e;
              })();
            function createSizedArray(e) {
              return Array.apply(null, { length: e });
            }
            function _typeof$6(e) {
              "@babel/helpers - typeof";
              return (
                typeof Symbol == "function" &&
                typeof Symbol.iterator == "symbol"
                  ? (_typeof$6 = function (r) {
                      return typeof r;
                    })
                  : (_typeof$6 = function (r) {
                      return r &&
                        typeof Symbol == "function" &&
                        r.constructor === Symbol &&
                        r !== Symbol.prototype
                        ? "symbol"
                        : typeof r;
                    }),
                _typeof$6(e)
              );
            }
            var subframeEnabled = !0,
              expressionsPlugin = null,
              expressionsInterfaces = null,
              idPrefix$1 = "",
              isSafari = /^((?!chrome|android).)*safari/i.test(
                navigator.userAgent
              ),
              bmPow = Math.pow,
              bmSqrt = Math.sqrt,
              bmFloor = Math.floor,
              bmMax = Math.max,
              bmMin = Math.min,
              BMMath = {};
            (function () {
              var e = [
                  "abs",
                  "acos",
                  "acosh",
                  "asin",
                  "asinh",
                  "atan",
                  "atanh",
                  "atan2",
                  "ceil",
                  "cbrt",
                  "expm1",
                  "clz32",
                  "cos",
                  "cosh",
                  "exp",
                  "floor",
                  "fround",
                  "hypot",
                  "imul",
                  "log",
                  "log1p",
                  "log2",
                  "log10",
                  "max",
                  "min",
                  "pow",
                  "random",
                  "round",
                  "sign",
                  "sin",
                  "sinh",
                  "sqrt",
                  "tan",
                  "tanh",
                  "trunc",
                  "E",
                  "LN10",
                  "LN2",
                  "LOG10E",
                  "LOG2E",
                  "PI",
                  "SQRT1_2",
                  "SQRT2",
                ],
                t,
                r = e.length;
              for (t = 0; t < r; t += 1) BMMath[e[t]] = Math[e[t]];
            })(),
              (BMMath.random = Math.random),
              (BMMath.abs = function (e) {
                var t = _typeof$6(e);
                if (t === "object" && e.length) {
                  var r = createSizedArray(e.length),
                    n,
                    i = e.length;
                  for (n = 0; n < i; n += 1) r[n] = Math.abs(e[n]);
                  return r;
                }
                return Math.abs(e);
              });
            var defaultCurveSegments = 150,
              degToRads = Math.PI / 180,
              roundCorner = 0.5519;
            function styleDiv(e) {
              (e.style.position = "absolute"),
                (e.style.top = 0),
                (e.style.left = 0),
                (e.style.display = "block"),
                (e.style.transformOrigin = "0 0"),
                (e.style.webkitTransformOrigin = "0 0"),
                (e.style.backfaceVisibility = "visible"),
                (e.style.webkitBackfaceVisibility = "visible"),
                (e.style.transformStyle = "preserve-3d"),
                (e.style.webkitTransformStyle = "preserve-3d"),
                (e.style.mozTransformStyle = "preserve-3d");
            }
            function BMEnterFrameEvent(e, t, r, n) {
              (this.type = e),
                (this.currentTime = t),
                (this.totalTime = r),
                (this.direction = n < 0 ? -1 : 1);
            }
            function BMCompleteEvent(e, t) {
              (this.type = e), (this.direction = t < 0 ? -1 : 1);
            }
            function BMCompleteLoopEvent(e, t, r, n) {
              (this.type = e),
                (this.currentLoop = r),
                (this.totalLoops = t),
                (this.direction = n < 0 ? -1 : 1);
            }
            function BMSegmentStartEvent(e, t, r) {
              (this.type = e), (this.firstFrame = t), (this.totalFrames = r);
            }
            function BMDestroyEvent(e, t) {
              (this.type = e), (this.target = t);
            }
            function BMRenderFrameErrorEvent(e, t) {
              (this.type = "renderFrameError"),
                (this.nativeError = e),
                (this.currentTime = t);
            }
            function BMConfigErrorEvent(e) {
              (this.type = "configError"), (this.nativeError = e);
            }
            var createElementID = (function () {
              var e = 0;
              return function () {
                return (e += 1), idPrefix$1 + "__lottie_element_" + e;
              };
            })();
            function HSVtoRGB(e, t, r) {
              var n, i, a, o, l, c, u, d;
              switch (
                ((o = Math.floor(e * 6)),
                (l = e * 6 - o),
                (c = r * (1 - t)),
                (u = r * (1 - l * t)),
                (d = r * (1 - (1 - l) * t)),
                o % 6)
              ) {
                case 0:
                  (n = r), (i = d), (a = c);
                  break;
                case 1:
                  (n = u), (i = r), (a = c);
                  break;
                case 2:
                  (n = c), (i = r), (a = d);
                  break;
                case 3:
                  (n = c), (i = u), (a = r);
                  break;
                case 4:
                  (n = d), (i = c), (a = r);
                  break;
                case 5:
                  (n = r), (i = c), (a = u);
                  break;
              }
              return [n, i, a];
            }
            function RGBtoHSV(e, t, r) {
              var n = Math.max(e, t, r),
                i = Math.min(e, t, r),
                a = n - i,
                o,
                l = n === 0 ? 0 : a / n,
                c = n / 255;
              switch (n) {
                case i:
                  o = 0;
                  break;
                case e:
                  (o = t - r + a * (t < r ? 6 : 0)), (o /= 6 * a);
                  break;
                case t:
                  (o = r - e + a * 2), (o /= 6 * a);
                  break;
                case r:
                  (o = e - t + a * 4), (o /= 6 * a);
                  break;
              }
              return [o, l, c];
            }
            function addSaturationToRGB(e, t) {
              var r = RGBtoHSV(e[0] * 255, e[1] * 255, e[2] * 255);
              return (
                (r[1] += t),
                r[1] > 1 ? (r[1] = 1) : r[1] <= 0 && (r[1] = 0),
                HSVtoRGB(r[0], r[1], r[2])
              );
            }
            function addBrightnessToRGB(e, t) {
              var r = RGBtoHSV(e[0] * 255, e[1] * 255, e[2] * 255);
              return (
                (r[2] += t),
                r[2] > 1 ? (r[2] = 1) : r[2] < 0 && (r[2] = 0),
                HSVtoRGB(r[0], r[1], r[2])
              );
            }
            function addHueToRGB(e, t) {
              var r = RGBtoHSV(e[0] * 255, e[1] * 255, e[2] * 255);
              return (
                (r[0] += t / 360),
                r[0] > 1 ? (r[0] -= 1) : r[0] < 0 && (r[0] += 1),
                HSVtoRGB(r[0], r[1], r[2])
              );
            }
            var rgbToHex = (function () {
                var e = [],
                  t,
                  r;
                for (t = 0; t < 256; t += 1)
                  (r = t.toString(16)), (e[t] = r.length === 1 ? "0" + r : r);
                return function (n, i, a) {
                  return (
                    n < 0 && (n = 0),
                    i < 0 && (i = 0),
                    a < 0 && (a = 0),
                    "#" + e[n] + e[i] + e[a]
                  );
                };
              })(),
              setSubframeEnabled = function (t) {
                subframeEnabled = !!t;
              },
              getSubframeEnabled = function () {
                return subframeEnabled;
              },
              setExpressionsPlugin = function (t) {
                expressionsPlugin = t;
              },
              getExpressionsPlugin = function () {
                return expressionsPlugin;
              },
              setExpressionInterfaces = function (t) {
                expressionsInterfaces = t;
              },
              getExpressionInterfaces = function () {
                return expressionsInterfaces;
              },
              setDefaultCurveSegments = function (t) {
                defaultCurveSegments = t;
              },
              getDefaultCurveSegments = function () {
                return defaultCurveSegments;
              },
              setIdPrefix = function (t) {
                idPrefix$1 = t;
              };
            function createNS(e) {
              return document.createElementNS(svgNS, e);
            }
            function _typeof$5(e) {
              "@babel/helpers - typeof";
              return (
                typeof Symbol == "function" &&
                typeof Symbol.iterator == "symbol"
                  ? (_typeof$5 = function (r) {
                      return typeof r;
                    })
                  : (_typeof$5 = function (r) {
                      return r &&
                        typeof Symbol == "function" &&
                        r.constructor === Symbol &&
                        r !== Symbol.prototype
                        ? "symbol"
                        : typeof r;
                    }),
                _typeof$5(e)
              );
            }
            var dataManager = (function () {
                var e = 1,
                  t = [],
                  r,
                  n,
                  i = {
                    onmessage: function () {},
                    postMessage: function (P) {
                      r({ data: P });
                    },
                  },
                  a = {
                    postMessage: function (P) {
                      i.onmessage({ data: P });
                    },
                  };
                function o(b) {
                  if (window.Worker && window.Blob && getWebWorker()) {
                    var P = new Blob(
                        [
                          "var _workerSelf = self; self.onmessage = ",
                          b.toString(),
                        ],
                        { type: "text/javascript" }
                      ),
                      R = URL.createObjectURL(P);
                    return new Worker(R);
                  }
                  return (r = b), i;
                }
                function l() {
                  n ||
                    ((n = o(function (P) {
                      function R() {
                        function M(re, B) {
                          var z,
                            N,
                            V = re.length,
                            Q,
                            Y,
                            he,
                            ye;
                          for (N = 0; N < V; N += 1)
                            if (((z = re[N]), "ks" in z && !z.completed)) {
                              if (((z.completed = !0), z.hasMask)) {
                                var ve = z.masksProperties;
                                for (Y = ve.length, Q = 0; Q < Y; Q += 1)
                                  if (ve[Q].pt.k.i) O(ve[Q].pt.k);
                                  else
                                    for (
                                      ye = ve[Q].pt.k.length, he = 0;
                                      he < ye;
                                      he += 1
                                    )
                                      ve[Q].pt.k[he].s &&
                                        O(ve[Q].pt.k[he].s[0]),
                                        ve[Q].pt.k[he].e &&
                                          O(ve[Q].pt.k[he].e[0]);
                              }
                              z.ty === 0
                                ? ((z.layers = S(z.refId, B)), M(z.layers, B))
                                : z.ty === 4
                                ? A(z.shapes)
                                : z.ty === 5 && ee(z);
                            }
                        }
                        function x(re, B) {
                          if (re) {
                            var z = 0,
                              N = re.length;
                            for (z = 0; z < N; z += 1)
                              re[z].t === 1 &&
                                ((re[z].data.layers = S(re[z].data.refId, B)),
                                M(re[z].data.layers, B));
                          }
                        }
                        function k(re, B) {
                          for (var z = 0, N = B.length; z < N; ) {
                            if (B[z].id === re) return B[z];
                            z += 1;
                          }
                          return null;
                        }
                        function S(re, B) {
                          var z = k(re, B);
                          return z
                            ? z.layers.__used
                              ? JSON.parse(JSON.stringify(z.layers))
                              : ((z.layers.__used = !0), z.layers)
                            : null;
                        }
                        function A(re) {
                          var B,
                            z = re.length,
                            N,
                            V;
                          for (B = z - 1; B >= 0; B -= 1)
                            if (re[B].ty === "sh")
                              if (re[B].ks.k.i) O(re[B].ks.k);
                              else
                                for (
                                  V = re[B].ks.k.length, N = 0;
                                  N < V;
                                  N += 1
                                )
                                  re[B].ks.k[N].s && O(re[B].ks.k[N].s[0]),
                                    re[B].ks.k[N].e && O(re[B].ks.k[N].e[0]);
                            else re[B].ty === "gr" && A(re[B].it);
                        }
                        function O(re) {
                          var B,
                            z = re.i.length;
                          for (B = 0; B < z; B += 1)
                            (re.i[B][0] += re.v[B][0]),
                              (re.i[B][1] += re.v[B][1]),
                              (re.o[B][0] += re.v[B][0]),
                              (re.o[B][1] += re.v[B][1]);
                        }
                        function F(re, B) {
                          var z = B ? B.split(".") : [100, 100, 100];
                          return re[0] > z[0]
                            ? !0
                            : z[0] > re[0]
                            ? !1
                            : re[1] > z[1]
                            ? !0
                            : z[1] > re[1]
                            ? !1
                            : re[2] > z[2]
                            ? !0
                            : z[2] > re[2]
                            ? !1
                            : null;
                        }
                        var D = (function () {
                            var re = [4, 4, 14];
                            function B(N) {
                              var V = N.t.d;
                              N.t.d = { k: [{ s: V, t: 0 }] };
                            }
                            function z(N) {
                              var V,
                                Q = N.length;
                              for (V = 0; V < Q; V += 1)
                                N[V].ty === 5 && B(N[V]);
                            }
                            return function (N) {
                              if (F(re, N.v) && (z(N.layers), N.assets)) {
                                var V,
                                  Q = N.assets.length;
                                for (V = 0; V < Q; V += 1)
                                  N.assets[V].layers && z(N.assets[V].layers);
                              }
                            };
                          })(),
                          H = (function () {
                            var re = [4, 7, 99];
                            return function (B) {
                              if (B.chars && !F(re, B.v)) {
                                var z,
                                  N = B.chars.length;
                                for (z = 0; z < N; z += 1) {
                                  var V = B.chars[z];
                                  V.data &&
                                    V.data.shapes &&
                                    (A(V.data.shapes),
                                    (V.data.ip = 0),
                                    (V.data.op = 99999),
                                    (V.data.st = 0),
                                    (V.data.sr = 1),
                                    (V.data.ks = {
                                      p: { k: [0, 0], a: 0 },
                                      s: { k: [100, 100], a: 0 },
                                      a: { k: [0, 0], a: 0 },
                                      r: { k: 0, a: 0 },
                                      o: { k: 100, a: 0 },
                                    }),
                                    B.chars[z].t ||
                                      (V.data.shapes.push({ ty: "no" }),
                                      V.data.shapes[0].it.push({
                                        p: { k: [0, 0], a: 0 },
                                        s: { k: [100, 100], a: 0 },
                                        a: { k: [0, 0], a: 0 },
                                        r: { k: 0, a: 0 },
                                        o: { k: 100, a: 0 },
                                        sk: { k: 0, a: 0 },
                                        sa: { k: 0, a: 0 },
                                        ty: "tr",
                                      })));
                                }
                              }
                            };
                          })(),
                          $ = (function () {
                            var re = [5, 7, 15];
                            function B(N) {
                              var V = N.t.p;
                              typeof V.a == "number" &&
                                (V.a = { a: 0, k: V.a }),
                                typeof V.p == "number" &&
                                  (V.p = { a: 0, k: V.p }),
                                typeof V.r == "number" &&
                                  (V.r = { a: 0, k: V.r });
                            }
                            function z(N) {
                              var V,
                                Q = N.length;
                              for (V = 0; V < Q; V += 1)
                                N[V].ty === 5 && B(N[V]);
                            }
                            return function (N) {
                              if (F(re, N.v) && (z(N.layers), N.assets)) {
                                var V,
                                  Q = N.assets.length;
                                for (V = 0; V < Q; V += 1)
                                  N.assets[V].layers && z(N.assets[V].layers);
                              }
                            };
                          })(),
                          q = (function () {
                            var re = [4, 1, 9];
                            function B(N) {
                              var V,
                                Q = N.length,
                                Y,
                                he;
                              for (V = 0; V < Q; V += 1)
                                if (N[V].ty === "gr") B(N[V].it);
                                else if (N[V].ty === "fl" || N[V].ty === "st")
                                  if (N[V].c.k && N[V].c.k[0].i)
                                    for (
                                      he = N[V].c.k.length, Y = 0;
                                      Y < he;
                                      Y += 1
                                    )
                                      N[V].c.k[Y].s &&
                                        ((N[V].c.k[Y].s[0] /= 255),
                                        (N[V].c.k[Y].s[1] /= 255),
                                        (N[V].c.k[Y].s[2] /= 255),
                                        (N[V].c.k[Y].s[3] /= 255)),
                                        N[V].c.k[Y].e &&
                                          ((N[V].c.k[Y].e[0] /= 255),
                                          (N[V].c.k[Y].e[1] /= 255),
                                          (N[V].c.k[Y].e[2] /= 255),
                                          (N[V].c.k[Y].e[3] /= 255));
                                  else
                                    (N[V].c.k[0] /= 255),
                                      (N[V].c.k[1] /= 255),
                                      (N[V].c.k[2] /= 255),
                                      (N[V].c.k[3] /= 255);
                            }
                            function z(N) {
                              var V,
                                Q = N.length;
                              for (V = 0; V < Q; V += 1)
                                N[V].ty === 4 && B(N[V].shapes);
                            }
                            return function (N) {
                              if (F(re, N.v) && (z(N.layers), N.assets)) {
                                var V,
                                  Q = N.assets.length;
                                for (V = 0; V < Q; V += 1)
                                  N.assets[V].layers && z(N.assets[V].layers);
                              }
                            };
                          })(),
                          J = (function () {
                            var re = [4, 4, 18];
                            function B(N) {
                              var V,
                                Q = N.length,
                                Y,
                                he;
                              for (V = Q - 1; V >= 0; V -= 1)
                                if (N[V].ty === "sh")
                                  if (N[V].ks.k.i) N[V].ks.k.c = N[V].closed;
                                  else
                                    for (
                                      he = N[V].ks.k.length, Y = 0;
                                      Y < he;
                                      Y += 1
                                    )
                                      N[V].ks.k[Y].s &&
                                        (N[V].ks.k[Y].s[0].c = N[V].closed),
                                        N[V].ks.k[Y].e &&
                                          (N[V].ks.k[Y].e[0].c = N[V].closed);
                                else N[V].ty === "gr" && B(N[V].it);
                            }
                            function z(N) {
                              var V,
                                Q,
                                Y = N.length,
                                he,
                                ye,
                                ve,
                                Pe;
                              for (Q = 0; Q < Y; Q += 1) {
                                if (((V = N[Q]), V.hasMask)) {
                                  var Ce = V.masksProperties;
                                  for (ye = Ce.length, he = 0; he < ye; he += 1)
                                    if (Ce[he].pt.k.i)
                                      Ce[he].pt.k.c = Ce[he].cl;
                                    else
                                      for (
                                        Pe = Ce[he].pt.k.length, ve = 0;
                                        ve < Pe;
                                        ve += 1
                                      )
                                        Ce[he].pt.k[ve].s &&
                                          (Ce[he].pt.k[ve].s[0].c = Ce[he].cl),
                                          Ce[he].pt.k[ve].e &&
                                            (Ce[he].pt.k[ve].e[0].c =
                                              Ce[he].cl);
                                }
                                V.ty === 4 && B(V.shapes);
                              }
                            }
                            return function (N) {
                              if (F(re, N.v) && (z(N.layers), N.assets)) {
                                var V,
                                  Q = N.assets.length;
                                for (V = 0; V < Q; V += 1)
                                  N.assets[V].layers && z(N.assets[V].layers);
                              }
                            };
                          })();
                        function K(re) {
                          re.__complete ||
                            (q(re),
                            D(re),
                            H(re),
                            $(re),
                            J(re),
                            M(re.layers, re.assets),
                            x(re.chars, re.assets),
                            (re.__complete = !0));
                        }
                        function ee(re) {
                          re.t.a.length === 0 && "m" in re.t.p;
                        }
                        var le = {};
                        return (
                          (le.completeData = K),
                          (le.checkColors = q),
                          (le.checkChars = H),
                          (le.checkPathProperties = $),
                          (le.checkShapes = J),
                          (le.completeLayers = M),
                          le
                        );
                      }
                      if (
                        (a.dataManager || (a.dataManager = R()),
                        a.assetLoader ||
                          (a.assetLoader = (function () {
                            function M(k) {
                              var S = k.getResponseHeader("content-type");
                              return (S &&
                                k.responseType === "json" &&
                                S.indexOf("json") !== -1) ||
                                (k.response &&
                                  _typeof$5(k.response) === "object")
                                ? k.response
                                : k.response && typeof k.response == "string"
                                ? JSON.parse(k.response)
                                : k.responseText
                                ? JSON.parse(k.responseText)
                                : null;
                            }
                            function x(k, S, A, O) {
                              var F,
                                D = new XMLHttpRequest();
                              try {
                                D.responseType = "json";
                              } catch {}
                              D.onreadystatechange = function () {
                                if (D.readyState === 4)
                                  if (D.status === 200) (F = M(D)), A(F);
                                  else
                                    try {
                                      (F = M(D)), A(F);
                                    } catch (H) {
                                      O && O(H);
                                    }
                              };
                              try {
                                D.open(["G", "E", "T"].join(""), k, !0);
                              } catch {
                                D.open(
                                  ["G", "E", "T"].join(""),
                                  S + "/" + k,
                                  !0
                                );
                              }
                              D.send();
                            }
                            return { load: x };
                          })()),
                        P.data.type === "loadAnimation")
                      )
                        a.assetLoader.load(
                          P.data.path,
                          P.data.fullPath,
                          function (M) {
                            a.dataManager.completeData(M),
                              a.postMessage({
                                id: P.data.id,
                                payload: M,
                                status: "success",
                              });
                          },
                          function () {
                            a.postMessage({ id: P.data.id, status: "error" });
                          }
                        );
                      else if (P.data.type === "complete") {
                        var T = P.data.animation;
                        a.dataManager.completeData(T),
                          a.postMessage({
                            id: P.data.id,
                            payload: T,
                            status: "success",
                          });
                      } else
                        P.data.type === "loadData" &&
                          a.assetLoader.load(
                            P.data.path,
                            P.data.fullPath,
                            function (M) {
                              a.postMessage({
                                id: P.data.id,
                                payload: M,
                                status: "success",
                              });
                            },
                            function () {
                              a.postMessage({ id: P.data.id, status: "error" });
                            }
                          );
                    })),
                    (n.onmessage = function (b) {
                      var P = b.data,
                        R = P.id,
                        T = t[R];
                      (t[R] = null),
                        P.status === "success"
                          ? T.onComplete(P.payload)
                          : T.onError && T.onError();
                    }));
                }
                function c(b, P) {
                  e += 1;
                  var R = "processId_" + e;
                  return (t[R] = { onComplete: b, onError: P }), R;
                }
                function u(b, P, R) {
                  l();
                  var T = c(P, R);
                  n.postMessage({
                    type: "loadAnimation",
                    path: b,
                    fullPath: window.location.origin + window.location.pathname,
                    id: T,
                  });
                }
                function d(b, P, R) {
                  l();
                  var T = c(P, R);
                  n.postMessage({
                    type: "loadData",
                    path: b,
                    fullPath: window.location.origin + window.location.pathname,
                    id: T,
                  });
                }
                function E(b, P, R) {
                  l();
                  var T = c(P, R);
                  n.postMessage({ type: "complete", animation: b, id: T });
                }
                return { loadAnimation: u, loadData: d, completeAnimation: E };
              })(),
              ImagePreloader = (function () {
                var e = (function () {
                  var x = createTag("canvas");
                  (x.width = 1), (x.height = 1);
                  var k = x.getContext("2d");
                  return (
                    (k.fillStyle = "rgba(0,0,0,0)"), k.fillRect(0, 0, 1, 1), x
                  );
                })();
                function t() {
                  (this.loadedAssets += 1),
                    this.loadedAssets === this.totalImages &&
                      this.loadedFootagesCount === this.totalFootages &&
                      this.imagesLoadedCb &&
                      this.imagesLoadedCb(null);
                }
                function r() {
                  (this.loadedFootagesCount += 1),
                    this.loadedAssets === this.totalImages &&
                      this.loadedFootagesCount === this.totalFootages &&
                      this.imagesLoadedCb &&
                      this.imagesLoadedCb(null);
                }
                function n(x, k, S) {
                  var A = "";
                  if (x.e) A = x.p;
                  else if (k) {
                    var O = x.p;
                    O.indexOf("images/") !== -1 && (O = O.split("/")[1]),
                      (A = k + O);
                  } else (A = S), (A += x.u ? x.u : ""), (A += x.p);
                  return A;
                }
                function i(x) {
                  var k = 0,
                    S = setInterval(
                      function () {
                        var A = x.getBBox();
                        (A.width || k > 500) &&
                          (this._imageLoaded(), clearInterval(S)),
                          (k += 1);
                      }.bind(this),
                      50
                    );
                }
                function a(x) {
                  var k = n(x, this.assetsPath, this.path),
                    S = createNS("image");
                  isSafari
                    ? this.testImageLoaded(S)
                    : S.addEventListener("load", this._imageLoaded, !1),
                    S.addEventListener(
                      "error",
                      function () {
                        (A.img = e), this._imageLoaded();
                      }.bind(this),
                      !1
                    ),
                    S.setAttributeNS("http://www.w3.org/1999/xlink", "href", k),
                    this._elementHelper.append
                      ? this._elementHelper.append(S)
                      : this._elementHelper.appendChild(S);
                  var A = { img: S, assetData: x };
                  return A;
                }
                function o(x) {
                  var k = n(x, this.assetsPath, this.path),
                    S = createTag("img");
                  (S.crossOrigin = "anonymous"),
                    S.addEventListener("load", this._imageLoaded, !1),
                    S.addEventListener(
                      "error",
                      function () {
                        (A.img = e), this._imageLoaded();
                      }.bind(this),
                      !1
                    ),
                    (S.src = k);
                  var A = { img: S, assetData: x };
                  return A;
                }
                function l(x) {
                  var k = { assetData: x },
                    S = n(x, this.assetsPath, this.path);
                  return (
                    dataManager.loadData(
                      S,
                      function (A) {
                        (k.img = A), this._footageLoaded();
                      }.bind(this),
                      function () {
                        (k.img = {}), this._footageLoaded();
                      }.bind(this)
                    ),
                    k
                  );
                }
                function c(x, k) {
                  this.imagesLoadedCb = k;
                  var S,
                    A = x.length;
                  for (S = 0; S < A; S += 1)
                    x[S].layers ||
                      (!x[S].t || x[S].t === "seq"
                        ? ((this.totalImages += 1),
                          this.images.push(this._createImageData(x[S])))
                        : x[S].t === 3 &&
                          ((this.totalFootages += 1),
                          this.images.push(this.createFootageData(x[S]))));
                }
                function u(x) {
                  this.path = x || "";
                }
                function d(x) {
                  this.assetsPath = x || "";
                }
                function E(x) {
                  for (var k = 0, S = this.images.length; k < S; ) {
                    if (this.images[k].assetData === x)
                      return this.images[k].img;
                    k += 1;
                  }
                  return null;
                }
                function b() {
                  (this.imagesLoadedCb = null), (this.images.length = 0);
                }
                function P() {
                  return this.totalImages === this.loadedAssets;
                }
                function R() {
                  return this.totalFootages === this.loadedFootagesCount;
                }
                function T(x, k) {
                  x === "svg"
                    ? ((this._elementHelper = k),
                      (this._createImageData = this.createImageData.bind(this)))
                    : (this._createImageData = this.createImgData.bind(this));
                }
                function M() {
                  (this._imageLoaded = t.bind(this)),
                    (this._footageLoaded = r.bind(this)),
                    (this.testImageLoaded = i.bind(this)),
                    (this.createFootageData = l.bind(this)),
                    (this.assetsPath = ""),
                    (this.path = ""),
                    (this.totalImages = 0),
                    (this.totalFootages = 0),
                    (this.loadedAssets = 0),
                    (this.loadedFootagesCount = 0),
                    (this.imagesLoadedCb = null),
                    (this.images = []);
                }
                return (
                  (M.prototype = {
                    loadAssets: c,
                    setAssetsPath: d,
                    setPath: u,
                    loadedImages: P,
                    loadedFootages: R,
                    destroy: b,
                    getAsset: E,
                    createImgData: o,
                    createImageData: a,
                    imageLoaded: t,
                    footageLoaded: r,
                    setCacheType: T,
                  }),
                  M
                );
              })();
            function BaseEvent() {}
            BaseEvent.prototype = {
              triggerEvent: function (t, r) {
                if (this._cbs[t])
                  for (var n = this._cbs[t], i = 0; i < n.length; i += 1)
                    n[i](r);
              },
              addEventListener: function (t, r) {
                return (
                  this._cbs[t] || (this._cbs[t] = []),
                  this._cbs[t].push(r),
                  function () {
                    this.removeEventListener(t, r);
                  }.bind(this)
                );
              },
              removeEventListener: function (t, r) {
                if (!r) this._cbs[t] = null;
                else if (this._cbs[t]) {
                  for (var n = 0, i = this._cbs[t].length; n < i; )
                    this._cbs[t][n] === r &&
                      (this._cbs[t].splice(n, 1), (n -= 1), (i -= 1)),
                      (n += 1);
                  this._cbs[t].length || (this._cbs[t] = null);
                }
              },
            };
            var markerParser = (function () {
                function e(t) {
                  for (
                    var r = t.split(`\r
`),
                      n = {},
                      i,
                      a = 0,
                      o = 0;
                    o < r.length;
                    o += 1
                  )
                    (i = r[o].split(":")),
                      i.length === 2 && ((n[i[0]] = i[1].trim()), (a += 1));
                  if (a === 0) throw new Error();
                  return n;
                }
                return function (t) {
                  for (var r = [], n = 0; n < t.length; n += 1) {
                    var i = t[n],
                      a = { time: i.tm, duration: i.dr };
                    try {
                      a.payload = JSON.parse(t[n].cm);
                    } catch {
                      try {
                        a.payload = e(t[n].cm);
                      } catch {
                        a.payload = { name: t[n].cm };
                      }
                    }
                    r.push(a);
                  }
                  return r;
                };
              })(),
              ProjectInterface = (function () {
                function e(t) {
                  this.compositions.push(t);
                }
                return function () {
                  function t(r) {
                    for (var n = 0, i = this.compositions.length; n < i; ) {
                      if (
                        this.compositions[n].data &&
                        this.compositions[n].data.nm === r
                      )
                        return (
                          this.compositions[n].prepareFrame &&
                            this.compositions[n].data.xt &&
                            this.compositions[n].prepareFrame(
                              this.currentFrame
                            ),
                          this.compositions[n].compInterface
                        );
                      n += 1;
                    }
                    return null;
                  }
                  return (
                    (t.compositions = []),
                    (t.currentFrame = 0),
                    (t.registerComposition = e),
                    t
                  );
                };
              })(),
              renderers = {},
              registerRenderer = function (t, r) {
                renderers[t] = r;
              };
            function getRenderer(e) {
              return renderers[e];
            }
            function getRegisteredRenderer() {
              if (renderers.canvas) return "canvas";
              for (var e in renderers) if (renderers[e]) return e;
              return "";
            }
            function _typeof$4(e) {
              "@babel/helpers - typeof";
              return (
                typeof Symbol == "function" &&
                typeof Symbol.iterator == "symbol"
                  ? (_typeof$4 = function (r) {
                      return typeof r;
                    })
                  : (_typeof$4 = function (r) {
                      return r &&
                        typeof Symbol == "function" &&
                        r.constructor === Symbol &&
                        r !== Symbol.prototype
                        ? "symbol"
                        : typeof r;
                    }),
                _typeof$4(e)
              );
            }
            var AnimationItem = function () {
              (this._cbs = []),
                (this.name = ""),
                (this.path = ""),
                (this.isLoaded = !1),
                (this.currentFrame = 0),
                (this.currentRawFrame = 0),
                (this.firstFrame = 0),
                (this.totalFrames = 0),
                (this.frameRate = 0),
                (this.frameMult = 0),
                (this.playSpeed = 1),
                (this.playDirection = 1),
                (this.playCount = 0),
                (this.animationData = {}),
                (this.assets = []),
                (this.isPaused = !0),
                (this.autoplay = !1),
                (this.loop = !0),
                (this.renderer = null),
                (this.animationID = createElementID()),
                (this.assetsPath = ""),
                (this.timeCompleted = 0),
                (this.segmentPos = 0),
                (this.isSubframeEnabled = getSubframeEnabled()),
                (this.segments = []),
                (this._idle = !0),
                (this._completedLoop = !1),
                (this.projectInterface = ProjectInterface()),
                (this.imagePreloader = new ImagePreloader()),
                (this.audioController = audioControllerFactory()),
                (this.markers = []),
                (this.configAnimation = this.configAnimation.bind(this)),
                (this.onSetupError = this.onSetupError.bind(this)),
                (this.onSegmentComplete = this.onSegmentComplete.bind(this)),
                (this.drawnFrameEvent = new BMEnterFrameEvent(
                  "drawnFrame",
                  0,
                  0,
                  0
                )),
                (this.expressionsPlugin = getExpressionsPlugin());
            };
            extendPrototype([BaseEvent], AnimationItem),
              (AnimationItem.prototype.setParams = function (e) {
                (e.wrapper || e.container) &&
                  (this.wrapper = e.wrapper || e.container);
                var t = "svg";
                e.animType ? (t = e.animType) : e.renderer && (t = e.renderer);
                var r = getRenderer(t);
                (this.renderer = new r(this, e.rendererSettings)),
                  this.imagePreloader.setCacheType(
                    t,
                    this.renderer.globalData.defs
                  ),
                  this.renderer.setProjectInterface(this.projectInterface),
                  (this.animType = t),
                  e.loop === "" ||
                  e.loop === null ||
                  e.loop === void 0 ||
                  e.loop === !0
                    ? (this.loop = !0)
                    : e.loop === !1
                    ? (this.loop = !1)
                    : (this.loop = parseInt(e.loop, 10)),
                  (this.autoplay = "autoplay" in e ? e.autoplay : !0),
                  (this.name = e.name ? e.name : ""),
                  (this.autoloadSegments = Object.prototype.hasOwnProperty.call(
                    e,
                    "autoloadSegments"
                  )
                    ? e.autoloadSegments
                    : !0),
                  (this.assetsPath = e.assetsPath),
                  (this.initialSegment = e.initialSegment),
                  e.audioFactory &&
                    this.audioController.setAudioFactory(e.audioFactory),
                  e.animationData
                    ? this.setupAnimation(e.animationData)
                    : e.path &&
                      (e.path.lastIndexOf("\\") !== -1
                        ? (this.path = e.path.substr(
                            0,
                            e.path.lastIndexOf("\\") + 1
                          ))
                        : (this.path = e.path.substr(
                            0,
                            e.path.lastIndexOf("/") + 1
                          )),
                      (this.fileName = e.path.substr(
                        e.path.lastIndexOf("/") + 1
                      )),
                      (this.fileName = this.fileName.substr(
                        0,
                        this.fileName.lastIndexOf(".json")
                      )),
                      dataManager.loadAnimation(
                        e.path,
                        this.configAnimation,
                        this.onSetupError
                      ));
              }),
              (AnimationItem.prototype.onSetupError = function () {
                this.trigger("data_failed");
              }),
              (AnimationItem.prototype.setupAnimation = function (e) {
                dataManager.completeAnimation(e, this.configAnimation);
              }),
              (AnimationItem.prototype.setData = function (e, t) {
                t && _typeof$4(t) !== "object" && (t = JSON.parse(t));
                var r = { wrapper: e, animationData: t },
                  n = e.attributes;
                (r.path = n.getNamedItem("data-animation-path")
                  ? n.getNamedItem("data-animation-path").value
                  : n.getNamedItem("data-bm-path")
                  ? n.getNamedItem("data-bm-path").value
                  : n.getNamedItem("bm-path")
                  ? n.getNamedItem("bm-path").value
                  : ""),
                  (r.animType = n.getNamedItem("data-anim-type")
                    ? n.getNamedItem("data-anim-type").value
                    : n.getNamedItem("data-bm-type")
                    ? n.getNamedItem("data-bm-type").value
                    : n.getNamedItem("bm-type")
                    ? n.getNamedItem("bm-type").value
                    : n.getNamedItem("data-bm-renderer")
                    ? n.getNamedItem("data-bm-renderer").value
                    : n.getNamedItem("bm-renderer")
                    ? n.getNamedItem("bm-renderer").value
                    : getRegisteredRenderer() || "canvas");
                var i = n.getNamedItem("data-anim-loop")
                  ? n.getNamedItem("data-anim-loop").value
                  : n.getNamedItem("data-bm-loop")
                  ? n.getNamedItem("data-bm-loop").value
                  : n.getNamedItem("bm-loop")
                  ? n.getNamedItem("bm-loop").value
                  : "";
                i === "false"
                  ? (r.loop = !1)
                  : i === "true"
                  ? (r.loop = !0)
                  : i !== "" && (r.loop = parseInt(i, 10));
                var a = n.getNamedItem("data-anim-autoplay")
                  ? n.getNamedItem("data-anim-autoplay").value
                  : n.getNamedItem("data-bm-autoplay")
                  ? n.getNamedItem("data-bm-autoplay").value
                  : n.getNamedItem("bm-autoplay")
                  ? n.getNamedItem("bm-autoplay").value
                  : !0;
                (r.autoplay = a !== "false"),
                  (r.name = n.getNamedItem("data-name")
                    ? n.getNamedItem("data-name").value
                    : n.getNamedItem("data-bm-name")
                    ? n.getNamedItem("data-bm-name").value
                    : n.getNamedItem("bm-name")
                    ? n.getNamedItem("bm-name").value
                    : "");
                var o = n.getNamedItem("data-anim-prerender")
                  ? n.getNamedItem("data-anim-prerender").value
                  : n.getNamedItem("data-bm-prerender")
                  ? n.getNamedItem("data-bm-prerender").value
                  : n.getNamedItem("bm-prerender")
                  ? n.getNamedItem("bm-prerender").value
                  : "";
                o === "false" && (r.prerender = !1),
                  r.path ? this.setParams(r) : this.trigger("destroy");
              }),
              (AnimationItem.prototype.includeLayers = function (e) {
                e.op > this.animationData.op &&
                  ((this.animationData.op = e.op),
                  (this.totalFrames = Math.floor(
                    e.op - this.animationData.ip
                  )));
                var t = this.animationData.layers,
                  r,
                  n = t.length,
                  i = e.layers,
                  a,
                  o = i.length;
                for (a = 0; a < o; a += 1)
                  for (r = 0; r < n; ) {
                    if (t[r].id === i[a].id) {
                      t[r] = i[a];
                      break;
                    }
                    r += 1;
                  }
                if (
                  ((e.chars || e.fonts) &&
                    (this.renderer.globalData.fontManager.addChars(e.chars),
                    this.renderer.globalData.fontManager.addFonts(
                      e.fonts,
                      this.renderer.globalData.defs
                    )),
                  e.assets)
                )
                  for (n = e.assets.length, r = 0; r < n; r += 1)
                    this.animationData.assets.push(e.assets[r]);
                (this.animationData.__complete = !1),
                  dataManager.completeAnimation(
                    this.animationData,
                    this.onSegmentComplete
                  );
              }),
              (AnimationItem.prototype.onSegmentComplete = function (e) {
                this.animationData = e;
                var t = getExpressionsPlugin();
                t && t.initExpressions(this), this.loadNextSegment();
              }),
              (AnimationItem.prototype.loadNextSegment = function () {
                var e = this.animationData.segments;
                if (!e || e.length === 0 || !this.autoloadSegments) {
                  this.trigger("data_ready"),
                    (this.timeCompleted = this.totalFrames);
                  return;
                }
                var t = e.shift();
                this.timeCompleted = t.time * this.frameRate;
                var r =
                  this.path + this.fileName + "_" + this.segmentPos + ".json";
                (this.segmentPos += 1),
                  dataManager.loadData(
                    r,
                    this.includeLayers.bind(this),
                    function () {
                      this.trigger("data_failed");
                    }.bind(this)
                  );
              }),
              (AnimationItem.prototype.loadSegments = function () {
                var e = this.animationData.segments;
                e || (this.timeCompleted = this.totalFrames),
                  this.loadNextSegment();
              }),
              (AnimationItem.prototype.imagesLoaded = function () {
                this.trigger("loaded_images"), this.checkLoaded();
              }),
              (AnimationItem.prototype.preloadImages = function () {
                this.imagePreloader.setAssetsPath(this.assetsPath),
                  this.imagePreloader.setPath(this.path),
                  this.imagePreloader.loadAssets(
                    this.animationData.assets,
                    this.imagesLoaded.bind(this)
                  );
              }),
              (AnimationItem.prototype.configAnimation = function (e) {
                if (this.renderer)
                  try {
                    (this.animationData = e),
                      this.initialSegment
                        ? ((this.totalFrames = Math.floor(
                            this.initialSegment[1] - this.initialSegment[0]
                          )),
                          (this.firstFrame = Math.round(
                            this.initialSegment[0]
                          )))
                        : ((this.totalFrames = Math.floor(
                            this.animationData.op - this.animationData.ip
                          )),
                          (this.firstFrame = Math.round(
                            this.animationData.ip
                          ))),
                      this.renderer.configAnimation(e),
                      e.assets || (e.assets = []),
                      (this.assets = this.animationData.assets),
                      (this.frameRate = this.animationData.fr),
                      (this.frameMult = this.animationData.fr / 1e3),
                      this.renderer.searchExtraCompositions(e.assets),
                      (this.markers = markerParser(e.markers || [])),
                      this.trigger("config_ready"),
                      this.preloadImages(),
                      this.loadSegments(),
                      this.updaFrameModifier(),
                      this.waitForFontsLoaded(),
                      this.isPaused && this.audioController.pause();
                  } catch (t) {
                    this.triggerConfigError(t);
                  }
              }),
              (AnimationItem.prototype.waitForFontsLoaded = function () {
                this.renderer &&
                  (this.renderer.globalData.fontManager.isLoaded
                    ? this.checkLoaded()
                    : setTimeout(this.waitForFontsLoaded.bind(this), 20));
              }),
              (AnimationItem.prototype.checkLoaded = function () {
                if (
                  !this.isLoaded &&
                  this.renderer.globalData.fontManager.isLoaded &&
                  (this.imagePreloader.loadedImages() ||
                    this.renderer.rendererType !== "canvas") &&
                  this.imagePreloader.loadedFootages()
                ) {
                  this.isLoaded = !0;
                  var e = getExpressionsPlugin();
                  e && e.initExpressions(this),
                    this.renderer.initItems(),
                    setTimeout(
                      function () {
                        this.trigger("DOMLoaded");
                      }.bind(this),
                      0
                    ),
                    this.gotoFrame(),
                    this.autoplay && this.play();
                }
              }),
              (AnimationItem.prototype.resize = function (e, t) {
                var r = typeof e == "number" ? e : void 0,
                  n = typeof t == "number" ? t : void 0;
                this.renderer.updateContainerSize(r, n);
              }),
              (AnimationItem.prototype.setSubframe = function (e) {
                this.isSubframeEnabled = !!e;
              }),
              (AnimationItem.prototype.gotoFrame = function () {
                (this.currentFrame = this.isSubframeEnabled
                  ? this.currentRawFrame
                  : ~~this.currentRawFrame),
                  this.timeCompleted !== this.totalFrames &&
                    this.currentFrame > this.timeCompleted &&
                    (this.currentFrame = this.timeCompleted),
                  this.trigger("enterFrame"),
                  this.renderFrame(),
                  this.trigger("drawnFrame");
              }),
              (AnimationItem.prototype.renderFrame = function () {
                if (!(this.isLoaded === !1 || !this.renderer))
                  try {
                    this.expressionsPlugin &&
                      this.expressionsPlugin.resetFrame(),
                      this.renderer.renderFrame(
                        this.currentFrame + this.firstFrame
                      );
                  } catch (e) {
                    this.triggerRenderFrameError(e);
                  }
              }),
              (AnimationItem.prototype.play = function (e) {
                (e && this.name !== e) ||
                  (this.isPaused === !0 &&
                    ((this.isPaused = !1),
                    this.trigger("_play"),
                    this.audioController.resume(),
                    this._idle &&
                      ((this._idle = !1), this.trigger("_active"))));
              }),
              (AnimationItem.prototype.pause = function (e) {
                (e && this.name !== e) ||
                  (this.isPaused === !1 &&
                    ((this.isPaused = !0),
                    this.trigger("_pause"),
                    (this._idle = !0),
                    this.trigger("_idle"),
                    this.audioController.pause()));
              }),
              (AnimationItem.prototype.togglePause = function (e) {
                (e && this.name !== e) ||
                  (this.isPaused === !0 ? this.play() : this.pause());
              }),
              (AnimationItem.prototype.stop = function (e) {
                (e && this.name !== e) ||
                  (this.pause(),
                  (this.playCount = 0),
                  (this._completedLoop = !1),
                  this.setCurrentRawFrameValue(0));
              }),
              (AnimationItem.prototype.getMarkerData = function (e) {
                for (var t, r = 0; r < this.markers.length; r += 1)
                  if (
                    ((t = this.markers[r]), t.payload && t.payload.name === e)
                  )
                    return t;
                return null;
              }),
              (AnimationItem.prototype.goToAndStop = function (e, t, r) {
                if (!(r && this.name !== r)) {
                  var n = Number(e);
                  if (isNaN(n)) {
                    var i = this.getMarkerData(e);
                    i && this.goToAndStop(i.time, !0);
                  } else
                    t
                      ? this.setCurrentRawFrameValue(e)
                      : this.setCurrentRawFrameValue(e * this.frameModifier);
                  this.pause();
                }
              }),
              (AnimationItem.prototype.goToAndPlay = function (e, t, r) {
                if (!(r && this.name !== r)) {
                  var n = Number(e);
                  if (isNaN(n)) {
                    var i = this.getMarkerData(e);
                    i &&
                      (i.duration
                        ? this.playSegments([i.time, i.time + i.duration], !0)
                        : this.goToAndStop(i.time, !0));
                  } else this.goToAndStop(n, t, r);
                  this.play();
                }
              }),
              (AnimationItem.prototype.advanceTime = function (e) {
                if (!(this.isPaused === !0 || this.isLoaded === !1)) {
                  var t = this.currentRawFrame + e * this.frameModifier,
                    r = !1;
                  t >= this.totalFrames - 1 && this.frameModifier > 0
                    ? !this.loop || this.playCount === this.loop
                      ? this.checkSegments(
                          t > this.totalFrames ? t % this.totalFrames : 0
                        ) || ((r = !0), (t = this.totalFrames - 1))
                      : t >= this.totalFrames
                      ? ((this.playCount += 1),
                        this.checkSegments(t % this.totalFrames) ||
                          (this.setCurrentRawFrameValue(t % this.totalFrames),
                          (this._completedLoop = !0),
                          this.trigger("loopComplete")))
                      : this.setCurrentRawFrameValue(t)
                    : t < 0
                    ? this.checkSegments(t % this.totalFrames) ||
                      (this.loop && !(this.playCount-- <= 0 && this.loop !== !0)
                        ? (this.setCurrentRawFrameValue(
                            this.totalFrames + (t % this.totalFrames)
                          ),
                          this._completedLoop
                            ? this.trigger("loopComplete")
                            : (this._completedLoop = !0))
                        : ((r = !0), (t = 0)))
                    : this.setCurrentRawFrameValue(t),
                    r &&
                      (this.setCurrentRawFrameValue(t),
                      this.pause(),
                      this.trigger("complete"));
                }
              }),
              (AnimationItem.prototype.adjustSegment = function (e, t) {
                (this.playCount = 0),
                  e[1] < e[0]
                    ? (this.frameModifier > 0 &&
                        (this.playSpeed < 0
                          ? this.setSpeed(-this.playSpeed)
                          : this.setDirection(-1)),
                      (this.totalFrames = e[0] - e[1]),
                      (this.timeCompleted = this.totalFrames),
                      (this.firstFrame = e[1]),
                      this.setCurrentRawFrameValue(
                        this.totalFrames - 0.001 - t
                      ))
                    : e[1] > e[0] &&
                      (this.frameModifier < 0 &&
                        (this.playSpeed < 0
                          ? this.setSpeed(-this.playSpeed)
                          : this.setDirection(1)),
                      (this.totalFrames = e[1] - e[0]),
                      (this.timeCompleted = this.totalFrames),
                      (this.firstFrame = e[0]),
                      this.setCurrentRawFrameValue(0.001 + t)),
                  this.trigger("segmentStart");
              }),
              (AnimationItem.prototype.setSegment = function (e, t) {
                var r = -1;
                this.isPaused &&
                  (this.currentRawFrame + this.firstFrame < e
                    ? (r = e)
                    : this.currentRawFrame + this.firstFrame > t &&
                      (r = t - e)),
                  (this.firstFrame = e),
                  (this.totalFrames = t - e),
                  (this.timeCompleted = this.totalFrames),
                  r !== -1 && this.goToAndStop(r, !0);
              }),
              (AnimationItem.prototype.playSegments = function (e, t) {
                if (
                  (t && (this.segments.length = 0),
                  _typeof$4(e[0]) === "object")
                ) {
                  var r,
                    n = e.length;
                  for (r = 0; r < n; r += 1) this.segments.push(e[r]);
                } else this.segments.push(e);
                this.segments.length &&
                  t &&
                  this.adjustSegment(this.segments.shift(), 0),
                  this.isPaused && this.play();
              }),
              (AnimationItem.prototype.resetSegments = function (e) {
                (this.segments.length = 0),
                  this.segments.push([
                    this.animationData.ip,
                    this.animationData.op,
                  ]),
                  e && this.checkSegments(0);
              }),
              (AnimationItem.prototype.checkSegments = function (e) {
                return this.segments.length
                  ? (this.adjustSegment(this.segments.shift(), e), !0)
                  : !1;
              }),
              (AnimationItem.prototype.destroy = function (e) {
                (e && this.name !== e) ||
                  !this.renderer ||
                  (this.renderer.destroy(),
                  this.imagePreloader.destroy(),
                  this.trigger("destroy"),
                  (this._cbs = null),
                  (this.onEnterFrame = null),
                  (this.onLoopComplete = null),
                  (this.onComplete = null),
                  (this.onSegmentStart = null),
                  (this.onDestroy = null),
                  (this.renderer = null),
                  (this.expressionsPlugin = null),
                  (this.imagePreloader = null),
                  (this.projectInterface = null));
              }),
              (AnimationItem.prototype.setCurrentRawFrameValue = function (e) {
                (this.currentRawFrame = e), this.gotoFrame();
              }),
              (AnimationItem.prototype.setSpeed = function (e) {
                (this.playSpeed = e), this.updaFrameModifier();
              }),
              (AnimationItem.prototype.setDirection = function (e) {
                (this.playDirection = e < 0 ? -1 : 1), this.updaFrameModifier();
              }),
              (AnimationItem.prototype.setLoop = function (e) {
                this.loop = e;
              }),
              (AnimationItem.prototype.setVolume = function (e, t) {
                (t && this.name !== t) || this.audioController.setVolume(e);
              }),
              (AnimationItem.prototype.getVolume = function () {
                return this.audioController.getVolume();
              }),
              (AnimationItem.prototype.mute = function (e) {
                (e && this.name !== e) || this.audioController.mute();
              }),
              (AnimationItem.prototype.unmute = function (e) {
                (e && this.name !== e) || this.audioController.unmute();
              }),
              (AnimationItem.prototype.updaFrameModifier = function () {
                (this.frameModifier =
                  this.frameMult * this.playSpeed * this.playDirection),
                  this.audioController.setRate(
                    this.playSpeed * this.playDirection
                  );
              }),
              (AnimationItem.prototype.getPath = function () {
                return this.path;
              }),
              (AnimationItem.prototype.getAssetsPath = function (e) {
                var t = "";
                if (e.e) t = e.p;
                else if (this.assetsPath) {
                  var r = e.p;
                  r.indexOf("images/") !== -1 && (r = r.split("/")[1]),
                    (t = this.assetsPath + r);
                } else (t = this.path), (t += e.u ? e.u : ""), (t += e.p);
                return t;
              }),
              (AnimationItem.prototype.getAssetData = function (e) {
                for (var t = 0, r = this.assets.length; t < r; ) {
                  if (e === this.assets[t].id) return this.assets[t];
                  t += 1;
                }
                return null;
              }),
              (AnimationItem.prototype.hide = function () {
                this.renderer.hide();
              }),
              (AnimationItem.prototype.show = function () {
                this.renderer.show();
              }),
              (AnimationItem.prototype.getDuration = function (e) {
                return e ? this.totalFrames : this.totalFrames / this.frameRate;
              }),
              (AnimationItem.prototype.updateDocumentData = function (e, t, r) {
                try {
                  var n = this.renderer.getElementByPath(e);
                  n.updateDocumentData(t, r);
                } catch {}
              }),
              (AnimationItem.prototype.trigger = function (e) {
                if (this._cbs && this._cbs[e])
                  switch (e) {
                    case "enterFrame":
                      this.triggerEvent(
                        e,
                        new BMEnterFrameEvent(
                          e,
                          this.currentFrame,
                          this.totalFrames,
                          this.frameModifier
                        )
                      );
                      break;
                    case "drawnFrame":
                      (this.drawnFrameEvent.currentTime = this.currentFrame),
                        (this.drawnFrameEvent.totalTime = this.totalFrames),
                        (this.drawnFrameEvent.direction = this.frameModifier),
                        this.triggerEvent(e, this.drawnFrameEvent);
                      break;
                    case "loopComplete":
                      this.triggerEvent(
                        e,
                        new BMCompleteLoopEvent(
                          e,
                          this.loop,
                          this.playCount,
                          this.frameMult
                        )
                      );
                      break;
                    case "complete":
                      this.triggerEvent(
                        e,
                        new BMCompleteEvent(e, this.frameMult)
                      );
                      break;
                    case "segmentStart":
                      this.triggerEvent(
                        e,
                        new BMSegmentStartEvent(
                          e,
                          this.firstFrame,
                          this.totalFrames
                        )
                      );
                      break;
                    case "destroy":
                      this.triggerEvent(e, new BMDestroyEvent(e, this));
                      break;
                    default:
                      this.triggerEvent(e);
                  }
                e === "enterFrame" &&
                  this.onEnterFrame &&
                  this.onEnterFrame.call(
                    this,
                    new BMEnterFrameEvent(
                      e,
                      this.currentFrame,
                      this.totalFrames,
                      this.frameMult
                    )
                  ),
                  e === "loopComplete" &&
                    this.onLoopComplete &&
                    this.onLoopComplete.call(
                      this,
                      new BMCompleteLoopEvent(
                        e,
                        this.loop,
                        this.playCount,
                        this.frameMult
                      )
                    ),
                  e === "complete" &&
                    this.onComplete &&
                    this.onComplete.call(
                      this,
                      new BMCompleteEvent(e, this.frameMult)
                    ),
                  e === "segmentStart" &&
                    this.onSegmentStart &&
                    this.onSegmentStart.call(
                      this,
                      new BMSegmentStartEvent(
                        e,
                        this.firstFrame,
                        this.totalFrames
                      )
                    ),
                  e === "destroy" &&
                    this.onDestroy &&
                    this.onDestroy.call(this, new BMDestroyEvent(e, this));
              }),
              (AnimationItem.prototype.triggerRenderFrameError = function (e) {
                var t = new BMRenderFrameErrorEvent(e, this.currentFrame);
                this.triggerEvent("error", t),
                  this.onError && this.onError.call(this, t);
              }),
              (AnimationItem.prototype.triggerConfigError = function (e) {
                var t = new BMConfigErrorEvent(e, this.currentFrame);
                this.triggerEvent("error", t),
                  this.onError && this.onError.call(this, t);
              });
            var animationManager = (function () {
                var e = {},
                  t = [],
                  r = 0,
                  n = 0,
                  i = 0,
                  a = !0,
                  o = !1;
                function l(B) {
                  for (var z = 0, N = B.target; z < n; )
                    t[z].animation === N &&
                      (t.splice(z, 1), (z -= 1), (n -= 1), N.isPaused || E()),
                      (z += 1);
                }
                function c(B, z) {
                  if (!B) return null;
                  for (var N = 0; N < n; ) {
                    if (t[N].elem === B && t[N].elem !== null)
                      return t[N].animation;
                    N += 1;
                  }
                  var V = new AnimationItem();
                  return b(V, B), V.setData(B, z), V;
                }
                function u() {
                  var B,
                    z = t.length,
                    N = [];
                  for (B = 0; B < z; B += 1) N.push(t[B].animation);
                  return N;
                }
                function d() {
                  (i += 1), q();
                }
                function E() {
                  i -= 1;
                }
                function b(B, z) {
                  B.addEventListener("destroy", l),
                    B.addEventListener("_active", d),
                    B.addEventListener("_idle", E),
                    t.push({ elem: z, animation: B }),
                    (n += 1);
                }
                function P(B) {
                  var z = new AnimationItem();
                  return b(z, null), z.setParams(B), z;
                }
                function R(B, z) {
                  var N;
                  for (N = 0; N < n; N += 1) t[N].animation.setSpeed(B, z);
                }
                function T(B, z) {
                  var N;
                  for (N = 0; N < n; N += 1) t[N].animation.setDirection(B, z);
                }
                function M(B) {
                  var z;
                  for (z = 0; z < n; z += 1) t[z].animation.play(B);
                }
                function x(B) {
                  var z = B - r,
                    N;
                  for (N = 0; N < n; N += 1) t[N].animation.advanceTime(z);
                  (r = B), i && !o ? window.requestAnimationFrame(x) : (a = !0);
                }
                function k(B) {
                  (r = B), window.requestAnimationFrame(x);
                }
                function S(B) {
                  var z;
                  for (z = 0; z < n; z += 1) t[z].animation.pause(B);
                }
                function A(B, z, N) {
                  var V;
                  for (V = 0; V < n; V += 1)
                    t[V].animation.goToAndStop(B, z, N);
                }
                function O(B) {
                  var z;
                  for (z = 0; z < n; z += 1) t[z].animation.stop(B);
                }
                function F(B) {
                  var z;
                  for (z = 0; z < n; z += 1) t[z].animation.togglePause(B);
                }
                function D(B) {
                  var z;
                  for (z = n - 1; z >= 0; z -= 1) t[z].animation.destroy(B);
                }
                function H(B, z, N) {
                  var V = [].concat(
                      [].slice.call(document.getElementsByClassName("lottie")),
                      [].slice.call(
                        document.getElementsByClassName("bodymovin")
                      )
                    ),
                    Q,
                    Y = V.length;
                  for (Q = 0; Q < Y; Q += 1)
                    N && V[Q].setAttribute("data-bm-type", N), c(V[Q], B);
                  if (z && Y === 0) {
                    N || (N = "svg");
                    var he = document.getElementsByTagName("body")[0];
                    he.innerText = "";
                    var ye = createTag("div");
                    (ye.style.width = "100%"),
                      (ye.style.height = "100%"),
                      ye.setAttribute("data-bm-type", N),
                      he.appendChild(ye),
                      c(ye, B);
                  }
                }
                function $() {
                  var B;
                  for (B = 0; B < n; B += 1) t[B].animation.resize();
                }
                function q() {
                  !o && i && a && (window.requestAnimationFrame(k), (a = !1));
                }
                function J() {
                  o = !0;
                }
                function K() {
                  (o = !1), q();
                }
                function ee(B, z) {
                  var N;
                  for (N = 0; N < n; N += 1) t[N].animation.setVolume(B, z);
                }
                function le(B) {
                  var z;
                  for (z = 0; z < n; z += 1) t[z].animation.mute(B);
                }
                function re(B) {
                  var z;
                  for (z = 0; z < n; z += 1) t[z].animation.unmute(B);
                }
                return (
                  (e.registerAnimation = c),
                  (e.loadAnimation = P),
                  (e.setSpeed = R),
                  (e.setDirection = T),
                  (e.play = M),
                  (e.pause = S),
                  (e.stop = O),
                  (e.togglePause = F),
                  (e.searchAnimations = H),
                  (e.resize = $),
                  (e.goToAndStop = A),
                  (e.destroy = D),
                  (e.freeze = J),
                  (e.unfreeze = K),
                  (e.setVolume = ee),
                  (e.mute = le),
                  (e.unmute = re),
                  (e.getRegisteredAnimations = u),
                  e
                );
              })(),
              BezierFactory = (function () {
                var e = {};
                e.getBezierEasing = r;
                var t = {};
                function r(k, S, A, O, F) {
                  var D =
                    F ||
                    ("bez_" + k + "_" + S + "_" + A + "_" + O).replace(
                      /\./g,
                      "p"
                    );
                  if (t[D]) return t[D];
                  var H = new x([k, S, A, O]);
                  return (t[D] = H), H;
                }
                var n = 4,
                  i = 0.001,
                  a = 1e-7,
                  o = 10,
                  l = 11,
                  c = 1 / (l - 1),
                  u = typeof Float32Array == "function";
                function d(k, S) {
                  return 1 - 3 * S + 3 * k;
                }
                function E(k, S) {
                  return 3 * S - 6 * k;
                }
                function b(k) {
                  return 3 * k;
                }
                function P(k, S, A) {
                  return ((d(S, A) * k + E(S, A)) * k + b(S)) * k;
                }
                function R(k, S, A) {
                  return 3 * d(S, A) * k * k + 2 * E(S, A) * k + b(S);
                }
                function T(k, S, A, O, F) {
                  var D,
                    H,
                    $ = 0;
                  do
                    (H = S + (A - S) / 2),
                      (D = P(H, O, F) - k),
                      D > 0 ? (A = H) : (S = H);
                  while (Math.abs(D) > a && ++$ < o);
                  return H;
                }
                function M(k, S, A, O) {
                  for (var F = 0; F < n; ++F) {
                    var D = R(S, A, O);
                    if (D === 0) return S;
                    var H = P(S, A, O) - k;
                    S -= H / D;
                  }
                  return S;
                }
                function x(k) {
                  (this._p = k),
                    (this._mSampleValues = u
                      ? new Float32Array(l)
                      : new Array(l)),
                    (this._precomputed = !1),
                    (this.get = this.get.bind(this));
                }
                return (
                  (x.prototype = {
                    get: function (S) {
                      var A = this._p[0],
                        O = this._p[1],
                        F = this._p[2],
                        D = this._p[3];
                      return (
                        this._precomputed || this._precompute(),
                        A === O && F === D
                          ? S
                          : S === 0
                          ? 0
                          : S === 1
                          ? 1
                          : P(this._getTForX(S), O, D)
                      );
                    },
                    _precompute: function () {
                      var S = this._p[0],
                        A = this._p[1],
                        O = this._p[2],
                        F = this._p[3];
                      (this._precomputed = !0),
                        (S !== A || O !== F) && this._calcSampleValues();
                    },
                    _calcSampleValues: function () {
                      for (
                        var S = this._p[0], A = this._p[2], O = 0;
                        O < l;
                        ++O
                      )
                        this._mSampleValues[O] = P(O * c, S, A);
                    },
                    _getTForX: function (S) {
                      for (
                        var A = this._p[0],
                          O = this._p[2],
                          F = this._mSampleValues,
                          D = 0,
                          H = 1,
                          $ = l - 1;
                        H !== $ && F[H] <= S;
                        ++H
                      )
                        D += c;
                      --H;
                      var q = (S - F[H]) / (F[H + 1] - F[H]),
                        J = D + q * c,
                        K = R(J, A, O);
                      return K >= i
                        ? M(S, J, A, O)
                        : K === 0
                        ? J
                        : T(S, D, D + c, A, O);
                    },
                  }),
                  e
                );
              })(),
              pooling = (function () {
                function e(t) {
                  return t.concat(createSizedArray(t.length));
                }
                return { double: e };
              })(),
              poolFactory = (function () {
                return function (e, t, r) {
                  var n = 0,
                    i = e,
                    a = createSizedArray(i),
                    o = { newElement: l, release: c };
                  function l() {
                    var u;
                    return n ? ((n -= 1), (u = a[n])) : (u = t()), u;
                  }
                  function c(u) {
                    n === i && ((a = pooling.double(a)), (i *= 2)),
                      r && r(u),
                      (a[n] = u),
                      (n += 1);
                  }
                  return o;
                };
              })(),
              bezierLengthPool = (function () {
                function e() {
                  return {
                    addedLength: 0,
                    percents: createTypedArray(
                      "float32",
                      getDefaultCurveSegments()
                    ),
                    lengths: createTypedArray(
                      "float32",
                      getDefaultCurveSegments()
                    ),
                  };
                }
                return poolFactory(8, e);
              })(),
              segmentsLengthPool = (function () {
                function e() {
                  return { lengths: [], totalLength: 0 };
                }
                function t(r) {
                  var n,
                    i = r.lengths.length;
                  for (n = 0; n < i; n += 1)
                    bezierLengthPool.release(r.lengths[n]);
                  r.lengths.length = 0;
                }
                return poolFactory(8, e, t);
              })();
            function bezFunction() {
              var e = Math;
              function t(b, P, R, T, M, x) {
                var k = b * T + P * M + R * x - M * T - x * b - R * P;
                return k > -0.001 && k < 0.001;
              }
              function r(b, P, R, T, M, x, k, S, A) {
                if (R === 0 && x === 0 && A === 0) return t(b, P, T, M, k, S);
                var O = e.sqrt(
                    e.pow(T - b, 2) + e.pow(M - P, 2) + e.pow(x - R, 2)
                  ),
                  F = e.sqrt(
                    e.pow(k - b, 2) + e.pow(S - P, 2) + e.pow(A - R, 2)
                  ),
                  D = e.sqrt(
                    e.pow(k - T, 2) + e.pow(S - M, 2) + e.pow(A - x, 2)
                  ),
                  H;
                return (
                  O > F
                    ? O > D
                      ? (H = O - F - D)
                      : (H = D - F - O)
                    : D > F
                    ? (H = D - F - O)
                    : (H = F - O - D),
                  H > -1e-4 && H < 1e-4
                );
              }
              var n = (function () {
                return function (b, P, R, T) {
                  var M = getDefaultCurveSegments(),
                    x,
                    k,
                    S,
                    A,
                    O,
                    F = 0,
                    D,
                    H = [],
                    $ = [],
                    q = bezierLengthPool.newElement();
                  for (S = R.length, x = 0; x < M; x += 1) {
                    for (O = x / (M - 1), D = 0, k = 0; k < S; k += 1)
                      (A =
                        bmPow(1 - O, 3) * b[k] +
                        3 * bmPow(1 - O, 2) * O * R[k] +
                        3 * (1 - O) * bmPow(O, 2) * T[k] +
                        bmPow(O, 3) * P[k]),
                        (H[k] = A),
                        $[k] !== null && (D += bmPow(H[k] - $[k], 2)),
                        ($[k] = H[k]);
                    D && ((D = bmSqrt(D)), (F += D)),
                      (q.percents[x] = O),
                      (q.lengths[x] = F);
                  }
                  return (q.addedLength = F), q;
                };
              })();
              function i(b) {
                var P = segmentsLengthPool.newElement(),
                  R = b.c,
                  T = b.v,
                  M = b.o,
                  x = b.i,
                  k,
                  S = b._length,
                  A = P.lengths,
                  O = 0;
                for (k = 0; k < S - 1; k += 1)
                  (A[k] = n(T[k], T[k + 1], M[k], x[k + 1])),
                    (O += A[k].addedLength);
                return (
                  R &&
                    S &&
                    ((A[k] = n(T[k], T[0], M[k], x[0])),
                    (O += A[k].addedLength)),
                  (P.totalLength = O),
                  P
                );
              }
              function a(b) {
                (this.segmentLength = 0), (this.points = new Array(b));
              }
              function o(b, P) {
                (this.partialLength = b), (this.point = P);
              }
              var l = (function () {
                var b = {};
                return function (P, R, T, M) {
                  var x = (
                    P[0] +
                    "_" +
                    P[1] +
                    "_" +
                    R[0] +
                    "_" +
                    R[1] +
                    "_" +
                    T[0] +
                    "_" +
                    T[1] +
                    "_" +
                    M[0] +
                    "_" +
                    M[1]
                  ).replace(/\./g, "p");
                  if (!b[x]) {
                    var k = getDefaultCurveSegments(),
                      S,
                      A,
                      O,
                      F,
                      D,
                      H = 0,
                      $,
                      q,
                      J = null;
                    P.length === 2 &&
                      (P[0] !== R[0] || P[1] !== R[1]) &&
                      t(P[0], P[1], R[0], R[1], P[0] + T[0], P[1] + T[1]) &&
                      t(P[0], P[1], R[0], R[1], R[0] + M[0], R[1] + M[1]) &&
                      (k = 2);
                    var K = new a(k);
                    for (O = T.length, S = 0; S < k; S += 1) {
                      for (
                        q = createSizedArray(O), D = S / (k - 1), $ = 0, A = 0;
                        A < O;
                        A += 1
                      )
                        (F =
                          bmPow(1 - D, 3) * P[A] +
                          3 * bmPow(1 - D, 2) * D * (P[A] + T[A]) +
                          3 * (1 - D) * bmPow(D, 2) * (R[A] + M[A]) +
                          bmPow(D, 3) * R[A]),
                          (q[A] = F),
                          J !== null && ($ += bmPow(q[A] - J[A], 2));
                      ($ = bmSqrt($)),
                        (H += $),
                        (K.points[S] = new o($, q)),
                        (J = q);
                    }
                    (K.segmentLength = H), (b[x] = K);
                  }
                  return b[x];
                };
              })();
              function c(b, P) {
                var R = P.percents,
                  T = P.lengths,
                  M = R.length,
                  x = bmFloor((M - 1) * b),
                  k = b * P.addedLength,
                  S = 0;
                if (x === M - 1 || x === 0 || k === T[x]) return R[x];
                for (var A = T[x] > k ? -1 : 1, O = !0; O; )
                  if (
                    (T[x] <= k && T[x + 1] > k
                      ? ((S = (k - T[x]) / (T[x + 1] - T[x])), (O = !1))
                      : (x += A),
                    x < 0 || x >= M - 1)
                  ) {
                    if (x === M - 1) return R[x];
                    O = !1;
                  }
                return R[x] + (R[x + 1] - R[x]) * S;
              }
              function u(b, P, R, T, M, x) {
                var k = c(M, x),
                  S = 1 - k,
                  A =
                    e.round(
                      (S * S * S * b[0] +
                        (k * S * S + S * k * S + S * S * k) * R[0] +
                        (k * k * S + S * k * k + k * S * k) * T[0] +
                        k * k * k * P[0]) *
                        1e3
                    ) / 1e3,
                  O =
                    e.round(
                      (S * S * S * b[1] +
                        (k * S * S + S * k * S + S * S * k) * R[1] +
                        (k * k * S + S * k * k + k * S * k) * T[1] +
                        k * k * k * P[1]) *
                        1e3
                    ) / 1e3;
                return [A, O];
              }
              var d = createTypedArray("float32", 8);
              function E(b, P, R, T, M, x, k) {
                M < 0 ? (M = 0) : M > 1 && (M = 1);
                var S = c(M, k);
                x = x > 1 ? 1 : x;
                var A = c(x, k),
                  O,
                  F = b.length,
                  D = 1 - S,
                  H = 1 - A,
                  $ = D * D * D,
                  q = S * D * D * 3,
                  J = S * S * D * 3,
                  K = S * S * S,
                  ee = D * D * H,
                  le = S * D * H + D * S * H + D * D * A,
                  re = S * S * H + D * S * A + S * D * A,
                  B = S * S * A,
                  z = D * H * H,
                  N = S * H * H + D * A * H + D * H * A,
                  V = S * A * H + D * A * A + S * H * A,
                  Q = S * A * A,
                  Y = H * H * H,
                  he = A * H * H + H * A * H + H * H * A,
                  ye = A * A * H + H * A * A + A * H * A,
                  ve = A * A * A;
                for (O = 0; O < F; O += 1)
                  (d[O * 4] =
                    e.round(($ * b[O] + q * R[O] + J * T[O] + K * P[O]) * 1e3) /
                    1e3),
                    (d[O * 4 + 1] =
                      e.round(
                        (ee * b[O] + le * R[O] + re * T[O] + B * P[O]) * 1e3
                      ) / 1e3),
                    (d[O * 4 + 2] =
                      e.round(
                        (z * b[O] + N * R[O] + V * T[O] + Q * P[O]) * 1e3
                      ) / 1e3),
                    (d[O * 4 + 3] =
                      e.round(
                        (Y * b[O] + he * R[O] + ye * T[O] + ve * P[O]) * 1e3
                      ) / 1e3);
                return d;
              }
              return {
                getSegmentsLength: i,
                getNewSegment: E,
                getPointInSegment: u,
                buildBezierData: l,
                pointOnLine2D: t,
                pointOnLine3D: r,
              };
            }
            var bez = bezFunction(),
              initFrame = initialDefaultFrame,
              mathAbs = Math.abs;
            function interpolateValue(e, t) {
              var r = this.offsetTime,
                n;
              this.propType === "multidimensional" &&
                (n = createTypedArray("float32", this.pv.length));
              for (
                var i = t.lastIndex,
                  a = i,
                  o = this.keyframes.length - 1,
                  l = !0,
                  c,
                  u,
                  d;
                l;

              ) {
                if (
                  ((c = this.keyframes[a]),
                  (u = this.keyframes[a + 1]),
                  a === o - 1 && e >= u.t - r)
                ) {
                  c.h && (c = u), (i = 0);
                  break;
                }
                if (u.t - r > e) {
                  i = a;
                  break;
                }
                a < o - 1 ? (a += 1) : ((i = 0), (l = !1));
              }
              d = this.keyframesMetadata[a] || {};
              var E,
                b,
                P,
                R,
                T,
                M,
                x = u.t - r,
                k = c.t - r,
                S;
              if (c.to) {
                d.bezierData ||
                  (d.bezierData = bez.buildBezierData(
                    c.s,
                    u.s || c.e,
                    c.to,
                    c.ti
                  ));
                var A = d.bezierData;
                if (e >= x || e < k) {
                  var O = e >= x ? A.points.length - 1 : 0;
                  for (b = A.points[O].point.length, E = 0; E < b; E += 1)
                    n[E] = A.points[O].point[E];
                } else {
                  d.__fnct
                    ? (M = d.__fnct)
                    : ((M = BezierFactory.getBezierEasing(
                        c.o.x,
                        c.o.y,
                        c.i.x,
                        c.i.y,
                        c.n
                      ).get),
                      (d.__fnct = M)),
                    (P = M((e - k) / (x - k)));
                  var F = A.segmentLength * P,
                    D,
                    H =
                      t.lastFrame < e && t._lastKeyframeIndex === a
                        ? t._lastAddedLength
                        : 0;
                  for (
                    T =
                      t.lastFrame < e && t._lastKeyframeIndex === a
                        ? t._lastPoint
                        : 0,
                      l = !0,
                      R = A.points.length;
                    l;

                  ) {
                    if (
                      ((H += A.points[T].partialLength),
                      F === 0 || P === 0 || T === A.points.length - 1)
                    ) {
                      for (b = A.points[T].point.length, E = 0; E < b; E += 1)
                        n[E] = A.points[T].point[E];
                      break;
                    } else if (
                      F >= H &&
                      F < H + A.points[T + 1].partialLength
                    ) {
                      for (
                        D = (F - H) / A.points[T + 1].partialLength,
                          b = A.points[T].point.length,
                          E = 0;
                        E < b;
                        E += 1
                      )
                        n[E] =
                          A.points[T].point[E] +
                          (A.points[T + 1].point[E] - A.points[T].point[E]) * D;
                      break;
                    }
                    T < R - 1 ? (T += 1) : (l = !1);
                  }
                  (t._lastPoint = T),
                    (t._lastAddedLength = H - A.points[T].partialLength),
                    (t._lastKeyframeIndex = a);
                }
              } else {
                var $, q, J, K, ee;
                if (((o = c.s.length), (S = u.s || c.e), this.sh && c.h !== 1))
                  if (e >= x) (n[0] = S[0]), (n[1] = S[1]), (n[2] = S[2]);
                  else if (e <= k)
                    (n[0] = c.s[0]), (n[1] = c.s[1]), (n[2] = c.s[2]);
                  else {
                    var le = createQuaternion(c.s),
                      re = createQuaternion(S),
                      B = (e - k) / (x - k);
                    quaternionToEuler(n, slerp(le, re, B));
                  }
                else
                  for (a = 0; a < o; a += 1)
                    c.h !== 1 &&
                      (e >= x
                        ? (P = 1)
                        : e < k
                        ? (P = 0)
                        : (c.o.x.constructor === Array
                            ? (d.__fnct || (d.__fnct = []),
                              d.__fnct[a]
                                ? (M = d.__fnct[a])
                                : (($ =
                                    c.o.x[a] === void 0 ? c.o.x[0] : c.o.x[a]),
                                  (q =
                                    c.o.y[a] === void 0 ? c.o.y[0] : c.o.y[a]),
                                  (J =
                                    c.i.x[a] === void 0 ? c.i.x[0] : c.i.x[a]),
                                  (K =
                                    c.i.y[a] === void 0 ? c.i.y[0] : c.i.y[a]),
                                  (M = BezierFactory.getBezierEasing(
                                    $,
                                    q,
                                    J,
                                    K
                                  ).get),
                                  (d.__fnct[a] = M)))
                            : d.__fnct
                            ? (M = d.__fnct)
                            : (($ = c.o.x),
                              (q = c.o.y),
                              (J = c.i.x),
                              (K = c.i.y),
                              (M = BezierFactory.getBezierEasing(
                                $,
                                q,
                                J,
                                K
                              ).get),
                              (c.keyframeMetadata = M)),
                          (P = M((e - k) / (x - k))))),
                      (S = u.s || c.e),
                      (ee = c.h === 1 ? c.s[a] : c.s[a] + (S[a] - c.s[a]) * P),
                      this.propType === "multidimensional"
                        ? (n[a] = ee)
                        : (n = ee);
              }
              return (t.lastIndex = i), n;
            }
            function slerp(e, t, r) {
              var n = [],
                i = e[0],
                a = e[1],
                o = e[2],
                l = e[3],
                c = t[0],
                u = t[1],
                d = t[2],
                E = t[3],
                b,
                P,
                R,
                T,
                M;
              return (
                (P = i * c + a * u + o * d + l * E),
                P < 0 && ((P = -P), (c = -c), (u = -u), (d = -d), (E = -E)),
                1 - P > 1e-6
                  ? ((b = Math.acos(P)),
                    (R = Math.sin(b)),
                    (T = Math.sin((1 - r) * b) / R),
                    (M = Math.sin(r * b) / R))
                  : ((T = 1 - r), (M = r)),
                (n[0] = T * i + M * c),
                (n[1] = T * a + M * u),
                (n[2] = T * o + M * d),
                (n[3] = T * l + M * E),
                n
              );
            }
            function quaternionToEuler(e, t) {
              var r = t[0],
                n = t[1],
                i = t[2],
                a = t[3],
                o = Math.atan2(
                  2 * n * a - 2 * r * i,
                  1 - 2 * n * n - 2 * i * i
                ),
                l = Math.asin(2 * r * n + 2 * i * a),
                c = Math.atan2(
                  2 * r * a - 2 * n * i,
                  1 - 2 * r * r - 2 * i * i
                );
              (e[0] = o / degToRads),
                (e[1] = l / degToRads),
                (e[2] = c / degToRads);
            }
            function createQuaternion(e) {
              var t = e[0] * degToRads,
                r = e[1] * degToRads,
                n = e[2] * degToRads,
                i = Math.cos(t / 2),
                a = Math.cos(r / 2),
                o = Math.cos(n / 2),
                l = Math.sin(t / 2),
                c = Math.sin(r / 2),
                u = Math.sin(n / 2),
                d = i * a * o - l * c * u,
                E = l * c * o + i * a * u,
                b = l * a * o + i * c * u,
                P = i * c * o - l * a * u;
              return [E, b, P, d];
            }
            function getValueAtCurrentTime() {
              var e = this.comp.renderedFrame - this.offsetTime,
                t = this.keyframes[0].t - this.offsetTime,
                r =
                  this.keyframes[this.keyframes.length - 1].t - this.offsetTime;
              if (
                !(
                  e === this._caching.lastFrame ||
                  (this._caching.lastFrame !== initFrame &&
                    ((this._caching.lastFrame >= r && e >= r) ||
                      (this._caching.lastFrame < t && e < t)))
                )
              ) {
                this._caching.lastFrame >= e &&
                  ((this._caching._lastKeyframeIndex = -1),
                  (this._caching.lastIndex = 0));
                var n = this.interpolateValue(e, this._caching);
                this.pv = n;
              }
              return (this._caching.lastFrame = e), this.pv;
            }
            function setVValue(e) {
              var t;
              if (this.propType === "unidimensional")
                (t = e * this.mult),
                  mathAbs(this.v - t) > 1e-5 &&
                    ((this.v = t), (this._mdf = !0));
              else
                for (var r = 0, n = this.v.length; r < n; )
                  (t = e[r] * this.mult),
                    mathAbs(this.v[r] - t) > 1e-5 &&
                      ((this.v[r] = t), (this._mdf = !0)),
                    (r += 1);
            }
            function processEffectsSequence() {
              if (
                !(
                  this.elem.globalData.frameId === this.frameId ||
                  !this.effectsSequence.length
                )
              ) {
                if (this.lock) {
                  this.setVValue(this.pv);
                  return;
                }
                (this.lock = !0), (this._mdf = this._isFirstFrame);
                var e,
                  t = this.effectsSequence.length,
                  r = this.kf ? this.pv : this.data.k;
                for (e = 0; e < t; e += 1) r = this.effectsSequence[e](r);
                this.setVValue(r),
                  (this._isFirstFrame = !1),
                  (this.lock = !1),
                  (this.frameId = this.elem.globalData.frameId);
              }
            }
            function addEffect(e) {
              this.effectsSequence.push(e),
                this.container.addDynamicProperty(this);
            }
            function ValueProperty(e, t, r, n) {
              (this.propType = "unidimensional"),
                (this.mult = r || 1),
                (this.data = t),
                (this.v = r ? t.k * r : t.k),
                (this.pv = t.k),
                (this._mdf = !1),
                (this.elem = e),
                (this.container = n),
                (this.comp = e.comp),
                (this.k = !1),
                (this.kf = !1),
                (this.vel = 0),
                (this.effectsSequence = []),
                (this._isFirstFrame = !0),
                (this.getValue = processEffectsSequence),
                (this.setVValue = setVValue),
                (this.addEffect = addEffect);
            }
            function MultiDimensionalProperty(e, t, r, n) {
              (this.propType = "multidimensional"),
                (this.mult = r || 1),
                (this.data = t),
                (this._mdf = !1),
                (this.elem = e),
                (this.container = n),
                (this.comp = e.comp),
                (this.k = !1),
                (this.kf = !1),
                (this.frameId = -1);
              var i,
                a = t.k.length;
              for (
                this.v = createTypedArray("float32", a),
                  this.pv = createTypedArray("float32", a),
                  this.vel = createTypedArray("float32", a),
                  i = 0;
                i < a;
                i += 1
              )
                (this.v[i] = t.k[i] * this.mult), (this.pv[i] = t.k[i]);
              (this._isFirstFrame = !0),
                (this.effectsSequence = []),
                (this.getValue = processEffectsSequence),
                (this.setVValue = setVValue),
                (this.addEffect = addEffect);
            }
            function KeyframedValueProperty(e, t, r, n) {
              (this.propType = "unidimensional"),
                (this.keyframes = t.k),
                (this.keyframesMetadata = []),
                (this.offsetTime = e.data.st),
                (this.frameId = -1),
                (this._caching = {
                  lastFrame: initFrame,
                  lastIndex: 0,
                  value: 0,
                  _lastKeyframeIndex: -1,
                }),
                (this.k = !0),
                (this.kf = !0),
                (this.data = t),
                (this.mult = r || 1),
                (this.elem = e),
                (this.container = n),
                (this.comp = e.comp),
                (this.v = initFrame),
                (this.pv = initFrame),
                (this._isFirstFrame = !0),
                (this.getValue = processEffectsSequence),
                (this.setVValue = setVValue),
                (this.interpolateValue = interpolateValue),
                (this.effectsSequence = [getValueAtCurrentTime.bind(this)]),
                (this.addEffect = addEffect);
            }
            function KeyframedMultidimensionalProperty(e, t, r, n) {
              this.propType = "multidimensional";
              var i,
                a = t.k.length,
                o,
                l,
                c,
                u;
              for (i = 0; i < a - 1; i += 1)
                t.k[i].to &&
                  t.k[i].s &&
                  t.k[i + 1] &&
                  t.k[i + 1].s &&
                  ((o = t.k[i].s),
                  (l = t.k[i + 1].s),
                  (c = t.k[i].to),
                  (u = t.k[i].ti),
                  ((o.length === 2 &&
                    !(o[0] === l[0] && o[1] === l[1]) &&
                    bez.pointOnLine2D(
                      o[0],
                      o[1],
                      l[0],
                      l[1],
                      o[0] + c[0],
                      o[1] + c[1]
                    ) &&
                    bez.pointOnLine2D(
                      o[0],
                      o[1],
                      l[0],
                      l[1],
                      l[0] + u[0],
                      l[1] + u[1]
                    )) ||
                    (o.length === 3 &&
                      !(o[0] === l[0] && o[1] === l[1] && o[2] === l[2]) &&
                      bez.pointOnLine3D(
                        o[0],
                        o[1],
                        o[2],
                        l[0],
                        l[1],
                        l[2],
                        o[0] + c[0],
                        o[1] + c[1],
                        o[2] + c[2]
                      ) &&
                      bez.pointOnLine3D(
                        o[0],
                        o[1],
                        o[2],
                        l[0],
                        l[1],
                        l[2],
                        l[0] + u[0],
                        l[1] + u[1],
                        l[2] + u[2]
                      ))) &&
                    ((t.k[i].to = null), (t.k[i].ti = null)),
                  o[0] === l[0] &&
                    o[1] === l[1] &&
                    c[0] === 0 &&
                    c[1] === 0 &&
                    u[0] === 0 &&
                    u[1] === 0 &&
                    (o.length === 2 ||
                      (o[2] === l[2] && c[2] === 0 && u[2] === 0)) &&
                    ((t.k[i].to = null), (t.k[i].ti = null)));
              (this.effectsSequence = [getValueAtCurrentTime.bind(this)]),
                (this.data = t),
                (this.keyframes = t.k),
                (this.keyframesMetadata = []),
                (this.offsetTime = e.data.st),
                (this.k = !0),
                (this.kf = !0),
                (this._isFirstFrame = !0),
                (this.mult = r || 1),
                (this.elem = e),
                (this.container = n),
                (this.comp = e.comp),
                (this.getValue = processEffectsSequence),
                (this.setVValue = setVValue),
                (this.interpolateValue = interpolateValue),
                (this.frameId = -1);
              var d = t.k[0].s.length;
              for (
                this.v = createTypedArray("float32", d),
                  this.pv = createTypedArray("float32", d),
                  i = 0;
                i < d;
                i += 1
              )
                (this.v[i] = initFrame), (this.pv[i] = initFrame);
              (this._caching = {
                lastFrame: initFrame,
                lastIndex: 0,
                value: createTypedArray("float32", d),
              }),
                (this.addEffect = addEffect);
            }
            var PropertyFactory = (function () {
              function e(r, n, i, a, o) {
                n.sid && (n = r.globalData.slotManager.getProp(n));
                var l;
                if (!n.k.length) l = new ValueProperty(r, n, a, o);
                else if (typeof n.k[0] == "number")
                  l = new MultiDimensionalProperty(r, n, a, o);
                else
                  switch (i) {
                    case 0:
                      l = new KeyframedValueProperty(r, n, a, o);
                      break;
                    case 1:
                      l = new KeyframedMultidimensionalProperty(r, n, a, o);
                      break;
                  }
                return l.effectsSequence.length && o.addDynamicProperty(l), l;
              }
              var t = { getProp: e };
              return t;
            })();
            function DynamicPropertyContainer() {}
            DynamicPropertyContainer.prototype = {
              addDynamicProperty: function (t) {
                this.dynamicProperties.indexOf(t) === -1 &&
                  (this.dynamicProperties.push(t),
                  this.container.addDynamicProperty(this),
                  (this._isAnimated = !0));
              },
              iterateDynamicProperties: function () {
                this._mdf = !1;
                var t,
                  r = this.dynamicProperties.length;
                for (t = 0; t < r; t += 1)
                  this.dynamicProperties[t].getValue(),
                    this.dynamicProperties[t]._mdf && (this._mdf = !0);
              },
              initDynamicPropertyContainer: function (t) {
                (this.container = t),
                  (this.dynamicProperties = []),
                  (this._mdf = !1),
                  (this._isAnimated = !1);
              },
            };
            var pointPool = (function () {
              function e() {
                return createTypedArray("float32", 2);
              }
              return poolFactory(8, e);
            })();
            function ShapePath() {
              (this.c = !1),
                (this._length = 0),
                (this._maxLength = 8),
                (this.v = createSizedArray(this._maxLength)),
                (this.o = createSizedArray(this._maxLength)),
                (this.i = createSizedArray(this._maxLength));
            }
            (ShapePath.prototype.setPathData = function (e, t) {
              (this.c = e), this.setLength(t);
              for (var r = 0; r < t; )
                (this.v[r] = pointPool.newElement()),
                  (this.o[r] = pointPool.newElement()),
                  (this.i[r] = pointPool.newElement()),
                  (r += 1);
            }),
              (ShapePath.prototype.setLength = function (e) {
                for (; this._maxLength < e; ) this.doubleArrayLength();
                this._length = e;
              }),
              (ShapePath.prototype.doubleArrayLength = function () {
                (this.v = this.v.concat(createSizedArray(this._maxLength))),
                  (this.i = this.i.concat(createSizedArray(this._maxLength))),
                  (this.o = this.o.concat(createSizedArray(this._maxLength))),
                  (this._maxLength *= 2);
              }),
              (ShapePath.prototype.setXYAt = function (e, t, r, n, i) {
                var a;
                switch (
                  ((this._length = Math.max(this._length, n + 1)),
                  this._length >= this._maxLength && this.doubleArrayLength(),
                  r)
                ) {
                  case "v":
                    a = this.v;
                    break;
                  case "i":
                    a = this.i;
                    break;
                  case "o":
                    a = this.o;
                    break;
                  default:
                    a = [];
                    break;
                }
                (!a[n] || (a[n] && !i)) && (a[n] = pointPool.newElement()),
                  (a[n][0] = e),
                  (a[n][1] = t);
              }),
              (ShapePath.prototype.setTripleAt = function (
                e,
                t,
                r,
                n,
                i,
                a,
                o,
                l
              ) {
                this.setXYAt(e, t, "v", o, l),
                  this.setXYAt(r, n, "o", o, l),
                  this.setXYAt(i, a, "i", o, l);
              }),
              (ShapePath.prototype.reverse = function () {
                var e = new ShapePath();
                e.setPathData(this.c, this._length);
                var t = this.v,
                  r = this.o,
                  n = this.i,
                  i = 0;
                this.c &&
                  (e.setTripleAt(
                    t[0][0],
                    t[0][1],
                    n[0][0],
                    n[0][1],
                    r[0][0],
                    r[0][1],
                    0,
                    !1
                  ),
                  (i = 1));
                var a = this._length - 1,
                  o = this._length,
                  l;
                for (l = i; l < o; l += 1)
                  e.setTripleAt(
                    t[a][0],
                    t[a][1],
                    n[a][0],
                    n[a][1],
                    r[a][0],
                    r[a][1],
                    l,
                    !1
                  ),
                    (a -= 1);
                return e;
              }),
              (ShapePath.prototype.length = function () {
                return this._length;
              });
            var shapePool = (function () {
              function e() {
                return new ShapePath();
              }
              function t(i) {
                var a = i._length,
                  o;
                for (o = 0; o < a; o += 1)
                  pointPool.release(i.v[o]),
                    pointPool.release(i.i[o]),
                    pointPool.release(i.o[o]),
                    (i.v[o] = null),
                    (i.i[o] = null),
                    (i.o[o] = null);
                (i._length = 0), (i.c = !1);
              }
              function r(i) {
                var a = n.newElement(),
                  o,
                  l = i._length === void 0 ? i.v.length : i._length;
                for (a.setLength(l), a.c = i.c, o = 0; o < l; o += 1)
                  a.setTripleAt(
                    i.v[o][0],
                    i.v[o][1],
                    i.o[o][0],
                    i.o[o][1],
                    i.i[o][0],
                    i.i[o][1],
                    o
                  );
                return a;
              }
              var n = poolFactory(4, e, t);
              return (n.clone = r), n;
            })();
            function ShapeCollection() {
              (this._length = 0),
                (this._maxLength = 4),
                (this.shapes = createSizedArray(this._maxLength));
            }
            (ShapeCollection.prototype.addShape = function (e) {
              this._length === this._maxLength &&
                ((this.shapes = this.shapes.concat(
                  createSizedArray(this._maxLength)
                )),
                (this._maxLength *= 2)),
                (this.shapes[this._length] = e),
                (this._length += 1);
            }),
              (ShapeCollection.prototype.releaseShapes = function () {
                var e;
                for (e = 0; e < this._length; e += 1)
                  shapePool.release(this.shapes[e]);
                this._length = 0;
              });
            var shapeCollectionPool = (function () {
                var e = { newShapeCollection: i, release: a },
                  t = 0,
                  r = 4,
                  n = createSizedArray(r);
                function i() {
                  var o;
                  return (
                    t ? ((t -= 1), (o = n[t])) : (o = new ShapeCollection()), o
                  );
                }
                function a(o) {
                  var l,
                    c = o._length;
                  for (l = 0; l < c; l += 1) shapePool.release(o.shapes[l]);
                  (o._length = 0),
                    t === r && ((n = pooling.double(n)), (r *= 2)),
                    (n[t] = o),
                    (t += 1);
                }
                return e;
              })(),
              ShapePropertyFactory = (function () {
                var e = -999999;
                function t(x, k, S) {
                  var A = S.lastIndex,
                    O,
                    F,
                    D,
                    H,
                    $,
                    q,
                    J,
                    K,
                    ee,
                    le = this.keyframes;
                  if (x < le[0].t - this.offsetTime)
                    (O = le[0].s[0]), (D = !0), (A = 0);
                  else if (x >= le[le.length - 1].t - this.offsetTime)
                    (O = le[le.length - 1].s
                      ? le[le.length - 1].s[0]
                      : le[le.length - 2].e[0]),
                      (D = !0);
                  else {
                    for (
                      var re = A, B = le.length - 1, z = !0, N, V, Q;
                      z &&
                      ((N = le[re]),
                      (V = le[re + 1]),
                      !(V.t - this.offsetTime > x));

                    )
                      re < B - 1 ? (re += 1) : (z = !1);
                    if (
                      ((Q = this.keyframesMetadata[re] || {}),
                      (D = N.h === 1),
                      (A = re),
                      !D)
                    ) {
                      if (x >= V.t - this.offsetTime) K = 1;
                      else if (x < N.t - this.offsetTime) K = 0;
                      else {
                        var Y;
                        Q.__fnct
                          ? (Y = Q.__fnct)
                          : ((Y = BezierFactory.getBezierEasing(
                              N.o.x,
                              N.o.y,
                              N.i.x,
                              N.i.y
                            ).get),
                            (Q.__fnct = Y)),
                          (K = Y(
                            (x - (N.t - this.offsetTime)) /
                              (V.t - this.offsetTime - (N.t - this.offsetTime))
                          ));
                      }
                      F = V.s ? V.s[0] : N.e[0];
                    }
                    O = N.s[0];
                  }
                  for (
                    q = k._length, J = O.i[0].length, S.lastIndex = A, H = 0;
                    H < q;
                    H += 1
                  )
                    for ($ = 0; $ < J; $ += 1)
                      (ee = D
                        ? O.i[H][$]
                        : O.i[H][$] + (F.i[H][$] - O.i[H][$]) * K),
                        (k.i[H][$] = ee),
                        (ee = D
                          ? O.o[H][$]
                          : O.o[H][$] + (F.o[H][$] - O.o[H][$]) * K),
                        (k.o[H][$] = ee),
                        (ee = D
                          ? O.v[H][$]
                          : O.v[H][$] + (F.v[H][$] - O.v[H][$]) * K),
                        (k.v[H][$] = ee);
                }
                function r() {
                  var x = this.comp.renderedFrame - this.offsetTime,
                    k = this.keyframes[0].t - this.offsetTime,
                    S =
                      this.keyframes[this.keyframes.length - 1].t -
                      this.offsetTime,
                    A = this._caching.lastFrame;
                  return (
                    (A !== e && ((A < k && x < k) || (A > S && x > S))) ||
                      ((this._caching.lastIndex =
                        A < x ? this._caching.lastIndex : 0),
                      this.interpolateShape(x, this.pv, this._caching)),
                    (this._caching.lastFrame = x),
                    this.pv
                  );
                }
                function n() {
                  this.paths = this.localShapeCollection;
                }
                function i(x, k) {
                  if (x._length !== k._length || x.c !== k.c) return !1;
                  var S,
                    A = x._length;
                  for (S = 0; S < A; S += 1)
                    if (
                      x.v[S][0] !== k.v[S][0] ||
                      x.v[S][1] !== k.v[S][1] ||
                      x.o[S][0] !== k.o[S][0] ||
                      x.o[S][1] !== k.o[S][1] ||
                      x.i[S][0] !== k.i[S][0] ||
                      x.i[S][1] !== k.i[S][1]
                    )
                      return !1;
                  return !0;
                }
                function a(x) {
                  i(this.v, x) ||
                    ((this.v = shapePool.clone(x)),
                    this.localShapeCollection.releaseShapes(),
                    this.localShapeCollection.addShape(this.v),
                    (this._mdf = !0),
                    (this.paths = this.localShapeCollection));
                }
                function o() {
                  if (this.elem.globalData.frameId !== this.frameId) {
                    if (!this.effectsSequence.length) {
                      this._mdf = !1;
                      return;
                    }
                    if (this.lock) {
                      this.setVValue(this.pv);
                      return;
                    }
                    (this.lock = !0), (this._mdf = !1);
                    var x;
                    this.kf
                      ? (x = this.pv)
                      : this.data.ks
                      ? (x = this.data.ks.k)
                      : (x = this.data.pt.k);
                    var k,
                      S = this.effectsSequence.length;
                    for (k = 0; k < S; k += 1) x = this.effectsSequence[k](x);
                    this.setVValue(x),
                      (this.lock = !1),
                      (this.frameId = this.elem.globalData.frameId);
                  }
                }
                function l(x, k, S) {
                  (this.propType = "shape"),
                    (this.comp = x.comp),
                    (this.container = x),
                    (this.elem = x),
                    (this.data = k),
                    (this.k = !1),
                    (this.kf = !1),
                    (this._mdf = !1);
                  var A = S === 3 ? k.pt.k : k.ks.k;
                  (this.v = shapePool.clone(A)),
                    (this.pv = shapePool.clone(this.v)),
                    (this.localShapeCollection =
                      shapeCollectionPool.newShapeCollection()),
                    (this.paths = this.localShapeCollection),
                    this.paths.addShape(this.v),
                    (this.reset = n),
                    (this.effectsSequence = []);
                }
                function c(x) {
                  this.effectsSequence.push(x),
                    this.container.addDynamicProperty(this);
                }
                (l.prototype.interpolateShape = t),
                  (l.prototype.getValue = o),
                  (l.prototype.setVValue = a),
                  (l.prototype.addEffect = c);
                function u(x, k, S) {
                  (this.propType = "shape"),
                    (this.comp = x.comp),
                    (this.elem = x),
                    (this.container = x),
                    (this.offsetTime = x.data.st),
                    (this.keyframes = S === 3 ? k.pt.k : k.ks.k),
                    (this.keyframesMetadata = []),
                    (this.k = !0),
                    (this.kf = !0);
                  var A = this.keyframes[0].s[0].i.length;
                  (this.v = shapePool.newElement()),
                    this.v.setPathData(this.keyframes[0].s[0].c, A),
                    (this.pv = shapePool.clone(this.v)),
                    (this.localShapeCollection =
                      shapeCollectionPool.newShapeCollection()),
                    (this.paths = this.localShapeCollection),
                    this.paths.addShape(this.v),
                    (this.lastFrame = e),
                    (this.reset = n),
                    (this._caching = { lastFrame: e, lastIndex: 0 }),
                    (this.effectsSequence = [r.bind(this)]);
                }
                (u.prototype.getValue = o),
                  (u.prototype.interpolateShape = t),
                  (u.prototype.setVValue = a),
                  (u.prototype.addEffect = c);
                var d = (function () {
                    var x = roundCorner;
                    function k(S, A) {
                      (this.v = shapePool.newElement()),
                        this.v.setPathData(!0, 4),
                        (this.localShapeCollection =
                          shapeCollectionPool.newShapeCollection()),
                        (this.paths = this.localShapeCollection),
                        this.localShapeCollection.addShape(this.v),
                        (this.d = A.d),
                        (this.elem = S),
                        (this.comp = S.comp),
                        (this.frameId = -1),
                        this.initDynamicPropertyContainer(S),
                        (this.p = PropertyFactory.getProp(S, A.p, 1, 0, this)),
                        (this.s = PropertyFactory.getProp(S, A.s, 1, 0, this)),
                        this.dynamicProperties.length
                          ? (this.k = !0)
                          : ((this.k = !1), this.convertEllToPath());
                    }
                    return (
                      (k.prototype = {
                        reset: n,
                        getValue: function () {
                          this.elem.globalData.frameId !== this.frameId &&
                            ((this.frameId = this.elem.globalData.frameId),
                            this.iterateDynamicProperties(),
                            this._mdf && this.convertEllToPath());
                        },
                        convertEllToPath: function () {
                          var A = this.p.v[0],
                            O = this.p.v[1],
                            F = this.s.v[0] / 2,
                            D = this.s.v[1] / 2,
                            H = this.d !== 3,
                            $ = this.v;
                          ($.v[0][0] = A),
                            ($.v[0][1] = O - D),
                            ($.v[1][0] = H ? A + F : A - F),
                            ($.v[1][1] = O),
                            ($.v[2][0] = A),
                            ($.v[2][1] = O + D),
                            ($.v[3][0] = H ? A - F : A + F),
                            ($.v[3][1] = O),
                            ($.i[0][0] = H ? A - F * x : A + F * x),
                            ($.i[0][1] = O - D),
                            ($.i[1][0] = H ? A + F : A - F),
                            ($.i[1][1] = O - D * x),
                            ($.i[2][0] = H ? A + F * x : A - F * x),
                            ($.i[2][1] = O + D),
                            ($.i[3][0] = H ? A - F : A + F),
                            ($.i[3][1] = O + D * x),
                            ($.o[0][0] = H ? A + F * x : A - F * x),
                            ($.o[0][1] = O - D),
                            ($.o[1][0] = H ? A + F : A - F),
                            ($.o[1][1] = O + D * x),
                            ($.o[2][0] = H ? A - F * x : A + F * x),
                            ($.o[2][1] = O + D),
                            ($.o[3][0] = H ? A - F : A + F),
                            ($.o[3][1] = O - D * x);
                        },
                      }),
                      extendPrototype([DynamicPropertyContainer], k),
                      k
                    );
                  })(),
                  E = (function () {
                    function x(k, S) {
                      (this.v = shapePool.newElement()),
                        this.v.setPathData(!0, 0),
                        (this.elem = k),
                        (this.comp = k.comp),
                        (this.data = S),
                        (this.frameId = -1),
                        (this.d = S.d),
                        this.initDynamicPropertyContainer(k),
                        S.sy === 1
                          ? ((this.ir = PropertyFactory.getProp(
                              k,
                              S.ir,
                              0,
                              0,
                              this
                            )),
                            (this.is = PropertyFactory.getProp(
                              k,
                              S.is,
                              0,
                              0.01,
                              this
                            )),
                            (this.convertToPath = this.convertStarToPath))
                          : (this.convertToPath = this.convertPolygonToPath),
                        (this.pt = PropertyFactory.getProp(
                          k,
                          S.pt,
                          0,
                          0,
                          this
                        )),
                        (this.p = PropertyFactory.getProp(k, S.p, 1, 0, this)),
                        (this.r = PropertyFactory.getProp(
                          k,
                          S.r,
                          0,
                          degToRads,
                          this
                        )),
                        (this.or = PropertyFactory.getProp(
                          k,
                          S.or,
                          0,
                          0,
                          this
                        )),
                        (this.os = PropertyFactory.getProp(
                          k,
                          S.os,
                          0,
                          0.01,
                          this
                        )),
                        (this.localShapeCollection =
                          shapeCollectionPool.newShapeCollection()),
                        this.localShapeCollection.addShape(this.v),
                        (this.paths = this.localShapeCollection),
                        this.dynamicProperties.length
                          ? (this.k = !0)
                          : ((this.k = !1), this.convertToPath());
                    }
                    return (
                      (x.prototype = {
                        reset: n,
                        getValue: function () {
                          this.elem.globalData.frameId !== this.frameId &&
                            ((this.frameId = this.elem.globalData.frameId),
                            this.iterateDynamicProperties(),
                            this._mdf && this.convertToPath());
                        },
                        convertStarToPath: function () {
                          var S = Math.floor(this.pt.v) * 2,
                            A = (Math.PI * 2) / S,
                            O = !0,
                            F = this.or.v,
                            D = this.ir.v,
                            H = this.os.v,
                            $ = this.is.v,
                            q = (2 * Math.PI * F) / (S * 2),
                            J = (2 * Math.PI * D) / (S * 2),
                            K,
                            ee,
                            le,
                            re,
                            B = -Math.PI / 2;
                          B += this.r.v;
                          var z = this.data.d === 3 ? -1 : 1;
                          for (this.v._length = 0, K = 0; K < S; K += 1) {
                            (ee = O ? F : D),
                              (le = O ? H : $),
                              (re = O ? q : J);
                            var N = ee * Math.cos(B),
                              V = ee * Math.sin(B),
                              Q =
                                N === 0 && V === 0
                                  ? 0
                                  : V / Math.sqrt(N * N + V * V),
                              Y =
                                N === 0 && V === 0
                                  ? 0
                                  : -N / Math.sqrt(N * N + V * V);
                            (N += +this.p.v[0]),
                              (V += +this.p.v[1]),
                              this.v.setTripleAt(
                                N,
                                V,
                                N - Q * re * le * z,
                                V - Y * re * le * z,
                                N + Q * re * le * z,
                                V + Y * re * le * z,
                                K,
                                !0
                              ),
                              (O = !O),
                              (B += A * z);
                          }
                        },
                        convertPolygonToPath: function () {
                          var S = Math.floor(this.pt.v),
                            A = (Math.PI * 2) / S,
                            O = this.or.v,
                            F = this.os.v,
                            D = (2 * Math.PI * O) / (S * 4),
                            H,
                            $ = -Math.PI * 0.5,
                            q = this.data.d === 3 ? -1 : 1;
                          for (
                            $ += this.r.v, this.v._length = 0, H = 0;
                            H < S;
                            H += 1
                          ) {
                            var J = O * Math.cos($),
                              K = O * Math.sin($),
                              ee =
                                J === 0 && K === 0
                                  ? 0
                                  : K / Math.sqrt(J * J + K * K),
                              le =
                                J === 0 && K === 0
                                  ? 0
                                  : -J / Math.sqrt(J * J + K * K);
                            (J += +this.p.v[0]),
                              (K += +this.p.v[1]),
                              this.v.setTripleAt(
                                J,
                                K,
                                J - ee * D * F * q,
                                K - le * D * F * q,
                                J + ee * D * F * q,
                                K + le * D * F * q,
                                H,
                                !0
                              ),
                              ($ += A * q);
                          }
                          (this.paths.length = 0), (this.paths[0] = this.v);
                        },
                      }),
                      extendPrototype([DynamicPropertyContainer], x),
                      x
                    );
                  })(),
                  b = (function () {
                    function x(k, S) {
                      (this.v = shapePool.newElement()),
                        (this.v.c = !0),
                        (this.localShapeCollection =
                          shapeCollectionPool.newShapeCollection()),
                        this.localShapeCollection.addShape(this.v),
                        (this.paths = this.localShapeCollection),
                        (this.elem = k),
                        (this.comp = k.comp),
                        (this.frameId = -1),
                        (this.d = S.d),
                        this.initDynamicPropertyContainer(k),
                        (this.p = PropertyFactory.getProp(k, S.p, 1, 0, this)),
                        (this.s = PropertyFactory.getProp(k, S.s, 1, 0, this)),
                        (this.r = PropertyFactory.getProp(k, S.r, 0, 0, this)),
                        this.dynamicProperties.length
                          ? (this.k = !0)
                          : ((this.k = !1), this.convertRectToPath());
                    }
                    return (
                      (x.prototype = {
                        convertRectToPath: function () {
                          var S = this.p.v[0],
                            A = this.p.v[1],
                            O = this.s.v[0] / 2,
                            F = this.s.v[1] / 2,
                            D = bmMin(O, F, this.r.v),
                            H = D * (1 - roundCorner);
                          (this.v._length = 0),
                            this.d === 2 || this.d === 1
                              ? (this.v.setTripleAt(
                                  S + O,
                                  A - F + D,
                                  S + O,
                                  A - F + D,
                                  S + O,
                                  A - F + H,
                                  0,
                                  !0
                                ),
                                this.v.setTripleAt(
                                  S + O,
                                  A + F - D,
                                  S + O,
                                  A + F - H,
                                  S + O,
                                  A + F - D,
                                  1,
                                  !0
                                ),
                                D !== 0
                                  ? (this.v.setTripleAt(
                                      S + O - D,
                                      A + F,
                                      S + O - D,
                                      A + F,
                                      S + O - H,
                                      A + F,
                                      2,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S - O + D,
                                      A + F,
                                      S - O + H,
                                      A + F,
                                      S - O + D,
                                      A + F,
                                      3,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S - O,
                                      A + F - D,
                                      S - O,
                                      A + F - D,
                                      S - O,
                                      A + F - H,
                                      4,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S - O,
                                      A - F + D,
                                      S - O,
                                      A - F + H,
                                      S - O,
                                      A - F + D,
                                      5,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S - O + D,
                                      A - F,
                                      S - O + D,
                                      A - F,
                                      S - O + H,
                                      A - F,
                                      6,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S + O - D,
                                      A - F,
                                      S + O - H,
                                      A - F,
                                      S + O - D,
                                      A - F,
                                      7,
                                      !0
                                    ))
                                  : (this.v.setTripleAt(
                                      S - O,
                                      A + F,
                                      S - O + H,
                                      A + F,
                                      S - O,
                                      A + F,
                                      2
                                    ),
                                    this.v.setTripleAt(
                                      S - O,
                                      A - F,
                                      S - O,
                                      A - F + H,
                                      S - O,
                                      A - F,
                                      3
                                    )))
                              : (this.v.setTripleAt(
                                  S + O,
                                  A - F + D,
                                  S + O,
                                  A - F + H,
                                  S + O,
                                  A - F + D,
                                  0,
                                  !0
                                ),
                                D !== 0
                                  ? (this.v.setTripleAt(
                                      S + O - D,
                                      A - F,
                                      S + O - D,
                                      A - F,
                                      S + O - H,
                                      A - F,
                                      1,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S - O + D,
                                      A - F,
                                      S - O + H,
                                      A - F,
                                      S - O + D,
                                      A - F,
                                      2,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S - O,
                                      A - F + D,
                                      S - O,
                                      A - F + D,
                                      S - O,
                                      A - F + H,
                                      3,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S - O,
                                      A + F - D,
                                      S - O,
                                      A + F - H,
                                      S - O,
                                      A + F - D,
                                      4,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S - O + D,
                                      A + F,
                                      S - O + D,
                                      A + F,
                                      S - O + H,
                                      A + F,
                                      5,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S + O - D,
                                      A + F,
                                      S + O - H,
                                      A + F,
                                      S + O - D,
                                      A + F,
                                      6,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S + O,
                                      A + F - D,
                                      S + O,
                                      A + F - D,
                                      S + O,
                                      A + F - H,
                                      7,
                                      !0
                                    ))
                                  : (this.v.setTripleAt(
                                      S - O,
                                      A - F,
                                      S - O + H,
                                      A - F,
                                      S - O,
                                      A - F,
                                      1,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S - O,
                                      A + F,
                                      S - O,
                                      A + F - H,
                                      S - O,
                                      A + F,
                                      2,
                                      !0
                                    ),
                                    this.v.setTripleAt(
                                      S + O,
                                      A + F,
                                      S + O - H,
                                      A + F,
                                      S + O,
                                      A + F,
                                      3,
                                      !0
                                    )));
                        },
                        getValue: function () {
                          this.elem.globalData.frameId !== this.frameId &&
                            ((this.frameId = this.elem.globalData.frameId),
                            this.iterateDynamicProperties(),
                            this._mdf && this.convertRectToPath());
                        },
                        reset: n,
                      }),
                      extendPrototype([DynamicPropertyContainer], x),
                      x
                    );
                  })();
                function P(x, k, S) {
                  var A;
                  if (S === 3 || S === 4) {
                    var O = S === 3 ? k.pt : k.ks,
                      F = O.k;
                    F.length ? (A = new u(x, k, S)) : (A = new l(x, k, S));
                  } else
                    S === 5
                      ? (A = new b(x, k))
                      : S === 6
                      ? (A = new d(x, k))
                      : S === 7 && (A = new E(x, k));
                  return A.k && x.addDynamicProperty(A), A;
                }
                function R() {
                  return l;
                }
                function T() {
                  return u;
                }
                var M = {};
                return (
                  (M.getShapeProp = P),
                  (M.getConstructorFunction = R),
                  (M.getKeyframedConstructorFunction = T),
                  M
                );
              })();
            /*!
 Transformation Matrix v2.0
 (c) Epistemex 2014-2015
 www.epistemex.com
 By Ken Fyrstenberg
 Contributions by leeoniya.
 License: MIT, header required.
 */ var Matrix = (function () {
              var e = Math.cos,
                t = Math.sin,
                r = Math.tan,
                n = Math.round;
              function i() {
                return (
                  (this.props[0] = 1),
                  (this.props[1] = 0),
                  (this.props[2] = 0),
                  (this.props[3] = 0),
                  (this.props[4] = 0),
                  (this.props[5] = 1),
                  (this.props[6] = 0),
                  (this.props[7] = 0),
                  (this.props[8] = 0),
                  (this.props[9] = 0),
                  (this.props[10] = 1),
                  (this.props[11] = 0),
                  (this.props[12] = 0),
                  (this.props[13] = 0),
                  (this.props[14] = 0),
                  (this.props[15] = 1),
                  this
                );
              }
              function a(N) {
                if (N === 0) return this;
                var V = e(N),
                  Q = t(N);
                return this._t(V, -Q, 0, 0, Q, V, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
              }
              function o(N) {
                if (N === 0) return this;
                var V = e(N),
                  Q = t(N);
                return this._t(1, 0, 0, 0, 0, V, -Q, 0, 0, Q, V, 0, 0, 0, 0, 1);
              }
              function l(N) {
                if (N === 0) return this;
                var V = e(N),
                  Q = t(N);
                return this._t(V, 0, Q, 0, 0, 1, 0, 0, -Q, 0, V, 0, 0, 0, 0, 1);
              }
              function c(N) {
                if (N === 0) return this;
                var V = e(N),
                  Q = t(N);
                return this._t(V, -Q, 0, 0, Q, V, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
              }
              function u(N, V) {
                return this._t(1, V, N, 1, 0, 0);
              }
              function d(N, V) {
                return this.shear(r(N), r(V));
              }
              function E(N, V) {
                var Q = e(V),
                  Y = t(V);
                return this._t(Q, Y, 0, 0, -Y, Q, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                  ._t(1, 0, 0, 0, r(N), 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1)
                  ._t(Q, -Y, 0, 0, Y, Q, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);
              }
              function b(N, V, Q) {
                return (
                  !Q && Q !== 0 && (Q = 1),
                  N === 1 && V === 1 && Q === 1
                    ? this
                    : this._t(N, 0, 0, 0, 0, V, 0, 0, 0, 0, Q, 0, 0, 0, 0, 1)
                );
              }
              function P(
                N,
                V,
                Q,
                Y,
                he,
                ye,
                ve,
                Pe,
                Ce,
                ie,
                me,
                pe,
                ge,
                Ee,
                Se,
                W
              ) {
                return (
                  (this.props[0] = N),
                  (this.props[1] = V),
                  (this.props[2] = Q),
                  (this.props[3] = Y),
                  (this.props[4] = he),
                  (this.props[5] = ye),
                  (this.props[6] = ve),
                  (this.props[7] = Pe),
                  (this.props[8] = Ce),
                  (this.props[9] = ie),
                  (this.props[10] = me),
                  (this.props[11] = pe),
                  (this.props[12] = ge),
                  (this.props[13] = Ee),
                  (this.props[14] = Se),
                  (this.props[15] = W),
                  this
                );
              }
              function R(N, V, Q) {
                return (
                  (Q = Q || 0),
                  N !== 0 || V !== 0 || Q !== 0
                    ? this._t(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, N, V, Q, 1)
                    : this
                );
              }
              function T(
                N,
                V,
                Q,
                Y,
                he,
                ye,
                ve,
                Pe,
                Ce,
                ie,
                me,
                pe,
                ge,
                Ee,
                Se,
                W
              ) {
                var G = this.props;
                if (
                  N === 1 &&
                  V === 0 &&
                  Q === 0 &&
                  Y === 0 &&
                  he === 0 &&
                  ye === 1 &&
                  ve === 0 &&
                  Pe === 0 &&
                  Ce === 0 &&
                  ie === 0 &&
                  me === 1 &&
                  pe === 0
                )
                  return (
                    (G[12] = G[12] * N + G[15] * ge),
                    (G[13] = G[13] * ye + G[15] * Ee),
                    (G[14] = G[14] * me + G[15] * Se),
                    (G[15] *= W),
                    (this._identityCalculated = !1),
                    this
                  );
                var te = G[0],
                  ae = G[1],
                  se = G[2],
                  ce = G[3],
                  de = G[4],
                  j = G[5],
                  U = G[6],
                  X = G[7],
                  oe = G[8],
                  fe = G[9],
                  ue = G[10],
                  Z = G[11],
                  ne = G[12],
                  _e = G[13],
                  be = G[14],
                  Te = G[15];
                return (
                  (G[0] = te * N + ae * he + se * Ce + ce * ge),
                  (G[1] = te * V + ae * ye + se * ie + ce * Ee),
                  (G[2] = te * Q + ae * ve + se * me + ce * Se),
                  (G[3] = te * Y + ae * Pe + se * pe + ce * W),
                  (G[4] = de * N + j * he + U * Ce + X * ge),
                  (G[5] = de * V + j * ye + U * ie + X * Ee),
                  (G[6] = de * Q + j * ve + U * me + X * Se),
                  (G[7] = de * Y + j * Pe + U * pe + X * W),
                  (G[8] = oe * N + fe * he + ue * Ce + Z * ge),
                  (G[9] = oe * V + fe * ye + ue * ie + Z * Ee),
                  (G[10] = oe * Q + fe * ve + ue * me + Z * Se),
                  (G[11] = oe * Y + fe * Pe + ue * pe + Z * W),
                  (G[12] = ne * N + _e * he + be * Ce + Te * ge),
                  (G[13] = ne * V + _e * ye + be * ie + Te * Ee),
                  (G[14] = ne * Q + _e * ve + be * me + Te * Se),
                  (G[15] = ne * Y + _e * Pe + be * pe + Te * W),
                  (this._identityCalculated = !1),
                  this
                );
              }
              function M(N) {
                var V = N.props;
                return this.transform(
                  V[0],
                  V[1],
                  V[2],
                  V[3],
                  V[4],
                  V[5],
                  V[6],
                  V[7],
                  V[8],
                  V[9],
                  V[10],
                  V[11],
                  V[12],
                  V[13],
                  V[14],
                  V[15]
                );
              }
              function x() {
                return (
                  this._identityCalculated ||
                    ((this._identity = !(
                      this.props[0] !== 1 ||
                      this.props[1] !== 0 ||
                      this.props[2] !== 0 ||
                      this.props[3] !== 0 ||
                      this.props[4] !== 0 ||
                      this.props[5] !== 1 ||
                      this.props[6] !== 0 ||
                      this.props[7] !== 0 ||
                      this.props[8] !== 0 ||
                      this.props[9] !== 0 ||
                      this.props[10] !== 1 ||
                      this.props[11] !== 0 ||
                      this.props[12] !== 0 ||
                      this.props[13] !== 0 ||
                      this.props[14] !== 0 ||
                      this.props[15] !== 1
                    )),
                    (this._identityCalculated = !0)),
                  this._identity
                );
              }
              function k(N) {
                for (var V = 0; V < 16; ) {
                  if (N.props[V] !== this.props[V]) return !1;
                  V += 1;
                }
                return !0;
              }
              function S(N) {
                var V;
                for (V = 0; V < 16; V += 1) N.props[V] = this.props[V];
                return N;
              }
              function A(N) {
                var V;
                for (V = 0; V < 16; V += 1) this.props[V] = N[V];
              }
              function O(N, V, Q) {
                return {
                  x:
                    N * this.props[0] +
                    V * this.props[4] +
                    Q * this.props[8] +
                    this.props[12],
                  y:
                    N * this.props[1] +
                    V * this.props[5] +
                    Q * this.props[9] +
                    this.props[13],
                  z:
                    N * this.props[2] +
                    V * this.props[6] +
                    Q * this.props[10] +
                    this.props[14],
                };
              }
              function F(N, V, Q) {
                return (
                  N * this.props[0] +
                  V * this.props[4] +
                  Q * this.props[8] +
                  this.props[12]
                );
              }
              function D(N, V, Q) {
                return (
                  N * this.props[1] +
                  V * this.props[5] +
                  Q * this.props[9] +
                  this.props[13]
                );
              }
              function H(N, V, Q) {
                return (
                  N * this.props[2] +
                  V * this.props[6] +
                  Q * this.props[10] +
                  this.props[14]
                );
              }
              function $() {
                var N =
                    this.props[0] * this.props[5] -
                    this.props[1] * this.props[4],
                  V = this.props[5] / N,
                  Q = -this.props[1] / N,
                  Y = -this.props[4] / N,
                  he = this.props[0] / N,
                  ye =
                    (this.props[4] * this.props[13] -
                      this.props[5] * this.props[12]) /
                    N,
                  ve =
                    -(
                      this.props[0] * this.props[13] -
                      this.props[1] * this.props[12]
                    ) / N,
                  Pe = new Matrix();
                return (
                  (Pe.props[0] = V),
                  (Pe.props[1] = Q),
                  (Pe.props[4] = Y),
                  (Pe.props[5] = he),
                  (Pe.props[12] = ye),
                  (Pe.props[13] = ve),
                  Pe
                );
              }
              function q(N) {
                var V = this.getInverseMatrix();
                return V.applyToPointArray(N[0], N[1], N[2] || 0);
              }
              function J(N) {
                var V,
                  Q = N.length,
                  Y = [];
                for (V = 0; V < Q; V += 1) Y[V] = q(N[V]);
                return Y;
              }
              function K(N, V, Q) {
                var Y = createTypedArray("float32", 6);
                if (this.isIdentity())
                  (Y[0] = N[0]),
                    (Y[1] = N[1]),
                    (Y[2] = V[0]),
                    (Y[3] = V[1]),
                    (Y[4] = Q[0]),
                    (Y[5] = Q[1]);
                else {
                  var he = this.props[0],
                    ye = this.props[1],
                    ve = this.props[4],
                    Pe = this.props[5],
                    Ce = this.props[12],
                    ie = this.props[13];
                  (Y[0] = N[0] * he + N[1] * ve + Ce),
                    (Y[1] = N[0] * ye + N[1] * Pe + ie),
                    (Y[2] = V[0] * he + V[1] * ve + Ce),
                    (Y[3] = V[0] * ye + V[1] * Pe + ie),
                    (Y[4] = Q[0] * he + Q[1] * ve + Ce),
                    (Y[5] = Q[0] * ye + Q[1] * Pe + ie);
                }
                return Y;
              }
              function ee(N, V, Q) {
                var Y;
                return (
                  this.isIdentity()
                    ? (Y = [N, V, Q])
                    : (Y = [
                        N * this.props[0] +
                          V * this.props[4] +
                          Q * this.props[8] +
                          this.props[12],
                        N * this.props[1] +
                          V * this.props[5] +
                          Q * this.props[9] +
                          this.props[13],
                        N * this.props[2] +
                          V * this.props[6] +
                          Q * this.props[10] +
                          this.props[14],
                      ]),
                  Y
                );
              }
              function le(N, V) {
                if (this.isIdentity()) return N + "," + V;
                var Q = this.props;
                return (
                  Math.round((N * Q[0] + V * Q[4] + Q[12]) * 100) / 100 +
                  "," +
                  Math.round((N * Q[1] + V * Q[5] + Q[13]) * 100) / 100
                );
              }
              function re() {
                for (
                  var N = 0, V = this.props, Q = "matrix3d(", Y = 1e4;
                  N < 16;

                )
                  (Q += n(V[N] * Y) / Y), (Q += N === 15 ? ")" : ","), (N += 1);
                return Q;
              }
              function B(N) {
                var V = 1e4;
                return (N < 1e-6 && N > 0) || (N > -1e-6 && N < 0)
                  ? n(N * V) / V
                  : N;
              }
              function z() {
                var N = this.props,
                  V = B(N[0]),
                  Q = B(N[1]),
                  Y = B(N[4]),
                  he = B(N[5]),
                  ye = B(N[12]),
                  ve = B(N[13]);
                return (
                  "matrix(" +
                  V +
                  "," +
                  Q +
                  "," +
                  Y +
                  "," +
                  he +
                  "," +
                  ye +
                  "," +
                  ve +
                  ")"
                );
              }
              return function () {
                (this.reset = i),
                  (this.rotate = a),
                  (this.rotateX = o),
                  (this.rotateY = l),
                  (this.rotateZ = c),
                  (this.skew = d),
                  (this.skewFromAxis = E),
                  (this.shear = u),
                  (this.scale = b),
                  (this.setTransform = P),
                  (this.translate = R),
                  (this.transform = T),
                  (this.multiply = M),
                  (this.applyToPoint = O),
                  (this.applyToX = F),
                  (this.applyToY = D),
                  (this.applyToZ = H),
                  (this.applyToPointArray = ee),
                  (this.applyToTriplePoints = K),
                  (this.applyToPointStringified = le),
                  (this.toCSS = re),
                  (this.to2dCSS = z),
                  (this.clone = S),
                  (this.cloneFromProps = A),
                  (this.equals = k),
                  (this.inversePoints = J),
                  (this.inversePoint = q),
                  (this.getInverseMatrix = $),
                  (this._t = this.transform),
                  (this.isIdentity = x),
                  (this._identity = !0),
                  (this._identityCalculated = !1),
                  (this.props = createTypedArray("float32", 16)),
                  this.reset();
              };
            })();
            function _typeof$3(e) {
              "@babel/helpers - typeof";
              return (
                typeof Symbol == "function" &&
                typeof Symbol.iterator == "symbol"
                  ? (_typeof$3 = function (r) {
                      return typeof r;
                    })
                  : (_typeof$3 = function (r) {
                      return r &&
                        typeof Symbol == "function" &&
                        r.constructor === Symbol &&
                        r !== Symbol.prototype
                        ? "symbol"
                        : typeof r;
                    }),
                _typeof$3(e)
              );
            }
            var lottie = {};
            function setLocation(e) {
              setLocationHref(e);
            }
            function searchAnimations() {
              animationManager.searchAnimations();
            }
            function setSubframeRendering(e) {
              setSubframeEnabled(e);
            }
            function setPrefix(e) {
              setIdPrefix(e);
            }
            function loadAnimation(e) {
              return animationManager.loadAnimation(e);
            }
            function setQuality(e) {
              if (typeof e == "string")
                switch (e) {
                  case "high":
                    setDefaultCurveSegments(200);
                    break;
                  default:
                  case "medium":
                    setDefaultCurveSegments(50);
                    break;
                  case "low":
                    setDefaultCurveSegments(10);
                    break;
                }
              else !isNaN(e) && e > 1 && setDefaultCurveSegments(e);
            }
            function inBrowser() {
              return typeof navigator < "u";
            }
            function installPlugin(e, t) {
              e === "expressions" && setExpressionsPlugin(t);
            }
            function getFactory(e) {
              switch (e) {
                case "propertyFactory":
                  return PropertyFactory;
                case "shapePropertyFactory":
                  return ShapePropertyFactory;
                case "matrix":
                  return Matrix;
                default:
                  return null;
              }
            }
            (lottie.play = animationManager.play),
              (lottie.pause = animationManager.pause),
              (lottie.setLocationHref = setLocation),
              (lottie.togglePause = animationManager.togglePause),
              (lottie.setSpeed = animationManager.setSpeed),
              (lottie.setDirection = animationManager.setDirection),
              (lottie.stop = animationManager.stop),
              (lottie.searchAnimations = searchAnimations),
              (lottie.registerAnimation = animationManager.registerAnimation),
              (lottie.loadAnimation = loadAnimation),
              (lottie.setSubframeRendering = setSubframeRendering),
              (lottie.resize = animationManager.resize),
              (lottie.goToAndStop = animationManager.goToAndStop),
              (lottie.destroy = animationManager.destroy),
              (lottie.setQuality = setQuality),
              (lottie.inBrowser = inBrowser),
              (lottie.installPlugin = installPlugin),
              (lottie.freeze = animationManager.freeze),
              (lottie.unfreeze = animationManager.unfreeze),
              (lottie.setVolume = animationManager.setVolume),
              (lottie.mute = animationManager.mute),
              (lottie.unmute = animationManager.unmute),
              (lottie.getRegisteredAnimations =
                animationManager.getRegisteredAnimations),
              (lottie.useWebWorker = setWebWorker),
              (lottie.setIDPrefix = setPrefix),
              (lottie.__getFactory = getFactory),
              (lottie.version = "5.12.2");
            function checkReady() {
              document.readyState === "complete" &&
                (clearInterval(readyStateCheckInterval), searchAnimations());
            }
            function getQueryVariable(e) {
              for (
                var t = queryString.split("&"), r = 0;
                r < t.length;
                r += 1
              ) {
                var n = t[r].split("=");
                if (decodeURIComponent(n[0]) == e)
                  return decodeURIComponent(n[1]);
              }
              return null;
            }
            var queryString = "";
            {
              var scripts = document.getElementsByTagName("script"),
                index = scripts.length - 1,
                myScript = scripts[index] || { src: "" };
              (queryString = myScript.src
                ? myScript.src.replace(/^[^\?]+\??/, "")
                : ""),
                getQueryVariable("renderer");
            }
            var readyStateCheckInterval = setInterval(checkReady, 100);
            try {
              _typeof$3(exports) !== "object" && (window.bodymovin = lottie);
            } catch (e) {}
            var ShapeModifiers = (function () {
              var e = {},
                t = {};
              (e.registerModifier = r), (e.getModifier = n);
              function r(i, a) {
                t[i] || (t[i] = a);
              }
              function n(i, a, o) {
                return new t[i](a, o);
              }
              return e;
            })();
            function ShapeModifier() {}
            (ShapeModifier.prototype.initModifierProperties = function () {}),
              (ShapeModifier.prototype.addShapeToModifier = function () {}),
              (ShapeModifier.prototype.addShape = function (e) {
                if (!this.closed) {
                  e.sh.container.addDynamicProperty(e.sh);
                  var t = {
                    shape: e.sh,
                    data: e,
                    localShapeCollection:
                      shapeCollectionPool.newShapeCollection(),
                  };
                  this.shapes.push(t),
                    this.addShapeToModifier(t),
                    this._isAnimated && e.setAsAnimated();
                }
              }),
              (ShapeModifier.prototype.init = function (e, t) {
                (this.shapes = []),
                  (this.elem = e),
                  this.initDynamicPropertyContainer(e),
                  this.initModifierProperties(e, t),
                  (this.frameId = initialDefaultFrame),
                  (this.closed = !1),
                  (this.k = !1),
                  this.dynamicProperties.length
                    ? (this.k = !0)
                    : this.getValue(!0);
              }),
              (ShapeModifier.prototype.processKeys = function () {
                this.elem.globalData.frameId !== this.frameId &&
                  ((this.frameId = this.elem.globalData.frameId),
                  this.iterateDynamicProperties());
              }),
              extendPrototype([DynamicPropertyContainer], ShapeModifier);
            function TrimModifier() {}
            extendPrototype([ShapeModifier], TrimModifier),
              (TrimModifier.prototype.initModifierProperties = function (e, t) {
                (this.s = PropertyFactory.getProp(e, t.s, 0, 0.01, this)),
                  (this.e = PropertyFactory.getProp(e, t.e, 0, 0.01, this)),
                  (this.o = PropertyFactory.getProp(e, t.o, 0, 0, this)),
                  (this.sValue = 0),
                  (this.eValue = 0),
                  (this.getValue = this.processKeys),
                  (this.m = t.m),
                  (this._isAnimated =
                    !!this.s.effectsSequence.length ||
                    !!this.e.effectsSequence.length ||
                    !!this.o.effectsSequence.length);
              }),
              (TrimModifier.prototype.addShapeToModifier = function (e) {
                e.pathsData = [];
              }),
              (TrimModifier.prototype.calculateShapeEdges = function (
                e,
                t,
                r,
                n,
                i
              ) {
                var a = [];
                t <= 1
                  ? a.push({ s: e, e: t })
                  : e >= 1
                  ? a.push({ s: e - 1, e: t - 1 })
                  : (a.push({ s: e, e: 1 }), a.push({ s: 0, e: t - 1 }));
                var o = [],
                  l,
                  c = a.length,
                  u;
                for (l = 0; l < c; l += 1)
                  if (((u = a[l]), !(u.e * i < n || u.s * i > n + r))) {
                    var d, E;
                    u.s * i <= n ? (d = 0) : (d = (u.s * i - n) / r),
                      u.e * i >= n + r ? (E = 1) : (E = (u.e * i - n) / r),
                      o.push([d, E]);
                  }
                return o.length || o.push([0, 0]), o;
              }),
              (TrimModifier.prototype.releasePathsData = function (e) {
                var t,
                  r = e.length;
                for (t = 0; t < r; t += 1) segmentsLengthPool.release(e[t]);
                return (e.length = 0), e;
              }),
              (TrimModifier.prototype.processShapes = function (e) {
                var t, r;
                if (this._mdf || e) {
                  var n = (this.o.v % 360) / 360;
                  if (
                    (n < 0 && (n += 1),
                    this.s.v > 1
                      ? (t = 1 + n)
                      : this.s.v < 0
                      ? (t = 0 + n)
                      : (t = this.s.v + n),
                    this.e.v > 1
                      ? (r = 1 + n)
                      : this.e.v < 0
                      ? (r = 0 + n)
                      : (r = this.e.v + n),
                    t > r)
                  ) {
                    var i = t;
                    (t = r), (r = i);
                  }
                  (t = Math.round(t * 1e4) * 1e-4),
                    (r = Math.round(r * 1e4) * 1e-4),
                    (this.sValue = t),
                    (this.eValue = r);
                } else (t = this.sValue), (r = this.eValue);
                var a,
                  o,
                  l = this.shapes.length,
                  c,
                  u,
                  d,
                  E,
                  b,
                  P = 0;
                if (r === t)
                  for (o = 0; o < l; o += 1)
                    this.shapes[o].localShapeCollection.releaseShapes(),
                      (this.shapes[o].shape._mdf = !0),
                      (this.shapes[o].shape.paths =
                        this.shapes[o].localShapeCollection),
                      this._mdf && (this.shapes[o].pathsData.length = 0);
                else if ((r === 1 && t === 0) || (r === 0 && t === 1)) {
                  if (this._mdf)
                    for (o = 0; o < l; o += 1)
                      (this.shapes[o].pathsData.length = 0),
                        (this.shapes[o].shape._mdf = !0);
                } else {
                  var R = [],
                    T,
                    M;
                  for (o = 0; o < l; o += 1)
                    if (
                      ((T = this.shapes[o]),
                      !T.shape._mdf && !this._mdf && !e && this.m !== 2)
                    )
                      T.shape.paths = T.localShapeCollection;
                    else {
                      if (
                        ((a = T.shape.paths),
                        (u = a._length),
                        (b = 0),
                        !T.shape._mdf && T.pathsData.length)
                      )
                        b = T.totalShapeLength;
                      else {
                        for (
                          d = this.releasePathsData(T.pathsData), c = 0;
                          c < u;
                          c += 1
                        )
                          (E = bez.getSegmentsLength(a.shapes[c])),
                            d.push(E),
                            (b += E.totalLength);
                        (T.totalShapeLength = b), (T.pathsData = d);
                      }
                      (P += b), (T.shape._mdf = !0);
                    }
                  var x = t,
                    k = r,
                    S = 0,
                    A;
                  for (o = l - 1; o >= 0; o -= 1)
                    if (((T = this.shapes[o]), T.shape._mdf)) {
                      for (
                        M = T.localShapeCollection,
                          M.releaseShapes(),
                          this.m === 2 && l > 1
                            ? ((A = this.calculateShapeEdges(
                                t,
                                r,
                                T.totalShapeLength,
                                S,
                                P
                              )),
                              (S += T.totalShapeLength))
                            : (A = [[x, k]]),
                          u = A.length,
                          c = 0;
                        c < u;
                        c += 1
                      ) {
                        (x = A[c][0]),
                          (k = A[c][1]),
                          (R.length = 0),
                          k <= 1
                            ? R.push({
                                s: T.totalShapeLength * x,
                                e: T.totalShapeLength * k,
                              })
                            : x >= 1
                            ? R.push({
                                s: T.totalShapeLength * (x - 1),
                                e: T.totalShapeLength * (k - 1),
                              })
                            : (R.push({
                                s: T.totalShapeLength * x,
                                e: T.totalShapeLength,
                              }),
                              R.push({
                                s: 0,
                                e: T.totalShapeLength * (k - 1),
                              }));
                        var O = this.addShapes(T, R[0]);
                        if (R[0].s !== R[0].e) {
                          if (R.length > 1) {
                            var F =
                              T.shape.paths.shapes[T.shape.paths._length - 1];
                            if (F.c) {
                              var D = O.pop();
                              this.addPaths(O, M),
                                (O = this.addShapes(T, R[1], D));
                            } else
                              this.addPaths(O, M),
                                (O = this.addShapes(T, R[1]));
                          }
                          this.addPaths(O, M);
                        }
                      }
                      T.shape.paths = M;
                    }
                }
              }),
              (TrimModifier.prototype.addPaths = function (e, t) {
                var r,
                  n = e.length;
                for (r = 0; r < n; r += 1) t.addShape(e[r]);
              }),
              (TrimModifier.prototype.addSegment = function (
                e,
                t,
                r,
                n,
                i,
                a,
                o
              ) {
                i.setXYAt(t[0], t[1], "o", a),
                  i.setXYAt(r[0], r[1], "i", a + 1),
                  o && i.setXYAt(e[0], e[1], "v", a),
                  i.setXYAt(n[0], n[1], "v", a + 1);
              }),
              (TrimModifier.prototype.addSegmentFromArray = function (
                e,
                t,
                r,
                n
              ) {
                t.setXYAt(e[1], e[5], "o", r),
                  t.setXYAt(e[2], e[6], "i", r + 1),
                  n && t.setXYAt(e[0], e[4], "v", r),
                  t.setXYAt(e[3], e[7], "v", r + 1);
              }),
              (TrimModifier.prototype.addShapes = function (e, t, r) {
                var n = e.pathsData,
                  i = e.shape.paths.shapes,
                  a,
                  o = e.shape.paths._length,
                  l,
                  c,
                  u = 0,
                  d,
                  E,
                  b,
                  P,
                  R = [],
                  T,
                  M = !0;
                for (
                  r
                    ? ((E = r._length), (T = r._length))
                    : ((r = shapePool.newElement()), (E = 0), (T = 0)),
                    R.push(r),
                    a = 0;
                  a < o;
                  a += 1
                ) {
                  for (
                    b = n[a].lengths,
                      r.c = i[a].c,
                      c = i[a].c ? b.length : b.length + 1,
                      l = 1;
                    l < c;
                    l += 1
                  )
                    if (((d = b[l - 1]), u + d.addedLength < t.s))
                      (u += d.addedLength), (r.c = !1);
                    else if (u > t.e) {
                      r.c = !1;
                      break;
                    } else
                      t.s <= u && t.e >= u + d.addedLength
                        ? (this.addSegment(
                            i[a].v[l - 1],
                            i[a].o[l - 1],
                            i[a].i[l],
                            i[a].v[l],
                            r,
                            E,
                            M
                          ),
                          (M = !1))
                        : ((P = bez.getNewSegment(
                            i[a].v[l - 1],
                            i[a].v[l],
                            i[a].o[l - 1],
                            i[a].i[l],
                            (t.s - u) / d.addedLength,
                            (t.e - u) / d.addedLength,
                            b[l - 1]
                          )),
                          this.addSegmentFromArray(P, r, E, M),
                          (M = !1),
                          (r.c = !1)),
                        (u += d.addedLength),
                        (E += 1);
                  if (i[a].c && b.length) {
                    if (((d = b[l - 1]), u <= t.e)) {
                      var x = b[l - 1].addedLength;
                      t.s <= u && t.e >= u + x
                        ? (this.addSegment(
                            i[a].v[l - 1],
                            i[a].o[l - 1],
                            i[a].i[0],
                            i[a].v[0],
                            r,
                            E,
                            M
                          ),
                          (M = !1))
                        : ((P = bez.getNewSegment(
                            i[a].v[l - 1],
                            i[a].v[0],
                            i[a].o[l - 1],
                            i[a].i[0],
                            (t.s - u) / x,
                            (t.e - u) / x,
                            b[l - 1]
                          )),
                          this.addSegmentFromArray(P, r, E, M),
                          (M = !1),
                          (r.c = !1));
                    } else r.c = !1;
                    (u += d.addedLength), (E += 1);
                  }
                  if (
                    (r._length &&
                      (r.setXYAt(r.v[T][0], r.v[T][1], "i", T),
                      r.setXYAt(
                        r.v[r._length - 1][0],
                        r.v[r._length - 1][1],
                        "o",
                        r._length - 1
                      )),
                    u > t.e)
                  )
                    break;
                  a < o - 1 &&
                    ((r = shapePool.newElement()),
                    (M = !0),
                    R.push(r),
                    (E = 0));
                }
                return R;
              });
            function PuckerAndBloatModifier() {}
            extendPrototype([ShapeModifier], PuckerAndBloatModifier),
              (PuckerAndBloatModifier.prototype.initModifierProperties =
                function (e, t) {
                  (this.getValue = this.processKeys),
                    (this.amount = PropertyFactory.getProp(
                      e,
                      t.a,
                      0,
                      null,
                      this
                    )),
                    (this._isAnimated = !!this.amount.effectsSequence.length);
                }),
              (PuckerAndBloatModifier.prototype.processPath = function (e, t) {
                var r = t / 100,
                  n = [0, 0],
                  i = e._length,
                  a = 0;
                for (a = 0; a < i; a += 1)
                  (n[0] += e.v[a][0]), (n[1] += e.v[a][1]);
                (n[0] /= i), (n[1] /= i);
                var o = shapePool.newElement();
                o.c = e.c;
                var l, c, u, d, E, b;
                for (a = 0; a < i; a += 1)
                  (l = e.v[a][0] + (n[0] - e.v[a][0]) * r),
                    (c = e.v[a][1] + (n[1] - e.v[a][1]) * r),
                    (u = e.o[a][0] + (n[0] - e.o[a][0]) * -r),
                    (d = e.o[a][1] + (n[1] - e.o[a][1]) * -r),
                    (E = e.i[a][0] + (n[0] - e.i[a][0]) * -r),
                    (b = e.i[a][1] + (n[1] - e.i[a][1]) * -r),
                    o.setTripleAt(l, c, u, d, E, b, a);
                return o;
              }),
              (PuckerAndBloatModifier.prototype.processShapes = function (e) {
                var t,
                  r,
                  n = this.shapes.length,
                  i,
                  a,
                  o = this.amount.v;
                if (o !== 0) {
                  var l, c;
                  for (r = 0; r < n; r += 1) {
                    if (
                      ((l = this.shapes[r]),
                      (c = l.localShapeCollection),
                      !(!l.shape._mdf && !this._mdf && !e))
                    )
                      for (
                        c.releaseShapes(),
                          l.shape._mdf = !0,
                          t = l.shape.paths.shapes,
                          a = l.shape.paths._length,
                          i = 0;
                        i < a;
                        i += 1
                      )
                        c.addShape(this.processPath(t[i], o));
                    l.shape.paths = l.localShapeCollection;
                  }
                }
                this.dynamicProperties.length || (this._mdf = !1);
              });
            var TransformPropertyFactory = (function () {
              var e = [0, 0];
              function t(c) {
                var u = this._mdf;
                this.iterateDynamicProperties(),
                  (this._mdf = this._mdf || u),
                  this.a &&
                    c.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                  this.s && c.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                  this.sk && c.skewFromAxis(-this.sk.v, this.sa.v),
                  this.r
                    ? c.rotate(-this.r.v)
                    : c
                        .rotateZ(-this.rz.v)
                        .rotateY(this.ry.v)
                        .rotateX(this.rx.v)
                        .rotateZ(-this.or.v[2])
                        .rotateY(this.or.v[1])
                        .rotateX(this.or.v[0]),
                  this.data.p.s
                    ? this.data.p.z
                      ? c.translate(this.px.v, this.py.v, -this.pz.v)
                      : c.translate(this.px.v, this.py.v, 0)
                    : c.translate(this.p.v[0], this.p.v[1], -this.p.v[2]);
              }
              function r(c) {
                if (this.elem.globalData.frameId !== this.frameId) {
                  if (
                    (this._isDirty &&
                      (this.precalculateMatrix(), (this._isDirty = !1)),
                    this.iterateDynamicProperties(),
                    this._mdf || c)
                  ) {
                    var u;
                    if (
                      (this.v.cloneFromProps(this.pre.props),
                      this.appliedTransformations < 1 &&
                        this.v.translate(
                          -this.a.v[0],
                          -this.a.v[1],
                          this.a.v[2]
                        ),
                      this.appliedTransformations < 2 &&
                        this.v.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                      this.sk &&
                        this.appliedTransformations < 3 &&
                        this.v.skewFromAxis(-this.sk.v, this.sa.v),
                      this.r && this.appliedTransformations < 4
                        ? this.v.rotate(-this.r.v)
                        : !this.r &&
                          this.appliedTransformations < 4 &&
                          this.v
                            .rotateZ(-this.rz.v)
                            .rotateY(this.ry.v)
                            .rotateX(this.rx.v)
                            .rotateZ(-this.or.v[2])
                            .rotateY(this.or.v[1])
                            .rotateX(this.or.v[0]),
                      this.autoOriented)
                    ) {
                      var d, E;
                      if (
                        ((u = this.elem.globalData.frameRate),
                        this.p && this.p.keyframes && this.p.getValueAtTime)
                      )
                        this.p._caching.lastFrame + this.p.offsetTime <=
                        this.p.keyframes[0].t
                          ? ((d = this.p.getValueAtTime(
                              (this.p.keyframes[0].t + 0.01) / u,
                              0
                            )),
                            (E = this.p.getValueAtTime(
                              this.p.keyframes[0].t / u,
                              0
                            )))
                          : this.p._caching.lastFrame + this.p.offsetTime >=
                            this.p.keyframes[this.p.keyframes.length - 1].t
                          ? ((d = this.p.getValueAtTime(
                              this.p.keyframes[this.p.keyframes.length - 1].t /
                                u,
                              0
                            )),
                            (E = this.p.getValueAtTime(
                              (this.p.keyframes[this.p.keyframes.length - 1].t -
                                0.05) /
                                u,
                              0
                            )))
                          : ((d = this.p.pv),
                            (E = this.p.getValueAtTime(
                              (this.p._caching.lastFrame +
                                this.p.offsetTime -
                                0.01) /
                                u,
                              this.p.offsetTime
                            )));
                      else if (
                        this.px &&
                        this.px.keyframes &&
                        this.py.keyframes &&
                        this.px.getValueAtTime &&
                        this.py.getValueAtTime
                      ) {
                        (d = []), (E = []);
                        var b = this.px,
                          P = this.py;
                        b._caching.lastFrame + b.offsetTime <= b.keyframes[0].t
                          ? ((d[0] = b.getValueAtTime(
                              (b.keyframes[0].t + 0.01) / u,
                              0
                            )),
                            (d[1] = P.getValueAtTime(
                              (P.keyframes[0].t + 0.01) / u,
                              0
                            )),
                            (E[0] = b.getValueAtTime(b.keyframes[0].t / u, 0)),
                            (E[1] = P.getValueAtTime(P.keyframes[0].t / u, 0)))
                          : b._caching.lastFrame + b.offsetTime >=
                            b.keyframes[b.keyframes.length - 1].t
                          ? ((d[0] = b.getValueAtTime(
                              b.keyframes[b.keyframes.length - 1].t / u,
                              0
                            )),
                            (d[1] = P.getValueAtTime(
                              P.keyframes[P.keyframes.length - 1].t / u,
                              0
                            )),
                            (E[0] = b.getValueAtTime(
                              (b.keyframes[b.keyframes.length - 1].t - 0.01) /
                                u,
                              0
                            )),
                            (E[1] = P.getValueAtTime(
                              (P.keyframes[P.keyframes.length - 1].t - 0.01) /
                                u,
                              0
                            )))
                          : ((d = [b.pv, P.pv]),
                            (E[0] = b.getValueAtTime(
                              (b._caching.lastFrame + b.offsetTime - 0.01) / u,
                              b.offsetTime
                            )),
                            (E[1] = P.getValueAtTime(
                              (P._caching.lastFrame + P.offsetTime - 0.01) / u,
                              P.offsetTime
                            )));
                      } else (E = e), (d = E);
                      this.v.rotate(-Math.atan2(d[1] - E[1], d[0] - E[0]));
                    }
                    this.data.p && this.data.p.s
                      ? this.data.p.z
                        ? this.v.translate(this.px.v, this.py.v, -this.pz.v)
                        : this.v.translate(this.px.v, this.py.v, 0)
                      : this.v.translate(
                          this.p.v[0],
                          this.p.v[1],
                          -this.p.v[2]
                        );
                  }
                  this.frameId = this.elem.globalData.frameId;
                }
              }
              function n() {
                if (
                  ((this.appliedTransformations = 0),
                  this.pre.reset(),
                  !this.a.effectsSequence.length)
                )
                  this.pre.translate(-this.a.v[0], -this.a.v[1], this.a.v[2]),
                    (this.appliedTransformations = 1);
                else return;
                if (!this.s.effectsSequence.length)
                  this.pre.scale(this.s.v[0], this.s.v[1], this.s.v[2]),
                    (this.appliedTransformations = 2);
                else return;
                if (this.sk)
                  if (
                    !this.sk.effectsSequence.length &&
                    !this.sa.effectsSequence.length
                  )
                    this.pre.skewFromAxis(-this.sk.v, this.sa.v),
                      (this.appliedTransformations = 3);
                  else return;
                this.r
                  ? this.r.effectsSequence.length ||
                    (this.pre.rotate(-this.r.v),
                    (this.appliedTransformations = 4))
                  : !this.rz.effectsSequence.length &&
                    !this.ry.effectsSequence.length &&
                    !this.rx.effectsSequence.length &&
                    !this.or.effectsSequence.length &&
                    (this.pre
                      .rotateZ(-this.rz.v)
                      .rotateY(this.ry.v)
                      .rotateX(this.rx.v)
                      .rotateZ(-this.or.v[2])
                      .rotateY(this.or.v[1])
                      .rotateX(this.or.v[0]),
                    (this.appliedTransformations = 4));
              }
              function i() {}
              function a(c) {
                this._addDynamicProperty(c),
                  this.elem.addDynamicProperty(c),
                  (this._isDirty = !0);
              }
              function o(c, u, d) {
                if (
                  ((this.elem = c),
                  (this.frameId = -1),
                  (this.propType = "transform"),
                  (this.data = u),
                  (this.v = new Matrix()),
                  (this.pre = new Matrix()),
                  (this.appliedTransformations = 0),
                  this.initDynamicPropertyContainer(d || c),
                  u.p && u.p.s
                    ? ((this.px = PropertyFactory.getProp(
                        c,
                        u.p.x,
                        0,
                        0,
                        this
                      )),
                      (this.py = PropertyFactory.getProp(c, u.p.y, 0, 0, this)),
                      u.p.z &&
                        (this.pz = PropertyFactory.getProp(
                          c,
                          u.p.z,
                          0,
                          0,
                          this
                        )))
                    : (this.p = PropertyFactory.getProp(
                        c,
                        u.p || { k: [0, 0, 0] },
                        1,
                        0,
                        this
                      )),
                  u.rx)
                ) {
                  if (
                    ((this.rx = PropertyFactory.getProp(
                      c,
                      u.rx,
                      0,
                      degToRads,
                      this
                    )),
                    (this.ry = PropertyFactory.getProp(
                      c,
                      u.ry,
                      0,
                      degToRads,
                      this
                    )),
                    (this.rz = PropertyFactory.getProp(
                      c,
                      u.rz,
                      0,
                      degToRads,
                      this
                    )),
                    u.or.k[0].ti)
                  ) {
                    var E,
                      b = u.or.k.length;
                    for (E = 0; E < b; E += 1)
                      (u.or.k[E].to = null), (u.or.k[E].ti = null);
                  }
                  (this.or = PropertyFactory.getProp(
                    c,
                    u.or,
                    1,
                    degToRads,
                    this
                  )),
                    (this.or.sh = !0);
                } else
                  this.r = PropertyFactory.getProp(
                    c,
                    u.r || { k: 0 },
                    0,
                    degToRads,
                    this
                  );
                u.sk &&
                  ((this.sk = PropertyFactory.getProp(
                    c,
                    u.sk,
                    0,
                    degToRads,
                    this
                  )),
                  (this.sa = PropertyFactory.getProp(
                    c,
                    u.sa,
                    0,
                    degToRads,
                    this
                  ))),
                  (this.a = PropertyFactory.getProp(
                    c,
                    u.a || { k: [0, 0, 0] },
                    1,
                    0,
                    this
                  )),
                  (this.s = PropertyFactory.getProp(
                    c,
                    u.s || { k: [100, 100, 100] },
                    1,
                    0.01,
                    this
                  )),
                  u.o
                    ? (this.o = PropertyFactory.getProp(c, u.o, 0, 0.01, c))
                    : (this.o = { _mdf: !1, v: 1 }),
                  (this._isDirty = !0),
                  this.dynamicProperties.length || this.getValue(!0);
              }
              (o.prototype = {
                applyToMatrix: t,
                getValue: r,
                precalculateMatrix: n,
                autoOrient: i,
              }),
                extendPrototype([DynamicPropertyContainer], o),
                (o.prototype.addDynamicProperty = a),
                (o.prototype._addDynamicProperty =
                  DynamicPropertyContainer.prototype.addDynamicProperty);
              function l(c, u, d) {
                return new o(c, u, d);
              }
              return { getTransformProperty: l };
            })();
            function RepeaterModifier() {}
            extendPrototype([ShapeModifier], RepeaterModifier),
              (RepeaterModifier.prototype.initModifierProperties = function (
                e,
                t
              ) {
                (this.getValue = this.processKeys),
                  (this.c = PropertyFactory.getProp(e, t.c, 0, null, this)),
                  (this.o = PropertyFactory.getProp(e, t.o, 0, null, this)),
                  (this.tr = TransformPropertyFactory.getTransformProperty(
                    e,
                    t.tr,
                    this
                  )),
                  (this.so = PropertyFactory.getProp(
                    e,
                    t.tr.so,
                    0,
                    0.01,
                    this
                  )),
                  (this.eo = PropertyFactory.getProp(
                    e,
                    t.tr.eo,
                    0,
                    0.01,
                    this
                  )),
                  (this.data = t),
                  this.dynamicProperties.length || this.getValue(!0),
                  (this._isAnimated = !!this.dynamicProperties.length),
                  (this.pMatrix = new Matrix()),
                  (this.rMatrix = new Matrix()),
                  (this.sMatrix = new Matrix()),
                  (this.tMatrix = new Matrix()),
                  (this.matrix = new Matrix());
              }),
              (RepeaterModifier.prototype.applyTransforms = function (
                e,
                t,
                r,
                n,
                i,
                a
              ) {
                var o = a ? -1 : 1,
                  l = n.s.v[0] + (1 - n.s.v[0]) * (1 - i),
                  c = n.s.v[1] + (1 - n.s.v[1]) * (1 - i);
                e.translate(n.p.v[0] * o * i, n.p.v[1] * o * i, n.p.v[2]),
                  t.translate(-n.a.v[0], -n.a.v[1], n.a.v[2]),
                  t.rotate(-n.r.v * o * i),
                  t.translate(n.a.v[0], n.a.v[1], n.a.v[2]),
                  r.translate(-n.a.v[0], -n.a.v[1], n.a.v[2]),
                  r.scale(a ? 1 / l : l, a ? 1 / c : c),
                  r.translate(n.a.v[0], n.a.v[1], n.a.v[2]);
              }),
              (RepeaterModifier.prototype.init = function (e, t, r, n) {
                for (
                  this.elem = e,
                    this.arr = t,
                    this.pos = r,
                    this.elemsData = n,
                    this._currentCopies = 0,
                    this._elements = [],
                    this._groups = [],
                    this.frameId = -1,
                    this.initDynamicPropertyContainer(e),
                    this.initModifierProperties(e, t[r]);
                  r > 0;

                )
                  (r -= 1), this._elements.unshift(t[r]);
                this.dynamicProperties.length
                  ? (this.k = !0)
                  : this.getValue(!0);
              }),
              (RepeaterModifier.prototype.resetElements = function (e) {
                var t,
                  r = e.length;
                for (t = 0; t < r; t += 1)
                  (e[t]._processed = !1),
                    e[t].ty === "gr" && this.resetElements(e[t].it);
              }),
              (RepeaterModifier.prototype.cloneElements = function (e) {
                var t = JSON.parse(JSON.stringify(e));
                return this.resetElements(t), t;
              }),
              (RepeaterModifier.prototype.changeGroupRender = function (e, t) {
                var r,
                  n = e.length;
                for (r = 0; r < n; r += 1)
                  (e[r]._render = t),
                    e[r].ty === "gr" && this.changeGroupRender(e[r].it, t);
              }),
              (RepeaterModifier.prototype.processShapes = function (e) {
                var t,
                  r,
                  n,
                  i,
                  a,
                  o = !1;
                if (this._mdf || e) {
                  var l = Math.ceil(this.c.v);
                  if (this._groups.length < l) {
                    for (; this._groups.length < l; ) {
                      var c = {
                        it: this.cloneElements(this._elements),
                        ty: "gr",
                      };
                      c.it.push({
                        a: { a: 0, ix: 1, k: [0, 0] },
                        nm: "Transform",
                        o: { a: 0, ix: 7, k: 100 },
                        p: { a: 0, ix: 2, k: [0, 0] },
                        r: {
                          a: 1,
                          ix: 6,
                          k: [
                            { s: 0, e: 0, t: 0 },
                            { s: 0, e: 0, t: 1 },
                          ],
                        },
                        s: { a: 0, ix: 3, k: [100, 100] },
                        sa: { a: 0, ix: 5, k: 0 },
                        sk: { a: 0, ix: 4, k: 0 },
                        ty: "tr",
                      }),
                        this.arr.splice(0, 0, c),
                        this._groups.splice(0, 0, c),
                        (this._currentCopies += 1);
                    }
                    this.elem.reloadShapes(), (o = !0);
                  }
                  a = 0;
                  var u;
                  for (n = 0; n <= this._groups.length - 1; n += 1) {
                    if (
                      ((u = a < l),
                      (this._groups[n]._render = u),
                      this.changeGroupRender(this._groups[n].it, u),
                      !u)
                    ) {
                      var d = this.elemsData[n].it,
                        E = d[d.length - 1];
                      E.transform.op.v !== 0
                        ? ((E.transform.op._mdf = !0), (E.transform.op.v = 0))
                        : (E.transform.op._mdf = !1);
                    }
                    a += 1;
                  }
                  this._currentCopies = l;
                  var b = this.o.v,
                    P = b % 1,
                    R = b > 0 ? Math.floor(b) : Math.ceil(b),
                    T = this.pMatrix.props,
                    M = this.rMatrix.props,
                    x = this.sMatrix.props;
                  this.pMatrix.reset(),
                    this.rMatrix.reset(),
                    this.sMatrix.reset(),
                    this.tMatrix.reset(),
                    this.matrix.reset();
                  var k = 0;
                  if (b > 0) {
                    for (; k < R; )
                      this.applyTransforms(
                        this.pMatrix,
                        this.rMatrix,
                        this.sMatrix,
                        this.tr,
                        1,
                        !1
                      ),
                        (k += 1);
                    P &&
                      (this.applyTransforms(
                        this.pMatrix,
                        this.rMatrix,
                        this.sMatrix,
                        this.tr,
                        P,
                        !1
                      ),
                      (k += P));
                  } else if (b < 0) {
                    for (; k > R; )
                      this.applyTransforms(
                        this.pMatrix,
                        this.rMatrix,
                        this.sMatrix,
                        this.tr,
                        1,
                        !0
                      ),
                        (k -= 1);
                    P &&
                      (this.applyTransforms(
                        this.pMatrix,
                        this.rMatrix,
                        this.sMatrix,
                        this.tr,
                        -P,
                        !0
                      ),
                      (k -= P));
                  }
                  (n = this.data.m === 1 ? 0 : this._currentCopies - 1),
                    (i = this.data.m === 1 ? 1 : -1),
                    (a = this._currentCopies);
                  for (var S, A; a; ) {
                    if (
                      ((t = this.elemsData[n].it),
                      (r = t[t.length - 1].transform.mProps.v.props),
                      (A = r.length),
                      (t[t.length - 1].transform.mProps._mdf = !0),
                      (t[t.length - 1].transform.op._mdf = !0),
                      (t[t.length - 1].transform.op.v =
                        this._currentCopies === 1
                          ? this.so.v
                          : this.so.v +
                            (this.eo.v - this.so.v) *
                              (n / (this._currentCopies - 1))),
                      k !== 0)
                    ) {
                      for (
                        ((n !== 0 && i === 1) ||
                          (n !== this._currentCopies - 1 && i === -1)) &&
                          this.applyTransforms(
                            this.pMatrix,
                            this.rMatrix,
                            this.sMatrix,
                            this.tr,
                            1,
                            !1
                          ),
                          this.matrix.transform(
                            M[0],
                            M[1],
                            M[2],
                            M[3],
                            M[4],
                            M[5],
                            M[6],
                            M[7],
                            M[8],
                            M[9],
                            M[10],
                            M[11],
                            M[12],
                            M[13],
                            M[14],
                            M[15]
                          ),
                          this.matrix.transform(
                            x[0],
                            x[1],
                            x[2],
                            x[3],
                            x[4],
                            x[5],
                            x[6],
                            x[7],
                            x[8],
                            x[9],
                            x[10],
                            x[11],
                            x[12],
                            x[13],
                            x[14],
                            x[15]
                          ),
                          this.matrix.transform(
                            T[0],
                            T[1],
                            T[2],
                            T[3],
                            T[4],
                            T[5],
                            T[6],
                            T[7],
                            T[8],
                            T[9],
                            T[10],
                            T[11],
                            T[12],
                            T[13],
                            T[14],
                            T[15]
                          ),
                          S = 0;
                        S < A;
                        S += 1
                      )
                        r[S] = this.matrix.props[S];
                      this.matrix.reset();
                    } else
                      for (this.matrix.reset(), S = 0; S < A; S += 1)
                        r[S] = this.matrix.props[S];
                    (k += 1), (a -= 1), (n += i);
                  }
                } else
                  for (a = this._currentCopies, n = 0, i = 1; a; )
                    (t = this.elemsData[n].it),
                      (r = t[t.length - 1].transform.mProps.v.props),
                      (t[t.length - 1].transform.mProps._mdf = !1),
                      (t[t.length - 1].transform.op._mdf = !1),
                      (a -= 1),
                      (n += i);
                return o;
              }),
              (RepeaterModifier.prototype.addShape = function () {});
            function RoundCornersModifier() {}
            extendPrototype([ShapeModifier], RoundCornersModifier),
              (RoundCornersModifier.prototype.initModifierProperties =
                function (e, t) {
                  (this.getValue = this.processKeys),
                    (this.rd = PropertyFactory.getProp(e, t.r, 0, null, this)),
                    (this._isAnimated = !!this.rd.effectsSequence.length);
                }),
              (RoundCornersModifier.prototype.processPath = function (e, t) {
                var r = shapePool.newElement();
                r.c = e.c;
                var n,
                  i = e._length,
                  a,
                  o,
                  l,
                  c,
                  u,
                  d,
                  E = 0,
                  b,
                  P,
                  R,
                  T,
                  M,
                  x;
                for (n = 0; n < i; n += 1)
                  (a = e.v[n]),
                    (l = e.o[n]),
                    (o = e.i[n]),
                    a[0] === l[0] &&
                    a[1] === l[1] &&
                    a[0] === o[0] &&
                    a[1] === o[1]
                      ? (n === 0 || n === i - 1) && !e.c
                        ? (r.setTripleAt(a[0], a[1], l[0], l[1], o[0], o[1], E),
                          (E += 1))
                        : (n === 0 ? (c = e.v[i - 1]) : (c = e.v[n - 1]),
                          (u = Math.sqrt(
                            Math.pow(a[0] - c[0], 2) + Math.pow(a[1] - c[1], 2)
                          )),
                          (d = u ? Math.min(u / 2, t) / u : 0),
                          (M = a[0] + (c[0] - a[0]) * d),
                          (b = M),
                          (x = a[1] - (a[1] - c[1]) * d),
                          (P = x),
                          (R = b - (b - a[0]) * roundCorner),
                          (T = P - (P - a[1]) * roundCorner),
                          r.setTripleAt(b, P, R, T, M, x, E),
                          (E += 1),
                          n === i - 1 ? (c = e.v[0]) : (c = e.v[n + 1]),
                          (u = Math.sqrt(
                            Math.pow(a[0] - c[0], 2) + Math.pow(a[1] - c[1], 2)
                          )),
                          (d = u ? Math.min(u / 2, t) / u : 0),
                          (R = a[0] + (c[0] - a[0]) * d),
                          (b = R),
                          (T = a[1] + (c[1] - a[1]) * d),
                          (P = T),
                          (M = b - (b - a[0]) * roundCorner),
                          (x = P - (P - a[1]) * roundCorner),
                          r.setTripleAt(b, P, R, T, M, x, E),
                          (E += 1))
                      : (r.setTripleAt(
                          e.v[n][0],
                          e.v[n][1],
                          e.o[n][0],
                          e.o[n][1],
                          e.i[n][0],
                          e.i[n][1],
                          E
                        ),
                        (E += 1));
                return r;
              }),
              (RoundCornersModifier.prototype.processShapes = function (e) {
                var t,
                  r,
                  n = this.shapes.length,
                  i,
                  a,
                  o = this.rd.v;
                if (o !== 0) {
                  var l, c;
                  for (r = 0; r < n; r += 1) {
                    if (
                      ((l = this.shapes[r]),
                      (c = l.localShapeCollection),
                      !(!l.shape._mdf && !this._mdf && !e))
                    )
                      for (
                        c.releaseShapes(),
                          l.shape._mdf = !0,
                          t = l.shape.paths.shapes,
                          a = l.shape.paths._length,
                          i = 0;
                        i < a;
                        i += 1
                      )
                        c.addShape(this.processPath(t[i], o));
                    l.shape.paths = l.localShapeCollection;
                  }
                }
                this.dynamicProperties.length || (this._mdf = !1);
              });
            function floatEqual(e, t) {
              return (
                Math.abs(e - t) * 1e5 <= Math.min(Math.abs(e), Math.abs(t))
              );
            }
            function floatZero(e) {
              return Math.abs(e) <= 1e-5;
            }
            function lerp(e, t, r) {
              return e * (1 - r) + t * r;
            }
            function lerpPoint(e, t, r) {
              return [lerp(e[0], t[0], r), lerp(e[1], t[1], r)];
            }
            function quadRoots(e, t, r) {
              if (e === 0) return [];
              var n = t * t - 4 * e * r;
              if (n < 0) return [];
              var i = -t / (2 * e);
              if (n === 0) return [i];
              var a = Math.sqrt(n) / (2 * e);
              return [i - a, i + a];
            }
            function polynomialCoefficients(e, t, r, n) {
              return [
                -e + 3 * t - 3 * r + n,
                3 * e - 6 * t + 3 * r,
                -3 * e + 3 * t,
                e,
              ];
            }
            function singlePoint(e) {
              return new PolynomialBezier(e, e, e, e, !1);
            }
            function PolynomialBezier(e, t, r, n, i) {
              i && pointEqual(e, t) && (t = lerpPoint(e, n, 1 / 3)),
                i && pointEqual(r, n) && (r = lerpPoint(e, n, 2 / 3));
              var a = polynomialCoefficients(e[0], t[0], r[0], n[0]),
                o = polynomialCoefficients(e[1], t[1], r[1], n[1]);
              (this.a = [a[0], o[0]]),
                (this.b = [a[1], o[1]]),
                (this.c = [a[2], o[2]]),
                (this.d = [a[3], o[3]]),
                (this.points = [e, t, r, n]);
            }
            (PolynomialBezier.prototype.point = function (e) {
              return [
                ((this.a[0] * e + this.b[0]) * e + this.c[0]) * e + this.d[0],
                ((this.a[1] * e + this.b[1]) * e + this.c[1]) * e + this.d[1],
              ];
            }),
              (PolynomialBezier.prototype.derivative = function (e) {
                return [
                  (3 * e * this.a[0] + 2 * this.b[0]) * e + this.c[0],
                  (3 * e * this.a[1] + 2 * this.b[1]) * e + this.c[1],
                ];
              }),
              (PolynomialBezier.prototype.tangentAngle = function (e) {
                var t = this.derivative(e);
                return Math.atan2(t[1], t[0]);
              }),
              (PolynomialBezier.prototype.normalAngle = function (e) {
                var t = this.derivative(e);
                return Math.atan2(t[0], t[1]);
              }),
              (PolynomialBezier.prototype.inflectionPoints = function () {
                var e = this.a[1] * this.b[0] - this.a[0] * this.b[1];
                if (floatZero(e)) return [];
                var t =
                    (-0.5 * (this.a[1] * this.c[0] - this.a[0] * this.c[1])) /
                    e,
                  r =
                    t * t -
                    ((1 / 3) *
                      (this.b[1] * this.c[0] - this.b[0] * this.c[1])) /
                      e;
                if (r < 0) return [];
                var n = Math.sqrt(r);
                return floatZero(n)
                  ? n > 0 && n < 1
                    ? [t]
                    : []
                  : [t - n, t + n].filter(function (i) {
                      return i > 0 && i < 1;
                    });
              }),
              (PolynomialBezier.prototype.split = function (e) {
                if (e <= 0) return [singlePoint(this.points[0]), this];
                if (e >= 1)
                  return [
                    this,
                    singlePoint(this.points[this.points.length - 1]),
                  ];
                var t = lerpPoint(this.points[0], this.points[1], e),
                  r = lerpPoint(this.points[1], this.points[2], e),
                  n = lerpPoint(this.points[2], this.points[3], e),
                  i = lerpPoint(t, r, e),
                  a = lerpPoint(r, n, e),
                  o = lerpPoint(i, a, e);
                return [
                  new PolynomialBezier(this.points[0], t, i, o, !0),
                  new PolynomialBezier(o, a, n, this.points[3], !0),
                ];
              });
            function extrema(e, t) {
              var r = e.points[0][t],
                n = e.points[e.points.length - 1][t];
              if (r > n) {
                var i = n;
                (n = r), (r = i);
              }
              for (
                var a = quadRoots(3 * e.a[t], 2 * e.b[t], e.c[t]), o = 0;
                o < a.length;
                o += 1
              )
                if (a[o] > 0 && a[o] < 1) {
                  var l = e.point(a[o])[t];
                  l < r ? (r = l) : l > n && (n = l);
                }
              return { min: r, max: n };
            }
            (PolynomialBezier.prototype.bounds = function () {
              return { x: extrema(this, 0), y: extrema(this, 1) };
            }),
              (PolynomialBezier.prototype.boundingBox = function () {
                var e = this.bounds();
                return {
                  left: e.x.min,
                  right: e.x.max,
                  top: e.y.min,
                  bottom: e.y.max,
                  width: e.x.max - e.x.min,
                  height: e.y.max - e.y.min,
                  cx: (e.x.max + e.x.min) / 2,
                  cy: (e.y.max + e.y.min) / 2,
                };
              });
            function intersectData(e, t, r) {
              var n = e.boundingBox();
              return {
                cx: n.cx,
                cy: n.cy,
                width: n.width,
                height: n.height,
                bez: e,
                t: (t + r) / 2,
                t1: t,
                t2: r,
              };
            }
            function splitData(e) {
              var t = e.bez.split(0.5);
              return [
                intersectData(t[0], e.t1, e.t),
                intersectData(t[1], e.t, e.t2),
              ];
            }
            function boxIntersect(e, t) {
              return (
                Math.abs(e.cx - t.cx) * 2 < e.width + t.width &&
                Math.abs(e.cy - t.cy) * 2 < e.height + t.height
              );
            }
            function intersectsImpl(e, t, r, n, i, a) {
              if (boxIntersect(e, t)) {
                if (
                  r >= a ||
                  (e.width <= n &&
                    e.height <= n &&
                    t.width <= n &&
                    t.height <= n)
                ) {
                  i.push([e.t, t.t]);
                  return;
                }
                var o = splitData(e),
                  l = splitData(t);
                intersectsImpl(o[0], l[0], r + 1, n, i, a),
                  intersectsImpl(o[0], l[1], r + 1, n, i, a),
                  intersectsImpl(o[1], l[0], r + 1, n, i, a),
                  intersectsImpl(o[1], l[1], r + 1, n, i, a);
              }
            }
            (PolynomialBezier.prototype.intersections = function (e, t, r) {
              t === void 0 && (t = 2), r === void 0 && (r = 7);
              var n = [];
              return (
                intersectsImpl(
                  intersectData(this, 0, 1),
                  intersectData(e, 0, 1),
                  0,
                  t,
                  n,
                  r
                ),
                n
              );
            }),
              (PolynomialBezier.shapeSegment = function (e, t) {
                var r = (t + 1) % e.length();
                return new PolynomialBezier(e.v[t], e.o[t], e.i[r], e.v[r], !0);
              }),
              (PolynomialBezier.shapeSegmentInverted = function (e, t) {
                var r = (t + 1) % e.length();
                return new PolynomialBezier(e.v[r], e.i[r], e.o[t], e.v[t], !0);
              });
            function crossProduct(e, t) {
              return [
                e[1] * t[2] - e[2] * t[1],
                e[2] * t[0] - e[0] * t[2],
                e[0] * t[1] - e[1] * t[0],
              ];
            }
            function lineIntersection(e, t, r, n) {
              var i = [e[0], e[1], 1],
                a = [t[0], t[1], 1],
                o = [r[0], r[1], 1],
                l = [n[0], n[1], 1],
                c = crossProduct(crossProduct(i, a), crossProduct(o, l));
              return floatZero(c[2]) ? null : [c[0] / c[2], c[1] / c[2]];
            }
            function polarOffset(e, t, r) {
              return [e[0] + Math.cos(t) * r, e[1] - Math.sin(t) * r];
            }
            function pointDistance(e, t) {
              return Math.hypot(e[0] - t[0], e[1] - t[1]);
            }
            function pointEqual(e, t) {
              return floatEqual(e[0], t[0]) && floatEqual(e[1], t[1]);
            }
            function ZigZagModifier() {}
            extendPrototype([ShapeModifier], ZigZagModifier),
              (ZigZagModifier.prototype.initModifierProperties = function (
                e,
                t
              ) {
                (this.getValue = this.processKeys),
                  (this.amplitude = PropertyFactory.getProp(
                    e,
                    t.s,
                    0,
                    null,
                    this
                  )),
                  (this.frequency = PropertyFactory.getProp(
                    e,
                    t.r,
                    0,
                    null,
                    this
                  )),
                  (this.pointsType = PropertyFactory.getProp(
                    e,
                    t.pt,
                    0,
                    null,
                    this
                  )),
                  (this._isAnimated =
                    this.amplitude.effectsSequence.length !== 0 ||
                    this.frequency.effectsSequence.length !== 0 ||
                    this.pointsType.effectsSequence.length !== 0);
              });
            function setPoint(e, t, r, n, i, a, o) {
              var l = r - Math.PI / 2,
                c = r + Math.PI / 2,
                u = t[0] + Math.cos(r) * n * i,
                d = t[1] - Math.sin(r) * n * i;
              e.setTripleAt(
                u,
                d,
                u + Math.cos(l) * a,
                d - Math.sin(l) * a,
                u + Math.cos(c) * o,
                d - Math.sin(c) * o,
                e.length()
              );
            }
            function getPerpendicularVector(e, t) {
              var r = [t[0] - e[0], t[1] - e[1]],
                n = -Math.PI * 0.5,
                i = [
                  Math.cos(n) * r[0] - Math.sin(n) * r[1],
                  Math.sin(n) * r[0] + Math.cos(n) * r[1],
                ];
              return i;
            }
            function getProjectingAngle(e, t) {
              var r = t === 0 ? e.length() - 1 : t - 1,
                n = (t + 1) % e.length(),
                i = e.v[r],
                a = e.v[n],
                o = getPerpendicularVector(i, a);
              return Math.atan2(0, 1) - Math.atan2(o[1], o[0]);
            }
            function zigZagCorner(e, t, r, n, i, a, o) {
              var l = getProjectingAngle(t, r),
                c = t.v[r % t._length],
                u = t.v[r === 0 ? t._length - 1 : r - 1],
                d = t.v[(r + 1) % t._length],
                E =
                  a === 2
                    ? Math.sqrt(
                        Math.pow(c[0] - u[0], 2) + Math.pow(c[1] - u[1], 2)
                      )
                    : 0,
                b =
                  a === 2
                    ? Math.sqrt(
                        Math.pow(c[0] - d[0], 2) + Math.pow(c[1] - d[1], 2)
                      )
                    : 0;
              setPoint(
                e,
                t.v[r % t._length],
                l,
                o,
                n,
                b / ((i + 1) * 2),
                E / ((i + 1) * 2)
              );
            }
            function zigZagSegment(e, t, r, n, i, a) {
              for (var o = 0; o < n; o += 1) {
                var l = (o + 1) / (n + 1),
                  c =
                    i === 2
                      ? Math.sqrt(
                          Math.pow(t.points[3][0] - t.points[0][0], 2) +
                            Math.pow(t.points[3][1] - t.points[0][1], 2)
                        )
                      : 0,
                  u = t.normalAngle(l),
                  d = t.point(l);
                setPoint(e, d, u, a, r, c / ((n + 1) * 2), c / ((n + 1) * 2)),
                  (a = -a);
              }
              return a;
            }
            (ZigZagModifier.prototype.processPath = function (e, t, r, n) {
              var i = e._length,
                a = shapePool.newElement();
              if (((a.c = e.c), e.c || (i -= 1), i === 0)) return a;
              var o = -1,
                l = PolynomialBezier.shapeSegment(e, 0);
              zigZagCorner(a, e, 0, t, r, n, o);
              for (var c = 0; c < i; c += 1)
                (o = zigZagSegment(a, l, t, r, n, -o)),
                  c === i - 1 && !e.c
                    ? (l = null)
                    : (l = PolynomialBezier.shapeSegment(e, (c + 1) % i)),
                  zigZagCorner(a, e, c + 1, t, r, n, o);
              return a;
            }),
              (ZigZagModifier.prototype.processShapes = function (e) {
                var t,
                  r,
                  n = this.shapes.length,
                  i,
                  a,
                  o = this.amplitude.v,
                  l = Math.max(0, Math.round(this.frequency.v)),
                  c = this.pointsType.v;
                if (o !== 0) {
                  var u, d;
                  for (r = 0; r < n; r += 1) {
                    if (
                      ((u = this.shapes[r]),
                      (d = u.localShapeCollection),
                      !(!u.shape._mdf && !this._mdf && !e))
                    )
                      for (
                        d.releaseShapes(),
                          u.shape._mdf = !0,
                          t = u.shape.paths.shapes,
                          a = u.shape.paths._length,
                          i = 0;
                        i < a;
                        i += 1
                      )
                        d.addShape(this.processPath(t[i], o, l, c));
                    u.shape.paths = u.localShapeCollection;
                  }
                }
                this.dynamicProperties.length || (this._mdf = !1);
              });
            function linearOffset(e, t, r) {
              var n = Math.atan2(t[0] - e[0], t[1] - e[1]);
              return [polarOffset(e, n, r), polarOffset(t, n, r)];
            }
            function offsetSegment(e, t) {
              var r, n, i, a, o, l, c;
              (c = linearOffset(e.points[0], e.points[1], t)),
                (r = c[0]),
                (n = c[1]),
                (c = linearOffset(e.points[1], e.points[2], t)),
                (i = c[0]),
                (a = c[1]),
                (c = linearOffset(e.points[2], e.points[3], t)),
                (o = c[0]),
                (l = c[1]);
              var u = lineIntersection(r, n, i, a);
              u === null && (u = n);
              var d = lineIntersection(o, l, i, a);
              return d === null && (d = o), new PolynomialBezier(r, u, d, l);
            }
            function joinLines(e, t, r, n, i) {
              var a = t.points[3],
                o = r.points[0];
              if (n === 3 || pointEqual(a, o)) return a;
              if (n === 2) {
                var l = -t.tangentAngle(1),
                  c = -r.tangentAngle(0) + Math.PI,
                  u = lineIntersection(
                    a,
                    polarOffset(a, l + Math.PI / 2, 100),
                    o,
                    polarOffset(o, l + Math.PI / 2, 100)
                  ),
                  d = u ? pointDistance(u, a) : pointDistance(a, o) / 2,
                  E = polarOffset(a, l, 2 * d * roundCorner);
                return (
                  e.setXYAt(E[0], E[1], "o", e.length() - 1),
                  (E = polarOffset(o, c, 2 * d * roundCorner)),
                  e.setTripleAt(o[0], o[1], o[0], o[1], E[0], E[1], e.length()),
                  o
                );
              }
              var b = pointEqual(a, t.points[2]) ? t.points[0] : t.points[2],
                P = pointEqual(o, r.points[1]) ? r.points[3] : r.points[1],
                R = lineIntersection(b, a, o, P);
              return R && pointDistance(R, a) < i
                ? (e.setTripleAt(
                    R[0],
                    R[1],
                    R[0],
                    R[1],
                    R[0],
                    R[1],
                    e.length()
                  ),
                  R)
                : a;
            }
            function getIntersection(e, t) {
              var r = e.intersections(t);
              return (
                r.length && floatEqual(r[0][0], 1) && r.shift(),
                r.length ? r[0] : null
              );
            }
            function pruneSegmentIntersection(e, t) {
              var r = e.slice(),
                n = t.slice(),
                i = getIntersection(e[e.length - 1], t[0]);
              return (
                i &&
                  ((r[e.length - 1] = e[e.length - 1].split(i[0])[0]),
                  (n[0] = t[0].split(i[1])[1])),
                e.length > 1 &&
                t.length > 1 &&
                ((i = getIntersection(e[0], t[t.length - 1])), i)
                  ? [[e[0].split(i[0])[0]], [t[t.length - 1].split(i[1])[1]]]
                  : [r, n]
              );
            }
            function pruneIntersections(e) {
              for (var t, r = 1; r < e.length; r += 1)
                (t = pruneSegmentIntersection(e[r - 1], e[r])),
                  (e[r - 1] = t[0]),
                  (e[r] = t[1]);
              return (
                e.length > 1 &&
                  ((t = pruneSegmentIntersection(e[e.length - 1], e[0])),
                  (e[e.length - 1] = t[0]),
                  (e[0] = t[1])),
                e
              );
            }
            function offsetSegmentSplit(e, t) {
              var r = e.inflectionPoints(),
                n,
                i,
                a,
                o;
              if (r.length === 0) return [offsetSegment(e, t)];
              if (r.length === 1 || floatEqual(r[1], 1))
                return (
                  (a = e.split(r[0])),
                  (n = a[0]),
                  (i = a[1]),
                  [offsetSegment(n, t), offsetSegment(i, t)]
                );
              (a = e.split(r[0])), (n = a[0]);
              var l = (r[1] - r[0]) / (1 - r[0]);
              return (
                (a = a[1].split(l)),
                (o = a[0]),
                (i = a[1]),
                [offsetSegment(n, t), offsetSegment(o, t), offsetSegment(i, t)]
              );
            }
            function OffsetPathModifier() {}
            extendPrototype([ShapeModifier], OffsetPathModifier),
              (OffsetPathModifier.prototype.initModifierProperties = function (
                e,
                t
              ) {
                (this.getValue = this.processKeys),
                  (this.amount = PropertyFactory.getProp(
                    e,
                    t.a,
                    0,
                    null,
                    this
                  )),
                  (this.miterLimit = PropertyFactory.getProp(
                    e,
                    t.ml,
                    0,
                    null,
                    this
                  )),
                  (this.lineJoin = t.lj),
                  (this._isAnimated = this.amount.effectsSequence.length !== 0);
              }),
              (OffsetPathModifier.prototype.processPath = function (
                e,
                t,
                r,
                n
              ) {
                var i = shapePool.newElement();
                i.c = e.c;
                var a = e.length();
                e.c || (a -= 1);
                var o,
                  l,
                  c,
                  u = [];
                for (o = 0; o < a; o += 1)
                  (c = PolynomialBezier.shapeSegment(e, o)),
                    u.push(offsetSegmentSplit(c, t));
                if (!e.c)
                  for (o = a - 1; o >= 0; o -= 1)
                    (c = PolynomialBezier.shapeSegmentInverted(e, o)),
                      u.push(offsetSegmentSplit(c, t));
                u = pruneIntersections(u);
                var d = null,
                  E = null;
                for (o = 0; o < u.length; o += 1) {
                  var b = u[o];
                  for (
                    E && (d = joinLines(i, E, b[0], r, n)),
                      E = b[b.length - 1],
                      l = 0;
                    l < b.length;
                    l += 1
                  )
                    (c = b[l]),
                      d && pointEqual(c.points[0], d)
                        ? i.setXYAt(
                            c.points[1][0],
                            c.points[1][1],
                            "o",
                            i.length() - 1
                          )
                        : i.setTripleAt(
                            c.points[0][0],
                            c.points[0][1],
                            c.points[1][0],
                            c.points[1][1],
                            c.points[0][0],
                            c.points[0][1],
                            i.length()
                          ),
                      i.setTripleAt(
                        c.points[3][0],
                        c.points[3][1],
                        c.points[3][0],
                        c.points[3][1],
                        c.points[2][0],
                        c.points[2][1],
                        i.length()
                      ),
                      (d = c.points[3]);
                }
                return u.length && joinLines(i, E, u[0][0], r, n), i;
              }),
              (OffsetPathModifier.prototype.processShapes = function (e) {
                var t,
                  r,
                  n = this.shapes.length,
                  i,
                  a,
                  o = this.amount.v,
                  l = this.miterLimit.v,
                  c = this.lineJoin;
                if (o !== 0) {
                  var u, d;
                  for (r = 0; r < n; r += 1) {
                    if (
                      ((u = this.shapes[r]),
                      (d = u.localShapeCollection),
                      !(!u.shape._mdf && !this._mdf && !e))
                    )
                      for (
                        d.releaseShapes(),
                          u.shape._mdf = !0,
                          t = u.shape.paths.shapes,
                          a = u.shape.paths._length,
                          i = 0;
                        i < a;
                        i += 1
                      )
                        d.addShape(this.processPath(t[i], o, c, l));
                    u.shape.paths = u.localShapeCollection;
                  }
                }
                this.dynamicProperties.length || (this._mdf = !1);
              });
            function getFontProperties(e) {
              for (
                var t = e.fStyle ? e.fStyle.split(" ") : [],
                  r = "normal",
                  n = "normal",
                  i = t.length,
                  a,
                  o = 0;
                o < i;
                o += 1
              )
                switch (((a = t[o].toLowerCase()), a)) {
                  case "italic":
                    n = "italic";
                    break;
                  case "bold":
                    r = "700";
                    break;
                  case "black":
                    r = "900";
                    break;
                  case "medium":
                    r = "500";
                    break;
                  case "regular":
                  case "normal":
                    r = "400";
                    break;
                  case "light":
                  case "thin":
                    r = "200";
                    break;
                }
              return { style: n, weight: e.fWeight || r };
            }
            var FontManager = (function () {
              var e = 5e3,
                t = { w: 0, size: 0, shapes: [], data: { shapes: [] } },
                r = [];
              r = r.concat([
                2304, 2305, 2306, 2307, 2362, 2363, 2364, 2364, 2366, 2367,
                2368, 2369, 2370, 2371, 2372, 2373, 2374, 2375, 2376, 2377,
                2378, 2379, 2380, 2381, 2382, 2383, 2387, 2388, 2389, 2390,
                2391, 2402, 2403,
              ]);
              var n = 127988,
                i = 917631,
                a = 917601,
                o = 917626,
                l = 65039,
                c = 8205,
                u = 127462,
                d = 127487,
                E = [
                  "d83cdffb",
                  "d83cdffc",
                  "d83cdffd",
                  "d83cdffe",
                  "d83cdfff",
                ];
              function b(B) {
                var z = B.split(","),
                  N,
                  V = z.length,
                  Q = [];
                for (N = 0; N < V; N += 1)
                  z[N] !== "sans-serif" && z[N] !== "monospace" && Q.push(z[N]);
                return Q.join(",");
              }
              function P(B, z) {
                var N = createTag("span");
                N.setAttribute("aria-hidden", !0), (N.style.fontFamily = z);
                var V = createTag("span");
                (V.innerText = "giItT1WQy@!-/#"),
                  (N.style.position = "absolute"),
                  (N.style.left = "-10000px"),
                  (N.style.top = "-10000px"),
                  (N.style.fontSize = "300px"),
                  (N.style.fontVariant = "normal"),
                  (N.style.fontStyle = "normal"),
                  (N.style.fontWeight = "normal"),
                  (N.style.letterSpacing = "0"),
                  N.appendChild(V),
                  document.body.appendChild(N);
                var Q = V.offsetWidth;
                return (
                  (V.style.fontFamily = b(B) + ", " + z),
                  { node: V, w: Q, parent: N }
                );
              }
              function R() {
                var B,
                  z = this.fonts.length,
                  N,
                  V,
                  Q = z;
                for (B = 0; B < z; B += 1)
                  this.fonts[B].loaded
                    ? (Q -= 1)
                    : this.fonts[B].fOrigin === "n" ||
                      this.fonts[B].origin === 0
                    ? (this.fonts[B].loaded = !0)
                    : ((N = this.fonts[B].monoCase.node),
                      (V = this.fonts[B].monoCase.w),
                      N.offsetWidth !== V
                        ? ((Q -= 1), (this.fonts[B].loaded = !0))
                        : ((N = this.fonts[B].sansCase.node),
                          (V = this.fonts[B].sansCase.w),
                          N.offsetWidth !== V &&
                            ((Q -= 1), (this.fonts[B].loaded = !0))),
                      this.fonts[B].loaded &&
                        (this.fonts[B].sansCase.parent.parentNode.removeChild(
                          this.fonts[B].sansCase.parent
                        ),
                        this.fonts[B].monoCase.parent.parentNode.removeChild(
                          this.fonts[B].monoCase.parent
                        )));
                Q !== 0 && Date.now() - this.initTime < e
                  ? setTimeout(this.checkLoadedFontsBinded, 20)
                  : setTimeout(this.setIsLoadedBinded, 10);
              }
              function T(B, z) {
                var N = document.body && z ? "svg" : "canvas",
                  V,
                  Q = getFontProperties(B);
                if (N === "svg") {
                  var Y = createNS("text");
                  (Y.style.fontSize = "100px"),
                    Y.setAttribute("font-family", B.fFamily),
                    Y.setAttribute("font-style", Q.style),
                    Y.setAttribute("font-weight", Q.weight),
                    (Y.textContent = "1"),
                    B.fClass
                      ? ((Y.style.fontFamily = "inherit"),
                        Y.setAttribute("class", B.fClass))
                      : (Y.style.fontFamily = B.fFamily),
                    z.appendChild(Y),
                    (V = Y);
                } else {
                  var he = new OffscreenCanvas(500, 500).getContext("2d");
                  (he.font = Q.style + " " + Q.weight + " 100px " + B.fFamily),
                    (V = he);
                }
                function ye(ve) {
                  return N === "svg"
                    ? ((V.textContent = ve), V.getComputedTextLength())
                    : V.measureText(ve).width;
                }
                return { measureText: ye };
              }
              function M(B, z) {
                if (!B) {
                  this.isLoaded = !0;
                  return;
                }
                if (this.chars) {
                  (this.isLoaded = !0), (this.fonts = B.list);
                  return;
                }
                if (!document.body) {
                  (this.isLoaded = !0),
                    B.list.forEach(function (me) {
                      (me.helper = T(me)), (me.cache = {});
                    }),
                    (this.fonts = B.list);
                  return;
                }
                var N = B.list,
                  V,
                  Q = N.length,
                  Y = Q;
                for (V = 0; V < Q; V += 1) {
                  var he = !0,
                    ye,
                    ve;
                  if (
                    ((N[V].loaded = !1),
                    (N[V].monoCase = P(N[V].fFamily, "monospace")),
                    (N[V].sansCase = P(N[V].fFamily, "sans-serif")),
                    !N[V].fPath)
                  )
                    (N[V].loaded = !0), (Y -= 1);
                  else if (N[V].fOrigin === "p" || N[V].origin === 3) {
                    if (
                      ((ye = document.querySelectorAll(
                        'style[f-forigin="p"][f-family="' +
                          N[V].fFamily +
                          '"], style[f-origin="3"][f-family="' +
                          N[V].fFamily +
                          '"]'
                      )),
                      ye.length > 0 && (he = !1),
                      he)
                    ) {
                      var Pe = createTag("style");
                      Pe.setAttribute("f-forigin", N[V].fOrigin),
                        Pe.setAttribute("f-origin", N[V].origin),
                        Pe.setAttribute("f-family", N[V].fFamily),
                        (Pe.type = "text/css"),
                        (Pe.innerText =
                          "@font-face {font-family: " +
                          N[V].fFamily +
                          "; font-style: normal; src: url('" +
                          N[V].fPath +
                          "');}"),
                        z.appendChild(Pe);
                    }
                  } else if (N[V].fOrigin === "g" || N[V].origin === 1) {
                    for (
                      ye = document.querySelectorAll(
                        'link[f-forigin="g"], link[f-origin="1"]'
                      ),
                        ve = 0;
                      ve < ye.length;
                      ve += 1
                    )
                      ye[ve].href.indexOf(N[V].fPath) !== -1 && (he = !1);
                    if (he) {
                      var Ce = createTag("link");
                      Ce.setAttribute("f-forigin", N[V].fOrigin),
                        Ce.setAttribute("f-origin", N[V].origin),
                        (Ce.type = "text/css"),
                        (Ce.rel = "stylesheet"),
                        (Ce.href = N[V].fPath),
                        document.body.appendChild(Ce);
                    }
                  } else if (N[V].fOrigin === "t" || N[V].origin === 2) {
                    for (
                      ye = document.querySelectorAll(
                        'script[f-forigin="t"], script[f-origin="2"]'
                      ),
                        ve = 0;
                      ve < ye.length;
                      ve += 1
                    )
                      N[V].fPath === ye[ve].src && (he = !1);
                    if (he) {
                      var ie = createTag("link");
                      ie.setAttribute("f-forigin", N[V].fOrigin),
                        ie.setAttribute("f-origin", N[V].origin),
                        ie.setAttribute("rel", "stylesheet"),
                        ie.setAttribute("href", N[V].fPath),
                        z.appendChild(ie);
                    }
                  }
                  (N[V].helper = T(N[V], z)),
                    (N[V].cache = {}),
                    this.fonts.push(N[V]);
                }
                Y === 0
                  ? (this.isLoaded = !0)
                  : setTimeout(this.checkLoadedFonts.bind(this), 100);
              }
              function x(B) {
                if (B) {
                  this.chars || (this.chars = []);
                  var z,
                    N = B.length,
                    V,
                    Q = this.chars.length,
                    Y;
                  for (z = 0; z < N; z += 1) {
                    for (V = 0, Y = !1; V < Q; )
                      this.chars[V].style === B[z].style &&
                        this.chars[V].fFamily === B[z].fFamily &&
                        this.chars[V].ch === B[z].ch &&
                        (Y = !0),
                        (V += 1);
                    Y || (this.chars.push(B[z]), (Q += 1));
                  }
                }
              }
              function k(B, z, N) {
                for (var V = 0, Q = this.chars.length; V < Q; ) {
                  if (
                    this.chars[V].ch === B &&
                    this.chars[V].style === z &&
                    this.chars[V].fFamily === N
                  )
                    return this.chars[V];
                  V += 1;
                }
                return (
                  ((typeof B == "string" && B.charCodeAt(0) !== 13) || !B) &&
                    console &&
                    console.warn &&
                    !this._warned &&
                    ((this._warned = !0),
                    console.warn(
                      "Missing character from exported characters list: ",
                      B,
                      z,
                      N
                    )),
                  t
                );
              }
              function S(B, z, N) {
                var V = this.getFontByName(z),
                  Q = B;
                if (!V.cache[Q]) {
                  var Y = V.helper;
                  if (B === " ") {
                    var he = Y.measureText("|" + B + "|"),
                      ye = Y.measureText("||");
                    V.cache[Q] = (he - ye) / 100;
                  } else V.cache[Q] = Y.measureText(B) / 100;
                }
                return V.cache[Q] * N;
              }
              function A(B) {
                for (var z = 0, N = this.fonts.length; z < N; ) {
                  if (this.fonts[z].fName === B) return this.fonts[z];
                  z += 1;
                }
                return this.fonts[0];
              }
              function O(B) {
                var z = 0,
                  N = B.charCodeAt(0);
                if (N >= 55296 && N <= 56319) {
                  var V = B.charCodeAt(1);
                  V >= 56320 &&
                    V <= 57343 &&
                    (z = (N - 55296) * 1024 + V - 56320 + 65536);
                }
                return z;
              }
              function F(B, z) {
                var N = B.toString(16) + z.toString(16);
                return E.indexOf(N) !== -1;
              }
              function D(B) {
                return B === c;
              }
              function H(B) {
                return B === l;
              }
              function $(B) {
                var z = O(B);
                return z >= u && z <= d;
              }
              function q(B) {
                return $(B.substr(0, 2)) && $(B.substr(2, 2));
              }
              function J(B) {
                return r.indexOf(B) !== -1;
              }
              function K(B, z) {
                var N = O(B.substr(z, 2));
                if (N !== n) return !1;
                var V = 0;
                for (z += 2; V < 5; ) {
                  if (((N = O(B.substr(z, 2))), N < a || N > o)) return !1;
                  (V += 1), (z += 2);
                }
                return O(B.substr(z, 2)) === i;
              }
              function ee() {
                this.isLoaded = !0;
              }
              var le = function () {
                (this.fonts = []),
                  (this.chars = null),
                  (this.typekitLoaded = 0),
                  (this.isLoaded = !1),
                  (this._warned = !1),
                  (this.initTime = Date.now()),
                  (this.setIsLoadedBinded = this.setIsLoaded.bind(this)),
                  (this.checkLoadedFontsBinded =
                    this.checkLoadedFonts.bind(this));
              };
              (le.isModifier = F),
                (le.isZeroWidthJoiner = D),
                (le.isFlagEmoji = q),
                (le.isRegionalCode = $),
                (le.isCombinedCharacter = J),
                (le.isRegionalFlag = K),
                (le.isVariationSelector = H),
                (le.BLACK_FLAG_CODE_POINT = n);
              var re = {
                addChars: x,
                addFonts: M,
                getCharData: k,
                getFontByName: A,
                measureText: S,
                checkLoadedFonts: R,
                setIsLoaded: ee,
              };
              return (le.prototype = re), le;
            })();
            function SlotManager(e) {
              this.animationData = e;
            }
            SlotManager.prototype.getProp = function (e) {
              return this.animationData.slots && this.animationData.slots[e.sid]
                ? Object.assign(e, this.animationData.slots[e.sid].p)
                : e;
            };
            function slotFactory(e) {
              return new SlotManager(e);
            }
            function RenderableElement() {}
            RenderableElement.prototype = {
              initRenderable: function () {
                (this.isInRange = !1),
                  (this.hidden = !1),
                  (this.isTransparent = !1),
                  (this.renderableComponents = []);
              },
              addRenderableComponent: function (t) {
                this.renderableComponents.indexOf(t) === -1 &&
                  this.renderableComponents.push(t);
              },
              removeRenderableComponent: function (t) {
                this.renderableComponents.indexOf(t) !== -1 &&
                  this.renderableComponents.splice(
                    this.renderableComponents.indexOf(t),
                    1
                  );
              },
              prepareRenderableFrame: function (t) {
                this.checkLayerLimits(t);
              },
              checkTransparency: function () {
                this.finalTransform.mProp.o.v <= 0
                  ? !this.isTransparent &&
                    this.globalData.renderConfig.hideOnTransparent &&
                    ((this.isTransparent = !0), this.hide())
                  : this.isTransparent &&
                    ((this.isTransparent = !1), this.show());
              },
              checkLayerLimits: function (t) {
                this.data.ip - this.data.st <= t &&
                this.data.op - this.data.st > t
                  ? this.isInRange !== !0 &&
                    ((this.globalData._mdf = !0),
                    (this._mdf = !0),
                    (this.isInRange = !0),
                    this.show())
                  : this.isInRange !== !1 &&
                    ((this.globalData._mdf = !0),
                    (this.isInRange = !1),
                    this.hide());
              },
              renderRenderable: function () {
                var t,
                  r = this.renderableComponents.length;
                for (t = 0; t < r; t += 1)
                  this.renderableComponents[t].renderFrame(this._isFirstFrame);
              },
              sourceRectAtTime: function () {
                return { top: 0, left: 0, width: 100, height: 100 };
              },
              getLayerSize: function () {
                return this.data.ty === 5
                  ? {
                      w: this.data.textData.width,
                      h: this.data.textData.height,
                    }
                  : { w: this.data.width, h: this.data.height };
              },
            };
            var getBlendMode = (function () {
              var e = {
                0: "source-over",
                1: "multiply",
                2: "screen",
                3: "overlay",
                4: "darken",
                5: "lighten",
                6: "color-dodge",
                7: "color-burn",
                8: "hard-light",
                9: "soft-light",
                10: "difference",
                11: "exclusion",
                12: "hue",
                13: "saturation",
                14: "color",
                15: "luminosity",
              };
              return function (t) {
                return e[t] || "";
              };
            })();
            function SliderEffect(e, t, r) {
              this.p = PropertyFactory.getProp(t, e.v, 0, 0, r);
            }
            function AngleEffect(e, t, r) {
              this.p = PropertyFactory.getProp(t, e.v, 0, 0, r);
            }
            function ColorEffect(e, t, r) {
              this.p = PropertyFactory.getProp(t, e.v, 1, 0, r);
            }
            function PointEffect(e, t, r) {
              this.p = PropertyFactory.getProp(t, e.v, 1, 0, r);
            }
            function LayerIndexEffect(e, t, r) {
              this.p = PropertyFactory.getProp(t, e.v, 0, 0, r);
            }
            function MaskIndexEffect(e, t, r) {
              this.p = PropertyFactory.getProp(t, e.v, 0, 0, r);
            }
            function CheckboxEffect(e, t, r) {
              this.p = PropertyFactory.getProp(t, e.v, 0, 0, r);
            }
            function NoValueEffect() {
              this.p = {};
            }
            function EffectsManager(e, t) {
              var r = e.ef || [];
              this.effectElements = [];
              var n,
                i = r.length,
                a;
              for (n = 0; n < i; n += 1)
                (a = new GroupEffect(r[n], t)), this.effectElements.push(a);
            }
            function GroupEffect(e, t) {
              this.init(e, t);
            }
            extendPrototype([DynamicPropertyContainer], GroupEffect),
              (GroupEffect.prototype.getValue =
                GroupEffect.prototype.iterateDynamicProperties),
              (GroupEffect.prototype.init = function (e, t) {
                (this.data = e),
                  (this.effectElements = []),
                  this.initDynamicPropertyContainer(t);
                var r,
                  n = this.data.ef.length,
                  i,
                  a = this.data.ef;
                for (r = 0; r < n; r += 1) {
                  switch (((i = null), a[r].ty)) {
                    case 0:
                      i = new SliderEffect(a[r], t, this);
                      break;
                    case 1:
                      i = new AngleEffect(a[r], t, this);
                      break;
                    case 2:
                      i = new ColorEffect(a[r], t, this);
                      break;
                    case 3:
                      i = new PointEffect(a[r], t, this);
                      break;
                    case 4:
                    case 7:
                      i = new CheckboxEffect(a[r], t, this);
                      break;
                    case 10:
                      i = new LayerIndexEffect(a[r], t, this);
                      break;
                    case 11:
                      i = new MaskIndexEffect(a[r], t, this);
                      break;
                    case 5:
                      i = new EffectsManager(a[r], t);
                      break;
                    default:
                      i = new NoValueEffect(a[r]);
                      break;
                  }
                  i && this.effectElements.push(i);
                }
              });
            function BaseElement() {}
            BaseElement.prototype = {
              checkMasks: function () {
                if (!this.data.hasMask) return !1;
                for (var t = 0, r = this.data.masksProperties.length; t < r; ) {
                  if (
                    this.data.masksProperties[t].mode !== "n" &&
                    this.data.masksProperties[t].cl !== !1
                  )
                    return !0;
                  t += 1;
                }
                return !1;
              },
              initExpressions: function () {
                var t = getExpressionInterfaces();
                if (t) {
                  var r = t("layer"),
                    n = t("effects"),
                    i = t("shape"),
                    a = t("text"),
                    o = t("comp");
                  (this.layerInterface = r(this)),
                    this.data.hasMask &&
                      this.maskManager &&
                      this.layerInterface.registerMaskInterface(
                        this.maskManager
                      );
                  var l = n.createEffectsInterface(this, this.layerInterface);
                  this.layerInterface.registerEffectsInterface(l),
                    this.data.ty === 0 || this.data.xt
                      ? (this.compInterface = o(this))
                      : this.data.ty === 4
                      ? ((this.layerInterface.shapeInterface = i(
                          this.shapesData,
                          this.itemsData,
                          this.layerInterface
                        )),
                        (this.layerInterface.content =
                          this.layerInterface.shapeInterface))
                      : this.data.ty === 5 &&
                        ((this.layerInterface.textInterface = a(this)),
                        (this.layerInterface.text =
                          this.layerInterface.textInterface));
                }
              },
              setBlendMode: function () {
                var t = getBlendMode(this.data.bm),
                  r = this.baseElement || this.layerElement;
                r.style["mix-blend-mode"] = t;
              },
              initBaseData: function (t, r, n) {
                (this.globalData = r),
                  (this.comp = n),
                  (this.data = t),
                  (this.layerId = createElementID()),
                  this.data.sr || (this.data.sr = 1),
                  (this.effectsManager = new EffectsManager(
                    this.data,
                    this,
                    this.dynamicProperties
                  ));
              },
              getType: function () {
                return this.type;
              },
              sourceRectAtTime: function () {},
            };
            function FrameElement() {}
            FrameElement.prototype = {
              initFrame: function () {
                (this._isFirstFrame = !1),
                  (this.dynamicProperties = []),
                  (this._mdf = !1);
              },
              prepareProperties: function (t, r) {
                var n,
                  i = this.dynamicProperties.length;
                for (n = 0; n < i; n += 1)
                  (r ||
                    (this._isParent &&
                      this.dynamicProperties[n].propType === "transform")) &&
                    (this.dynamicProperties[n].getValue(),
                    this.dynamicProperties[n]._mdf &&
                      ((this.globalData._mdf = !0), (this._mdf = !0)));
              },
              addDynamicProperty: function (t) {
                this.dynamicProperties.indexOf(t) === -1 &&
                  this.dynamicProperties.push(t);
              },
            };
            function FootageElement(e, t, r) {
              this.initFrame(),
                this.initRenderable(),
                (this.assetData = t.getAssetData(e.refId)),
                (this.footageData = t.imageLoader.getAsset(this.assetData)),
                this.initBaseData(e, t, r);
            }
            (FootageElement.prototype.prepareFrame = function () {}),
              extendPrototype(
                [RenderableElement, BaseElement, FrameElement],
                FootageElement
              ),
              (FootageElement.prototype.getBaseElement = function () {
                return null;
              }),
              (FootageElement.prototype.renderFrame = function () {}),
              (FootageElement.prototype.destroy = function () {}),
              (FootageElement.prototype.initExpressions = function () {
                var e = getExpressionInterfaces();
                if (e) {
                  var t = e("footage");
                  this.layerInterface = t(this);
                }
              }),
              (FootageElement.prototype.getFootageData = function () {
                return this.footageData;
              });
            function AudioElement(e, t, r) {
              this.initFrame(),
                this.initRenderable(),
                (this.assetData = t.getAssetData(e.refId)),
                this.initBaseData(e, t, r),
                (this._isPlaying = !1),
                (this._canPlay = !1);
              var n = this.globalData.getAssetsPath(this.assetData);
              (this.audio = this.globalData.audioController.createAudio(n)),
                (this._currentTime = 0),
                this.globalData.audioController.addAudio(this),
                (this._volumeMultiplier = 1),
                (this._volume = 1),
                (this._previousVolume = null),
                (this.tm = e.tm
                  ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this)
                  : { _placeholder: !0 }),
                (this.lv = PropertyFactory.getProp(
                  this,
                  e.au && e.au.lv ? e.au.lv : { k: [100] },
                  1,
                  0.01,
                  this
                ));
            }
            (AudioElement.prototype.prepareFrame = function (e) {
              if (
                (this.prepareRenderableFrame(e, !0),
                this.prepareProperties(e, !0),
                this.tm._placeholder)
              )
                this._currentTime = e / this.data.sr;
              else {
                var t = this.tm.v;
                this._currentTime = t;
              }
              this._volume = this.lv.v[0];
              var r = this._volume * this._volumeMultiplier;
              this._previousVolume !== r &&
                ((this._previousVolume = r), this.audio.volume(r));
            }),
              extendPrototype(
                [RenderableElement, BaseElement, FrameElement],
                AudioElement
              ),
              (AudioElement.prototype.renderFrame = function () {
                this.isInRange &&
                  this._canPlay &&
                  (this._isPlaying
                    ? (!this.audio.playing() ||
                        Math.abs(
                          this._currentTime / this.globalData.frameRate -
                            this.audio.seek()
                        ) > 0.1) &&
                      this.audio.seek(
                        this._currentTime / this.globalData.frameRate
                      )
                    : (this.audio.play(),
                      this.audio.seek(
                        this._currentTime / this.globalData.frameRate
                      ),
                      (this._isPlaying = !0)));
              }),
              (AudioElement.prototype.show = function () {}),
              (AudioElement.prototype.hide = function () {
                this.audio.pause(), (this._isPlaying = !1);
              }),
              (AudioElement.prototype.pause = function () {
                this.audio.pause(),
                  (this._isPlaying = !1),
                  (this._canPlay = !1);
              }),
              (AudioElement.prototype.resume = function () {
                this._canPlay = !0;
              }),
              (AudioElement.prototype.setRate = function (e) {
                this.audio.rate(e);
              }),
              (AudioElement.prototype.volume = function (e) {
                (this._volumeMultiplier = e),
                  (this._previousVolume = e * this._volume),
                  this.audio.volume(this._previousVolume);
              }),
              (AudioElement.prototype.getBaseElement = function () {
                return null;
              }),
              (AudioElement.prototype.destroy = function () {}),
              (AudioElement.prototype.sourceRectAtTime = function () {}),
              (AudioElement.prototype.initExpressions = function () {});
            function BaseRenderer() {}
            (BaseRenderer.prototype.checkLayers = function (e) {
              var t,
                r = this.layers.length,
                n;
              for (this.completeLayers = !0, t = r - 1; t >= 0; t -= 1)
                this.elements[t] ||
                  ((n = this.layers[t]),
                  n.ip - n.st <= e - this.layers[t].st &&
                    n.op - n.st > e - this.layers[t].st &&
                    this.buildItem(t)),
                  (this.completeLayers = this.elements[t]
                    ? this.completeLayers
                    : !1);
              this.checkPendingElements();
            }),
              (BaseRenderer.prototype.createItem = function (e) {
                switch (e.ty) {
                  case 2:
                    return this.createImage(e);
                  case 0:
                    return this.createComp(e);
                  case 1:
                    return this.createSolid(e);
                  case 3:
                    return this.createNull(e);
                  case 4:
                    return this.createShape(e);
                  case 5:
                    return this.createText(e);
                  case 6:
                    return this.createAudio(e);
                  case 13:
                    return this.createCamera(e);
                  case 15:
                    return this.createFootage(e);
                  default:
                    return this.createNull(e);
                }
              }),
              (BaseRenderer.prototype.createCamera = function () {
                throw new Error(
                  "You're using a 3d camera. Try the html renderer."
                );
              }),
              (BaseRenderer.prototype.createAudio = function (e) {
                return new AudioElement(e, this.globalData, this);
              }),
              (BaseRenderer.prototype.createFootage = function (e) {
                return new FootageElement(e, this.globalData, this);
              }),
              (BaseRenderer.prototype.buildAllItems = function () {
                var e,
                  t = this.layers.length;
                for (e = 0; e < t; e += 1) this.buildItem(e);
                this.checkPendingElements();
              }),
              (BaseRenderer.prototype.includeLayers = function (e) {
                this.completeLayers = !1;
                var t,
                  r = e.length,
                  n,
                  i = this.layers.length;
                for (t = 0; t < r; t += 1)
                  for (n = 0; n < i; ) {
                    if (this.layers[n].id === e[t].id) {
                      this.layers[n] = e[t];
                      break;
                    }
                    n += 1;
                  }
              }),
              (BaseRenderer.prototype.setProjectInterface = function (e) {
                this.globalData.projectInterface = e;
              }),
              (BaseRenderer.prototype.initItems = function () {
                this.globalData.progressiveLoad || this.buildAllItems();
              }),
              (BaseRenderer.prototype.buildElementParenting = function (
                e,
                t,
                r
              ) {
                for (
                  var n = this.elements, i = this.layers, a = 0, o = i.length;
                  a < o;

                )
                  i[a].ind == t &&
                    (!n[a] || n[a] === !0
                      ? (this.buildItem(a), this.addPendingElement(e))
                      : (r.push(n[a]),
                        n[a].setAsParent(),
                        i[a].parent !== void 0
                          ? this.buildElementParenting(e, i[a].parent, r)
                          : e.setHierarchy(r))),
                    (a += 1);
              }),
              (BaseRenderer.prototype.addPendingElement = function (e) {
                this.pendingElements.push(e);
              }),
              (BaseRenderer.prototype.searchExtraCompositions = function (e) {
                var t,
                  r = e.length;
                for (t = 0; t < r; t += 1)
                  if (e[t].xt) {
                    var n = this.createComp(e[t]);
                    n.initExpressions(),
                      this.globalData.projectInterface.registerComposition(n);
                  }
              }),
              (BaseRenderer.prototype.getElementById = function (e) {
                var t,
                  r = this.elements.length;
                for (t = 0; t < r; t += 1)
                  if (this.elements[t].data.ind === e) return this.elements[t];
                return null;
              }),
              (BaseRenderer.prototype.getElementByPath = function (e) {
                var t = e.shift(),
                  r;
                if (typeof t == "number") r = this.elements[t];
                else {
                  var n,
                    i = this.elements.length;
                  for (n = 0; n < i; n += 1)
                    if (this.elements[n].data.nm === t) {
                      r = this.elements[n];
                      break;
                    }
                }
                return e.length === 0 ? r : r.getElementByPath(e);
              }),
              (BaseRenderer.prototype.setupGlobalData = function (e, t) {
                (this.globalData.fontManager = new FontManager()),
                  (this.globalData.slotManager = slotFactory(e)),
                  this.globalData.fontManager.addChars(e.chars),
                  this.globalData.fontManager.addFonts(e.fonts, t),
                  (this.globalData.getAssetData =
                    this.animationItem.getAssetData.bind(this.animationItem)),
                  (this.globalData.getAssetsPath =
                    this.animationItem.getAssetsPath.bind(this.animationItem)),
                  (this.globalData.imageLoader =
                    this.animationItem.imagePreloader),
                  (this.globalData.audioController =
                    this.animationItem.audioController),
                  (this.globalData.frameId = 0),
                  (this.globalData.frameRate = e.fr),
                  (this.globalData.nm = e.nm),
                  (this.globalData.compSize = { w: e.w, h: e.h });
              });
            var effectTypes = { TRANSFORM_EFFECT: "transformEFfect" };
            function TransformElement() {}
            TransformElement.prototype = {
              initTransform: function () {
                var t = new Matrix();
                (this.finalTransform = {
                  mProp: this.data.ks
                    ? TransformPropertyFactory.getTransformProperty(
                        this,
                        this.data.ks,
                        this
                      )
                    : { o: 0 },
                  _matMdf: !1,
                  _localMatMdf: !1,
                  _opMdf: !1,
                  mat: t,
                  localMat: t,
                  localOpacity: 1,
                }),
                  this.data.ao && (this.finalTransform.mProp.autoOriented = !0),
                  this.data.ty;
              },
              renderTransform: function () {
                if (
                  ((this.finalTransform._opMdf =
                    this.finalTransform.mProp.o._mdf || this._isFirstFrame),
                  (this.finalTransform._matMdf =
                    this.finalTransform.mProp._mdf || this._isFirstFrame),
                  this.hierarchy)
                ) {
                  var t,
                    r = this.finalTransform.mat,
                    n = 0,
                    i = this.hierarchy.length;
                  if (!this.finalTransform._matMdf)
                    for (; n < i; ) {
                      if (this.hierarchy[n].finalTransform.mProp._mdf) {
                        this.finalTransform._matMdf = !0;
                        break;
                      }
                      n += 1;
                    }
                  if (this.finalTransform._matMdf)
                    for (
                      t = this.finalTransform.mProp.v.props,
                        r.cloneFromProps(t),
                        n = 0;
                      n < i;
                      n += 1
                    )
                      r.multiply(this.hierarchy[n].finalTransform.mProp.v);
                }
                this.finalTransform._matMdf &&
                  (this.finalTransform._localMatMdf =
                    this.finalTransform._matMdf),
                  this.finalTransform._opMdf &&
                    (this.finalTransform.localOpacity =
                      this.finalTransform.mProp.o.v);
              },
              renderLocalTransform: function () {
                if (this.localTransforms) {
                  var t = 0,
                    r = this.localTransforms.length;
                  if (
                    ((this.finalTransform._localMatMdf =
                      this.finalTransform._matMdf),
                    !this.finalTransform._localMatMdf ||
                      !this.finalTransform._opMdf)
                  )
                    for (; t < r; )
                      this.localTransforms[t]._mdf &&
                        (this.finalTransform._localMatMdf = !0),
                        this.localTransforms[t]._opMdf &&
                          !this.finalTransform._opMdf &&
                          ((this.finalTransform.localOpacity =
                            this.finalTransform.mProp.o.v),
                          (this.finalTransform._opMdf = !0)),
                        (t += 1);
                  if (this.finalTransform._localMatMdf) {
                    var n = this.finalTransform.localMat;
                    for (
                      this.localTransforms[0].matrix.clone(n), t = 1;
                      t < r;
                      t += 1
                    ) {
                      var i = this.localTransforms[t].matrix;
                      n.multiply(i);
                    }
                    n.multiply(this.finalTransform.mat);
                  }
                  if (this.finalTransform._opMdf) {
                    var a = this.finalTransform.localOpacity;
                    for (t = 0; t < r; t += 1)
                      a *= this.localTransforms[t].opacity * 0.01;
                    this.finalTransform.localOpacity = a;
                  }
                }
              },
              searchEffectTransforms: function () {
                if (this.renderableEffectsManager) {
                  var t = this.renderableEffectsManager.getEffects(
                    effectTypes.TRANSFORM_EFFECT
                  );
                  if (t.length) {
                    (this.localTransforms = []),
                      (this.finalTransform.localMat = new Matrix());
                    var r = 0,
                      n = t.length;
                    for (r = 0; r < n; r += 1) this.localTransforms.push(t[r]);
                  }
                }
              },
              globalToLocal: function (t) {
                var r = [];
                r.push(this.finalTransform);
                for (var n = !0, i = this.comp; n; )
                  i.finalTransform
                    ? (i.data.hasMask && r.splice(0, 0, i.finalTransform),
                      (i = i.comp))
                    : (n = !1);
                var a,
                  o = r.length,
                  l;
                for (a = 0; a < o; a += 1)
                  (l = r[a].mat.applyToPointArray(0, 0, 0)),
                    (t = [t[0] - l[0], t[1] - l[1], 0]);
                return t;
              },
              mHelper: new Matrix(),
            };
            function MaskElement(e, t, r) {
              (this.data = e),
                (this.element = t),
                (this.globalData = r),
                (this.storedData = []),
                (this.masksProperties = this.data.masksProperties || []),
                (this.maskElement = null);
              var n = this.globalData.defs,
                i,
                a = this.masksProperties ? this.masksProperties.length : 0;
              (this.viewData = createSizedArray(a)), (this.solidPath = "");
              var o,
                l = this.masksProperties,
                c = 0,
                u = [],
                d,
                E,
                b = createElementID(),
                P,
                R,
                T,
                M,
                x = "clipPath",
                k = "clip-path";
              for (i = 0; i < a; i += 1)
                if (
                  (((l[i].mode !== "a" && l[i].mode !== "n") ||
                    l[i].inv ||
                    l[i].o.k !== 100 ||
                    l[i].o.x) &&
                    ((x = "mask"), (k = "mask")),
                  (l[i].mode === "s" || l[i].mode === "i") && c === 0
                    ? ((P = createNS("rect")),
                      P.setAttribute("fill", "#ffffff"),
                      P.setAttribute("width", this.element.comp.data.w || 0),
                      P.setAttribute("height", this.element.comp.data.h || 0),
                      u.push(P))
                    : (P = null),
                  (o = createNS("path")),
                  l[i].mode === "n")
                )
                  (this.viewData[i] = {
                    op: PropertyFactory.getProp(
                      this.element,
                      l[i].o,
                      0,
                      0.01,
                      this.element
                    ),
                    prop: ShapePropertyFactory.getShapeProp(
                      this.element,
                      l[i],
                      3
                    ),
                    elem: o,
                    lastPath: "",
                  }),
                    n.appendChild(o);
                else {
                  (c += 1),
                    o.setAttribute(
                      "fill",
                      l[i].mode === "s" ? "#000000" : "#ffffff"
                    ),
                    o.setAttribute("clip-rule", "nonzero");
                  var S;
                  if (
                    (l[i].x.k !== 0
                      ? ((x = "mask"),
                        (k = "mask"),
                        (M = PropertyFactory.getProp(
                          this.element,
                          l[i].x,
                          0,
                          null,
                          this.element
                        )),
                        (S = createElementID()),
                        (R = createNS("filter")),
                        R.setAttribute("id", S),
                        (T = createNS("feMorphology")),
                        T.setAttribute("operator", "erode"),
                        T.setAttribute("in", "SourceGraphic"),
                        T.setAttribute("radius", "0"),
                        R.appendChild(T),
                        n.appendChild(R),
                        o.setAttribute(
                          "stroke",
                          l[i].mode === "s" ? "#000000" : "#ffffff"
                        ))
                      : ((T = null), (M = null)),
                    (this.storedData[i] = {
                      elem: o,
                      x: M,
                      expan: T,
                      lastPath: "",
                      lastOperator: "",
                      filterId: S,
                      lastRadius: 0,
                    }),
                    l[i].mode === "i")
                  ) {
                    E = u.length;
                    var A = createNS("g");
                    for (d = 0; d < E; d += 1) A.appendChild(u[d]);
                    var O = createNS("mask");
                    O.setAttribute("mask-type", "alpha"),
                      O.setAttribute("id", b + "_" + c),
                      O.appendChild(o),
                      n.appendChild(O),
                      A.setAttribute(
                        "mask",
                        "url(" + getLocationHref() + "#" + b + "_" + c + ")"
                      ),
                      (u.length = 0),
                      u.push(A);
                  } else u.push(o);
                  l[i].inv &&
                    !this.solidPath &&
                    (this.solidPath = this.createLayerSolidPath()),
                    (this.viewData[i] = {
                      elem: o,
                      lastPath: "",
                      op: PropertyFactory.getProp(
                        this.element,
                        l[i].o,
                        0,
                        0.01,
                        this.element
                      ),
                      prop: ShapePropertyFactory.getShapeProp(
                        this.element,
                        l[i],
                        3
                      ),
                      invRect: P,
                    }),
                    this.viewData[i].prop.k ||
                      this.drawPath(
                        l[i],
                        this.viewData[i].prop.v,
                        this.viewData[i]
                      );
                }
              for (
                this.maskElement = createNS(x), a = u.length, i = 0;
                i < a;
                i += 1
              )
                this.maskElement.appendChild(u[i]);
              c > 0 &&
                (this.maskElement.setAttribute("id", b),
                this.element.maskedElement.setAttribute(
                  k,
                  "url(" + getLocationHref() + "#" + b + ")"
                ),
                n.appendChild(this.maskElement)),
                this.viewData.length &&
                  this.element.addRenderableComponent(this);
            }
            (MaskElement.prototype.getMaskProperty = function (e) {
              return this.viewData[e].prop;
            }),
              (MaskElement.prototype.renderFrame = function (e) {
                var t = this.element.finalTransform.mat,
                  r,
                  n = this.masksProperties.length;
                for (r = 0; r < n; r += 1)
                  if (
                    ((this.viewData[r].prop._mdf || e) &&
                      this.drawPath(
                        this.masksProperties[r],
                        this.viewData[r].prop.v,
                        this.viewData[r]
                      ),
                    (this.viewData[r].op._mdf || e) &&
                      this.viewData[r].elem.setAttribute(
                        "fill-opacity",
                        this.viewData[r].op.v
                      ),
                    this.masksProperties[r].mode !== "n" &&
                      (this.viewData[r].invRect &&
                        (this.element.finalTransform.mProp._mdf || e) &&
                        this.viewData[r].invRect.setAttribute(
                          "transform",
                          t.getInverseMatrix().to2dCSS()
                        ),
                      this.storedData[r].x && (this.storedData[r].x._mdf || e)))
                  ) {
                    var i = this.storedData[r].expan;
                    this.storedData[r].x.v < 0
                      ? (this.storedData[r].lastOperator !== "erode" &&
                          ((this.storedData[r].lastOperator = "erode"),
                          this.storedData[r].elem.setAttribute(
                            "filter",
                            "url(" +
                              getLocationHref() +
                              "#" +
                              this.storedData[r].filterId +
                              ")"
                          )),
                        i.setAttribute("radius", -this.storedData[r].x.v))
                      : (this.storedData[r].lastOperator !== "dilate" &&
                          ((this.storedData[r].lastOperator = "dilate"),
                          this.storedData[r].elem.setAttribute("filter", null)),
                        this.storedData[r].elem.setAttribute(
                          "stroke-width",
                          this.storedData[r].x.v * 2
                        ));
                  }
              }),
              (MaskElement.prototype.getMaskelement = function () {
                return this.maskElement;
              }),
              (MaskElement.prototype.createLayerSolidPath = function () {
                var e = "M0,0 ";
                return (
                  (e += " h" + this.globalData.compSize.w),
                  (e += " v" + this.globalData.compSize.h),
                  (e += " h-" + this.globalData.compSize.w),
                  (e += " v-" + this.globalData.compSize.h + " "),
                  e
                );
              }),
              (MaskElement.prototype.drawPath = function (e, t, r) {
                var n = " M" + t.v[0][0] + "," + t.v[0][1],
                  i,
                  a;
                for (a = t._length, i = 1; i < a; i += 1)
                  n +=
                    " C" +
                    t.o[i - 1][0] +
                    "," +
                    t.o[i - 1][1] +
                    " " +
                    t.i[i][0] +
                    "," +
                    t.i[i][1] +
                    " " +
                    t.v[i][0] +
                    "," +
                    t.v[i][1];
                if (
                  (t.c &&
                    a > 1 &&
                    (n +=
                      " C" +
                      t.o[i - 1][0] +
                      "," +
                      t.o[i - 1][1] +
                      " " +
                      t.i[0][0] +
                      "," +
                      t.i[0][1] +
                      " " +
                      t.v[0][0] +
                      "," +
                      t.v[0][1]),
                  r.lastPath !== n)
                ) {
                  var o = "";
                  r.elem &&
                    (t.c && (o = e.inv ? this.solidPath + n : n),
                    r.elem.setAttribute("d", o)),
                    (r.lastPath = n);
                }
              }),
              (MaskElement.prototype.destroy = function () {
                (this.element = null),
                  (this.globalData = null),
                  (this.maskElement = null),
                  (this.data = null),
                  (this.masksProperties = null);
              });
            var filtersFactory = (function () {
                var e = {};
                (e.createFilter = t), (e.createAlphaToLuminanceFilter = r);
                function t(n, i) {
                  var a = createNS("filter");
                  return (
                    a.setAttribute("id", n),
                    i !== !0 &&
                      (a.setAttribute("filterUnits", "objectBoundingBox"),
                      a.setAttribute("x", "0%"),
                      a.setAttribute("y", "0%"),
                      a.setAttribute("width", "100%"),
                      a.setAttribute("height", "100%")),
                    a
                  );
                }
                function r() {
                  var n = createNS("feColorMatrix");
                  return (
                    n.setAttribute("type", "matrix"),
                    n.setAttribute("color-interpolation-filters", "sRGB"),
                    n.setAttribute(
                      "values",
                      "0 0 0 1 0  0 0 0 1 0  0 0 0 1 0  0 0 0 1 1"
                    ),
                    n
                  );
                }
                return e;
              })(),
              featureSupport = (function () {
                var e = {
                  maskType: !0,
                  svgLumaHidden: !0,
                  offscreenCanvas: typeof OffscreenCanvas < "u",
                };
                return (
                  (/MSIE 10/i.test(navigator.userAgent) ||
                    /MSIE 9/i.test(navigator.userAgent) ||
                    /rv:11.0/i.test(navigator.userAgent) ||
                    /Edge\/\d./i.test(navigator.userAgent)) &&
                    (e.maskType = !1),
                  /firefox/i.test(navigator.userAgent) &&
                    (e.svgLumaHidden = !1),
                  e
                );
              })(),
              registeredEffects$1 = {},
              idPrefix = "filter_result_";
            function SVGEffects(e) {
              var t,
                r = "SourceGraphic",
                n = e.data.ef ? e.data.ef.length : 0,
                i = createElementID(),
                a = filtersFactory.createFilter(i, !0),
                o = 0;
              this.filters = [];
              var l;
              for (t = 0; t < n; t += 1) {
                l = null;
                var c = e.data.ef[t].ty;
                if (registeredEffects$1[c]) {
                  var u = registeredEffects$1[c].effect;
                  (l = new u(
                    a,
                    e.effectsManager.effectElements[t],
                    e,
                    idPrefix + o,
                    r
                  )),
                    (r = idPrefix + o),
                    registeredEffects$1[c].countsAsEffect && (o += 1);
                }
                l && this.filters.push(l);
              }
              o &&
                (e.globalData.defs.appendChild(a),
                e.layerElement.setAttribute(
                  "filter",
                  "url(" + getLocationHref() + "#" + i + ")"
                )),
                this.filters.length && e.addRenderableComponent(this);
            }
            (SVGEffects.prototype.renderFrame = function (e) {
              var t,
                r = this.filters.length;
              for (t = 0; t < r; t += 1) this.filters[t].renderFrame(e);
            }),
              (SVGEffects.prototype.getEffects = function (e) {
                var t,
                  r = this.filters.length,
                  n = [];
                for (t = 0; t < r; t += 1)
                  this.filters[t].type === e && n.push(this.filters[t]);
                return n;
              });
            function registerEffect$1(e, t, r) {
              registeredEffects$1[e] = { effect: t, countsAsEffect: r };
            }
            function SVGBaseElement() {}
            SVGBaseElement.prototype = {
              initRendererElement: function () {
                this.layerElement = createNS("g");
              },
              createContainerElements: function () {
                (this.matteElement = createNS("g")),
                  (this.transformedElement = this.layerElement),
                  (this.maskedElement = this.layerElement),
                  (this._sizeChanged = !1);
                var t = null;
                if (this.data.td) {
                  this.matteMasks = {};
                  var r = createNS("g");
                  r.setAttribute("id", this.layerId),
                    r.appendChild(this.layerElement),
                    (t = r),
                    this.globalData.defs.appendChild(r);
                } else
                  this.data.tt
                    ? (this.matteElement.appendChild(this.layerElement),
                      (t = this.matteElement),
                      (this.baseElement = this.matteElement))
                    : (this.baseElement = this.layerElement);
                if (
                  (this.data.ln &&
                    this.layerElement.setAttribute("id", this.data.ln),
                  this.data.cl &&
                    this.layerElement.setAttribute("class", this.data.cl),
                  this.data.ty === 0 && !this.data.hd)
                ) {
                  var n = createNS("clipPath"),
                    i = createNS("path");
                  i.setAttribute(
                    "d",
                    "M0,0 L" +
                      this.data.w +
                      ",0 L" +
                      this.data.w +
                      "," +
                      this.data.h +
                      " L0," +
                      this.data.h +
                      "z"
                  );
                  var a = createElementID();
                  if (
                    (n.setAttribute("id", a),
                    n.appendChild(i),
                    this.globalData.defs.appendChild(n),
                    this.checkMasks())
                  ) {
                    var o = createNS("g");
                    o.setAttribute(
                      "clip-path",
                      "url(" + getLocationHref() + "#" + a + ")"
                    ),
                      o.appendChild(this.layerElement),
                      (this.transformedElement = o),
                      t
                        ? t.appendChild(this.transformedElement)
                        : (this.baseElement = this.transformedElement);
                  } else
                    this.layerElement.setAttribute(
                      "clip-path",
                      "url(" + getLocationHref() + "#" + a + ")"
                    );
                }
                this.data.bm !== 0 && this.setBlendMode();
              },
              renderElement: function () {
                this.finalTransform._localMatMdf &&
                  this.transformedElement.setAttribute(
                    "transform",
                    this.finalTransform.localMat.to2dCSS()
                  ),
                  this.finalTransform._opMdf &&
                    this.transformedElement.setAttribute(
                      "opacity",
                      this.finalTransform.localOpacity
                    );
              },
              destroyBaseElement: function () {
                (this.layerElement = null),
                  (this.matteElement = null),
                  this.maskManager.destroy();
              },
              getBaseElement: function () {
                return this.data.hd ? null : this.baseElement;
              },
              createRenderableComponents: function () {
                (this.maskManager = new MaskElement(
                  this.data,
                  this,
                  this.globalData
                )),
                  (this.renderableEffectsManager = new SVGEffects(this)),
                  this.searchEffectTransforms();
              },
              getMatte: function (t) {
                if (
                  (this.matteMasks || (this.matteMasks = {}),
                  !this.matteMasks[t])
                ) {
                  var r = this.layerId + "_" + t,
                    n,
                    i,
                    a,
                    o;
                  if (t === 1 || t === 3) {
                    var l = createNS("mask");
                    l.setAttribute("id", r),
                      l.setAttribute(
                        "mask-type",
                        t === 3 ? "luminance" : "alpha"
                      ),
                      (a = createNS("use")),
                      a.setAttributeNS(
                        "http://www.w3.org/1999/xlink",
                        "href",
                        "#" + this.layerId
                      ),
                      l.appendChild(a),
                      this.globalData.defs.appendChild(l),
                      !featureSupport.maskType &&
                        t === 1 &&
                        (l.setAttribute("mask-type", "luminance"),
                        (n = createElementID()),
                        (i = filtersFactory.createFilter(n)),
                        this.globalData.defs.appendChild(i),
                        i.appendChild(
                          filtersFactory.createAlphaToLuminanceFilter()
                        ),
                        (o = createNS("g")),
                        o.appendChild(a),
                        l.appendChild(o),
                        o.setAttribute(
                          "filter",
                          "url(" + getLocationHref() + "#" + n + ")"
                        ));
                  } else if (t === 2) {
                    var c = createNS("mask");
                    c.setAttribute("id", r),
                      c.setAttribute("mask-type", "alpha");
                    var u = createNS("g");
                    c.appendChild(u),
                      (n = createElementID()),
                      (i = filtersFactory.createFilter(n));
                    var d = createNS("feComponentTransfer");
                    d.setAttribute("in", "SourceGraphic"), i.appendChild(d);
                    var E = createNS("feFuncA");
                    E.setAttribute("type", "table"),
                      E.setAttribute("tableValues", "1.0 0.0"),
                      d.appendChild(E),
                      this.globalData.defs.appendChild(i);
                    var b = createNS("rect");
                    b.setAttribute("width", this.comp.data.w),
                      b.setAttribute("height", this.comp.data.h),
                      b.setAttribute("x", "0"),
                      b.setAttribute("y", "0"),
                      b.setAttribute("fill", "#ffffff"),
                      b.setAttribute("opacity", "0"),
                      u.setAttribute(
                        "filter",
                        "url(" + getLocationHref() + "#" + n + ")"
                      ),
                      u.appendChild(b),
                      (a = createNS("use")),
                      a.setAttributeNS(
                        "http://www.w3.org/1999/xlink",
                        "href",
                        "#" + this.layerId
                      ),
                      u.appendChild(a),
                      featureSupport.maskType ||
                        (c.setAttribute("mask-type", "luminance"),
                        i.appendChild(
                          filtersFactory.createAlphaToLuminanceFilter()
                        ),
                        (o = createNS("g")),
                        u.appendChild(b),
                        o.appendChild(this.layerElement),
                        u.appendChild(o)),
                      this.globalData.defs.appendChild(c);
                  }
                  this.matteMasks[t] = r;
                }
                return this.matteMasks[t];
              },
              setMatte: function (t) {
                this.matteElement &&
                  this.matteElement.setAttribute(
                    "mask",
                    "url(" + getLocationHref() + "#" + t + ")"
                  );
              },
            };
            function HierarchyElement() {}
            HierarchyElement.prototype = {
              initHierarchy: function () {
                (this.hierarchy = []),
                  (this._isParent = !1),
                  this.checkParenting();
              },
              setHierarchy: function (t) {
                this.hierarchy = t;
              },
              setAsParent: function () {
                this._isParent = !0;
              },
              checkParenting: function () {
                this.data.parent !== void 0 &&
                  this.comp.buildElementParenting(this, this.data.parent, []);
              },
            };
            function RenderableDOMElement() {}
            (function () {
              var e = {
                initElement: function (r, n, i) {
                  this.initFrame(),
                    this.initBaseData(r, n, i),
                    this.initTransform(r, n, i),
                    this.initHierarchy(),
                    this.initRenderable(),
                    this.initRendererElement(),
                    this.createContainerElements(),
                    this.createRenderableComponents(),
                    this.createContent(),
                    this.hide();
                },
                hide: function () {
                  if (!this.hidden && (!this.isInRange || this.isTransparent)) {
                    var r = this.baseElement || this.layerElement;
                    (r.style.display = "none"), (this.hidden = !0);
                  }
                },
                show: function () {
                  if (this.isInRange && !this.isTransparent) {
                    if (!this.data.hd) {
                      var r = this.baseElement || this.layerElement;
                      r.style.display = "block";
                    }
                    (this.hidden = !1), (this._isFirstFrame = !0);
                  }
                },
                renderFrame: function () {
                  this.data.hd ||
                    this.hidden ||
                    (this.renderTransform(),
                    this.renderRenderable(),
                    this.renderLocalTransform(),
                    this.renderElement(),
                    this.renderInnerContent(),
                    this._isFirstFrame && (this._isFirstFrame = !1));
                },
                renderInnerContent: function () {},
                prepareFrame: function (r) {
                  (this._mdf = !1),
                    this.prepareRenderableFrame(r),
                    this.prepareProperties(r, this.isInRange),
                    this.checkTransparency();
                },
                destroy: function () {
                  (this.innerElem = null), this.destroyBaseElement();
                },
              };
              extendPrototype(
                [RenderableElement, createProxyFunction(e)],
                RenderableDOMElement
              );
            })();
            function IImageElement(e, t, r) {
              (this.assetData = t.getAssetData(e.refId)),
                this.assetData &&
                  this.assetData.sid &&
                  (this.assetData = t.slotManager.getProp(this.assetData)),
                this.initElement(e, t, r),
                (this.sourceRect = {
                  top: 0,
                  left: 0,
                  width: this.assetData.w,
                  height: this.assetData.h,
                });
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                SVGBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
              ],
              IImageElement
            ),
              (IImageElement.prototype.createContent = function () {
                var e = this.globalData.getAssetsPath(this.assetData);
                (this.innerElem = createNS("image")),
                  this.innerElem.setAttribute("width", this.assetData.w + "px"),
                  this.innerElem.setAttribute(
                    "height",
                    this.assetData.h + "px"
                  ),
                  this.innerElem.setAttribute(
                    "preserveAspectRatio",
                    this.assetData.pr ||
                      this.globalData.renderConfig.imagePreserveAspectRatio
                  ),
                  this.innerElem.setAttributeNS(
                    "http://www.w3.org/1999/xlink",
                    "href",
                    e
                  ),
                  this.layerElement.appendChild(this.innerElem);
              }),
              (IImageElement.prototype.sourceRectAtTime = function () {
                return this.sourceRect;
              });
            function ProcessedElement(e, t) {
              (this.elem = e), (this.pos = t);
            }
            function IShapeElement() {}
            IShapeElement.prototype = {
              addShapeToModifiers: function (t) {
                var r,
                  n = this.shapeModifiers.length;
                for (r = 0; r < n; r += 1) this.shapeModifiers[r].addShape(t);
              },
              isShapeInAnimatedModifiers: function (t) {
                for (var r = 0, n = this.shapeModifiers.length; r < n; )
                  if (this.shapeModifiers[r].isAnimatedWithShape(t)) return !0;
                return !1;
              },
              renderModifiers: function () {
                if (this.shapeModifiers.length) {
                  var t,
                    r = this.shapes.length;
                  for (t = 0; t < r; t += 1) this.shapes[t].sh.reset();
                  r = this.shapeModifiers.length;
                  var n;
                  for (
                    t = r - 1;
                    t >= 0 &&
                    ((n = this.shapeModifiers[t].processShapes(
                      this._isFirstFrame
                    )),
                    !n);
                    t -= 1
                  );
                }
              },
              searchProcessedElement: function (t) {
                for (
                  var r = this.processedElements, n = 0, i = r.length;
                  n < i;

                ) {
                  if (r[n].elem === t) return r[n].pos;
                  n += 1;
                }
                return 0;
              },
              addProcessedElement: function (t, r) {
                for (var n = this.processedElements, i = n.length; i; )
                  if (((i -= 1), n[i].elem === t)) {
                    n[i].pos = r;
                    return;
                  }
                n.push(new ProcessedElement(t, r));
              },
              prepareFrame: function (t) {
                this.prepareRenderableFrame(t),
                  this.prepareProperties(t, this.isInRange);
              },
            };
            var lineCapEnum = { 1: "butt", 2: "round", 3: "square" },
              lineJoinEnum = { 1: "miter", 2: "round", 3: "bevel" };
            function SVGShapeData(e, t, r) {
              (this.caches = []),
                (this.styles = []),
                (this.transformers = e),
                (this.lStr = ""),
                (this.sh = r),
                (this.lvl = t),
                (this._isAnimated = !!r.k);
              for (var n = 0, i = e.length; n < i; ) {
                if (e[n].mProps.dynamicProperties.length) {
                  this._isAnimated = !0;
                  break;
                }
                n += 1;
              }
            }
            SVGShapeData.prototype.setAsAnimated = function () {
              this._isAnimated = !0;
            };
            function SVGStyleData(e, t) {
              (this.data = e),
                (this.type = e.ty),
                (this.d = ""),
                (this.lvl = t),
                (this._mdf = !1),
                (this.closed = e.hd === !0),
                (this.pElem = createNS("path")),
                (this.msElem = null);
            }
            SVGStyleData.prototype.reset = function () {
              (this.d = ""), (this._mdf = !1);
            };
            function DashProperty(e, t, r, n) {
              (this.elem = e),
                (this.frameId = -1),
                (this.dataProps = createSizedArray(t.length)),
                (this.renderer = r),
                (this.k = !1),
                (this.dashStr = ""),
                (this.dashArray = createTypedArray(
                  "float32",
                  t.length ? t.length - 1 : 0
                )),
                (this.dashoffset = createTypedArray("float32", 1)),
                this.initDynamicPropertyContainer(n);
              var i,
                a = t.length || 0,
                o;
              for (i = 0; i < a; i += 1)
                (o = PropertyFactory.getProp(e, t[i].v, 0, 0, this)),
                  (this.k = o.k || this.k),
                  (this.dataProps[i] = { n: t[i].n, p: o });
              this.k || this.getValue(!0), (this._isAnimated = this.k);
            }
            (DashProperty.prototype.getValue = function (e) {
              if (
                !(this.elem.globalData.frameId === this.frameId && !e) &&
                ((this.frameId = this.elem.globalData.frameId),
                this.iterateDynamicProperties(),
                (this._mdf = this._mdf || e),
                this._mdf)
              ) {
                var t = 0,
                  r = this.dataProps.length;
                for (
                  this.renderer === "svg" && (this.dashStr = ""), t = 0;
                  t < r;
                  t += 1
                )
                  this.dataProps[t].n !== "o"
                    ? this.renderer === "svg"
                      ? (this.dashStr += " " + this.dataProps[t].p.v)
                      : (this.dashArray[t] = this.dataProps[t].p.v)
                    : (this.dashoffset[0] = this.dataProps[t].p.v);
              }
            }),
              extendPrototype([DynamicPropertyContainer], DashProperty);
            function SVGStrokeStyleData(e, t, r) {
              this.initDynamicPropertyContainer(e),
                (this.getValue = this.iterateDynamicProperties),
                (this.o = PropertyFactory.getProp(e, t.o, 0, 0.01, this)),
                (this.w = PropertyFactory.getProp(e, t.w, 0, null, this)),
                (this.d = new DashProperty(e, t.d || {}, "svg", this)),
                (this.c = PropertyFactory.getProp(e, t.c, 1, 255, this)),
                (this.style = r),
                (this._isAnimated = !!this._isAnimated);
            }
            extendPrototype([DynamicPropertyContainer], SVGStrokeStyleData);
            function SVGFillStyleData(e, t, r) {
              this.initDynamicPropertyContainer(e),
                (this.getValue = this.iterateDynamicProperties),
                (this.o = PropertyFactory.getProp(e, t.o, 0, 0.01, this)),
                (this.c = PropertyFactory.getProp(e, t.c, 1, 255, this)),
                (this.style = r);
            }
            extendPrototype([DynamicPropertyContainer], SVGFillStyleData);
            function SVGNoStyleData(e, t, r) {
              this.initDynamicPropertyContainer(e),
                (this.getValue = this.iterateDynamicProperties),
                (this.style = r);
            }
            extendPrototype([DynamicPropertyContainer], SVGNoStyleData);
            function GradientProperty(e, t, r) {
              (this.data = t), (this.c = createTypedArray("uint8c", t.p * 4));
              var n = t.k.k[0].s
                ? t.k.k[0].s.length - t.p * 4
                : t.k.k.length - t.p * 4;
              (this.o = createTypedArray("float32", n)),
                (this._cmdf = !1),
                (this._omdf = !1),
                (this._collapsable = this.checkCollapsable()),
                (this._hasOpacity = n),
                this.initDynamicPropertyContainer(r),
                (this.prop = PropertyFactory.getProp(e, t.k, 1, null, this)),
                (this.k = this.prop.k),
                this.getValue(!0);
            }
            (GradientProperty.prototype.comparePoints = function (e, t) {
              for (var r = 0, n = this.o.length / 2, i; r < n; ) {
                if (((i = Math.abs(e[r * 4] - e[t * 4 + r * 2])), i > 0.01))
                  return !1;
                r += 1;
              }
              return !0;
            }),
              (GradientProperty.prototype.checkCollapsable = function () {
                if (this.o.length / 2 !== this.c.length / 4) return !1;
                if (this.data.k.k[0].s)
                  for (var e = 0, t = this.data.k.k.length; e < t; ) {
                    if (!this.comparePoints(this.data.k.k[e].s, this.data.p))
                      return !1;
                    e += 1;
                  }
                else if (!this.comparePoints(this.data.k.k, this.data.p))
                  return !1;
                return !0;
              }),
              (GradientProperty.prototype.getValue = function (e) {
                if (
                  (this.prop.getValue(),
                  (this._mdf = !1),
                  (this._cmdf = !1),
                  (this._omdf = !1),
                  this.prop._mdf || e)
                ) {
                  var t,
                    r = this.data.p * 4,
                    n,
                    i;
                  for (t = 0; t < r; t += 1)
                    (n = t % 4 === 0 ? 100 : 255),
                      (i = Math.round(this.prop.v[t] * n)),
                      this.c[t] !== i && ((this.c[t] = i), (this._cmdf = !e));
                  if (this.o.length)
                    for (
                      r = this.prop.v.length, t = this.data.p * 4;
                      t < r;
                      t += 1
                    )
                      (n = t % 2 === 0 ? 100 : 1),
                        (i =
                          t % 2 === 0
                            ? Math.round(this.prop.v[t] * 100)
                            : this.prop.v[t]),
                        this.o[t - this.data.p * 4] !== i &&
                          ((this.o[t - this.data.p * 4] = i),
                          (this._omdf = !e));
                  this._mdf = !e;
                }
              }),
              extendPrototype([DynamicPropertyContainer], GradientProperty);
            function SVGGradientFillStyleData(e, t, r) {
              this.initDynamicPropertyContainer(e),
                (this.getValue = this.iterateDynamicProperties),
                this.initGradientData(e, t, r);
            }
            (SVGGradientFillStyleData.prototype.initGradientData = function (
              e,
              t,
              r
            ) {
              (this.o = PropertyFactory.getProp(e, t.o, 0, 0.01, this)),
                (this.s = PropertyFactory.getProp(e, t.s, 1, null, this)),
                (this.e = PropertyFactory.getProp(e, t.e, 1, null, this)),
                (this.h = PropertyFactory.getProp(
                  e,
                  t.h || { k: 0 },
                  0,
                  0.01,
                  this
                )),
                (this.a = PropertyFactory.getProp(
                  e,
                  t.a || { k: 0 },
                  0,
                  degToRads,
                  this
                )),
                (this.g = new GradientProperty(e, t.g, this)),
                (this.style = r),
                (this.stops = []),
                this.setGradientData(r.pElem, t),
                this.setGradientOpacity(t, r),
                (this._isAnimated = !!this._isAnimated);
            }),
              (SVGGradientFillStyleData.prototype.setGradientData = function (
                e,
                t
              ) {
                var r = createElementID(),
                  n = createNS(t.t === 1 ? "linearGradient" : "radialGradient");
                n.setAttribute("id", r),
                  n.setAttribute("spreadMethod", "pad"),
                  n.setAttribute("gradientUnits", "userSpaceOnUse");
                var i = [],
                  a,
                  o,
                  l;
                for (l = t.g.p * 4, o = 0; o < l; o += 4)
                  (a = createNS("stop")), n.appendChild(a), i.push(a);
                e.setAttribute(
                  t.ty === "gf" ? "fill" : "stroke",
                  "url(" + getLocationHref() + "#" + r + ")"
                ),
                  (this.gf = n),
                  (this.cst = i);
              }),
              (SVGGradientFillStyleData.prototype.setGradientOpacity =
                function (e, t) {
                  if (this.g._hasOpacity && !this.g._collapsable) {
                    var r,
                      n,
                      i,
                      a = createNS("mask"),
                      o = createNS("path");
                    a.appendChild(o);
                    var l = createElementID(),
                      c = createElementID();
                    a.setAttribute("id", c);
                    var u = createNS(
                      e.t === 1 ? "linearGradient" : "radialGradient"
                    );
                    u.setAttribute("id", l),
                      u.setAttribute("spreadMethod", "pad"),
                      u.setAttribute("gradientUnits", "userSpaceOnUse"),
                      (i = e.g.k.k[0].s ? e.g.k.k[0].s.length : e.g.k.k.length);
                    var d = this.stops;
                    for (n = e.g.p * 4; n < i; n += 2)
                      (r = createNS("stop")),
                        r.setAttribute("stop-color", "rgb(255,255,255)"),
                        u.appendChild(r),
                        d.push(r);
                    o.setAttribute(
                      e.ty === "gf" ? "fill" : "stroke",
                      "url(" + getLocationHref() + "#" + l + ")"
                    ),
                      e.ty === "gs" &&
                        (o.setAttribute(
                          "stroke-linecap",
                          lineCapEnum[e.lc || 2]
                        ),
                        o.setAttribute(
                          "stroke-linejoin",
                          lineJoinEnum[e.lj || 2]
                        ),
                        e.lj === 1 &&
                          o.setAttribute("stroke-miterlimit", e.ml)),
                      (this.of = u),
                      (this.ms = a),
                      (this.ost = d),
                      (this.maskId = c),
                      (t.msElem = o);
                  }
                }),
              extendPrototype(
                [DynamicPropertyContainer],
                SVGGradientFillStyleData
              );
            function SVGGradientStrokeStyleData(e, t, r) {
              this.initDynamicPropertyContainer(e),
                (this.getValue = this.iterateDynamicProperties),
                (this.w = PropertyFactory.getProp(e, t.w, 0, null, this)),
                (this.d = new DashProperty(e, t.d || {}, "svg", this)),
                this.initGradientData(e, t, r),
                (this._isAnimated = !!this._isAnimated);
            }
            extendPrototype(
              [SVGGradientFillStyleData, DynamicPropertyContainer],
              SVGGradientStrokeStyleData
            );
            function ShapeGroupData() {
              (this.it = []),
                (this.prevViewData = []),
                (this.gr = createNS("g"));
            }
            function SVGTransformData(e, t, r) {
              (this.transform = { mProps: e, op: t, container: r }),
                (this.elements = []),
                (this._isAnimated =
                  this.transform.mProps.dynamicProperties.length ||
                  this.transform.op.effectsSequence.length);
            }
            var buildShapeString = function (t, r, n, i) {
                if (r === 0) return "";
                var a = t.o,
                  o = t.i,
                  l = t.v,
                  c,
                  u = " M" + i.applyToPointStringified(l[0][0], l[0][1]);
                for (c = 1; c < r; c += 1)
                  u +=
                    " C" +
                    i.applyToPointStringified(a[c - 1][0], a[c - 1][1]) +
                    " " +
                    i.applyToPointStringified(o[c][0], o[c][1]) +
                    " " +
                    i.applyToPointStringified(l[c][0], l[c][1]);
                return (
                  n &&
                    r &&
                    ((u +=
                      " C" +
                      i.applyToPointStringified(a[c - 1][0], a[c - 1][1]) +
                      " " +
                      i.applyToPointStringified(o[0][0], o[0][1]) +
                      " " +
                      i.applyToPointStringified(l[0][0], l[0][1])),
                    (u += "z")),
                  u
                );
              },
              SVGElementsRenderer = (function () {
                var e = new Matrix(),
                  t = new Matrix(),
                  r = { createRenderFunction: n };
                function n(E) {
                  switch (E.ty) {
                    case "fl":
                      return l;
                    case "gf":
                      return u;
                    case "gs":
                      return c;
                    case "st":
                      return d;
                    case "sh":
                    case "el":
                    case "rc":
                    case "sr":
                      return o;
                    case "tr":
                      return i;
                    case "no":
                      return a;
                    default:
                      return null;
                  }
                }
                function i(E, b, P) {
                  (P || b.transform.op._mdf) &&
                    b.transform.container.setAttribute(
                      "opacity",
                      b.transform.op.v
                    ),
                    (P || b.transform.mProps._mdf) &&
                      b.transform.container.setAttribute(
                        "transform",
                        b.transform.mProps.v.to2dCSS()
                      );
                }
                function a() {}
                function o(E, b, P) {
                  var R,
                    T,
                    M,
                    x,
                    k,
                    S,
                    A = b.styles.length,
                    O = b.lvl,
                    F,
                    D,
                    H,
                    $;
                  for (S = 0; S < A; S += 1) {
                    if (((x = b.sh._mdf || P), b.styles[S].lvl < O)) {
                      for (
                        D = t.reset(),
                          H = O - b.styles[S].lvl,
                          $ = b.transformers.length - 1;
                        !x && H > 0;

                      )
                        (x = b.transformers[$].mProps._mdf || x),
                          (H -= 1),
                          ($ -= 1);
                      if (x)
                        for (
                          H = O - b.styles[S].lvl,
                            $ = b.transformers.length - 1;
                          H > 0;

                        )
                          D.multiply(b.transformers[$].mProps.v),
                            (H -= 1),
                            ($ -= 1);
                    } else D = e;
                    if (((F = b.sh.paths), (T = F._length), x)) {
                      for (M = "", R = 0; R < T; R += 1)
                        (k = F.shapes[R]),
                          k &&
                            k._length &&
                            (M += buildShapeString(k, k._length, k.c, D));
                      b.caches[S] = M;
                    } else M = b.caches[S];
                    (b.styles[S].d += E.hd === !0 ? "" : M),
                      (b.styles[S]._mdf = x || b.styles[S]._mdf);
                  }
                }
                function l(E, b, P) {
                  var R = b.style;
                  (b.c._mdf || P) &&
                    R.pElem.setAttribute(
                      "fill",
                      "rgb(" +
                        bmFloor(b.c.v[0]) +
                        "," +
                        bmFloor(b.c.v[1]) +
                        "," +
                        bmFloor(b.c.v[2]) +
                        ")"
                    ),
                    (b.o._mdf || P) &&
                      R.pElem.setAttribute("fill-opacity", b.o.v);
                }
                function c(E, b, P) {
                  u(E, b, P), d(E, b, P);
                }
                function u(E, b, P) {
                  var R = b.gf,
                    T = b.g._hasOpacity,
                    M = b.s.v,
                    x = b.e.v;
                  if (b.o._mdf || P) {
                    var k = E.ty === "gf" ? "fill-opacity" : "stroke-opacity";
                    b.style.pElem.setAttribute(k, b.o.v);
                  }
                  if (b.s._mdf || P) {
                    var S = E.t === 1 ? "x1" : "cx",
                      A = S === "x1" ? "y1" : "cy";
                    R.setAttribute(S, M[0]),
                      R.setAttribute(A, M[1]),
                      T &&
                        !b.g._collapsable &&
                        (b.of.setAttribute(S, M[0]),
                        b.of.setAttribute(A, M[1]));
                  }
                  var O, F, D, H;
                  if (b.g._cmdf || P) {
                    O = b.cst;
                    var $ = b.g.c;
                    for (D = O.length, F = 0; F < D; F += 1)
                      (H = O[F]),
                        H.setAttribute("offset", $[F * 4] + "%"),
                        H.setAttribute(
                          "stop-color",
                          "rgb(" +
                            $[F * 4 + 1] +
                            "," +
                            $[F * 4 + 2] +
                            "," +
                            $[F * 4 + 3] +
                            ")"
                        );
                  }
                  if (T && (b.g._omdf || P)) {
                    var q = b.g.o;
                    for (
                      b.g._collapsable ? (O = b.cst) : (O = b.ost),
                        D = O.length,
                        F = 0;
                      F < D;
                      F += 1
                    )
                      (H = O[F]),
                        b.g._collapsable ||
                          H.setAttribute("offset", q[F * 2] + "%"),
                        H.setAttribute("stop-opacity", q[F * 2 + 1]);
                  }
                  if (E.t === 1)
                    (b.e._mdf || P) &&
                      (R.setAttribute("x2", x[0]),
                      R.setAttribute("y2", x[1]),
                      T &&
                        !b.g._collapsable &&
                        (b.of.setAttribute("x2", x[0]),
                        b.of.setAttribute("y2", x[1])));
                  else {
                    var J;
                    if (
                      ((b.s._mdf || b.e._mdf || P) &&
                        ((J = Math.sqrt(
                          Math.pow(M[0] - x[0], 2) + Math.pow(M[1] - x[1], 2)
                        )),
                        R.setAttribute("r", J),
                        T && !b.g._collapsable && b.of.setAttribute("r", J)),
                      b.e._mdf || b.h._mdf || b.a._mdf || P)
                    ) {
                      J ||
                        (J = Math.sqrt(
                          Math.pow(M[0] - x[0], 2) + Math.pow(M[1] - x[1], 2)
                        ));
                      var K = Math.atan2(x[1] - M[1], x[0] - M[0]),
                        ee = b.h.v;
                      ee >= 1 ? (ee = 0.99) : ee <= -1 && (ee = -0.99);
                      var le = J * ee,
                        re = Math.cos(K + b.a.v) * le + M[0],
                        B = Math.sin(K + b.a.v) * le + M[1];
                      R.setAttribute("fx", re),
                        R.setAttribute("fy", B),
                        T &&
                          !b.g._collapsable &&
                          (b.of.setAttribute("fx", re),
                          b.of.setAttribute("fy", B));
                    }
                  }
                }
                function d(E, b, P) {
                  var R = b.style,
                    T = b.d;
                  T &&
                    (T._mdf || P) &&
                    T.dashStr &&
                    (R.pElem.setAttribute("stroke-dasharray", T.dashStr),
                    R.pElem.setAttribute("stroke-dashoffset", T.dashoffset[0])),
                    b.c &&
                      (b.c._mdf || P) &&
                      R.pElem.setAttribute(
                        "stroke",
                        "rgb(" +
                          bmFloor(b.c.v[0]) +
                          "," +
                          bmFloor(b.c.v[1]) +
                          "," +
                          bmFloor(b.c.v[2]) +
                          ")"
                      ),
                    (b.o._mdf || P) &&
                      R.pElem.setAttribute("stroke-opacity", b.o.v),
                    (b.w._mdf || P) &&
                      (R.pElem.setAttribute("stroke-width", b.w.v),
                      R.msElem && R.msElem.setAttribute("stroke-width", b.w.v));
                }
                return r;
              })();
            function SVGShapeElement(e, t, r) {
              (this.shapes = []),
                (this.shapesData = e.shapes),
                (this.stylesList = []),
                (this.shapeModifiers = []),
                (this.itemsData = []),
                (this.processedElements = []),
                (this.animatedContents = []),
                this.initElement(e, t, r),
                (this.prevViewData = []);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                SVGBaseElement,
                IShapeElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
              ],
              SVGShapeElement
            ),
              (SVGShapeElement.prototype.initSecondaryElement = function () {}),
              (SVGShapeElement.prototype.identityMatrix = new Matrix()),
              (SVGShapeElement.prototype.buildExpressionInterface =
                function () {}),
              (SVGShapeElement.prototype.createContent = function () {
                this.searchShapes(
                  this.shapesData,
                  this.itemsData,
                  this.prevViewData,
                  this.layerElement,
                  0,
                  [],
                  !0
                ),
                  this.filterUniqueShapes();
              }),
              (SVGShapeElement.prototype.filterUniqueShapes = function () {
                var e,
                  t = this.shapes.length,
                  r,
                  n,
                  i = this.stylesList.length,
                  a,
                  o = [],
                  l = !1;
                for (n = 0; n < i; n += 1) {
                  for (
                    a = this.stylesList[n], l = !1, o.length = 0, e = 0;
                    e < t;
                    e += 1
                  )
                    (r = this.shapes[e]),
                      r.styles.indexOf(a) !== -1 &&
                        (o.push(r), (l = r._isAnimated || l));
                  o.length > 1 && l && this.setShapesAsAnimated(o);
                }
              }),
              (SVGShapeElement.prototype.setShapesAsAnimated = function (e) {
                var t,
                  r = e.length;
                for (t = 0; t < r; t += 1) e[t].setAsAnimated();
              }),
              (SVGShapeElement.prototype.createStyleElement = function (e, t) {
                var r,
                  n = new SVGStyleData(e, t),
                  i = n.pElem;
                if (e.ty === "st") r = new SVGStrokeStyleData(this, e, n);
                else if (e.ty === "fl") r = new SVGFillStyleData(this, e, n);
                else if (e.ty === "gf" || e.ty === "gs") {
                  var a =
                    e.ty === "gf"
                      ? SVGGradientFillStyleData
                      : SVGGradientStrokeStyleData;
                  (r = new a(this, e, n)),
                    this.globalData.defs.appendChild(r.gf),
                    r.maskId &&
                      (this.globalData.defs.appendChild(r.ms),
                      this.globalData.defs.appendChild(r.of),
                      i.setAttribute(
                        "mask",
                        "url(" + getLocationHref() + "#" + r.maskId + ")"
                      ));
                } else e.ty === "no" && (r = new SVGNoStyleData(this, e, n));
                return (
                  (e.ty === "st" || e.ty === "gs") &&
                    (i.setAttribute("stroke-linecap", lineCapEnum[e.lc || 2]),
                    i.setAttribute("stroke-linejoin", lineJoinEnum[e.lj || 2]),
                    i.setAttribute("fill-opacity", "0"),
                    e.lj === 1 && i.setAttribute("stroke-miterlimit", e.ml)),
                  e.r === 2 && i.setAttribute("fill-rule", "evenodd"),
                  e.ln && i.setAttribute("id", e.ln),
                  e.cl && i.setAttribute("class", e.cl),
                  e.bm && (i.style["mix-blend-mode"] = getBlendMode(e.bm)),
                  this.stylesList.push(n),
                  this.addToAnimatedContents(e, r),
                  r
                );
              }),
              (SVGShapeElement.prototype.createGroupElement = function (e) {
                var t = new ShapeGroupData();
                return (
                  e.ln && t.gr.setAttribute("id", e.ln),
                  e.cl && t.gr.setAttribute("class", e.cl),
                  e.bm && (t.gr.style["mix-blend-mode"] = getBlendMode(e.bm)),
                  t
                );
              }),
              (SVGShapeElement.prototype.createTransformElement = function (
                e,
                t
              ) {
                var r = TransformPropertyFactory.getTransformProperty(
                    this,
                    e,
                    this
                  ),
                  n = new SVGTransformData(r, r.o, t);
                return this.addToAnimatedContents(e, n), n;
              }),
              (SVGShapeElement.prototype.createShapeElement = function (
                e,
                t,
                r
              ) {
                var n = 4;
                e.ty === "rc"
                  ? (n = 5)
                  : e.ty === "el"
                  ? (n = 6)
                  : e.ty === "sr" && (n = 7);
                var i = ShapePropertyFactory.getShapeProp(this, e, n, this),
                  a = new SVGShapeData(t, r, i);
                return (
                  this.shapes.push(a),
                  this.addShapeToModifiers(a),
                  this.addToAnimatedContents(e, a),
                  a
                );
              }),
              (SVGShapeElement.prototype.addToAnimatedContents = function (
                e,
                t
              ) {
                for (var r = 0, n = this.animatedContents.length; r < n; ) {
                  if (this.animatedContents[r].element === t) return;
                  r += 1;
                }
                this.animatedContents.push({
                  fn: SVGElementsRenderer.createRenderFunction(e),
                  element: t,
                  data: e,
                });
              }),
              (SVGShapeElement.prototype.setElementStyles = function (e) {
                var t = e.styles,
                  r,
                  n = this.stylesList.length;
                for (r = 0; r < n; r += 1)
                  this.stylesList[r].closed || t.push(this.stylesList[r]);
              }),
              (SVGShapeElement.prototype.reloadShapes = function () {
                this._isFirstFrame = !0;
                var e,
                  t = this.itemsData.length;
                for (e = 0; e < t; e += 1)
                  this.prevViewData[e] = this.itemsData[e];
                for (
                  this.searchShapes(
                    this.shapesData,
                    this.itemsData,
                    this.prevViewData,
                    this.layerElement,
                    0,
                    [],
                    !0
                  ),
                    this.filterUniqueShapes(),
                    t = this.dynamicProperties.length,
                    e = 0;
                  e < t;
                  e += 1
                )
                  this.dynamicProperties[e].getValue();
                this.renderModifiers();
              }),
              (SVGShapeElement.prototype.searchShapes = function (
                e,
                t,
                r,
                n,
                i,
                a,
                o
              ) {
                var l = [].concat(a),
                  c,
                  u = e.length - 1,
                  d,
                  E,
                  b = [],
                  P = [],
                  R,
                  T,
                  M;
                for (c = u; c >= 0; c -= 1) {
                  if (
                    ((M = this.searchProcessedElement(e[c])),
                    M ? (t[c] = r[M - 1]) : (e[c]._render = o),
                    e[c].ty === "fl" ||
                      e[c].ty === "st" ||
                      e[c].ty === "gf" ||
                      e[c].ty === "gs" ||
                      e[c].ty === "no")
                  )
                    M
                      ? (t[c].style.closed = !1)
                      : (t[c] = this.createStyleElement(e[c], i)),
                      e[c]._render &&
                        t[c].style.pElem.parentNode !== n &&
                        n.appendChild(t[c].style.pElem),
                      b.push(t[c].style);
                  else if (e[c].ty === "gr") {
                    if (!M) t[c] = this.createGroupElement(e[c]);
                    else
                      for (E = t[c].it.length, d = 0; d < E; d += 1)
                        t[c].prevViewData[d] = t[c].it[d];
                    this.searchShapes(
                      e[c].it,
                      t[c].it,
                      t[c].prevViewData,
                      t[c].gr,
                      i + 1,
                      l,
                      o
                    ),
                      e[c]._render &&
                        t[c].gr.parentNode !== n &&
                        n.appendChild(t[c].gr);
                  } else
                    e[c].ty === "tr"
                      ? (M || (t[c] = this.createTransformElement(e[c], n)),
                        (R = t[c].transform),
                        l.push(R))
                      : e[c].ty === "sh" ||
                        e[c].ty === "rc" ||
                        e[c].ty === "el" ||
                        e[c].ty === "sr"
                      ? (M || (t[c] = this.createShapeElement(e[c], l, i)),
                        this.setElementStyles(t[c]))
                      : e[c].ty === "tm" ||
                        e[c].ty === "rd" ||
                        e[c].ty === "ms" ||
                        e[c].ty === "pb" ||
                        e[c].ty === "zz" ||
                        e[c].ty === "op"
                      ? (M
                          ? ((T = t[c]), (T.closed = !1))
                          : ((T = ShapeModifiers.getModifier(e[c].ty)),
                            T.init(this, e[c]),
                            (t[c] = T),
                            this.shapeModifiers.push(T)),
                        P.push(T))
                      : e[c].ty === "rp" &&
                        (M
                          ? ((T = t[c]), (T.closed = !0))
                          : ((T = ShapeModifiers.getModifier(e[c].ty)),
                            (t[c] = T),
                            T.init(this, e, c, t),
                            this.shapeModifiers.push(T),
                            (o = !1)),
                        P.push(T));
                  this.addProcessedElement(e[c], c + 1);
                }
                for (u = b.length, c = 0; c < u; c += 1) b[c].closed = !0;
                for (u = P.length, c = 0; c < u; c += 1) P[c].closed = !0;
              }),
              (SVGShapeElement.prototype.renderInnerContent = function () {
                this.renderModifiers();
                var e,
                  t = this.stylesList.length;
                for (e = 0; e < t; e += 1) this.stylesList[e].reset();
                for (this.renderShape(), e = 0; e < t; e += 1)
                  (this.stylesList[e]._mdf || this._isFirstFrame) &&
                    (this.stylesList[e].msElem &&
                      (this.stylesList[e].msElem.setAttribute(
                        "d",
                        this.stylesList[e].d
                      ),
                      (this.stylesList[e].d = "M0 0" + this.stylesList[e].d)),
                    this.stylesList[e].pElem.setAttribute(
                      "d",
                      this.stylesList[e].d || "M0 0"
                    ));
              }),
              (SVGShapeElement.prototype.renderShape = function () {
                var e,
                  t = this.animatedContents.length,
                  r;
                for (e = 0; e < t; e += 1)
                  (r = this.animatedContents[e]),
                    (this._isFirstFrame || r.element._isAnimated) &&
                      r.data !== !0 &&
                      r.fn(r.data, r.element, this._isFirstFrame);
              }),
              (SVGShapeElement.prototype.destroy = function () {
                this.destroyBaseElement(),
                  (this.shapesData = null),
                  (this.itemsData = null);
              });
            function LetterProps(e, t, r, n, i, a) {
              (this.o = e),
                (this.sw = t),
                (this.sc = r),
                (this.fc = n),
                (this.m = i),
                (this.p = a),
                (this._mdf = {
                  o: !0,
                  sw: !!t,
                  sc: !!r,
                  fc: !!n,
                  m: !0,
                  p: !0,
                });
            }
            LetterProps.prototype.update = function (e, t, r, n, i, a) {
              (this._mdf.o = !1),
                (this._mdf.sw = !1),
                (this._mdf.sc = !1),
                (this._mdf.fc = !1),
                (this._mdf.m = !1),
                (this._mdf.p = !1);
              var o = !1;
              return (
                this.o !== e && ((this.o = e), (this._mdf.o = !0), (o = !0)),
                this.sw !== t && ((this.sw = t), (this._mdf.sw = !0), (o = !0)),
                this.sc !== r && ((this.sc = r), (this._mdf.sc = !0), (o = !0)),
                this.fc !== n && ((this.fc = n), (this._mdf.fc = !0), (o = !0)),
                this.m !== i && ((this.m = i), (this._mdf.m = !0), (o = !0)),
                a.length &&
                  (this.p[0] !== a[0] ||
                    this.p[1] !== a[1] ||
                    this.p[4] !== a[4] ||
                    this.p[5] !== a[5] ||
                    this.p[12] !== a[12] ||
                    this.p[13] !== a[13]) &&
                  ((this.p = a), (this._mdf.p = !0), (o = !0)),
                o
              );
            };
            function TextProperty(e, t) {
              (this._frameId = initialDefaultFrame),
                (this.pv = ""),
                (this.v = ""),
                (this.kf = !1),
                (this._isFirstFrame = !0),
                (this._mdf = !1),
                t.d && t.d.sid && (t.d = e.globalData.slotManager.getProp(t.d)),
                (this.data = t),
                (this.elem = e),
                (this.comp = this.elem.comp),
                (this.keysIndex = 0),
                (this.canResize = !1),
                (this.minimumFontSize = 1),
                (this.effectsSequence = []),
                (this.currentData = {
                  ascent: 0,
                  boxWidth: this.defaultBoxWidth,
                  f: "",
                  fStyle: "",
                  fWeight: "",
                  fc: "",
                  j: "",
                  justifyOffset: "",
                  l: [],
                  lh: 0,
                  lineWidths: [],
                  ls: "",
                  of: "",
                  s: "",
                  sc: "",
                  sw: 0,
                  t: 0,
                  tr: 0,
                  sz: 0,
                  ps: null,
                  fillColorAnim: !1,
                  strokeColorAnim: !1,
                  strokeWidthAnim: !1,
                  yOffset: 0,
                  finalSize: 0,
                  finalText: [],
                  finalLineHeight: 0,
                  __complete: !1,
                }),
                this.copyData(this.currentData, this.data.d.k[0].s),
                this.searchProperty() ||
                  this.completeTextData(this.currentData);
            }
            (TextProperty.prototype.defaultBoxWidth = [0, 0]),
              (TextProperty.prototype.copyData = function (e, t) {
                for (var r in t)
                  Object.prototype.hasOwnProperty.call(t, r) && (e[r] = t[r]);
                return e;
              }),
              (TextProperty.prototype.setCurrentData = function (e) {
                e.__complete || this.completeTextData(e),
                  (this.currentData = e),
                  (this.currentData.boxWidth =
                    this.currentData.boxWidth || this.defaultBoxWidth),
                  (this._mdf = !0);
              }),
              (TextProperty.prototype.searchProperty = function () {
                return this.searchKeyframes();
              }),
              (TextProperty.prototype.searchKeyframes = function () {
                return (
                  (this.kf = this.data.d.k.length > 1),
                  this.kf && this.addEffect(this.getKeyframeValue.bind(this)),
                  this.kf
                );
              }),
              (TextProperty.prototype.addEffect = function (e) {
                this.effectsSequence.push(e),
                  this.elem.addDynamicProperty(this);
              }),
              (TextProperty.prototype.getValue = function (e) {
                if (
                  !(
                    (this.elem.globalData.frameId === this.frameId ||
                      !this.effectsSequence.length) &&
                    !e
                  )
                ) {
                  this.currentData.t = this.data.d.k[this.keysIndex].s.t;
                  var t = this.currentData,
                    r = this.keysIndex;
                  if (this.lock) {
                    this.setCurrentData(this.currentData);
                    return;
                  }
                  (this.lock = !0), (this._mdf = !1);
                  var n,
                    i = this.effectsSequence.length,
                    a = e || this.data.d.k[this.keysIndex].s;
                  for (n = 0; n < i; n += 1)
                    r !== this.keysIndex
                      ? (a = this.effectsSequence[n](a, a.t))
                      : (a = this.effectsSequence[n](this.currentData, a.t));
                  t !== a && this.setCurrentData(a),
                    (this.v = this.currentData),
                    (this.pv = this.v),
                    (this.lock = !1),
                    (this.frameId = this.elem.globalData.frameId);
                }
              }),
              (TextProperty.prototype.getKeyframeValue = function () {
                for (
                  var e = this.data.d.k,
                    t = this.elem.comp.renderedFrame,
                    r = 0,
                    n = e.length;
                  r <= n - 1 && !(r === n - 1 || e[r + 1].t > t);

                )
                  r += 1;
                return (
                  this.keysIndex !== r && (this.keysIndex = r),
                  this.data.d.k[this.keysIndex].s
                );
              }),
              (TextProperty.prototype.buildFinalText = function (e) {
                for (
                  var t = [], r = 0, n = e.length, i, a, o = !1, l = !1, c = "";
                  r < n;

                )
                  (o = l),
                    (l = !1),
                    (i = e.charCodeAt(r)),
                    (c = e.charAt(r)),
                    FontManager.isCombinedCharacter(i)
                      ? (o = !0)
                      : i >= 55296 && i <= 56319
                      ? FontManager.isRegionalFlag(e, r)
                        ? (c = e.substr(r, 14))
                        : ((a = e.charCodeAt(r + 1)),
                          a >= 56320 &&
                            a <= 57343 &&
                            (FontManager.isModifier(i, a)
                              ? ((c = e.substr(r, 2)), (o = !0))
                              : FontManager.isFlagEmoji(e.substr(r, 4))
                              ? (c = e.substr(r, 4))
                              : (c = e.substr(r, 2))))
                      : i > 56319
                      ? ((a = e.charCodeAt(r + 1)),
                        FontManager.isVariationSelector(i) && (o = !0))
                      : FontManager.isZeroWidthJoiner(i) &&
                        ((o = !0), (l = !0)),
                    o ? ((t[t.length - 1] += c), (o = !1)) : t.push(c),
                    (r += c.length);
                return t;
              }),
              (TextProperty.prototype.completeTextData = function (e) {
                e.__complete = !0;
                var t = this.elem.globalData.fontManager,
                  r = this.data,
                  n = [],
                  i,
                  a,
                  o,
                  l = 0,
                  c,
                  u = r.m.g,
                  d = 0,
                  E = 0,
                  b = 0,
                  P = [],
                  R = 0,
                  T = 0,
                  M,
                  x,
                  k = t.getFontByName(e.f),
                  S,
                  A = 0,
                  O = getFontProperties(k);
                (e.fWeight = O.weight),
                  (e.fStyle = O.style),
                  (e.finalSize = e.s),
                  (e.finalText = this.buildFinalText(e.t)),
                  (a = e.finalText.length),
                  (e.finalLineHeight = e.lh);
                var F = (e.tr / 1e3) * e.finalSize,
                  D;
                if (e.sz)
                  for (var H = !0, $ = e.sz[0], q = e.sz[1], J, K; H; ) {
                    (K = this.buildFinalText(e.t)),
                      (J = 0),
                      (R = 0),
                      (a = K.length),
                      (F = (e.tr / 1e3) * e.finalSize);
                    var ee = -1;
                    for (i = 0; i < a; i += 1)
                      (D = K[i].charCodeAt(0)),
                        (o = !1),
                        K[i] === " "
                          ? (ee = i)
                          : (D === 13 || D === 3) &&
                            ((R = 0),
                            (o = !0),
                            (J += e.finalLineHeight || e.finalSize * 1.2)),
                        t.chars
                          ? ((S = t.getCharData(K[i], k.fStyle, k.fFamily)),
                            (A = o ? 0 : (S.w * e.finalSize) / 100))
                          : (A = t.measureText(K[i], e.f, e.finalSize)),
                        R + A > $ && K[i] !== " "
                          ? (ee === -1 ? (a += 1) : (i = ee),
                            (J += e.finalLineHeight || e.finalSize * 1.2),
                            K.splice(i, ee === i ? 1 : 0, "\r"),
                            (ee = -1),
                            (R = 0))
                          : ((R += A), (R += F));
                    (J += (k.ascent * e.finalSize) / 100),
                      this.canResize &&
                      e.finalSize > this.minimumFontSize &&
                      q < J
                        ? ((e.finalSize -= 1),
                          (e.finalLineHeight = (e.finalSize * e.lh) / e.s))
                        : ((e.finalText = K),
                          (a = e.finalText.length),
                          (H = !1));
                  }
                (R = -F), (A = 0);
                var le = 0,
                  re;
                for (i = 0; i < a; i += 1)
                  if (
                    ((o = !1),
                    (re = e.finalText[i]),
                    (D = re.charCodeAt(0)),
                    D === 13 || D === 3
                      ? ((le = 0),
                        P.push(R),
                        (T = R > T ? R : T),
                        (R = -2 * F),
                        (c = ""),
                        (o = !0),
                        (b += 1))
                      : (c = re),
                    t.chars
                      ? ((S = t.getCharData(
                          re,
                          k.fStyle,
                          t.getFontByName(e.f).fFamily
                        )),
                        (A = o ? 0 : (S.w * e.finalSize) / 100))
                      : (A = t.measureText(c, e.f, e.finalSize)),
                    re === " " ? (le += A + F) : ((R += A + F + le), (le = 0)),
                    n.push({
                      l: A,
                      an: A,
                      add: d,
                      n: o,
                      anIndexes: [],
                      val: c,
                      line: b,
                      animatorJustifyOffset: 0,
                    }),
                    u == 2)
                  ) {
                    if (((d += A), c === "" || c === " " || i === a - 1)) {
                      for ((c === "" || c === " ") && (d -= A); E <= i; )
                        (n[E].an = d),
                          (n[E].ind = l),
                          (n[E].extra = A),
                          (E += 1);
                      (l += 1), (d = 0);
                    }
                  } else if (u == 3) {
                    if (((d += A), c === "" || i === a - 1)) {
                      for (c === "" && (d -= A); E <= i; )
                        (n[E].an = d),
                          (n[E].ind = l),
                          (n[E].extra = A),
                          (E += 1);
                      (d = 0), (l += 1);
                    }
                  } else (n[l].ind = l), (n[l].extra = 0), (l += 1);
                if (((e.l = n), (T = R > T ? R : T), P.push(R), e.sz))
                  (e.boxWidth = e.sz[0]), (e.justifyOffset = 0);
                else
                  switch (((e.boxWidth = T), e.j)) {
                    case 1:
                      e.justifyOffset = -e.boxWidth;
                      break;
                    case 2:
                      e.justifyOffset = -e.boxWidth / 2;
                      break;
                    default:
                      e.justifyOffset = 0;
                  }
                e.lineWidths = P;
                var B = r.a,
                  z,
                  N;
                x = B.length;
                var V,
                  Q,
                  Y = [];
                for (M = 0; M < x; M += 1) {
                  for (
                    z = B[M],
                      z.a.sc && (e.strokeColorAnim = !0),
                      z.a.sw && (e.strokeWidthAnim = !0),
                      (z.a.fc || z.a.fh || z.a.fs || z.a.fb) &&
                        (e.fillColorAnim = !0),
                      Q = 0,
                      V = z.s.b,
                      i = 0;
                    i < a;
                    i += 1
                  )
                    (N = n[i]),
                      (N.anIndexes[M] = Q),
                      ((V == 1 && N.val !== "") ||
                        (V == 2 && N.val !== "" && N.val !== " ") ||
                        (V == 3 && (N.n || N.val == " " || i == a - 1)) ||
                        (V == 4 && (N.n || i == a - 1))) &&
                        (z.s.rn === 1 && Y.push(Q), (Q += 1));
                  r.a[M].s.totalChars = Q;
                  var he = -1,
                    ye;
                  if (z.s.rn === 1)
                    for (i = 0; i < a; i += 1)
                      (N = n[i]),
                        he != N.anIndexes[M] &&
                          ((he = N.anIndexes[M]),
                          (ye = Y.splice(
                            Math.floor(Math.random() * Y.length),
                            1
                          )[0])),
                        (N.anIndexes[M] = ye);
                }
                (e.yOffset = e.finalLineHeight || e.finalSize * 1.2),
                  (e.ls = e.ls || 0),
                  (e.ascent = (k.ascent * e.finalSize) / 100);
              }),
              (TextProperty.prototype.updateDocumentData = function (e, t) {
                t = t === void 0 ? this.keysIndex : t;
                var r = this.copyData({}, this.data.d.k[t].s);
                (r = this.copyData(r, e)),
                  (this.data.d.k[t].s = r),
                  this.recalculate(t),
                  this.setCurrentData(r),
                  this.elem.addDynamicProperty(this);
              }),
              (TextProperty.prototype.recalculate = function (e) {
                var t = this.data.d.k[e].s;
                (t.__complete = !1),
                  (this.keysIndex = 0),
                  (this._isFirstFrame = !0),
                  this.getValue(t);
              }),
              (TextProperty.prototype.canResizeFont = function (e) {
                (this.canResize = e),
                  this.recalculate(this.keysIndex),
                  this.elem.addDynamicProperty(this);
              }),
              (TextProperty.prototype.setMinimumFontSize = function (e) {
                (this.minimumFontSize = Math.floor(e) || 1),
                  this.recalculate(this.keysIndex),
                  this.elem.addDynamicProperty(this);
              });
            var TextSelectorProp = (function () {
              var e = Math.max,
                t = Math.min,
                r = Math.floor;
              function n(a, o) {
                (this._currentTextLength = -1),
                  (this.k = !1),
                  (this.data = o),
                  (this.elem = a),
                  (this.comp = a.comp),
                  (this.finalS = 0),
                  (this.finalE = 0),
                  this.initDynamicPropertyContainer(a),
                  (this.s = PropertyFactory.getProp(
                    a,
                    o.s || { k: 0 },
                    0,
                    0,
                    this
                  )),
                  "e" in o
                    ? (this.e = PropertyFactory.getProp(a, o.e, 0, 0, this))
                    : (this.e = { v: 100 }),
                  (this.o = PropertyFactory.getProp(
                    a,
                    o.o || { k: 0 },
                    0,
                    0,
                    this
                  )),
                  (this.xe = PropertyFactory.getProp(
                    a,
                    o.xe || { k: 0 },
                    0,
                    0,
                    this
                  )),
                  (this.ne = PropertyFactory.getProp(
                    a,
                    o.ne || { k: 0 },
                    0,
                    0,
                    this
                  )),
                  (this.sm = PropertyFactory.getProp(
                    a,
                    o.sm || { k: 100 },
                    0,
                    0,
                    this
                  )),
                  (this.a = PropertyFactory.getProp(a, o.a, 0, 0.01, this)),
                  this.dynamicProperties.length || this.getValue();
              }
              (n.prototype = {
                getMult: function (o) {
                  this._currentTextLength !==
                    this.elem.textProperty.currentData.l.length &&
                    this.getValue();
                  var l = 0,
                    c = 0,
                    u = 1,
                    d = 1;
                  this.ne.v > 0
                    ? (l = this.ne.v / 100)
                    : (c = -this.ne.v / 100),
                    this.xe.v > 0
                      ? (u = 1 - this.xe.v / 100)
                      : (d = 1 + this.xe.v / 100);
                  var E = BezierFactory.getBezierEasing(l, c, u, d).get,
                    b = 0,
                    P = this.finalS,
                    R = this.finalE,
                    T = this.data.sh;
                  if (T === 2)
                    R === P
                      ? (b = o >= R ? 1 : 0)
                      : (b = e(0, t(0.5 / (R - P) + (o - P) / (R - P), 1))),
                      (b = E(b));
                  else if (T === 3)
                    R === P
                      ? (b = o >= R ? 0 : 1)
                      : (b = 1 - e(0, t(0.5 / (R - P) + (o - P) / (R - P), 1))),
                      (b = E(b));
                  else if (T === 4)
                    R === P
                      ? (b = 0)
                      : ((b = e(0, t(0.5 / (R - P) + (o - P) / (R - P), 1))),
                        b < 0.5 ? (b *= 2) : (b = 1 - 2 * (b - 0.5))),
                      (b = E(b));
                  else if (T === 5) {
                    if (R === P) b = 0;
                    else {
                      var M = R - P;
                      o = t(e(0, o + 0.5 - P), R - P);
                      var x = -M / 2 + o,
                        k = M / 2;
                      b = Math.sqrt(1 - (x * x) / (k * k));
                    }
                    b = E(b);
                  } else
                    T === 6
                      ? (R === P
                          ? (b = 0)
                          : ((o = t(e(0, o + 0.5 - P), R - P)),
                            (b =
                              (1 +
                                Math.cos(
                                  Math.PI + (Math.PI * 2 * o) / (R - P)
                                )) /
                              2)),
                        (b = E(b)))
                      : (o >= r(P) &&
                          (o - P < 0
                            ? (b = e(0, t(t(R, 1) - (P - o), 1)))
                            : (b = e(0, t(R - o, 1)))),
                        (b = E(b)));
                  if (this.sm.v !== 100) {
                    var S = this.sm.v * 0.01;
                    S === 0 && (S = 1e-8);
                    var A = 0.5 - S * 0.5;
                    b < A ? (b = 0) : ((b = (b - A) / S), b > 1 && (b = 1));
                  }
                  return b * this.a.v;
                },
                getValue: function (o) {
                  this.iterateDynamicProperties(),
                    (this._mdf = o || this._mdf),
                    (this._currentTextLength =
                      this.elem.textProperty.currentData.l.length || 0),
                    o &&
                      this.data.r === 2 &&
                      (this.e.v = this._currentTextLength);
                  var l = this.data.r === 2 ? 1 : 100 / this.data.totalChars,
                    c = this.o.v / l,
                    u = this.s.v / l + c,
                    d = this.e.v / l + c;
                  if (u > d) {
                    var E = u;
                    (u = d), (d = E);
                  }
                  (this.finalS = u), (this.finalE = d);
                },
              }),
                extendPrototype([DynamicPropertyContainer], n);
              function i(a, o, l) {
                return new n(a, o);
              }
              return { getTextSelectorProp: i };
            })();
            function TextAnimatorDataProperty(e, t, r) {
              var n = { propType: !1 },
                i = PropertyFactory.getProp,
                a = t.a;
              (this.a = {
                r: a.r ? i(e, a.r, 0, degToRads, r) : n,
                rx: a.rx ? i(e, a.rx, 0, degToRads, r) : n,
                ry: a.ry ? i(e, a.ry, 0, degToRads, r) : n,
                sk: a.sk ? i(e, a.sk, 0, degToRads, r) : n,
                sa: a.sa ? i(e, a.sa, 0, degToRads, r) : n,
                s: a.s ? i(e, a.s, 1, 0.01, r) : n,
                a: a.a ? i(e, a.a, 1, 0, r) : n,
                o: a.o ? i(e, a.o, 0, 0.01, r) : n,
                p: a.p ? i(e, a.p, 1, 0, r) : n,
                sw: a.sw ? i(e, a.sw, 0, 0, r) : n,
                sc: a.sc ? i(e, a.sc, 1, 0, r) : n,
                fc: a.fc ? i(e, a.fc, 1, 0, r) : n,
                fh: a.fh ? i(e, a.fh, 0, 0, r) : n,
                fs: a.fs ? i(e, a.fs, 0, 0.01, r) : n,
                fb: a.fb ? i(e, a.fb, 0, 0.01, r) : n,
                t: a.t ? i(e, a.t, 0, 0, r) : n,
              }),
                (this.s = TextSelectorProp.getTextSelectorProp(e, t.s, r)),
                (this.s.t = t.s.t);
            }
            function TextAnimatorProperty(e, t, r) {
              (this._isFirstFrame = !0),
                (this._hasMaskedPath = !1),
                (this._frameId = -1),
                (this._textData = e),
                (this._renderType = t),
                (this._elem = r),
                (this._animatorsData = createSizedArray(
                  this._textData.a.length
                )),
                (this._pathData = {}),
                (this._moreOptions = { alignment: {} }),
                (this.renderedLetters = []),
                (this.lettersChangedFlag = !1),
                this.initDynamicPropertyContainer(r);
            }
            (TextAnimatorProperty.prototype.searchProperties = function () {
              var e,
                t = this._textData.a.length,
                r,
                n = PropertyFactory.getProp;
              for (e = 0; e < t; e += 1)
                (r = this._textData.a[e]),
                  (this._animatorsData[e] = new TextAnimatorDataProperty(
                    this._elem,
                    r,
                    this
                  ));
              this._textData.p && "m" in this._textData.p
                ? ((this._pathData = {
                    a: n(this._elem, this._textData.p.a, 0, 0, this),
                    f: n(this._elem, this._textData.p.f, 0, 0, this),
                    l: n(this._elem, this._textData.p.l, 0, 0, this),
                    r: n(this._elem, this._textData.p.r, 0, 0, this),
                    p: n(this._elem, this._textData.p.p, 0, 0, this),
                    m: this._elem.maskManager.getMaskProperty(
                      this._textData.p.m
                    ),
                  }),
                  (this._hasMaskedPath = !0))
                : (this._hasMaskedPath = !1),
                (this._moreOptions.alignment = n(
                  this._elem,
                  this._textData.m.a,
                  1,
                  0,
                  this
                ));
            }),
              (TextAnimatorProperty.prototype.getMeasures = function (e, t) {
                if (
                  ((this.lettersChangedFlag = t),
                  !(
                    !this._mdf &&
                    !this._isFirstFrame &&
                    !t &&
                    (!this._hasMaskedPath || !this._pathData.m._mdf)
                  ))
                ) {
                  this._isFirstFrame = !1;
                  var r = this._moreOptions.alignment.v,
                    n = this._animatorsData,
                    i = this._textData,
                    a = this.mHelper,
                    o = this._renderType,
                    l = this.renderedLetters.length,
                    c,
                    u,
                    d,
                    E,
                    b = e.l,
                    P,
                    R,
                    T,
                    M,
                    x,
                    k,
                    S,
                    A,
                    O,
                    F,
                    D,
                    H,
                    $,
                    q,
                    J;
                  if (this._hasMaskedPath) {
                    if (
                      ((J = this._pathData.m),
                      !this._pathData.n || this._pathData._mdf)
                    ) {
                      var K = J.v;
                      this._pathData.r.v && (K = K.reverse()),
                        (P = { tLength: 0, segments: [] }),
                        (E = K._length - 1);
                      var ee;
                      for (H = 0, d = 0; d < E; d += 1)
                        (ee = bez.buildBezierData(
                          K.v[d],
                          K.v[d + 1],
                          [K.o[d][0] - K.v[d][0], K.o[d][1] - K.v[d][1]],
                          [
                            K.i[d + 1][0] - K.v[d + 1][0],
                            K.i[d + 1][1] - K.v[d + 1][1],
                          ]
                        )),
                          (P.tLength += ee.segmentLength),
                          P.segments.push(ee),
                          (H += ee.segmentLength);
                      (d = E),
                        J.v.c &&
                          ((ee = bez.buildBezierData(
                            K.v[d],
                            K.v[0],
                            [K.o[d][0] - K.v[d][0], K.o[d][1] - K.v[d][1]],
                            [K.i[0][0] - K.v[0][0], K.i[0][1] - K.v[0][1]]
                          )),
                          (P.tLength += ee.segmentLength),
                          P.segments.push(ee),
                          (H += ee.segmentLength)),
                        (this._pathData.pi = P);
                    }
                    if (
                      ((P = this._pathData.pi),
                      (R = this._pathData.f.v),
                      (S = 0),
                      (k = 1),
                      (M = 0),
                      (x = !0),
                      (F = P.segments),
                      R < 0 && J.v.c)
                    )
                      for (
                        P.tLength < Math.abs(R) &&
                          (R = -Math.abs(R) % P.tLength),
                          S = F.length - 1,
                          O = F[S].points,
                          k = O.length - 1;
                        R < 0;

                      )
                        (R += O[k].partialLength),
                          (k -= 1),
                          k < 0 &&
                            ((S -= 1), (O = F[S].points), (k = O.length - 1));
                    (O = F[S].points),
                      (A = O[k - 1]),
                      (T = O[k]),
                      (D = T.partialLength);
                  }
                  (E = b.length), (c = 0), (u = 0);
                  var le = e.finalSize * 1.2 * 0.714,
                    re = !0,
                    B,
                    z,
                    N,
                    V,
                    Q;
                  V = n.length;
                  var Y,
                    he = -1,
                    ye,
                    ve,
                    Pe,
                    Ce = R,
                    ie = S,
                    me = k,
                    pe = -1,
                    ge,
                    Ee,
                    Se,
                    W,
                    G,
                    te,
                    ae,
                    se,
                    ce = "",
                    de = this.defaultPropsArray,
                    j;
                  if (e.j === 2 || e.j === 1) {
                    var U = 0,
                      X = 0,
                      oe = e.j === 2 ? -0.5 : -1,
                      fe = 0,
                      ue = !0;
                    for (d = 0; d < E; d += 1)
                      if (b[d].n) {
                        for (U && (U += X); fe < d; )
                          (b[fe].animatorJustifyOffset = U), (fe += 1);
                        (U = 0), (ue = !0);
                      } else {
                        for (N = 0; N < V; N += 1)
                          (B = n[N].a),
                            B.t.propType &&
                              (ue && e.j === 2 && (X += B.t.v * oe),
                              (z = n[N].s),
                              (Y = z.getMult(
                                b[d].anIndexes[N],
                                i.a[N].s.totalChars
                              )),
                              Y.length
                                ? (U += B.t.v * Y[0] * oe)
                                : (U += B.t.v * Y * oe));
                        ue = !1;
                      }
                    for (U && (U += X); fe < d; )
                      (b[fe].animatorJustifyOffset = U), (fe += 1);
                  }
                  for (d = 0; d < E; d += 1) {
                    if ((a.reset(), (ge = 1), b[d].n))
                      (c = 0),
                        (u += e.yOffset),
                        (u += re ? 1 : 0),
                        (R = Ce),
                        (re = !1),
                        this._hasMaskedPath &&
                          ((S = ie),
                          (k = me),
                          (O = F[S].points),
                          (A = O[k - 1]),
                          (T = O[k]),
                          (D = T.partialLength),
                          (M = 0)),
                        (ce = ""),
                        (se = ""),
                        (te = ""),
                        (j = ""),
                        (de = this.defaultPropsArray);
                    else {
                      if (this._hasMaskedPath) {
                        if (pe !== b[d].line) {
                          switch (e.j) {
                            case 1:
                              R += H - e.lineWidths[b[d].line];
                              break;
                            case 2:
                              R += (H - e.lineWidths[b[d].line]) / 2;
                              break;
                          }
                          pe = b[d].line;
                        }
                        he !== b[d].ind &&
                          (b[he] && (R += b[he].extra),
                          (R += b[d].an / 2),
                          (he = b[d].ind)),
                          (R += r[0] * b[d].an * 0.005);
                        var Z = 0;
                        for (N = 0; N < V; N += 1)
                          (B = n[N].a),
                            B.p.propType &&
                              ((z = n[N].s),
                              (Y = z.getMult(
                                b[d].anIndexes[N],
                                i.a[N].s.totalChars
                              )),
                              Y.length
                                ? (Z += B.p.v[0] * Y[0])
                                : (Z += B.p.v[0] * Y)),
                            B.a.propType &&
                              ((z = n[N].s),
                              (Y = z.getMult(
                                b[d].anIndexes[N],
                                i.a[N].s.totalChars
                              )),
                              Y.length
                                ? (Z += B.a.v[0] * Y[0])
                                : (Z += B.a.v[0] * Y));
                        for (
                          x = !0,
                            this._pathData.a.v &&
                              ((R =
                                b[0].an * 0.5 +
                                ((H -
                                  this._pathData.f.v -
                                  b[0].an * 0.5 -
                                  b[b.length - 1].an * 0.5) *
                                  he) /
                                  (E - 1)),
                              (R += this._pathData.f.v));
                          x;

                        )
                          M + D >= R + Z || !O
                            ? (($ = (R + Z - M) / T.partialLength),
                              (ve = A.point[0] + (T.point[0] - A.point[0]) * $),
                              (Pe = A.point[1] + (T.point[1] - A.point[1]) * $),
                              a.translate(
                                -r[0] * b[d].an * 0.005,
                                -(r[1] * le) * 0.01
                              ),
                              (x = !1))
                            : O &&
                              ((M += T.partialLength),
                              (k += 1),
                              k >= O.length &&
                                ((k = 0),
                                (S += 1),
                                F[S]
                                  ? (O = F[S].points)
                                  : J.v.c
                                  ? ((k = 0), (S = 0), (O = F[S].points))
                                  : ((M -= T.partialLength), (O = null))),
                              O &&
                                ((A = T), (T = O[k]), (D = T.partialLength)));
                        (ye = b[d].an / 2 - b[d].add), a.translate(-ye, 0, 0);
                      } else
                        (ye = b[d].an / 2 - b[d].add),
                          a.translate(-ye, 0, 0),
                          a.translate(
                            -r[0] * b[d].an * 0.005,
                            -r[1] * le * 0.01,
                            0
                          );
                      for (N = 0; N < V; N += 1)
                        (B = n[N].a),
                          B.t.propType &&
                            ((z = n[N].s),
                            (Y = z.getMult(
                              b[d].anIndexes[N],
                              i.a[N].s.totalChars
                            )),
                            (c !== 0 || e.j !== 0) &&
                              (this._hasMaskedPath
                                ? Y.length
                                  ? (R += B.t.v * Y[0])
                                  : (R += B.t.v * Y)
                                : Y.length
                                ? (c += B.t.v * Y[0])
                                : (c += B.t.v * Y)));
                      for (
                        e.strokeWidthAnim && (Se = e.sw || 0),
                          e.strokeColorAnim &&
                            (e.sc
                              ? (Ee = [e.sc[0], e.sc[1], e.sc[2]])
                              : (Ee = [0, 0, 0])),
                          e.fillColorAnim &&
                            e.fc &&
                            (W = [e.fc[0], e.fc[1], e.fc[2]]),
                          N = 0;
                        N < V;
                        N += 1
                      )
                        (B = n[N].a),
                          B.a.propType &&
                            ((z = n[N].s),
                            (Y = z.getMult(
                              b[d].anIndexes[N],
                              i.a[N].s.totalChars
                            )),
                            Y.length
                              ? a.translate(
                                  -B.a.v[0] * Y[0],
                                  -B.a.v[1] * Y[1],
                                  B.a.v[2] * Y[2]
                                )
                              : a.translate(
                                  -B.a.v[0] * Y,
                                  -B.a.v[1] * Y,
                                  B.a.v[2] * Y
                                ));
                      for (N = 0; N < V; N += 1)
                        (B = n[N].a),
                          B.s.propType &&
                            ((z = n[N].s),
                            (Y = z.getMult(
                              b[d].anIndexes[N],
                              i.a[N].s.totalChars
                            )),
                            Y.length
                              ? a.scale(
                                  1 + (B.s.v[0] - 1) * Y[0],
                                  1 + (B.s.v[1] - 1) * Y[1],
                                  1
                                )
                              : a.scale(
                                  1 + (B.s.v[0] - 1) * Y,
                                  1 + (B.s.v[1] - 1) * Y,
                                  1
                                ));
                      for (N = 0; N < V; N += 1) {
                        if (
                          ((B = n[N].a),
                          (z = n[N].s),
                          (Y = z.getMult(
                            b[d].anIndexes[N],
                            i.a[N].s.totalChars
                          )),
                          B.sk.propType &&
                            (Y.length
                              ? a.skewFromAxis(-B.sk.v * Y[0], B.sa.v * Y[1])
                              : a.skewFromAxis(-B.sk.v * Y, B.sa.v * Y)),
                          B.r.propType &&
                            (Y.length
                              ? a.rotateZ(-B.r.v * Y[2])
                              : a.rotateZ(-B.r.v * Y)),
                          B.ry.propType &&
                            (Y.length
                              ? a.rotateY(B.ry.v * Y[1])
                              : a.rotateY(B.ry.v * Y)),
                          B.rx.propType &&
                            (Y.length
                              ? a.rotateX(B.rx.v * Y[0])
                              : a.rotateX(B.rx.v * Y)),
                          B.o.propType &&
                            (Y.length
                              ? (ge += (B.o.v * Y[0] - ge) * Y[0])
                              : (ge += (B.o.v * Y - ge) * Y)),
                          e.strokeWidthAnim &&
                            B.sw.propType &&
                            (Y.length
                              ? (Se += B.sw.v * Y[0])
                              : (Se += B.sw.v * Y)),
                          e.strokeColorAnim && B.sc.propType)
                        )
                          for (G = 0; G < 3; G += 1)
                            Y.length
                              ? (Ee[G] += (B.sc.v[G] - Ee[G]) * Y[0])
                              : (Ee[G] += (B.sc.v[G] - Ee[G]) * Y);
                        if (e.fillColorAnim && e.fc) {
                          if (B.fc.propType)
                            for (G = 0; G < 3; G += 1)
                              Y.length
                                ? (W[G] += (B.fc.v[G] - W[G]) * Y[0])
                                : (W[G] += (B.fc.v[G] - W[G]) * Y);
                          B.fh.propType &&
                            (Y.length
                              ? (W = addHueToRGB(W, B.fh.v * Y[0]))
                              : (W = addHueToRGB(W, B.fh.v * Y))),
                            B.fs.propType &&
                              (Y.length
                                ? (W = addSaturationToRGB(W, B.fs.v * Y[0]))
                                : (W = addSaturationToRGB(W, B.fs.v * Y))),
                            B.fb.propType &&
                              (Y.length
                                ? (W = addBrightnessToRGB(W, B.fb.v * Y[0]))
                                : (W = addBrightnessToRGB(W, B.fb.v * Y)));
                        }
                      }
                      for (N = 0; N < V; N += 1)
                        (B = n[N].a),
                          B.p.propType &&
                            ((z = n[N].s),
                            (Y = z.getMult(
                              b[d].anIndexes[N],
                              i.a[N].s.totalChars
                            )),
                            this._hasMaskedPath
                              ? Y.length
                                ? a.translate(
                                    0,
                                    B.p.v[1] * Y[0],
                                    -B.p.v[2] * Y[1]
                                  )
                                : a.translate(0, B.p.v[1] * Y, -B.p.v[2] * Y)
                              : Y.length
                              ? a.translate(
                                  B.p.v[0] * Y[0],
                                  B.p.v[1] * Y[1],
                                  -B.p.v[2] * Y[2]
                                )
                              : a.translate(
                                  B.p.v[0] * Y,
                                  B.p.v[1] * Y,
                                  -B.p.v[2] * Y
                                ));
                      if (
                        (e.strokeWidthAnim && (te = Se < 0 ? 0 : Se),
                        e.strokeColorAnim &&
                          (ae =
                            "rgb(" +
                            Math.round(Ee[0] * 255) +
                            "," +
                            Math.round(Ee[1] * 255) +
                            "," +
                            Math.round(Ee[2] * 255) +
                            ")"),
                        e.fillColorAnim &&
                          e.fc &&
                          (se =
                            "rgb(" +
                            Math.round(W[0] * 255) +
                            "," +
                            Math.round(W[1] * 255) +
                            "," +
                            Math.round(W[2] * 255) +
                            ")"),
                        this._hasMaskedPath)
                      ) {
                        if (
                          (a.translate(0, -e.ls),
                          a.translate(0, r[1] * le * 0.01 + u, 0),
                          this._pathData.p.v)
                        ) {
                          q =
                            (T.point[1] - A.point[1]) /
                            (T.point[0] - A.point[0]);
                          var ne = (Math.atan(q) * 180) / Math.PI;
                          T.point[0] < A.point[0] && (ne += 180),
                            a.rotate((-ne * Math.PI) / 180);
                        }
                        a.translate(ve, Pe, 0),
                          (R -= r[0] * b[d].an * 0.005),
                          b[d + 1] &&
                            he !== b[d + 1].ind &&
                            ((R += b[d].an / 2),
                            (R += e.tr * 0.001 * e.finalSize));
                      } else {
                        switch (
                          (a.translate(c, u, 0),
                          e.ps && a.translate(e.ps[0], e.ps[1] + e.ascent, 0),
                          e.j)
                        ) {
                          case 1:
                            a.translate(
                              b[d].animatorJustifyOffset +
                                e.justifyOffset +
                                (e.boxWidth - e.lineWidths[b[d].line]),
                              0,
                              0
                            );
                            break;
                          case 2:
                            a.translate(
                              b[d].animatorJustifyOffset +
                                e.justifyOffset +
                                (e.boxWidth - e.lineWidths[b[d].line]) / 2,
                              0,
                              0
                            );
                            break;
                        }
                        a.translate(0, -e.ls),
                          a.translate(ye, 0, 0),
                          a.translate(
                            r[0] * b[d].an * 0.005,
                            r[1] * le * 0.01,
                            0
                          ),
                          (c += b[d].l + e.tr * 0.001 * e.finalSize);
                      }
                      o === "html"
                        ? (ce = a.toCSS())
                        : o === "svg"
                        ? (ce = a.to2dCSS())
                        : (de = [
                            a.props[0],
                            a.props[1],
                            a.props[2],
                            a.props[3],
                            a.props[4],
                            a.props[5],
                            a.props[6],
                            a.props[7],
                            a.props[8],
                            a.props[9],
                            a.props[10],
                            a.props[11],
                            a.props[12],
                            a.props[13],
                            a.props[14],
                            a.props[15],
                          ]),
                        (j = ge);
                    }
                    l <= d
                      ? ((Q = new LetterProps(j, te, ae, se, ce, de)),
                        this.renderedLetters.push(Q),
                        (l += 1),
                        (this.lettersChangedFlag = !0))
                      : ((Q = this.renderedLetters[d]),
                        (this.lettersChangedFlag =
                          Q.update(j, te, ae, se, ce, de) ||
                          this.lettersChangedFlag));
                  }
                }
              }),
              (TextAnimatorProperty.prototype.getValue = function () {
                this._elem.globalData.frameId !== this._frameId &&
                  ((this._frameId = this._elem.globalData.frameId),
                  this.iterateDynamicProperties());
              }),
              (TextAnimatorProperty.prototype.mHelper = new Matrix()),
              (TextAnimatorProperty.prototype.defaultPropsArray = []),
              extendPrototype([DynamicPropertyContainer], TextAnimatorProperty);
            function ITextElement() {}
            (ITextElement.prototype.initElement = function (e, t, r) {
              (this.lettersChangedFlag = !0),
                this.initFrame(),
                this.initBaseData(e, t, r),
                (this.textProperty = new TextProperty(
                  this,
                  e.t,
                  this.dynamicProperties
                )),
                (this.textAnimator = new TextAnimatorProperty(
                  e.t,
                  this.renderType,
                  this
                )),
                this.initTransform(e, t, r),
                this.initHierarchy(),
                this.initRenderable(),
                this.initRendererElement(),
                this.createContainerElements(),
                this.createRenderableComponents(),
                this.createContent(),
                this.hide(),
                this.textAnimator.searchProperties(this.dynamicProperties);
            }),
              (ITextElement.prototype.prepareFrame = function (e) {
                (this._mdf = !1),
                  this.prepareRenderableFrame(e),
                  this.prepareProperties(e, this.isInRange);
              }),
              (ITextElement.prototype.createPathShape = function (e, t) {
                var r,
                  n = t.length,
                  i,
                  a = "";
                for (r = 0; r < n; r += 1)
                  t[r].ty === "sh" &&
                    ((i = t[r].ks.k),
                    (a += buildShapeString(i, i.i.length, !0, e)));
                return a;
              }),
              (ITextElement.prototype.updateDocumentData = function (e, t) {
                this.textProperty.updateDocumentData(e, t);
              }),
              (ITextElement.prototype.canResizeFont = function (e) {
                this.textProperty.canResizeFont(e);
              }),
              (ITextElement.prototype.setMinimumFontSize = function (e) {
                this.textProperty.setMinimumFontSize(e);
              }),
              (ITextElement.prototype.applyTextPropertiesToMatrix = function (
                e,
                t,
                r,
                n,
                i
              ) {
                switch (
                  (e.ps && t.translate(e.ps[0], e.ps[1] + e.ascent, 0),
                  t.translate(0, -e.ls, 0),
                  e.j)
                ) {
                  case 1:
                    t.translate(
                      e.justifyOffset + (e.boxWidth - e.lineWidths[r]),
                      0,
                      0
                    );
                    break;
                  case 2:
                    t.translate(
                      e.justifyOffset + (e.boxWidth - e.lineWidths[r]) / 2,
                      0,
                      0
                    );
                    break;
                }
                t.translate(n, i, 0);
              }),
              (ITextElement.prototype.buildColor = function (e) {
                return (
                  "rgb(" +
                  Math.round(e[0] * 255) +
                  "," +
                  Math.round(e[1] * 255) +
                  "," +
                  Math.round(e[2] * 255) +
                  ")"
                );
              }),
              (ITextElement.prototype.emptyProp = new LetterProps()),
              (ITextElement.prototype.destroy = function () {}),
              (ITextElement.prototype.validateText = function () {
                (this.textProperty._mdf || this.textProperty._isFirstFrame) &&
                  (this.buildNewText(),
                  (this.textProperty._isFirstFrame = !1),
                  (this.textProperty._mdf = !1));
              });
            var emptyShapeData = { shapes: [] };
            function SVGTextLottieElement(e, t, r) {
              (this.textSpans = []),
                (this.renderType = "svg"),
                this.initElement(e, t, r);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                SVGBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
                ITextElement,
              ],
              SVGTextLottieElement
            ),
              (SVGTextLottieElement.prototype.createContent = function () {
                this.data.singleShape &&
                  !this.globalData.fontManager.chars &&
                  (this.textContainer = createNS("text"));
              }),
              (SVGTextLottieElement.prototype.buildTextContents = function (e) {
                for (var t = 0, r = e.length, n = [], i = ""; t < r; )
                  e[t] === "\r" || e[t] === ""
                    ? (n.push(i), (i = ""))
                    : (i += e[t]),
                    (t += 1);
                return n.push(i), n;
              }),
              (SVGTextLottieElement.prototype.buildShapeData = function (e, t) {
                if (e.shapes && e.shapes.length) {
                  var r = e.shapes[0];
                  if (r.it) {
                    var n = r.it[r.it.length - 1];
                    n.s && ((n.s.k[0] = t), (n.s.k[1] = t));
                  }
                }
                return e;
              }),
              (SVGTextLottieElement.prototype.buildNewText = function () {
                this.addDynamicProperty(this);
                var e,
                  t,
                  r = this.textProperty.currentData;
                (this.renderedLetters = createSizedArray(r ? r.l.length : 0)),
                  r.fc
                    ? this.layerElement.setAttribute(
                        "fill",
                        this.buildColor(r.fc)
                      )
                    : this.layerElement.setAttribute("fill", "rgba(0,0,0,0)"),
                  r.sc &&
                    (this.layerElement.setAttribute(
                      "stroke",
                      this.buildColor(r.sc)
                    ),
                    this.layerElement.setAttribute("stroke-width", r.sw)),
                  this.layerElement.setAttribute("font-size", r.finalSize);
                var n = this.globalData.fontManager.getFontByName(r.f);
                if (n.fClass) this.layerElement.setAttribute("class", n.fClass);
                else {
                  this.layerElement.setAttribute("font-family", n.fFamily);
                  var i = r.fWeight,
                    a = r.fStyle;
                  this.layerElement.setAttribute("font-style", a),
                    this.layerElement.setAttribute("font-weight", i);
                }
                this.layerElement.setAttribute("aria-label", r.t);
                var o = r.l || [],
                  l = !!this.globalData.fontManager.chars;
                t = o.length;
                var c,
                  u = this.mHelper,
                  d = "",
                  E = this.data.singleShape,
                  b = 0,
                  P = 0,
                  R = !0,
                  T = r.tr * 0.001 * r.finalSize;
                if (E && !l && !r.sz) {
                  var M = this.textContainer,
                    x = "start";
                  switch (r.j) {
                    case 1:
                      x = "end";
                      break;
                    case 2:
                      x = "middle";
                      break;
                    default:
                      x = "start";
                      break;
                  }
                  M.setAttribute("text-anchor", x),
                    M.setAttribute("letter-spacing", T);
                  var k = this.buildTextContents(r.finalText);
                  for (
                    t = k.length, P = r.ps ? r.ps[1] + r.ascent : 0, e = 0;
                    e < t;
                    e += 1
                  )
                    (c = this.textSpans[e].span || createNS("tspan")),
                      (c.textContent = k[e]),
                      c.setAttribute("x", 0),
                      c.setAttribute("y", P),
                      (c.style.display = "inherit"),
                      M.appendChild(c),
                      this.textSpans[e] ||
                        (this.textSpans[e] = { span: null, glyph: null }),
                      (this.textSpans[e].span = c),
                      (P += r.finalLineHeight);
                  this.layerElement.appendChild(M);
                } else {
                  var S = this.textSpans.length,
                    A;
                  for (e = 0; e < t; e += 1) {
                    if (
                      (this.textSpans[e] ||
                        (this.textSpans[e] = {
                          span: null,
                          childSpan: null,
                          glyph: null,
                        }),
                      !l || !E || e === 0)
                    ) {
                      if (
                        ((c =
                          S > e
                            ? this.textSpans[e].span
                            : createNS(l ? "g" : "text")),
                        S <= e)
                      ) {
                        if (
                          (c.setAttribute("stroke-linecap", "butt"),
                          c.setAttribute("stroke-linejoin", "round"),
                          c.setAttribute("stroke-miterlimit", "4"),
                          (this.textSpans[e].span = c),
                          l)
                        ) {
                          var O = createNS("g");
                          c.appendChild(O), (this.textSpans[e].childSpan = O);
                        }
                        (this.textSpans[e].span = c),
                          this.layerElement.appendChild(c);
                      }
                      c.style.display = "inherit";
                    }
                    if (
                      (u.reset(),
                      E &&
                        (o[e].n &&
                          ((b = -T),
                          (P += r.yOffset),
                          (P += R ? 1 : 0),
                          (R = !1)),
                        this.applyTextPropertiesToMatrix(r, u, o[e].line, b, P),
                        (b += o[e].l || 0),
                        (b += T)),
                      l)
                    ) {
                      A = this.globalData.fontManager.getCharData(
                        r.finalText[e],
                        n.fStyle,
                        this.globalData.fontManager.getFontByName(r.f).fFamily
                      );
                      var F;
                      if (A.t === 1)
                        F = new SVGCompElement(A.data, this.globalData, this);
                      else {
                        var D = emptyShapeData;
                        A.data &&
                          A.data.shapes &&
                          (D = this.buildShapeData(A.data, r.finalSize)),
                          (F = new SVGShapeElement(D, this.globalData, this));
                      }
                      if (this.textSpans[e].glyph) {
                        var H = this.textSpans[e].glyph;
                        this.textSpans[e].childSpan.removeChild(H.layerElement),
                          H.destroy();
                      }
                      (this.textSpans[e].glyph = F),
                        (F._debug = !0),
                        F.prepareFrame(0),
                        F.renderFrame(),
                        this.textSpans[e].childSpan.appendChild(F.layerElement),
                        A.t === 1 &&
                          this.textSpans[e].childSpan.setAttribute(
                            "transform",
                            "scale(" +
                              r.finalSize / 100 +
                              "," +
                              r.finalSize / 100 +
                              ")"
                          );
                    } else
                      E &&
                        c.setAttribute(
                          "transform",
                          "translate(" + u.props[12] + "," + u.props[13] + ")"
                        ),
                        (c.textContent = o[e].val),
                        c.setAttributeNS(
                          "http://www.w3.org/XML/1998/namespace",
                          "xml:space",
                          "preserve"
                        );
                  }
                  E && c && c.setAttribute("d", d);
                }
                for (; e < this.textSpans.length; )
                  (this.textSpans[e].span.style.display = "none"), (e += 1);
                this._sizeChanged = !0;
              }),
              (SVGTextLottieElement.prototype.sourceRectAtTime = function () {
                if (
                  (this.prepareFrame(this.comp.renderedFrame - this.data.st),
                  this.renderInnerContent(),
                  this._sizeChanged)
                ) {
                  this._sizeChanged = !1;
                  var e = this.layerElement.getBBox();
                  this.bbox = {
                    top: e.y,
                    left: e.x,
                    width: e.width,
                    height: e.height,
                  };
                }
                return this.bbox;
              }),
              (SVGTextLottieElement.prototype.getValue = function () {
                var e,
                  t = this.textSpans.length,
                  r;
                for (
                  this.renderedFrame = this.comp.renderedFrame, e = 0;
                  e < t;
                  e += 1
                )
                  (r = this.textSpans[e].glyph),
                    r &&
                      (r.prepareFrame(this.comp.renderedFrame - this.data.st),
                      r._mdf && (this._mdf = !0));
              }),
              (SVGTextLottieElement.prototype.renderInnerContent = function () {
                if (
                  (this.validateText(),
                  (!this.data.singleShape || this._mdf) &&
                    (this.textAnimator.getMeasures(
                      this.textProperty.currentData,
                      this.lettersChangedFlag
                    ),
                    this.lettersChangedFlag ||
                      this.textAnimator.lettersChangedFlag))
                ) {
                  this._sizeChanged = !0;
                  var e,
                    t,
                    r = this.textAnimator.renderedLetters,
                    n = this.textProperty.currentData.l;
                  t = n.length;
                  var i, a, o;
                  for (e = 0; e < t; e += 1)
                    n[e].n ||
                      ((i = r[e]),
                      (a = this.textSpans[e].span),
                      (o = this.textSpans[e].glyph),
                      o && o.renderFrame(),
                      i._mdf.m && a.setAttribute("transform", i.m),
                      i._mdf.o && a.setAttribute("opacity", i.o),
                      i._mdf.sw && a.setAttribute("stroke-width", i.sw),
                      i._mdf.sc && a.setAttribute("stroke", i.sc),
                      i._mdf.fc && a.setAttribute("fill", i.fc));
                }
              });
            function ISolidElement(e, t, r) {
              this.initElement(e, t, r);
            }
            extendPrototype([IImageElement], ISolidElement),
              (ISolidElement.prototype.createContent = function () {
                var e = createNS("rect");
                e.setAttribute("width", this.data.sw),
                  e.setAttribute("height", this.data.sh),
                  e.setAttribute("fill", this.data.sc),
                  this.layerElement.appendChild(e);
              });
            function NullElement(e, t, r) {
              this.initFrame(),
                this.initBaseData(e, t, r),
                this.initFrame(),
                this.initTransform(e, t, r),
                this.initHierarchy();
            }
            (NullElement.prototype.prepareFrame = function (e) {
              this.prepareProperties(e, !0);
            }),
              (NullElement.prototype.renderFrame = function () {}),
              (NullElement.prototype.getBaseElement = function () {
                return null;
              }),
              (NullElement.prototype.destroy = function () {}),
              (NullElement.prototype.sourceRectAtTime = function () {}),
              (NullElement.prototype.hide = function () {}),
              extendPrototype(
                [BaseElement, TransformElement, HierarchyElement, FrameElement],
                NullElement
              );
            function SVGRendererBase() {}
            extendPrototype([BaseRenderer], SVGRendererBase),
              (SVGRendererBase.prototype.createNull = function (e) {
                return new NullElement(e, this.globalData, this);
              }),
              (SVGRendererBase.prototype.createShape = function (e) {
                return new SVGShapeElement(e, this.globalData, this);
              }),
              (SVGRendererBase.prototype.createText = function (e) {
                return new SVGTextLottieElement(e, this.globalData, this);
              }),
              (SVGRendererBase.prototype.createImage = function (e) {
                return new IImageElement(e, this.globalData, this);
              }),
              (SVGRendererBase.prototype.createSolid = function (e) {
                return new ISolidElement(e, this.globalData, this);
              }),
              (SVGRendererBase.prototype.configAnimation = function (e) {
                this.svgElement.setAttribute(
                  "xmlns",
                  "http://www.w3.org/2000/svg"
                ),
                  this.svgElement.setAttribute(
                    "xmlns:xlink",
                    "http://www.w3.org/1999/xlink"
                  ),
                  this.renderConfig.viewBoxSize
                    ? this.svgElement.setAttribute(
                        "viewBox",
                        this.renderConfig.viewBoxSize
                      )
                    : this.svgElement.setAttribute(
                        "viewBox",
                        "0 0 " + e.w + " " + e.h
                      ),
                  this.renderConfig.viewBoxOnly ||
                    (this.svgElement.setAttribute("width", e.w),
                    this.svgElement.setAttribute("height", e.h),
                    (this.svgElement.style.width = "100%"),
                    (this.svgElement.style.height = "100%"),
                    (this.svgElement.style.transform = "translate3d(0,0,0)"),
                    (this.svgElement.style.contentVisibility =
                      this.renderConfig.contentVisibility)),
                  this.renderConfig.width &&
                    this.svgElement.setAttribute(
                      "width",
                      this.renderConfig.width
                    ),
                  this.renderConfig.height &&
                    this.svgElement.setAttribute(
                      "height",
                      this.renderConfig.height
                    ),
                  this.renderConfig.className &&
                    this.svgElement.setAttribute(
                      "class",
                      this.renderConfig.className
                    ),
                  this.renderConfig.id &&
                    this.svgElement.setAttribute("id", this.renderConfig.id),
                  this.renderConfig.focusable !== void 0 &&
                    this.svgElement.setAttribute(
                      "focusable",
                      this.renderConfig.focusable
                    ),
                  this.svgElement.setAttribute(
                    "preserveAspectRatio",
                    this.renderConfig.preserveAspectRatio
                  ),
                  this.animationItem.wrapper.appendChild(this.svgElement);
                var t = this.globalData.defs;
                this.setupGlobalData(e, t),
                  (this.globalData.progressiveLoad =
                    this.renderConfig.progressiveLoad),
                  (this.data = e);
                var r = createNS("clipPath"),
                  n = createNS("rect");
                n.setAttribute("width", e.w),
                  n.setAttribute("height", e.h),
                  n.setAttribute("x", 0),
                  n.setAttribute("y", 0);
                var i = createElementID();
                r.setAttribute("id", i),
                  r.appendChild(n),
                  this.layerElement.setAttribute(
                    "clip-path",
                    "url(" + getLocationHref() + "#" + i + ")"
                  ),
                  t.appendChild(r),
                  (this.layers = e.layers),
                  (this.elements = createSizedArray(e.layers.length));
              }),
              (SVGRendererBase.prototype.destroy = function () {
                this.animationItem.wrapper &&
                  (this.animationItem.wrapper.innerText = ""),
                  (this.layerElement = null),
                  (this.globalData.defs = null);
                var e,
                  t = this.layers ? this.layers.length : 0;
                for (e = 0; e < t; e += 1)
                  this.elements[e] &&
                    this.elements[e].destroy &&
                    this.elements[e].destroy();
                (this.elements.length = 0),
                  (this.destroyed = !0),
                  (this.animationItem = null);
              }),
              (SVGRendererBase.prototype.updateContainerSize = function () {}),
              (SVGRendererBase.prototype.findIndexByInd = function (e) {
                var t = 0,
                  r = this.layers.length;
                for (t = 0; t < r; t += 1)
                  if (this.layers[t].ind === e) return t;
                return -1;
              }),
              (SVGRendererBase.prototype.buildItem = function (e) {
                var t = this.elements;
                if (!(t[e] || this.layers[e].ty === 99)) {
                  t[e] = !0;
                  var r = this.createItem(this.layers[e]);
                  if (
                    ((t[e] = r),
                    getExpressionsPlugin() &&
                      (this.layers[e].ty === 0 &&
                        this.globalData.projectInterface.registerComposition(r),
                      r.initExpressions()),
                    this.appendElementInPos(r, e),
                    this.layers[e].tt)
                  ) {
                    var n =
                      "tp" in this.layers[e]
                        ? this.findIndexByInd(this.layers[e].tp)
                        : e - 1;
                    if (n === -1) return;
                    if (!this.elements[n] || this.elements[n] === !0)
                      this.buildItem(n), this.addPendingElement(r);
                    else {
                      var i = t[n],
                        a = i.getMatte(this.layers[e].tt);
                      r.setMatte(a);
                    }
                  }
                }
              }),
              (SVGRendererBase.prototype.checkPendingElements = function () {
                for (; this.pendingElements.length; ) {
                  var e = this.pendingElements.pop();
                  if ((e.checkParenting(), e.data.tt))
                    for (var t = 0, r = this.elements.length; t < r; ) {
                      if (this.elements[t] === e) {
                        var n =
                            "tp" in e.data
                              ? this.findIndexByInd(e.data.tp)
                              : t - 1,
                          i = this.elements[n],
                          a = i.getMatte(this.layers[t].tt);
                        e.setMatte(a);
                        break;
                      }
                      t += 1;
                    }
                }
              }),
              (SVGRendererBase.prototype.renderFrame = function (e) {
                if (!(this.renderedFrame === e || this.destroyed)) {
                  e === null
                    ? (e = this.renderedFrame)
                    : (this.renderedFrame = e),
                    (this.globalData.frameNum = e),
                    (this.globalData.frameId += 1),
                    (this.globalData.projectInterface.currentFrame = e),
                    (this.globalData._mdf = !1);
                  var t,
                    r = this.layers.length;
                  for (
                    this.completeLayers || this.checkLayers(e), t = r - 1;
                    t >= 0;
                    t -= 1
                  )
                    (this.completeLayers || this.elements[t]) &&
                      this.elements[t].prepareFrame(e - this.layers[t].st);
                  if (this.globalData._mdf)
                    for (t = 0; t < r; t += 1)
                      (this.completeLayers || this.elements[t]) &&
                        this.elements[t].renderFrame();
                }
              }),
              (SVGRendererBase.prototype.appendElementInPos = function (e, t) {
                var r = e.getBaseElement();
                if (r) {
                  for (var n = 0, i; n < t; )
                    this.elements[n] &&
                      this.elements[n] !== !0 &&
                      this.elements[n].getBaseElement() &&
                      (i = this.elements[n].getBaseElement()),
                      (n += 1);
                  i
                    ? this.layerElement.insertBefore(r, i)
                    : this.layerElement.appendChild(r);
                }
              }),
              (SVGRendererBase.prototype.hide = function () {
                this.layerElement.style.display = "none";
              }),
              (SVGRendererBase.prototype.show = function () {
                this.layerElement.style.display = "block";
              });
            function ICompElement() {}
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
              ],
              ICompElement
            ),
              (ICompElement.prototype.initElement = function (e, t, r) {
                this.initFrame(),
                  this.initBaseData(e, t, r),
                  this.initTransform(e, t, r),
                  this.initRenderable(),
                  this.initHierarchy(),
                  this.initRendererElement(),
                  this.createContainerElements(),
                  this.createRenderableComponents(),
                  (this.data.xt || !t.progressiveLoad) && this.buildAllItems(),
                  this.hide();
              }),
              (ICompElement.prototype.prepareFrame = function (e) {
                if (
                  ((this._mdf = !1),
                  this.prepareRenderableFrame(e),
                  this.prepareProperties(e, this.isInRange),
                  !(!this.isInRange && !this.data.xt))
                ) {
                  if (this.tm._placeholder)
                    this.renderedFrame = e / this.data.sr;
                  else {
                    var t = this.tm.v;
                    t === this.data.op && (t = this.data.op - 1),
                      (this.renderedFrame = t);
                  }
                  var r,
                    n = this.elements.length;
                  for (
                    this.completeLayers || this.checkLayers(this.renderedFrame),
                      r = n - 1;
                    r >= 0;
                    r -= 1
                  )
                    (this.completeLayers || this.elements[r]) &&
                      (this.elements[r].prepareFrame(
                        this.renderedFrame - this.layers[r].st
                      ),
                      this.elements[r]._mdf && (this._mdf = !0));
                }
              }),
              (ICompElement.prototype.renderInnerContent = function () {
                var e,
                  t = this.layers.length;
                for (e = 0; e < t; e += 1)
                  (this.completeLayers || this.elements[e]) &&
                    this.elements[e].renderFrame();
              }),
              (ICompElement.prototype.setElements = function (e) {
                this.elements = e;
              }),
              (ICompElement.prototype.getElements = function () {
                return this.elements;
              }),
              (ICompElement.prototype.destroyElements = function () {
                var e,
                  t = this.layers.length;
                for (e = 0; e < t; e += 1)
                  this.elements[e] && this.elements[e].destroy();
              }),
              (ICompElement.prototype.destroy = function () {
                this.destroyElements(), this.destroyBaseElement();
              });
            function SVGCompElement(e, t, r) {
              (this.layers = e.layers),
                (this.supports3d = !0),
                (this.completeLayers = !1),
                (this.pendingElements = []),
                (this.elements = this.layers
                  ? createSizedArray(this.layers.length)
                  : []),
                this.initElement(e, t, r),
                (this.tm = e.tm
                  ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this)
                  : { _placeholder: !0 });
            }
            extendPrototype(
              [SVGRendererBase, ICompElement, SVGBaseElement],
              SVGCompElement
            ),
              (SVGCompElement.prototype.createComp = function (e) {
                return new SVGCompElement(e, this.globalData, this);
              });
            function SVGRenderer(e, t) {
              (this.animationItem = e),
                (this.layers = null),
                (this.renderedFrame = -1),
                (this.svgElement = createNS("svg"));
              var r = "";
              if (t && t.title) {
                var n = createNS("title"),
                  i = createElementID();
                n.setAttribute("id", i),
                  (n.textContent = t.title),
                  this.svgElement.appendChild(n),
                  (r += i);
              }
              if (t && t.description) {
                var a = createNS("desc"),
                  o = createElementID();
                a.setAttribute("id", o),
                  (a.textContent = t.description),
                  this.svgElement.appendChild(a),
                  (r += " " + o);
              }
              r && this.svgElement.setAttribute("aria-labelledby", r);
              var l = createNS("defs");
              this.svgElement.appendChild(l);
              var c = createNS("g");
              this.svgElement.appendChild(c),
                (this.layerElement = c),
                (this.renderConfig = {
                  preserveAspectRatio:
                    (t && t.preserveAspectRatio) || "xMidYMid meet",
                  imagePreserveAspectRatio:
                    (t && t.imagePreserveAspectRatio) || "xMidYMid slice",
                  contentVisibility: (t && t.contentVisibility) || "visible",
                  progressiveLoad: (t && t.progressiveLoad) || !1,
                  hideOnTransparent: !(t && t.hideOnTransparent === !1),
                  viewBoxOnly: (t && t.viewBoxOnly) || !1,
                  viewBoxSize: (t && t.viewBoxSize) || !1,
                  className: (t && t.className) || "",
                  id: (t && t.id) || "",
                  focusable: t && t.focusable,
                  filterSize: {
                    width: (t && t.filterSize && t.filterSize.width) || "100%",
                    height:
                      (t && t.filterSize && t.filterSize.height) || "100%",
                    x: (t && t.filterSize && t.filterSize.x) || "0%",
                    y: (t && t.filterSize && t.filterSize.y) || "0%",
                  },
                  width: t && t.width,
                  height: t && t.height,
                  runExpressions:
                    !t || t.runExpressions === void 0 || t.runExpressions,
                }),
                (this.globalData = {
                  _mdf: !1,
                  frameNum: -1,
                  defs: l,
                  renderConfig: this.renderConfig,
                }),
                (this.elements = []),
                (this.pendingElements = []),
                (this.destroyed = !1),
                (this.rendererType = "svg");
            }
            extendPrototype([SVGRendererBase], SVGRenderer),
              (SVGRenderer.prototype.createComp = function (e) {
                return new SVGCompElement(e, this.globalData, this);
              });
            function ShapeTransformManager() {
              (this.sequences = {}),
                (this.sequenceList = []),
                (this.transform_key_count = 0);
            }
            ShapeTransformManager.prototype = {
              addTransformSequence: function (t) {
                var r,
                  n = t.length,
                  i = "_";
                for (r = 0; r < n; r += 1) i += t[r].transform.key + "_";
                var a = this.sequences[i];
                return (
                  a ||
                    ((a = {
                      transforms: [].concat(t),
                      finalTransform: new Matrix(),
                      _mdf: !1,
                    }),
                    (this.sequences[i] = a),
                    this.sequenceList.push(a)),
                  a
                );
              },
              processSequence: function (t, r) {
                for (var n = 0, i = t.transforms.length, a = r; n < i && !r; ) {
                  if (t.transforms[n].transform.mProps._mdf) {
                    a = !0;
                    break;
                  }
                  n += 1;
                }
                if (a)
                  for (t.finalTransform.reset(), n = i - 1; n >= 0; n -= 1)
                    t.finalTransform.multiply(
                      t.transforms[n].transform.mProps.v
                    );
                t._mdf = a;
              },
              processSequences: function (t) {
                var r,
                  n = this.sequenceList.length;
                for (r = 0; r < n; r += 1)
                  this.processSequence(this.sequenceList[r], t);
              },
              getNewKey: function () {
                return (
                  (this.transform_key_count += 1),
                  "_" + this.transform_key_count
                );
              },
            };
            var lumaLoader = function () {
              var t = "__lottie_element_luma_buffer",
                r = null,
                n = null,
                i = null;
              function a() {
                var c = createNS("svg"),
                  u = createNS("filter"),
                  d = createNS("feColorMatrix");
                return (
                  u.setAttribute("id", t),
                  d.setAttribute("type", "matrix"),
                  d.setAttribute("color-interpolation-filters", "sRGB"),
                  d.setAttribute(
                    "values",
                    "0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0, 0.3, 0.3, 0.3, 0, 0"
                  ),
                  u.appendChild(d),
                  c.appendChild(u),
                  c.setAttribute("id", t + "_svg"),
                  featureSupport.svgLumaHidden && (c.style.display = "none"),
                  c
                );
              }
              function o() {
                r ||
                  ((i = a()),
                  document.body.appendChild(i),
                  (r = createTag("canvas")),
                  (n = r.getContext("2d")),
                  (n.filter = "url(#" + t + ")"),
                  (n.fillStyle = "rgba(0,0,0,0)"),
                  n.fillRect(0, 0, 1, 1));
              }
              function l(c) {
                return (
                  r || o(),
                  (r.width = c.width),
                  (r.height = c.height),
                  (n.filter = "url(#" + t + ")"),
                  r
                );
              }
              return { load: o, get: l };
            };
            function createCanvas(e, t) {
              if (featureSupport.offscreenCanvas)
                return new OffscreenCanvas(e, t);
              var r = createTag("canvas");
              return (r.width = e), (r.height = t), r;
            }
            var assetLoader = (function () {
                return {
                  loadLumaCanvas: lumaLoader.load,
                  getLumaCanvas: lumaLoader.get,
                  createCanvas,
                };
              })(),
              registeredEffects = {};
            function CVEffects(e) {
              var t,
                r = e.data.ef ? e.data.ef.length : 0;
              this.filters = [];
              var n;
              for (t = 0; t < r; t += 1) {
                n = null;
                var i = e.data.ef[t].ty;
                if (registeredEffects[i]) {
                  var a = registeredEffects[i].effect;
                  n = new a(e.effectsManager.effectElements[t], e);
                }
                n && this.filters.push(n);
              }
              this.filters.length && e.addRenderableComponent(this);
            }
            (CVEffects.prototype.renderFrame = function (e) {
              var t,
                r = this.filters.length;
              for (t = 0; t < r; t += 1) this.filters[t].renderFrame(e);
            }),
              (CVEffects.prototype.getEffects = function (e) {
                var t,
                  r = this.filters.length,
                  n = [];
                for (t = 0; t < r; t += 1)
                  this.filters[t].type === e && n.push(this.filters[t]);
                return n;
              });
            function registerEffect(e, t) {
              registeredEffects[e] = { effect: t };
            }
            function CVMaskElement(e, t) {
              (this.data = e),
                (this.element = t),
                (this.masksProperties = this.data.masksProperties || []),
                (this.viewData = createSizedArray(this.masksProperties.length));
              var r,
                n = this.masksProperties.length,
                i = !1;
              for (r = 0; r < n; r += 1)
                this.masksProperties[r].mode !== "n" && (i = !0),
                  (this.viewData[r] = ShapePropertyFactory.getShapeProp(
                    this.element,
                    this.masksProperties[r],
                    3
                  ));
              (this.hasMasks = i),
                i && this.element.addRenderableComponent(this);
            }
            (CVMaskElement.prototype.renderFrame = function () {
              if (this.hasMasks) {
                var e = this.element.finalTransform.mat,
                  t = this.element.canvasContext,
                  r,
                  n = this.masksProperties.length,
                  i,
                  a,
                  o;
                for (t.beginPath(), r = 0; r < n; r += 1)
                  if (this.masksProperties[r].mode !== "n") {
                    this.masksProperties[r].inv &&
                      (t.moveTo(0, 0),
                      t.lineTo(this.element.globalData.compSize.w, 0),
                      t.lineTo(
                        this.element.globalData.compSize.w,
                        this.element.globalData.compSize.h
                      ),
                      t.lineTo(0, this.element.globalData.compSize.h),
                      t.lineTo(0, 0)),
                      (o = this.viewData[r].v),
                      (i = e.applyToPointArray(o.v[0][0], o.v[0][1], 0)),
                      t.moveTo(i[0], i[1]);
                    var l,
                      c = o._length;
                    for (l = 1; l < c; l += 1)
                      (a = e.applyToTriplePoints(o.o[l - 1], o.i[l], o.v[l])),
                        t.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);
                    (a = e.applyToTriplePoints(o.o[l - 1], o.i[0], o.v[0])),
                      t.bezierCurveTo(a[0], a[1], a[2], a[3], a[4], a[5]);
                  }
                this.element.globalData.renderer.save(!0), t.clip();
              }
            }),
              (CVMaskElement.prototype.getMaskProperty =
                MaskElement.prototype.getMaskProperty),
              (CVMaskElement.prototype.destroy = function () {
                this.element = null;
              });
            function CVBaseElement() {}
            var operationsMap = {
              1: "source-in",
              2: "source-out",
              3: "source-in",
              4: "source-out",
            };
            (CVBaseElement.prototype = {
              createElements: function () {},
              initRendererElement: function () {},
              createContainerElements: function () {
                if (this.data.tt >= 1) {
                  this.buffers = [];
                  var t = this.globalData.canvasContext,
                    r = assetLoader.createCanvas(
                      t.canvas.width,
                      t.canvas.height
                    );
                  this.buffers.push(r);
                  var n = assetLoader.createCanvas(
                    t.canvas.width,
                    t.canvas.height
                  );
                  this.buffers.push(n),
                    this.data.tt >= 3 &&
                      !document._isProxy &&
                      assetLoader.loadLumaCanvas();
                }
                (this.canvasContext = this.globalData.canvasContext),
                  (this.transformCanvas = this.globalData.transformCanvas),
                  (this.renderableEffectsManager = new CVEffects(this)),
                  this.searchEffectTransforms();
              },
              createContent: function () {},
              setBlendMode: function () {
                var t = this.globalData;
                if (t.blendMode !== this.data.bm) {
                  t.blendMode = this.data.bm;
                  var r = getBlendMode(this.data.bm);
                  t.canvasContext.globalCompositeOperation = r;
                }
              },
              createRenderableComponents: function () {
                (this.maskManager = new CVMaskElement(this.data, this)),
                  (this.transformEffects =
                    this.renderableEffectsManager.getEffects(
                      effectTypes.TRANSFORM_EFFECT
                    ));
              },
              hideElement: function () {
                !this.hidden &&
                  (!this.isInRange || this.isTransparent) &&
                  (this.hidden = !0);
              },
              showElement: function () {
                this.isInRange &&
                  !this.isTransparent &&
                  ((this.hidden = !1),
                  (this._isFirstFrame = !0),
                  (this.maskManager._isFirstFrame = !0));
              },
              clearCanvas: function (t) {
                t.clearRect(
                  this.transformCanvas.tx,
                  this.transformCanvas.ty,
                  this.transformCanvas.w * this.transformCanvas.sx,
                  this.transformCanvas.h * this.transformCanvas.sy
                );
              },
              prepareLayer: function () {
                if (this.data.tt >= 1) {
                  var t = this.buffers[0],
                    r = t.getContext("2d");
                  this.clearCanvas(r),
                    r.drawImage(this.canvasContext.canvas, 0, 0),
                    (this.currentTransform = this.canvasContext.getTransform()),
                    this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                    this.clearCanvas(this.canvasContext),
                    this.canvasContext.setTransform(this.currentTransform);
                }
              },
              exitLayer: function () {
                if (this.data.tt >= 1) {
                  var t = this.buffers[1],
                    r = t.getContext("2d");
                  this.clearCanvas(r),
                    r.drawImage(this.canvasContext.canvas, 0, 0),
                    this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                    this.clearCanvas(this.canvasContext),
                    this.canvasContext.setTransform(this.currentTransform);
                  var n = this.comp.getElementById(
                    "tp" in this.data ? this.data.tp : this.data.ind - 1
                  );
                  if (
                    (n.renderFrame(!0),
                    this.canvasContext.setTransform(1, 0, 0, 1, 0, 0),
                    this.data.tt >= 3 && !document._isProxy)
                  ) {
                    var i = assetLoader.getLumaCanvas(
                        this.canvasContext.canvas
                      ),
                      a = i.getContext("2d");
                    a.drawImage(this.canvasContext.canvas, 0, 0),
                      this.clearCanvas(this.canvasContext),
                      this.canvasContext.drawImage(i, 0, 0);
                  }
                  (this.canvasContext.globalCompositeOperation =
                    operationsMap[this.data.tt]),
                    this.canvasContext.drawImage(t, 0, 0),
                    (this.canvasContext.globalCompositeOperation =
                      "destination-over"),
                    this.canvasContext.drawImage(this.buffers[0], 0, 0),
                    this.canvasContext.setTransform(this.currentTransform),
                    (this.canvasContext.globalCompositeOperation =
                      "source-over");
                }
              },
              renderFrame: function (t) {
                if (
                  !(this.hidden || this.data.hd) &&
                  !(this.data.td === 1 && !t)
                ) {
                  this.renderTransform(),
                    this.renderRenderable(),
                    this.renderLocalTransform(),
                    this.setBlendMode();
                  var r = this.data.ty === 0;
                  this.prepareLayer(),
                    this.globalData.renderer.save(r),
                    this.globalData.renderer.ctxTransform(
                      this.finalTransform.localMat.props
                    ),
                    this.globalData.renderer.ctxOpacity(
                      this.finalTransform.localOpacity
                    ),
                    this.renderInnerContent(),
                    this.globalData.renderer.restore(r),
                    this.exitLayer(),
                    this.maskManager.hasMasks &&
                      this.globalData.renderer.restore(!0),
                    this._isFirstFrame && (this._isFirstFrame = !1);
                }
              },
              destroy: function () {
                (this.canvasContext = null),
                  (this.data = null),
                  (this.globalData = null),
                  this.maskManager.destroy();
              },
              mHelper: new Matrix(),
            }),
              (CVBaseElement.prototype.hide =
                CVBaseElement.prototype.hideElement),
              (CVBaseElement.prototype.show =
                CVBaseElement.prototype.showElement);
            function CVShapeData(e, t, r, n) {
              (this.styledShapes = []), (this.tr = [0, 0, 0, 0, 0, 0]);
              var i = 4;
              t.ty === "rc"
                ? (i = 5)
                : t.ty === "el"
                ? (i = 6)
                : t.ty === "sr" && (i = 7),
                (this.sh = ShapePropertyFactory.getShapeProp(e, t, i, e));
              var a,
                o = r.length,
                l;
              for (a = 0; a < o; a += 1)
                r[a].closed ||
                  ((l = {
                    transforms: n.addTransformSequence(r[a].transforms),
                    trNodes: [],
                  }),
                  this.styledShapes.push(l),
                  r[a].elements.push(l));
            }
            CVShapeData.prototype.setAsAnimated =
              SVGShapeData.prototype.setAsAnimated;
            function CVShapeElement(e, t, r) {
              (this.shapes = []),
                (this.shapesData = e.shapes),
                (this.stylesList = []),
                (this.itemsData = []),
                (this.prevViewData = []),
                (this.shapeModifiers = []),
                (this.processedElements = []),
                (this.transformsManager = new ShapeTransformManager()),
                this.initElement(e, t, r);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                CVBaseElement,
                IShapeElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
              ],
              CVShapeElement
            ),
              (CVShapeElement.prototype.initElement =
                RenderableDOMElement.prototype.initElement),
              (CVShapeElement.prototype.transformHelper = {
                opacity: 1,
                _opMdf: !1,
              }),
              (CVShapeElement.prototype.dashResetter = []),
              (CVShapeElement.prototype.createContent = function () {
                this.searchShapes(
                  this.shapesData,
                  this.itemsData,
                  this.prevViewData,
                  !0,
                  []
                );
              }),
              (CVShapeElement.prototype.createStyleElement = function (e, t) {
                var r = {
                    data: e,
                    type: e.ty,
                    preTransforms:
                      this.transformsManager.addTransformSequence(t),
                    transforms: [],
                    elements: [],
                    closed: e.hd === !0,
                  },
                  n = {};
                if (
                  (e.ty === "fl" || e.ty === "st"
                    ? ((n.c = PropertyFactory.getProp(this, e.c, 1, 255, this)),
                      n.c.k ||
                        (r.co =
                          "rgb(" +
                          bmFloor(n.c.v[0]) +
                          "," +
                          bmFloor(n.c.v[1]) +
                          "," +
                          bmFloor(n.c.v[2]) +
                          ")"))
                    : (e.ty === "gf" || e.ty === "gs") &&
                      ((n.s = PropertyFactory.getProp(
                        this,
                        e.s,
                        1,
                        null,
                        this
                      )),
                      (n.e = PropertyFactory.getProp(this, e.e, 1, null, this)),
                      (n.h = PropertyFactory.getProp(
                        this,
                        e.h || { k: 0 },
                        0,
                        0.01,
                        this
                      )),
                      (n.a = PropertyFactory.getProp(
                        this,
                        e.a || { k: 0 },
                        0,
                        degToRads,
                        this
                      )),
                      (n.g = new GradientProperty(this, e.g, this))),
                  (n.o = PropertyFactory.getProp(this, e.o, 0, 0.01, this)),
                  e.ty === "st" || e.ty === "gs")
                ) {
                  if (
                    ((r.lc = lineCapEnum[e.lc || 2]),
                    (r.lj = lineJoinEnum[e.lj || 2]),
                    e.lj == 1 && (r.ml = e.ml),
                    (n.w = PropertyFactory.getProp(this, e.w, 0, null, this)),
                    n.w.k || (r.wi = n.w.v),
                    e.d)
                  ) {
                    var i = new DashProperty(this, e.d, "canvas", this);
                    (n.d = i),
                      n.d.k ||
                        ((r.da = n.d.dashArray), (r.do = n.d.dashoffset[0]));
                  }
                } else r.r = e.r === 2 ? "evenodd" : "nonzero";
                return this.stylesList.push(r), (n.style = r), n;
              }),
              (CVShapeElement.prototype.createGroupElement = function () {
                var e = { it: [], prevViewData: [] };
                return e;
              }),
              (CVShapeElement.prototype.createTransformElement = function (e) {
                var t = {
                  transform: {
                    opacity: 1,
                    _opMdf: !1,
                    key: this.transformsManager.getNewKey(),
                    op: PropertyFactory.getProp(this, e.o, 0, 0.01, this),
                    mProps: TransformPropertyFactory.getTransformProperty(
                      this,
                      e,
                      this
                    ),
                  },
                };
                return t;
              }),
              (CVShapeElement.prototype.createShapeElement = function (e) {
                var t = new CVShapeData(
                  this,
                  e,
                  this.stylesList,
                  this.transformsManager
                );
                return this.shapes.push(t), this.addShapeToModifiers(t), t;
              }),
              (CVShapeElement.prototype.reloadShapes = function () {
                this._isFirstFrame = !0;
                var e,
                  t = this.itemsData.length;
                for (e = 0; e < t; e += 1)
                  this.prevViewData[e] = this.itemsData[e];
                for (
                  this.searchShapes(
                    this.shapesData,
                    this.itemsData,
                    this.prevViewData,
                    !0,
                    []
                  ),
                    t = this.dynamicProperties.length,
                    e = 0;
                  e < t;
                  e += 1
                )
                  this.dynamicProperties[e].getValue();
                this.renderModifiers(),
                  this.transformsManager.processSequences(this._isFirstFrame);
              }),
              (CVShapeElement.prototype.addTransformToStyleList = function (e) {
                var t,
                  r = this.stylesList.length;
                for (t = 0; t < r; t += 1)
                  this.stylesList[t].closed ||
                    this.stylesList[t].transforms.push(e);
              }),
              (CVShapeElement.prototype.removeTransformFromStyleList =
                function () {
                  var e,
                    t = this.stylesList.length;
                  for (e = 0; e < t; e += 1)
                    this.stylesList[e].closed ||
                      this.stylesList[e].transforms.pop();
                }),
              (CVShapeElement.prototype.closeStyles = function (e) {
                var t,
                  r = e.length;
                for (t = 0; t < r; t += 1) e[t].closed = !0;
              }),
              (CVShapeElement.prototype.searchShapes = function (
                e,
                t,
                r,
                n,
                i
              ) {
                var a,
                  o = e.length - 1,
                  l,
                  c,
                  u = [],
                  d = [],
                  E,
                  b,
                  P,
                  R = [].concat(i);
                for (a = o; a >= 0; a -= 1) {
                  if (
                    ((E = this.searchProcessedElement(e[a])),
                    E ? (t[a] = r[E - 1]) : (e[a]._shouldRender = n),
                    e[a].ty === "fl" ||
                      e[a].ty === "st" ||
                      e[a].ty === "gf" ||
                      e[a].ty === "gs")
                  )
                    E
                      ? (t[a].style.closed = !1)
                      : (t[a] = this.createStyleElement(e[a], R)),
                      u.push(t[a].style);
                  else if (e[a].ty === "gr") {
                    if (!E) t[a] = this.createGroupElement(e[a]);
                    else
                      for (c = t[a].it.length, l = 0; l < c; l += 1)
                        t[a].prevViewData[l] = t[a].it[l];
                    this.searchShapes(
                      e[a].it,
                      t[a].it,
                      t[a].prevViewData,
                      n,
                      R
                    );
                  } else
                    e[a].ty === "tr"
                      ? (E ||
                          ((P = this.createTransformElement(e[a])), (t[a] = P)),
                        R.push(t[a]),
                        this.addTransformToStyleList(t[a]))
                      : e[a].ty === "sh" ||
                        e[a].ty === "rc" ||
                        e[a].ty === "el" ||
                        e[a].ty === "sr"
                      ? E || (t[a] = this.createShapeElement(e[a]))
                      : e[a].ty === "tm" ||
                        e[a].ty === "rd" ||
                        e[a].ty === "pb" ||
                        e[a].ty === "zz" ||
                        e[a].ty === "op"
                      ? (E
                          ? ((b = t[a]), (b.closed = !1))
                          : ((b = ShapeModifiers.getModifier(e[a].ty)),
                            b.init(this, e[a]),
                            (t[a] = b),
                            this.shapeModifiers.push(b)),
                        d.push(b))
                      : e[a].ty === "rp" &&
                        (E
                          ? ((b = t[a]), (b.closed = !0))
                          : ((b = ShapeModifiers.getModifier(e[a].ty)),
                            (t[a] = b),
                            b.init(this, e, a, t),
                            this.shapeModifiers.push(b),
                            (n = !1)),
                        d.push(b));
                  this.addProcessedElement(e[a], a + 1);
                }
                for (
                  this.removeTransformFromStyleList(),
                    this.closeStyles(u),
                    o = d.length,
                    a = 0;
                  a < o;
                  a += 1
                )
                  d[a].closed = !0;
              }),
              (CVShapeElement.prototype.renderInnerContent = function () {
                (this.transformHelper.opacity = 1),
                  (this.transformHelper._opMdf = !1),
                  this.renderModifiers(),
                  this.transformsManager.processSequences(this._isFirstFrame),
                  this.renderShape(
                    this.transformHelper,
                    this.shapesData,
                    this.itemsData,
                    !0
                  );
              }),
              (CVShapeElement.prototype.renderShapeTransform = function (e, t) {
                (e._opMdf || t.op._mdf || this._isFirstFrame) &&
                  ((t.opacity = e.opacity),
                  (t.opacity *= t.op.v),
                  (t._opMdf = !0));
              }),
              (CVShapeElement.prototype.drawLayer = function () {
                var e,
                  t = this.stylesList.length,
                  r,
                  n,
                  i,
                  a,
                  o,
                  l,
                  c = this.globalData.renderer,
                  u = this.globalData.canvasContext,
                  d,
                  E;
                for (e = 0; e < t; e += 1)
                  if (
                    ((E = this.stylesList[e]),
                    (d = E.type),
                    !(
                      ((d === "st" || d === "gs") && E.wi === 0) ||
                      !E.data._shouldRender ||
                      E.coOp === 0 ||
                      this.globalData.currentGlobalAlpha === 0
                    ))
                  ) {
                    for (
                      c.save(),
                        o = E.elements,
                        d === "st" || d === "gs"
                          ? (c.ctxStrokeStyle(d === "st" ? E.co : E.grd),
                            c.ctxLineWidth(E.wi),
                            c.ctxLineCap(E.lc),
                            c.ctxLineJoin(E.lj),
                            c.ctxMiterLimit(E.ml || 0))
                          : c.ctxFillStyle(d === "fl" ? E.co : E.grd),
                        c.ctxOpacity(E.coOp),
                        d !== "st" && d !== "gs" && u.beginPath(),
                        c.ctxTransform(E.preTransforms.finalTransform.props),
                        n = o.length,
                        r = 0;
                      r < n;
                      r += 1
                    ) {
                      for (
                        (d === "st" || d === "gs") &&
                          (u.beginPath(),
                          E.da &&
                            (u.setLineDash(E.da), (u.lineDashOffset = E.do))),
                          l = o[r].trNodes,
                          a = l.length,
                          i = 0;
                        i < a;
                        i += 1
                      )
                        l[i].t === "m"
                          ? u.moveTo(l[i].p[0], l[i].p[1])
                          : l[i].t === "c"
                          ? u.bezierCurveTo(
                              l[i].pts[0],
                              l[i].pts[1],
                              l[i].pts[2],
                              l[i].pts[3],
                              l[i].pts[4],
                              l[i].pts[5]
                            )
                          : u.closePath();
                      (d === "st" || d === "gs") &&
                        (c.ctxStroke(),
                        E.da && u.setLineDash(this.dashResetter));
                    }
                    d !== "st" &&
                      d !== "gs" &&
                      this.globalData.renderer.ctxFill(E.r),
                      c.restore();
                  }
              }),
              (CVShapeElement.prototype.renderShape = function (e, t, r, n) {
                var i,
                  a = t.length - 1,
                  o;
                for (o = e, i = a; i >= 0; i -= 1)
                  t[i].ty === "tr"
                    ? ((o = r[i].transform), this.renderShapeTransform(e, o))
                    : t[i].ty === "sh" ||
                      t[i].ty === "el" ||
                      t[i].ty === "rc" ||
                      t[i].ty === "sr"
                    ? this.renderPath(t[i], r[i])
                    : t[i].ty === "fl"
                    ? this.renderFill(t[i], r[i], o)
                    : t[i].ty === "st"
                    ? this.renderStroke(t[i], r[i], o)
                    : t[i].ty === "gf" || t[i].ty === "gs"
                    ? this.renderGradientFill(t[i], r[i], o)
                    : t[i].ty === "gr"
                    ? this.renderShape(o, t[i].it, r[i].it)
                    : t[i].ty;
                n && this.drawLayer();
              }),
              (CVShapeElement.prototype.renderStyledShape = function (e, t) {
                if (this._isFirstFrame || t._mdf || e.transforms._mdf) {
                  var r = e.trNodes,
                    n = t.paths,
                    i,
                    a,
                    o,
                    l = n._length;
                  r.length = 0;
                  var c = e.transforms.finalTransform;
                  for (o = 0; o < l; o += 1) {
                    var u = n.shapes[o];
                    if (u && u.v) {
                      for (a = u._length, i = 1; i < a; i += 1)
                        i === 1 &&
                          r.push({
                            t: "m",
                            p: c.applyToPointArray(u.v[0][0], u.v[0][1], 0),
                          }),
                          r.push({
                            t: "c",
                            pts: c.applyToTriplePoints(
                              u.o[i - 1],
                              u.i[i],
                              u.v[i]
                            ),
                          });
                      a === 1 &&
                        r.push({
                          t: "m",
                          p: c.applyToPointArray(u.v[0][0], u.v[0][1], 0),
                        }),
                        u.c &&
                          a &&
                          (r.push({
                            t: "c",
                            pts: c.applyToTriplePoints(
                              u.o[i - 1],
                              u.i[0],
                              u.v[0]
                            ),
                          }),
                          r.push({ t: "z" }));
                    }
                  }
                  e.trNodes = r;
                }
              }),
              (CVShapeElement.prototype.renderPath = function (e, t) {
                if (e.hd !== !0 && e._shouldRender) {
                  var r,
                    n = t.styledShapes.length;
                  for (r = 0; r < n; r += 1)
                    this.renderStyledShape(t.styledShapes[r], t.sh);
                }
              }),
              (CVShapeElement.prototype.renderFill = function (e, t, r) {
                var n = t.style;
                (t.c._mdf || this._isFirstFrame) &&
                  (n.co =
                    "rgb(" +
                    bmFloor(t.c.v[0]) +
                    "," +
                    bmFloor(t.c.v[1]) +
                    "," +
                    bmFloor(t.c.v[2]) +
                    ")"),
                  (t.o._mdf || r._opMdf || this._isFirstFrame) &&
                    (n.coOp = t.o.v * r.opacity);
              }),
              (CVShapeElement.prototype.renderGradientFill = function (
                e,
                t,
                r
              ) {
                var n = t.style,
                  i;
                if (
                  !n.grd ||
                  t.g._mdf ||
                  t.s._mdf ||
                  t.e._mdf ||
                  (e.t !== 1 && (t.h._mdf || t.a._mdf))
                ) {
                  var a = this.globalData.canvasContext,
                    o = t.s.v,
                    l = t.e.v;
                  if (e.t === 1)
                    i = a.createLinearGradient(o[0], o[1], l[0], l[1]);
                  else {
                    var c = Math.sqrt(
                        Math.pow(o[0] - l[0], 2) + Math.pow(o[1] - l[1], 2)
                      ),
                      u = Math.atan2(l[1] - o[1], l[0] - o[0]),
                      d = t.h.v;
                    d >= 1 ? (d = 0.99) : d <= -1 && (d = -0.99);
                    var E = c * d,
                      b = Math.cos(u + t.a.v) * E + o[0],
                      P = Math.sin(u + t.a.v) * E + o[1];
                    i = a.createRadialGradient(b, P, 0, o[0], o[1], c);
                  }
                  var R,
                    T = e.g.p,
                    M = t.g.c,
                    x = 1;
                  for (R = 0; R < T; R += 1)
                    t.g._hasOpacity &&
                      t.g._collapsable &&
                      (x = t.g.o[R * 2 + 1]),
                      i.addColorStop(
                        M[R * 4] / 100,
                        "rgba(" +
                          M[R * 4 + 1] +
                          "," +
                          M[R * 4 + 2] +
                          "," +
                          M[R * 4 + 3] +
                          "," +
                          x +
                          ")"
                      );
                  n.grd = i;
                }
                n.coOp = t.o.v * r.opacity;
              }),
              (CVShapeElement.prototype.renderStroke = function (e, t, r) {
                var n = t.style,
                  i = t.d;
                i &&
                  (i._mdf || this._isFirstFrame) &&
                  ((n.da = i.dashArray), (n.do = i.dashoffset[0])),
                  (t.c._mdf || this._isFirstFrame) &&
                    (n.co =
                      "rgb(" +
                      bmFloor(t.c.v[0]) +
                      "," +
                      bmFloor(t.c.v[1]) +
                      "," +
                      bmFloor(t.c.v[2]) +
                      ")"),
                  (t.o._mdf || r._opMdf || this._isFirstFrame) &&
                    (n.coOp = t.o.v * r.opacity),
                  (t.w._mdf || this._isFirstFrame) && (n.wi = t.w.v);
              }),
              (CVShapeElement.prototype.destroy = function () {
                (this.shapesData = null),
                  (this.globalData = null),
                  (this.canvasContext = null),
                  (this.stylesList.length = 0),
                  (this.itemsData.length = 0);
              });
            function CVTextElement(e, t, r) {
              (this.textSpans = []),
                (this.yOffset = 0),
                (this.fillColorAnim = !1),
                (this.strokeColorAnim = !1),
                (this.strokeWidthAnim = !1),
                (this.stroke = !1),
                (this.fill = !1),
                (this.justifyOffset = 0),
                (this.currentRender = null),
                (this.renderType = "canvas"),
                (this.values = {
                  fill: "rgba(0,0,0,0)",
                  stroke: "rgba(0,0,0,0)",
                  sWidth: 0,
                  fValue: "",
                }),
                this.initElement(e, t, r);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                CVBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
                ITextElement,
              ],
              CVTextElement
            ),
              (CVTextElement.prototype.tHelper =
                createTag("canvas").getContext("2d")),
              (CVTextElement.prototype.buildNewText = function () {
                var e = this.textProperty.currentData;
                this.renderedLetters = createSizedArray(e.l ? e.l.length : 0);
                var t = !1;
                e.fc
                  ? ((t = !0), (this.values.fill = this.buildColor(e.fc)))
                  : (this.values.fill = "rgba(0,0,0,0)"),
                  (this.fill = t);
                var r = !1;
                e.sc &&
                  ((r = !0),
                  (this.values.stroke = this.buildColor(e.sc)),
                  (this.values.sWidth = e.sw));
                var n = this.globalData.fontManager.getFontByName(e.f),
                  i,
                  a,
                  o = e.l,
                  l = this.mHelper;
                (this.stroke = r),
                  (this.values.fValue =
                    e.finalSize +
                    "px " +
                    this.globalData.fontManager.getFontByName(e.f).fFamily),
                  (a = e.finalText.length);
                var c,
                  u,
                  d,
                  E,
                  b,
                  P,
                  R,
                  T,
                  M,
                  x,
                  k = this.data.singleShape,
                  S = e.tr * 0.001 * e.finalSize,
                  A = 0,
                  O = 0,
                  F = !0,
                  D = 0;
                for (i = 0; i < a; i += 1) {
                  (c = this.globalData.fontManager.getCharData(
                    e.finalText[i],
                    n.fStyle,
                    this.globalData.fontManager.getFontByName(e.f).fFamily
                  )),
                    (u = (c && c.data) || {}),
                    l.reset(),
                    k &&
                      o[i].n &&
                      ((A = -S), (O += e.yOffset), (O += F ? 1 : 0), (F = !1)),
                    (b = u.shapes ? u.shapes[0].it : []),
                    (R = b.length),
                    l.scale(e.finalSize / 100, e.finalSize / 100),
                    k &&
                      this.applyTextPropertiesToMatrix(e, l, o[i].line, A, O),
                    (M = createSizedArray(R - 1));
                  var H = 0;
                  for (P = 0; P < R; P += 1)
                    if (b[P].ty === "sh") {
                      for (
                        E = b[P].ks.k.i.length, T = b[P].ks.k, x = [], d = 1;
                        d < E;
                        d += 1
                      )
                        d === 1 &&
                          x.push(
                            l.applyToX(T.v[0][0], T.v[0][1], 0),
                            l.applyToY(T.v[0][0], T.v[0][1], 0)
                          ),
                          x.push(
                            l.applyToX(T.o[d - 1][0], T.o[d - 1][1], 0),
                            l.applyToY(T.o[d - 1][0], T.o[d - 1][1], 0),
                            l.applyToX(T.i[d][0], T.i[d][1], 0),
                            l.applyToY(T.i[d][0], T.i[d][1], 0),
                            l.applyToX(T.v[d][0], T.v[d][1], 0),
                            l.applyToY(T.v[d][0], T.v[d][1], 0)
                          );
                      x.push(
                        l.applyToX(T.o[d - 1][0], T.o[d - 1][1], 0),
                        l.applyToY(T.o[d - 1][0], T.o[d - 1][1], 0),
                        l.applyToX(T.i[0][0], T.i[0][1], 0),
                        l.applyToY(T.i[0][0], T.i[0][1], 0),
                        l.applyToX(T.v[0][0], T.v[0][1], 0),
                        l.applyToY(T.v[0][0], T.v[0][1], 0)
                      ),
                        (M[H] = x),
                        (H += 1);
                    }
                  k && ((A += o[i].l), (A += S)),
                    this.textSpans[D]
                      ? (this.textSpans[D].elem = M)
                      : (this.textSpans[D] = { elem: M }),
                    (D += 1);
                }
              }),
              (CVTextElement.prototype.renderInnerContent = function () {
                this.validateText();
                var e = this.canvasContext;
                (e.font = this.values.fValue),
                  this.globalData.renderer.ctxLineCap("butt"),
                  this.globalData.renderer.ctxLineJoin("miter"),
                  this.globalData.renderer.ctxMiterLimit(4),
                  this.data.singleShape ||
                    this.textAnimator.getMeasures(
                      this.textProperty.currentData,
                      this.lettersChangedFlag
                    );
                var t,
                  r,
                  n,
                  i,
                  a,
                  o,
                  l = this.textAnimator.renderedLetters,
                  c = this.textProperty.currentData.l;
                r = c.length;
                var u,
                  d = null,
                  E = null,
                  b = null,
                  P,
                  R,
                  T = this.globalData.renderer;
                for (t = 0; t < r; t += 1)
                  if (!c[t].n) {
                    if (
                      ((u = l[t]),
                      u && (T.save(), T.ctxTransform(u.p), T.ctxOpacity(u.o)),
                      this.fill)
                    ) {
                      for (
                        u && u.fc
                          ? d !== u.fc && (T.ctxFillStyle(u.fc), (d = u.fc))
                          : d !== this.values.fill &&
                            ((d = this.values.fill),
                            T.ctxFillStyle(this.values.fill)),
                          P = this.textSpans[t].elem,
                          i = P.length,
                          this.globalData.canvasContext.beginPath(),
                          n = 0;
                        n < i;
                        n += 1
                      )
                        for (
                          R = P[n],
                            o = R.length,
                            this.globalData.canvasContext.moveTo(R[0], R[1]),
                            a = 2;
                          a < o;
                          a += 6
                        )
                          this.globalData.canvasContext.bezierCurveTo(
                            R[a],
                            R[a + 1],
                            R[a + 2],
                            R[a + 3],
                            R[a + 4],
                            R[a + 5]
                          );
                      this.globalData.canvasContext.closePath(), T.ctxFill();
                    }
                    if (this.stroke) {
                      for (
                        u && u.sw
                          ? b !== u.sw && ((b = u.sw), T.ctxLineWidth(u.sw))
                          : b !== this.values.sWidth &&
                            ((b = this.values.sWidth),
                            T.ctxLineWidth(this.values.sWidth)),
                          u && u.sc
                            ? E !== u.sc && ((E = u.sc), T.ctxStrokeStyle(u.sc))
                            : E !== this.values.stroke &&
                              ((E = this.values.stroke),
                              T.ctxStrokeStyle(this.values.stroke)),
                          P = this.textSpans[t].elem,
                          i = P.length,
                          this.globalData.canvasContext.beginPath(),
                          n = 0;
                        n < i;
                        n += 1
                      )
                        for (
                          R = P[n],
                            o = R.length,
                            this.globalData.canvasContext.moveTo(R[0], R[1]),
                            a = 2;
                          a < o;
                          a += 6
                        )
                          this.globalData.canvasContext.bezierCurveTo(
                            R[a],
                            R[a + 1],
                            R[a + 2],
                            R[a + 3],
                            R[a + 4],
                            R[a + 5]
                          );
                      this.globalData.canvasContext.closePath(), T.ctxStroke();
                    }
                    u && this.globalData.renderer.restore();
                  }
              });
            function CVImageElement(e, t, r) {
              (this.assetData = t.getAssetData(e.refId)),
                (this.img = t.imageLoader.getAsset(this.assetData)),
                this.initElement(e, t, r);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                CVBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
              ],
              CVImageElement
            ),
              (CVImageElement.prototype.initElement =
                SVGShapeElement.prototype.initElement),
              (CVImageElement.prototype.prepareFrame =
                IImageElement.prototype.prepareFrame),
              (CVImageElement.prototype.createContent = function () {
                if (
                  this.img.width &&
                  (this.assetData.w !== this.img.width ||
                    this.assetData.h !== this.img.height)
                ) {
                  var e = createTag("canvas");
                  (e.width = this.assetData.w), (e.height = this.assetData.h);
                  var t = e.getContext("2d"),
                    r = this.img.width,
                    n = this.img.height,
                    i = r / n,
                    a = this.assetData.w / this.assetData.h,
                    o,
                    l,
                    c =
                      this.assetData.pr ||
                      this.globalData.renderConfig.imagePreserveAspectRatio;
                  (i > a && c === "xMidYMid slice") ||
                  (i < a && c !== "xMidYMid slice")
                    ? ((l = n), (o = l * a))
                    : ((o = r), (l = o / a)),
                    t.drawImage(
                      this.img,
                      (r - o) / 2,
                      (n - l) / 2,
                      o,
                      l,
                      0,
                      0,
                      this.assetData.w,
                      this.assetData.h
                    ),
                    (this.img = e);
                }
              }),
              (CVImageElement.prototype.renderInnerContent = function () {
                this.canvasContext.drawImage(this.img, 0, 0);
              }),
              (CVImageElement.prototype.destroy = function () {
                this.img = null;
              });
            function CVSolidElement(e, t, r) {
              this.initElement(e, t, r);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                CVBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
              ],
              CVSolidElement
            ),
              (CVSolidElement.prototype.initElement =
                SVGShapeElement.prototype.initElement),
              (CVSolidElement.prototype.prepareFrame =
                IImageElement.prototype.prepareFrame),
              (CVSolidElement.prototype.renderInnerContent = function () {
                this.globalData.renderer.ctxFillStyle(this.data.sc),
                  this.globalData.renderer.ctxFillRect(
                    0,
                    0,
                    this.data.sw,
                    this.data.sh
                  );
              });
            function CanvasRendererBase() {}
            extendPrototype([BaseRenderer], CanvasRendererBase),
              (CanvasRendererBase.prototype.createShape = function (e) {
                return new CVShapeElement(e, this.globalData, this);
              }),
              (CanvasRendererBase.prototype.createText = function (e) {
                return new CVTextElement(e, this.globalData, this);
              }),
              (CanvasRendererBase.prototype.createImage = function (e) {
                return new CVImageElement(e, this.globalData, this);
              }),
              (CanvasRendererBase.prototype.createSolid = function (e) {
                return new CVSolidElement(e, this.globalData, this);
              }),
              (CanvasRendererBase.prototype.createNull =
                SVGRenderer.prototype.createNull),
              (CanvasRendererBase.prototype.ctxTransform = function (e) {
                (e[0] === 1 &&
                  e[1] === 0 &&
                  e[4] === 0 &&
                  e[5] === 1 &&
                  e[12] === 0 &&
                  e[13] === 0) ||
                  this.canvasContext.transform(
                    e[0],
                    e[1],
                    e[4],
                    e[5],
                    e[12],
                    e[13]
                  );
              }),
              (CanvasRendererBase.prototype.ctxOpacity = function (e) {
                this.canvasContext.globalAlpha *= e < 0 ? 0 : e;
              }),
              (CanvasRendererBase.prototype.ctxFillStyle = function (e) {
                this.canvasContext.fillStyle = e;
              }),
              (CanvasRendererBase.prototype.ctxStrokeStyle = function (e) {
                this.canvasContext.strokeStyle = e;
              }),
              (CanvasRendererBase.prototype.ctxLineWidth = function (e) {
                this.canvasContext.lineWidth = e;
              }),
              (CanvasRendererBase.prototype.ctxLineCap = function (e) {
                this.canvasContext.lineCap = e;
              }),
              (CanvasRendererBase.prototype.ctxLineJoin = function (e) {
                this.canvasContext.lineJoin = e;
              }),
              (CanvasRendererBase.prototype.ctxMiterLimit = function (e) {
                this.canvasContext.miterLimit = e;
              }),
              (CanvasRendererBase.prototype.ctxFill = function (e) {
                this.canvasContext.fill(e);
              }),
              (CanvasRendererBase.prototype.ctxFillRect = function (
                e,
                t,
                r,
                n
              ) {
                this.canvasContext.fillRect(e, t, r, n);
              }),
              (CanvasRendererBase.prototype.ctxStroke = function () {
                this.canvasContext.stroke();
              }),
              (CanvasRendererBase.prototype.reset = function () {
                if (!this.renderConfig.clearCanvas) {
                  this.canvasContext.restore();
                  return;
                }
                this.contextData.reset();
              }),
              (CanvasRendererBase.prototype.save = function () {
                this.canvasContext.save();
              }),
              (CanvasRendererBase.prototype.restore = function (e) {
                if (!this.renderConfig.clearCanvas) {
                  this.canvasContext.restore();
                  return;
                }
                e && (this.globalData.blendMode = "source-over"),
                  this.contextData.restore(e);
              }),
              (CanvasRendererBase.prototype.configAnimation = function (e) {
                if (this.animationItem.wrapper) {
                  this.animationItem.container = createTag("canvas");
                  var t = this.animationItem.container.style;
                  (t.width = "100%"), (t.height = "100%");
                  var r = "0px 0px 0px";
                  (t.transformOrigin = r),
                    (t.mozTransformOrigin = r),
                    (t.webkitTransformOrigin = r),
                    (t["-webkit-transform"] = r),
                    (t.contentVisibility = this.renderConfig.contentVisibility),
                    this.animationItem.wrapper.appendChild(
                      this.animationItem.container
                    ),
                    (this.canvasContext =
                      this.animationItem.container.getContext("2d")),
                    this.renderConfig.className &&
                      this.animationItem.container.setAttribute(
                        "class",
                        this.renderConfig.className
                      ),
                    this.renderConfig.id &&
                      this.animationItem.container.setAttribute(
                        "id",
                        this.renderConfig.id
                      );
                } else this.canvasContext = this.renderConfig.context;
                this.contextData.setContext(this.canvasContext),
                  (this.data = e),
                  (this.layers = e.layers),
                  (this.transformCanvas = {
                    w: e.w,
                    h: e.h,
                    sx: 0,
                    sy: 0,
                    tx: 0,
                    ty: 0,
                  }),
                  this.setupGlobalData(e, document.body),
                  (this.globalData.canvasContext = this.canvasContext),
                  (this.globalData.renderer = this),
                  (this.globalData.isDashed = !1),
                  (this.globalData.progressiveLoad =
                    this.renderConfig.progressiveLoad),
                  (this.globalData.transformCanvas = this.transformCanvas),
                  (this.elements = createSizedArray(e.layers.length)),
                  this.updateContainerSize();
              }),
              (CanvasRendererBase.prototype.updateContainerSize = function (
                e,
                t
              ) {
                this.reset();
                var r, n;
                e
                  ? ((r = e),
                    (n = t),
                    (this.canvasContext.canvas.width = r),
                    (this.canvasContext.canvas.height = n))
                  : (this.animationItem.wrapper && this.animationItem.container
                      ? ((r = this.animationItem.wrapper.offsetWidth),
                        (n = this.animationItem.wrapper.offsetHeight))
                      : ((r = this.canvasContext.canvas.width),
                        (n = this.canvasContext.canvas.height)),
                    (this.canvasContext.canvas.width =
                      r * this.renderConfig.dpr),
                    (this.canvasContext.canvas.height =
                      n * this.renderConfig.dpr));
                var i, a;
                if (
                  this.renderConfig.preserveAspectRatio.indexOf("meet") !==
                    -1 ||
                  this.renderConfig.preserveAspectRatio.indexOf("slice") !== -1
                ) {
                  var o = this.renderConfig.preserveAspectRatio.split(" "),
                    l = o[1] || "meet",
                    c = o[0] || "xMidYMid",
                    u = c.substr(0, 4),
                    d = c.substr(4);
                  (i = r / n),
                    (a = this.transformCanvas.w / this.transformCanvas.h),
                    (a > i && l === "meet") || (a < i && l === "slice")
                      ? ((this.transformCanvas.sx =
                          r / (this.transformCanvas.w / this.renderConfig.dpr)),
                        (this.transformCanvas.sy =
                          r / (this.transformCanvas.w / this.renderConfig.dpr)))
                      : ((this.transformCanvas.sx =
                          n / (this.transformCanvas.h / this.renderConfig.dpr)),
                        (this.transformCanvas.sy =
                          n /
                          (this.transformCanvas.h / this.renderConfig.dpr))),
                    u === "xMid" &&
                    ((a < i && l === "meet") || (a > i && l === "slice"))
                      ? (this.transformCanvas.tx =
                          ((r -
                            this.transformCanvas.w *
                              (n / this.transformCanvas.h)) /
                            2) *
                          this.renderConfig.dpr)
                      : u === "xMax" &&
                        ((a < i && l === "meet") || (a > i && l === "slice"))
                      ? (this.transformCanvas.tx =
                          (r -
                            this.transformCanvas.w *
                              (n / this.transformCanvas.h)) *
                          this.renderConfig.dpr)
                      : (this.transformCanvas.tx = 0),
                    d === "YMid" &&
                    ((a > i && l === "meet") || (a < i && l === "slice"))
                      ? (this.transformCanvas.ty =
                          ((n -
                            this.transformCanvas.h *
                              (r / this.transformCanvas.w)) /
                            2) *
                          this.renderConfig.dpr)
                      : d === "YMax" &&
                        ((a > i && l === "meet") || (a < i && l === "slice"))
                      ? (this.transformCanvas.ty =
                          (n -
                            this.transformCanvas.h *
                              (r / this.transformCanvas.w)) *
                          this.renderConfig.dpr)
                      : (this.transformCanvas.ty = 0);
                } else
                  this.renderConfig.preserveAspectRatio === "none"
                    ? ((this.transformCanvas.sx =
                        r / (this.transformCanvas.w / this.renderConfig.dpr)),
                      (this.transformCanvas.sy =
                        n / (this.transformCanvas.h / this.renderConfig.dpr)),
                      (this.transformCanvas.tx = 0),
                      (this.transformCanvas.ty = 0))
                    : ((this.transformCanvas.sx = this.renderConfig.dpr),
                      (this.transformCanvas.sy = this.renderConfig.dpr),
                      (this.transformCanvas.tx = 0),
                      (this.transformCanvas.ty = 0));
                (this.transformCanvas.props = [
                  this.transformCanvas.sx,
                  0,
                  0,
                  0,
                  0,
                  this.transformCanvas.sy,
                  0,
                  0,
                  0,
                  0,
                  1,
                  0,
                  this.transformCanvas.tx,
                  this.transformCanvas.ty,
                  0,
                  1,
                ]),
                  this.ctxTransform(this.transformCanvas.props),
                  this.canvasContext.beginPath(),
                  this.canvasContext.rect(
                    0,
                    0,
                    this.transformCanvas.w,
                    this.transformCanvas.h
                  ),
                  this.canvasContext.closePath(),
                  this.canvasContext.clip(),
                  this.renderFrame(this.renderedFrame, !0);
              }),
              (CanvasRendererBase.prototype.destroy = function () {
                this.renderConfig.clearCanvas &&
                  this.animationItem.wrapper &&
                  (this.animationItem.wrapper.innerText = "");
                var e,
                  t = this.layers ? this.layers.length : 0;
                for (e = t - 1; e >= 0; e -= 1)
                  this.elements[e] &&
                    this.elements[e].destroy &&
                    this.elements[e].destroy();
                (this.elements.length = 0),
                  (this.globalData.canvasContext = null),
                  (this.animationItem.container = null),
                  (this.destroyed = !0);
              }),
              (CanvasRendererBase.prototype.renderFrame = function (e, t) {
                if (
                  !(
                    (this.renderedFrame === e &&
                      this.renderConfig.clearCanvas === !0 &&
                      !t) ||
                    this.destroyed ||
                    e === -1
                  )
                ) {
                  (this.renderedFrame = e),
                    (this.globalData.frameNum =
                      e - this.animationItem._isFirstFrame),
                    (this.globalData.frameId += 1),
                    (this.globalData._mdf =
                      !this.renderConfig.clearCanvas || t),
                    (this.globalData.projectInterface.currentFrame = e);
                  var r,
                    n = this.layers.length;
                  for (
                    this.completeLayers || this.checkLayers(e), r = n - 1;
                    r >= 0;
                    r -= 1
                  )
                    (this.completeLayers || this.elements[r]) &&
                      this.elements[r].prepareFrame(e - this.layers[r].st);
                  if (this.globalData._mdf) {
                    for (
                      this.renderConfig.clearCanvas === !0
                        ? this.canvasContext.clearRect(
                            0,
                            0,
                            this.transformCanvas.w,
                            this.transformCanvas.h
                          )
                        : this.save(),
                        r = n - 1;
                      r >= 0;
                      r -= 1
                    )
                      (this.completeLayers || this.elements[r]) &&
                        this.elements[r].renderFrame();
                    this.renderConfig.clearCanvas !== !0 && this.restore();
                  }
                }
              }),
              (CanvasRendererBase.prototype.buildItem = function (e) {
                var t = this.elements;
                if (!(t[e] || this.layers[e].ty === 99)) {
                  var r = this.createItem(
                    this.layers[e],
                    this,
                    this.globalData
                  );
                  (t[e] = r), r.initExpressions();
                }
              }),
              (CanvasRendererBase.prototype.checkPendingElements = function () {
                for (; this.pendingElements.length; ) {
                  var e = this.pendingElements.pop();
                  e.checkParenting();
                }
              }),
              (CanvasRendererBase.prototype.hide = function () {
                this.animationItem.container.style.display = "none";
              }),
              (CanvasRendererBase.prototype.show = function () {
                this.animationItem.container.style.display = "block";
              });
            function CanvasContext() {
              (this.opacity = -1),
                (this.transform = createTypedArray("float32", 16)),
                (this.fillStyle = ""),
                (this.strokeStyle = ""),
                (this.lineWidth = ""),
                (this.lineCap = ""),
                (this.lineJoin = ""),
                (this.miterLimit = ""),
                (this.id = Math.random());
            }
            function CVContextData() {
              (this.stack = []), (this.cArrPos = 0), (this.cTr = new Matrix());
              var e,
                t = 15;
              for (e = 0; e < t; e += 1) {
                var r = new CanvasContext();
                this.stack[e] = r;
              }
              (this._length = t),
                (this.nativeContext = null),
                (this.transformMat = new Matrix()),
                (this.currentOpacity = 1),
                (this.currentFillStyle = ""),
                (this.appliedFillStyle = ""),
                (this.currentStrokeStyle = ""),
                (this.appliedStrokeStyle = ""),
                (this.currentLineWidth = ""),
                (this.appliedLineWidth = ""),
                (this.currentLineCap = ""),
                (this.appliedLineCap = ""),
                (this.currentLineJoin = ""),
                (this.appliedLineJoin = ""),
                (this.appliedMiterLimit = ""),
                (this.currentMiterLimit = "");
            }
            (CVContextData.prototype.duplicate = function () {
              var e = this._length * 2,
                t = 0;
              for (t = this._length; t < e; t += 1)
                this.stack[t] = new CanvasContext();
              this._length = e;
            }),
              (CVContextData.prototype.reset = function () {
                (this.cArrPos = 0),
                  this.cTr.reset(),
                  (this.stack[this.cArrPos].opacity = 1);
              }),
              (CVContextData.prototype.restore = function (e) {
                this.cArrPos -= 1;
                var t = this.stack[this.cArrPos],
                  r = t.transform,
                  n,
                  i = this.cTr.props;
                for (n = 0; n < 16; n += 1) i[n] = r[n];
                if (e) {
                  this.nativeContext.restore();
                  var a = this.stack[this.cArrPos + 1];
                  (this.appliedFillStyle = a.fillStyle),
                    (this.appliedStrokeStyle = a.strokeStyle),
                    (this.appliedLineWidth = a.lineWidth),
                    (this.appliedLineCap = a.lineCap),
                    (this.appliedLineJoin = a.lineJoin),
                    (this.appliedMiterLimit = a.miterLimit);
                }
                this.nativeContext.setTransform(
                  r[0],
                  r[1],
                  r[4],
                  r[5],
                  r[12],
                  r[13]
                ),
                  (e ||
                    (t.opacity !== -1 && this.currentOpacity !== t.opacity)) &&
                    ((this.nativeContext.globalAlpha = t.opacity),
                    (this.currentOpacity = t.opacity)),
                  (this.currentFillStyle = t.fillStyle),
                  (this.currentStrokeStyle = t.strokeStyle),
                  (this.currentLineWidth = t.lineWidth),
                  (this.currentLineCap = t.lineCap),
                  (this.currentLineJoin = t.lineJoin),
                  (this.currentMiterLimit = t.miterLimit);
              }),
              (CVContextData.prototype.save = function (e) {
                e && this.nativeContext.save();
                var t = this.cTr.props;
                this._length <= this.cArrPos && this.duplicate();
                var r = this.stack[this.cArrPos],
                  n;
                for (n = 0; n < 16; n += 1) r.transform[n] = t[n];
                this.cArrPos += 1;
                var i = this.stack[this.cArrPos];
                (i.opacity = r.opacity),
                  (i.fillStyle = r.fillStyle),
                  (i.strokeStyle = r.strokeStyle),
                  (i.lineWidth = r.lineWidth),
                  (i.lineCap = r.lineCap),
                  (i.lineJoin = r.lineJoin),
                  (i.miterLimit = r.miterLimit);
              }),
              (CVContextData.prototype.setOpacity = function (e) {
                this.stack[this.cArrPos].opacity = e;
              }),
              (CVContextData.prototype.setContext = function (e) {
                this.nativeContext = e;
              }),
              (CVContextData.prototype.fillStyle = function (e) {
                this.stack[this.cArrPos].fillStyle !== e &&
                  ((this.currentFillStyle = e),
                  (this.stack[this.cArrPos].fillStyle = e));
              }),
              (CVContextData.prototype.strokeStyle = function (e) {
                this.stack[this.cArrPos].strokeStyle !== e &&
                  ((this.currentStrokeStyle = e),
                  (this.stack[this.cArrPos].strokeStyle = e));
              }),
              (CVContextData.prototype.lineWidth = function (e) {
                this.stack[this.cArrPos].lineWidth !== e &&
                  ((this.currentLineWidth = e),
                  (this.stack[this.cArrPos].lineWidth = e));
              }),
              (CVContextData.prototype.lineCap = function (e) {
                this.stack[this.cArrPos].lineCap !== e &&
                  ((this.currentLineCap = e),
                  (this.stack[this.cArrPos].lineCap = e));
              }),
              (CVContextData.prototype.lineJoin = function (e) {
                this.stack[this.cArrPos].lineJoin !== e &&
                  ((this.currentLineJoin = e),
                  (this.stack[this.cArrPos].lineJoin = e));
              }),
              (CVContextData.prototype.miterLimit = function (e) {
                this.stack[this.cArrPos].miterLimit !== e &&
                  ((this.currentMiterLimit = e),
                  (this.stack[this.cArrPos].miterLimit = e));
              }),
              (CVContextData.prototype.transform = function (e) {
                this.transformMat.cloneFromProps(e);
                var t = this.cTr;
                this.transformMat.multiply(t),
                  t.cloneFromProps(this.transformMat.props);
                var r = t.props;
                this.nativeContext.setTransform(
                  r[0],
                  r[1],
                  r[4],
                  r[5],
                  r[12],
                  r[13]
                );
              }),
              (CVContextData.prototype.opacity = function (e) {
                var t = this.stack[this.cArrPos].opacity;
                (t *= e < 0 ? 0 : e),
                  this.stack[this.cArrPos].opacity !== t &&
                    (this.currentOpacity !== e &&
                      ((this.nativeContext.globalAlpha = e),
                      (this.currentOpacity = e)),
                    (this.stack[this.cArrPos].opacity = t));
              }),
              (CVContextData.prototype.fill = function (e) {
                this.appliedFillStyle !== this.currentFillStyle &&
                  ((this.appliedFillStyle = this.currentFillStyle),
                  (this.nativeContext.fillStyle = this.appliedFillStyle)),
                  this.nativeContext.fill(e);
              }),
              (CVContextData.prototype.fillRect = function (e, t, r, n) {
                this.appliedFillStyle !== this.currentFillStyle &&
                  ((this.appliedFillStyle = this.currentFillStyle),
                  (this.nativeContext.fillStyle = this.appliedFillStyle)),
                  this.nativeContext.fillRect(e, t, r, n);
              }),
              (CVContextData.prototype.stroke = function () {
                this.appliedStrokeStyle !== this.currentStrokeStyle &&
                  ((this.appliedStrokeStyle = this.currentStrokeStyle),
                  (this.nativeContext.strokeStyle = this.appliedStrokeStyle)),
                  this.appliedLineWidth !== this.currentLineWidth &&
                    ((this.appliedLineWidth = this.currentLineWidth),
                    (this.nativeContext.lineWidth = this.appliedLineWidth)),
                  this.appliedLineCap !== this.currentLineCap &&
                    ((this.appliedLineCap = this.currentLineCap),
                    (this.nativeContext.lineCap = this.appliedLineCap)),
                  this.appliedLineJoin !== this.currentLineJoin &&
                    ((this.appliedLineJoin = this.currentLineJoin),
                    (this.nativeContext.lineJoin = this.appliedLineJoin)),
                  this.appliedMiterLimit !== this.currentMiterLimit &&
                    ((this.appliedMiterLimit = this.currentMiterLimit),
                    (this.nativeContext.miterLimit = this.appliedMiterLimit)),
                  this.nativeContext.stroke();
              });
            function CVCompElement(e, t, r) {
              (this.completeLayers = !1),
                (this.layers = e.layers),
                (this.pendingElements = []),
                (this.elements = createSizedArray(this.layers.length)),
                this.initElement(e, t, r),
                (this.tm = e.tm
                  ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this)
                  : { _placeholder: !0 });
            }
            extendPrototype(
              [CanvasRendererBase, ICompElement, CVBaseElement],
              CVCompElement
            ),
              (CVCompElement.prototype.renderInnerContent = function () {
                var e = this.canvasContext;
                e.beginPath(),
                  e.moveTo(0, 0),
                  e.lineTo(this.data.w, 0),
                  e.lineTo(this.data.w, this.data.h),
                  e.lineTo(0, this.data.h),
                  e.lineTo(0, 0),
                  e.clip();
                var t,
                  r = this.layers.length;
                for (t = r - 1; t >= 0; t -= 1)
                  (this.completeLayers || this.elements[t]) &&
                    this.elements[t].renderFrame();
              }),
              (CVCompElement.prototype.destroy = function () {
                var e,
                  t = this.layers.length;
                for (e = t - 1; e >= 0; e -= 1)
                  this.elements[e] && this.elements[e].destroy();
                (this.layers = null), (this.elements = null);
              }),
              (CVCompElement.prototype.createComp = function (e) {
                return new CVCompElement(e, this.globalData, this);
              });
            function CanvasRenderer(e, t) {
              (this.animationItem = e),
                (this.renderConfig = {
                  clearCanvas:
                    t && t.clearCanvas !== void 0 ? t.clearCanvas : !0,
                  context: (t && t.context) || null,
                  progressiveLoad: (t && t.progressiveLoad) || !1,
                  preserveAspectRatio:
                    (t && t.preserveAspectRatio) || "xMidYMid meet",
                  imagePreserveAspectRatio:
                    (t && t.imagePreserveAspectRatio) || "xMidYMid slice",
                  contentVisibility: (t && t.contentVisibility) || "visible",
                  className: (t && t.className) || "",
                  id: (t && t.id) || "",
                  runExpressions:
                    !t || t.runExpressions === void 0 || t.runExpressions,
                }),
                (this.renderConfig.dpr = (t && t.dpr) || 1),
                this.animationItem.wrapper &&
                  (this.renderConfig.dpr =
                    (t && t.dpr) || window.devicePixelRatio || 1),
                (this.renderedFrame = -1),
                (this.globalData = {
                  frameNum: -1,
                  _mdf: !1,
                  renderConfig: this.renderConfig,
                  currentGlobalAlpha: -1,
                }),
                (this.contextData = new CVContextData()),
                (this.elements = []),
                (this.pendingElements = []),
                (this.transformMat = new Matrix()),
                (this.completeLayers = !1),
                (this.rendererType = "canvas"),
                this.renderConfig.clearCanvas &&
                  ((this.ctxTransform = this.contextData.transform.bind(
                    this.contextData
                  )),
                  (this.ctxOpacity = this.contextData.opacity.bind(
                    this.contextData
                  )),
                  (this.ctxFillStyle = this.contextData.fillStyle.bind(
                    this.contextData
                  )),
                  (this.ctxStrokeStyle = this.contextData.strokeStyle.bind(
                    this.contextData
                  )),
                  (this.ctxLineWidth = this.contextData.lineWidth.bind(
                    this.contextData
                  )),
                  (this.ctxLineCap = this.contextData.lineCap.bind(
                    this.contextData
                  )),
                  (this.ctxLineJoin = this.contextData.lineJoin.bind(
                    this.contextData
                  )),
                  (this.ctxMiterLimit = this.contextData.miterLimit.bind(
                    this.contextData
                  )),
                  (this.ctxFill = this.contextData.fill.bind(this.contextData)),
                  (this.ctxFillRect = this.contextData.fillRect.bind(
                    this.contextData
                  )),
                  (this.ctxStroke = this.contextData.stroke.bind(
                    this.contextData
                  )),
                  (this.save = this.contextData.save.bind(this.contextData)));
            }
            extendPrototype([CanvasRendererBase], CanvasRenderer),
              (CanvasRenderer.prototype.createComp = function (e) {
                return new CVCompElement(e, this.globalData, this);
              });
            function HBaseElement() {}
            (HBaseElement.prototype = {
              checkBlendMode: function () {},
              initRendererElement: function () {
                (this.baseElement = createTag(this.data.tg || "div")),
                  this.data.hasMask
                    ? ((this.svgElement = createNS("svg")),
                      (this.layerElement = createNS("g")),
                      (this.maskedElement = this.layerElement),
                      this.svgElement.appendChild(this.layerElement),
                      this.baseElement.appendChild(this.svgElement))
                    : (this.layerElement = this.baseElement),
                  styleDiv(this.baseElement);
              },
              createContainerElements: function () {
                (this.renderableEffectsManager = new CVEffects(this)),
                  (this.transformedElement = this.baseElement),
                  (this.maskedElement = this.layerElement),
                  this.data.ln &&
                    this.layerElement.setAttribute("id", this.data.ln),
                  this.data.cl &&
                    this.layerElement.setAttribute("class", this.data.cl),
                  this.data.bm !== 0 && this.setBlendMode();
              },
              renderElement: function () {
                var t = this.transformedElement
                  ? this.transformedElement.style
                  : {};
                if (this.finalTransform._matMdf) {
                  var r = this.finalTransform.mat.toCSS();
                  (t.transform = r), (t.webkitTransform = r);
                }
                this.finalTransform._opMdf &&
                  (t.opacity = this.finalTransform.mProp.o.v);
              },
              renderFrame: function () {
                this.data.hd ||
                  this.hidden ||
                  (this.renderTransform(),
                  this.renderRenderable(),
                  this.renderElement(),
                  this.renderInnerContent(),
                  this._isFirstFrame && (this._isFirstFrame = !1));
              },
              destroy: function () {
                (this.layerElement = null),
                  (this.transformedElement = null),
                  this.matteElement && (this.matteElement = null),
                  this.maskManager &&
                    (this.maskManager.destroy(), (this.maskManager = null));
              },
              createRenderableComponents: function () {
                this.maskManager = new MaskElement(
                  this.data,
                  this,
                  this.globalData
                );
              },
              addEffects: function () {},
              setMatte: function () {},
            }),
              (HBaseElement.prototype.getBaseElement =
                SVGBaseElement.prototype.getBaseElement),
              (HBaseElement.prototype.destroyBaseElement =
                HBaseElement.prototype.destroy),
              (HBaseElement.prototype.buildElementParenting =
                BaseRenderer.prototype.buildElementParenting);
            function HSolidElement(e, t, r) {
              this.initElement(e, t, r);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                HBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
              ],
              HSolidElement
            ),
              (HSolidElement.prototype.createContent = function () {
                var e;
                this.data.hasMask
                  ? ((e = createNS("rect")),
                    e.setAttribute("width", this.data.sw),
                    e.setAttribute("height", this.data.sh),
                    e.setAttribute("fill", this.data.sc),
                    this.svgElement.setAttribute("width", this.data.sw),
                    this.svgElement.setAttribute("height", this.data.sh))
                  : ((e = createTag("div")),
                    (e.style.width = this.data.sw + "px"),
                    (e.style.height = this.data.sh + "px"),
                    (e.style.backgroundColor = this.data.sc)),
                  this.layerElement.appendChild(e);
              });
            function HShapeElement(e, t, r) {
              (this.shapes = []),
                (this.shapesData = e.shapes),
                (this.stylesList = []),
                (this.shapeModifiers = []),
                (this.itemsData = []),
                (this.processedElements = []),
                (this.animatedContents = []),
                (this.shapesContainer = createNS("g")),
                this.initElement(e, t, r),
                (this.prevViewData = []),
                (this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 });
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                HSolidElement,
                SVGShapeElement,
                HBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
              ],
              HShapeElement
            ),
              (HShapeElement.prototype._renderShapeFrame =
                HShapeElement.prototype.renderInnerContent),
              (HShapeElement.prototype.createContent = function () {
                var e;
                if (((this.baseElement.style.fontSize = 0), this.data.hasMask))
                  this.layerElement.appendChild(this.shapesContainer),
                    (e = this.svgElement);
                else {
                  e = createNS("svg");
                  var t = this.comp.data
                    ? this.comp.data
                    : this.globalData.compSize;
                  e.setAttribute("width", t.w),
                    e.setAttribute("height", t.h),
                    e.appendChild(this.shapesContainer),
                    this.layerElement.appendChild(e);
                }
                this.searchShapes(
                  this.shapesData,
                  this.itemsData,
                  this.prevViewData,
                  this.shapesContainer,
                  0,
                  [],
                  !0
                ),
                  this.filterUniqueShapes(),
                  (this.shapeCont = e);
              }),
              (HShapeElement.prototype.getTransformedPoint = function (e, t) {
                var r,
                  n = e.length;
                for (r = 0; r < n; r += 1)
                  t = e[r].mProps.v.applyToPointArray(t[0], t[1], 0);
                return t;
              }),
              (HShapeElement.prototype.calculateShapeBoundingBox = function (
                e,
                t
              ) {
                var r = e.sh.v,
                  n = e.transformers,
                  i,
                  a = r._length,
                  o,
                  l,
                  c,
                  u;
                if (!(a <= 1)) {
                  for (i = 0; i < a - 1; i += 1)
                    (o = this.getTransformedPoint(n, r.v[i])),
                      (l = this.getTransformedPoint(n, r.o[i])),
                      (c = this.getTransformedPoint(n, r.i[i + 1])),
                      (u = this.getTransformedPoint(n, r.v[i + 1])),
                      this.checkBounds(o, l, c, u, t);
                  r.c &&
                    ((o = this.getTransformedPoint(n, r.v[i])),
                    (l = this.getTransformedPoint(n, r.o[i])),
                    (c = this.getTransformedPoint(n, r.i[0])),
                    (u = this.getTransformedPoint(n, r.v[0])),
                    this.checkBounds(o, l, c, u, t));
                }
              }),
              (HShapeElement.prototype.checkBounds = function (e, t, r, n, i) {
                this.getBoundsOfCurve(e, t, r, n);
                var a = this.shapeBoundingBox;
                (i.x = bmMin(a.left, i.x)),
                  (i.xMax = bmMax(a.right, i.xMax)),
                  (i.y = bmMin(a.top, i.y)),
                  (i.yMax = bmMax(a.bottom, i.yMax));
              }),
              (HShapeElement.prototype.shapeBoundingBox = {
                left: 0,
                right: 0,
                top: 0,
                bottom: 0,
              }),
              (HShapeElement.prototype.tempBoundingBox = {
                x: 0,
                xMax: 0,
                y: 0,
                yMax: 0,
                width: 0,
                height: 0,
              }),
              (HShapeElement.prototype.getBoundsOfCurve = function (
                e,
                t,
                r,
                n
              ) {
                for (
                  var i = [
                      [e[0], n[0]],
                      [e[1], n[1]],
                    ],
                    a,
                    o,
                    l,
                    c,
                    u,
                    d,
                    E,
                    b = 0;
                  b < 2;
                  ++b
                )
                  (o = 6 * e[b] - 12 * t[b] + 6 * r[b]),
                    (a = -3 * e[b] + 9 * t[b] - 9 * r[b] + 3 * n[b]),
                    (l = 3 * t[b] - 3 * e[b]),
                    (o |= 0),
                    (a |= 0),
                    (l |= 0),
                    (a === 0 && o === 0) ||
                      (a === 0
                        ? ((c = -l / o),
                          c > 0 &&
                            c < 1 &&
                            i[b].push(this.calculateF(c, e, t, r, n, b)))
                        : ((u = o * o - 4 * l * a),
                          u >= 0 &&
                            ((d = (-o + bmSqrt(u)) / (2 * a)),
                            d > 0 &&
                              d < 1 &&
                              i[b].push(this.calculateF(d, e, t, r, n, b)),
                            (E = (-o - bmSqrt(u)) / (2 * a)),
                            E > 0 &&
                              E < 1 &&
                              i[b].push(this.calculateF(E, e, t, r, n, b)))));
                (this.shapeBoundingBox.left = bmMin.apply(null, i[0])),
                  (this.shapeBoundingBox.top = bmMin.apply(null, i[1])),
                  (this.shapeBoundingBox.right = bmMax.apply(null, i[0])),
                  (this.shapeBoundingBox.bottom = bmMax.apply(null, i[1]));
              }),
              (HShapeElement.prototype.calculateF = function (
                e,
                t,
                r,
                n,
                i,
                a
              ) {
                return (
                  bmPow(1 - e, 3) * t[a] +
                  3 * bmPow(1 - e, 2) * e * r[a] +
                  3 * (1 - e) * bmPow(e, 2) * n[a] +
                  bmPow(e, 3) * i[a]
                );
              }),
              (HShapeElement.prototype.calculateBoundingBox = function (e, t) {
                var r,
                  n = e.length;
                for (r = 0; r < n; r += 1)
                  e[r] && e[r].sh
                    ? this.calculateShapeBoundingBox(e[r], t)
                    : e[r] && e[r].it
                    ? this.calculateBoundingBox(e[r].it, t)
                    : e[r] &&
                      e[r].style &&
                      e[r].w &&
                      this.expandStrokeBoundingBox(e[r].w, t);
              }),
              (HShapeElement.prototype.expandStrokeBoundingBox = function (
                e,
                t
              ) {
                var r = 0;
                if (e.keyframes) {
                  for (var n = 0; n < e.keyframes.length; n += 1) {
                    var i = e.keyframes[n].s;
                    i > r && (r = i);
                  }
                  r *= e.mult;
                } else r = e.v * e.mult;
                (t.x -= r), (t.xMax += r), (t.y -= r), (t.yMax += r);
              }),
              (HShapeElement.prototype.currentBoxContains = function (e) {
                return (
                  this.currentBBox.x <= e.x &&
                  this.currentBBox.y <= e.y &&
                  this.currentBBox.width + this.currentBBox.x >=
                    e.x + e.width &&
                  this.currentBBox.height + this.currentBBox.y >= e.y + e.height
                );
              }),
              (HShapeElement.prototype.renderInnerContent = function () {
                if (
                  (this._renderShapeFrame(),
                  !this.hidden && (this._isFirstFrame || this._mdf))
                ) {
                  var e = this.tempBoundingBox,
                    t = 999999;
                  if (
                    ((e.x = t),
                    (e.xMax = -t),
                    (e.y = t),
                    (e.yMax = -t),
                    this.calculateBoundingBox(this.itemsData, e),
                    (e.width = e.xMax < e.x ? 0 : e.xMax - e.x),
                    (e.height = e.yMax < e.y ? 0 : e.yMax - e.y),
                    this.currentBoxContains(e))
                  )
                    return;
                  var r = !1;
                  if (
                    (this.currentBBox.w !== e.width &&
                      ((this.currentBBox.w = e.width),
                      this.shapeCont.setAttribute("width", e.width),
                      (r = !0)),
                    this.currentBBox.h !== e.height &&
                      ((this.currentBBox.h = e.height),
                      this.shapeCont.setAttribute("height", e.height),
                      (r = !0)),
                    r ||
                      this.currentBBox.x !== e.x ||
                      this.currentBBox.y !== e.y)
                  ) {
                    (this.currentBBox.w = e.width),
                      (this.currentBBox.h = e.height),
                      (this.currentBBox.x = e.x),
                      (this.currentBBox.y = e.y),
                      this.shapeCont.setAttribute(
                        "viewBox",
                        this.currentBBox.x +
                          " " +
                          this.currentBBox.y +
                          " " +
                          this.currentBBox.w +
                          " " +
                          this.currentBBox.h
                      );
                    var n = this.shapeCont.style,
                      i =
                        "translate(" +
                        this.currentBBox.x +
                        "px," +
                        this.currentBBox.y +
                        "px)";
                    (n.transform = i), (n.webkitTransform = i);
                  }
                }
              });
            function HTextElement(e, t, r) {
              (this.textSpans = []),
                (this.textPaths = []),
                (this.currentBBox = { x: 999999, y: -999999, h: 0, w: 0 }),
                (this.renderType = "svg"),
                (this.isMasked = !1),
                this.initElement(e, t, r);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                HBaseElement,
                HierarchyElement,
                FrameElement,
                RenderableDOMElement,
                ITextElement,
              ],
              HTextElement
            ),
              (HTextElement.prototype.createContent = function () {
                if (((this.isMasked = this.checkMasks()), this.isMasked)) {
                  (this.renderType = "svg"),
                    (this.compW = this.comp.data.w),
                    (this.compH = this.comp.data.h),
                    this.svgElement.setAttribute("width", this.compW),
                    this.svgElement.setAttribute("height", this.compH);
                  var e = createNS("g");
                  this.maskedElement.appendChild(e), (this.innerElem = e);
                } else
                  (this.renderType = "html"),
                    (this.innerElem = this.layerElement);
                this.checkParenting();
              }),
              (HTextElement.prototype.buildNewText = function () {
                var e = this.textProperty.currentData;
                this.renderedLetters = createSizedArray(e.l ? e.l.length : 0);
                var t = this.innerElem.style,
                  r = e.fc ? this.buildColor(e.fc) : "rgba(0,0,0,0)";
                (t.fill = r),
                  (t.color = r),
                  e.sc &&
                    ((t.stroke = this.buildColor(e.sc)),
                    (t.strokeWidth = e.sw + "px"));
                var n = this.globalData.fontManager.getFontByName(e.f);
                if (!this.globalData.fontManager.chars)
                  if (
                    ((t.fontSize = e.finalSize + "px"),
                    (t.lineHeight = e.finalSize + "px"),
                    n.fClass)
                  )
                    this.innerElem.className = n.fClass;
                  else {
                    t.fontFamily = n.fFamily;
                    var i = e.fWeight,
                      a = e.fStyle;
                    (t.fontStyle = a), (t.fontWeight = i);
                  }
                var o,
                  l,
                  c = e.l;
                l = c.length;
                var u,
                  d,
                  E,
                  b = this.mHelper,
                  P,
                  R = "",
                  T = 0;
                for (o = 0; o < l; o += 1) {
                  if (
                    (this.globalData.fontManager.chars
                      ? (this.textPaths[T]
                          ? (u = this.textPaths[T])
                          : ((u = createNS("path")),
                            u.setAttribute("stroke-linecap", lineCapEnum[1]),
                            u.setAttribute("stroke-linejoin", lineJoinEnum[2]),
                            u.setAttribute("stroke-miterlimit", "4")),
                        this.isMasked ||
                          (this.textSpans[T]
                            ? ((d = this.textSpans[T]), (E = d.children[0]))
                            : ((d = createTag("div")),
                              (d.style.lineHeight = 0),
                              (E = createNS("svg")),
                              E.appendChild(u),
                              styleDiv(d))))
                      : this.isMasked
                      ? (u = this.textPaths[T]
                          ? this.textPaths[T]
                          : createNS("text"))
                      : this.textSpans[T]
                      ? ((d = this.textSpans[T]), (u = this.textPaths[T]))
                      : ((d = createTag("span")),
                        styleDiv(d),
                        (u = createTag("span")),
                        styleDiv(u),
                        d.appendChild(u)),
                    this.globalData.fontManager.chars)
                  ) {
                    var M = this.globalData.fontManager.getCharData(
                        e.finalText[o],
                        n.fStyle,
                        this.globalData.fontManager.getFontByName(e.f).fFamily
                      ),
                      x;
                    if (
                      (M ? (x = M.data) : (x = null),
                      b.reset(),
                      x &&
                        x.shapes &&
                        x.shapes.length &&
                        ((P = x.shapes[0].it),
                        b.scale(e.finalSize / 100, e.finalSize / 100),
                        (R = this.createPathShape(b, P)),
                        u.setAttribute("d", R)),
                      this.isMasked)
                    )
                      this.innerElem.appendChild(u);
                    else {
                      if ((this.innerElem.appendChild(d), x && x.shapes)) {
                        document.body.appendChild(E);
                        var k = E.getBBox();
                        E.setAttribute("width", k.width + 2),
                          E.setAttribute("height", k.height + 2),
                          E.setAttribute(
                            "viewBox",
                            k.x -
                              1 +
                              " " +
                              (k.y - 1) +
                              " " +
                              (k.width + 2) +
                              " " +
                              (k.height + 2)
                          );
                        var S = E.style,
                          A =
                            "translate(" +
                            (k.x - 1) +
                            "px," +
                            (k.y - 1) +
                            "px)";
                        (S.transform = A),
                          (S.webkitTransform = A),
                          (c[o].yOffset = k.y - 1);
                      } else
                        E.setAttribute("width", 1), E.setAttribute("height", 1);
                      d.appendChild(E);
                    }
                  } else if (
                    ((u.textContent = c[o].val),
                    u.setAttributeNS(
                      "http://www.w3.org/XML/1998/namespace",
                      "xml:space",
                      "preserve"
                    ),
                    this.isMasked)
                  )
                    this.innerElem.appendChild(u);
                  else {
                    this.innerElem.appendChild(d);
                    var O = u.style,
                      F = "translate3d(0," + -e.finalSize / 1.2 + "px,0)";
                    (O.transform = F), (O.webkitTransform = F);
                  }
                  this.isMasked
                    ? (this.textSpans[T] = u)
                    : (this.textSpans[T] = d),
                    (this.textSpans[T].style.display = "block"),
                    (this.textPaths[T] = u),
                    (T += 1);
                }
                for (; T < this.textSpans.length; )
                  (this.textSpans[T].style.display = "none"), (T += 1);
              }),
              (HTextElement.prototype.renderInnerContent = function () {
                this.validateText();
                var e;
                if (this.data.singleShape) {
                  if (!this._isFirstFrame && !this.lettersChangedFlag) return;
                  if (this.isMasked && this.finalTransform._matMdf) {
                    this.svgElement.setAttribute(
                      "viewBox",
                      -this.finalTransform.mProp.p.v[0] +
                        " " +
                        -this.finalTransform.mProp.p.v[1] +
                        " " +
                        this.compW +
                        " " +
                        this.compH
                    ),
                      (e = this.svgElement.style);
                    var t =
                      "translate(" +
                      -this.finalTransform.mProp.p.v[0] +
                      "px," +
                      -this.finalTransform.mProp.p.v[1] +
                      "px)";
                    (e.transform = t), (e.webkitTransform = t);
                  }
                }
                if (
                  (this.textAnimator.getMeasures(
                    this.textProperty.currentData,
                    this.lettersChangedFlag
                  ),
                  !(
                    !this.lettersChangedFlag &&
                    !this.textAnimator.lettersChangedFlag
                  ))
                ) {
                  var r,
                    n,
                    i = 0,
                    a = this.textAnimator.renderedLetters,
                    o = this.textProperty.currentData.l;
                  n = o.length;
                  var l, c, u;
                  for (r = 0; r < n; r += 1)
                    o[r].n
                      ? (i += 1)
                      : ((c = this.textSpans[r]),
                        (u = this.textPaths[r]),
                        (l = a[i]),
                        (i += 1),
                        l._mdf.m &&
                          (this.isMasked
                            ? c.setAttribute("transform", l.m)
                            : ((c.style.webkitTransform = l.m),
                              (c.style.transform = l.m))),
                        (c.style.opacity = l.o),
                        l.sw &&
                          l._mdf.sw &&
                          u.setAttribute("stroke-width", l.sw),
                        l.sc && l._mdf.sc && u.setAttribute("stroke", l.sc),
                        l.fc &&
                          l._mdf.fc &&
                          (u.setAttribute("fill", l.fc),
                          (u.style.color = l.fc)));
                  if (
                    this.innerElem.getBBox &&
                    !this.hidden &&
                    (this._isFirstFrame || this._mdf)
                  ) {
                    var d = this.innerElem.getBBox();
                    this.currentBBox.w !== d.width &&
                      ((this.currentBBox.w = d.width),
                      this.svgElement.setAttribute("width", d.width)),
                      this.currentBBox.h !== d.height &&
                        ((this.currentBBox.h = d.height),
                        this.svgElement.setAttribute("height", d.height));
                    var E = 1;
                    if (
                      this.currentBBox.w !== d.width + E * 2 ||
                      this.currentBBox.h !== d.height + E * 2 ||
                      this.currentBBox.x !== d.x - E ||
                      this.currentBBox.y !== d.y - E
                    ) {
                      (this.currentBBox.w = d.width + E * 2),
                        (this.currentBBox.h = d.height + E * 2),
                        (this.currentBBox.x = d.x - E),
                        (this.currentBBox.y = d.y - E),
                        this.svgElement.setAttribute(
                          "viewBox",
                          this.currentBBox.x +
                            " " +
                            this.currentBBox.y +
                            " " +
                            this.currentBBox.w +
                            " " +
                            this.currentBBox.h
                        ),
                        (e = this.svgElement.style);
                      var b =
                        "translate(" +
                        this.currentBBox.x +
                        "px," +
                        this.currentBBox.y +
                        "px)";
                      (e.transform = b), (e.webkitTransform = b);
                    }
                  }
                }
              });
            function HCameraElement(e, t, r) {
              this.initFrame(),
                this.initBaseData(e, t, r),
                this.initHierarchy();
              var n = PropertyFactory.getProp;
              if (
                ((this.pe = n(this, e.pe, 0, 0, this)),
                e.ks.p.s
                  ? ((this.px = n(this, e.ks.p.x, 1, 0, this)),
                    (this.py = n(this, e.ks.p.y, 1, 0, this)),
                    (this.pz = n(this, e.ks.p.z, 1, 0, this)))
                  : (this.p = n(this, e.ks.p, 1, 0, this)),
                e.ks.a && (this.a = n(this, e.ks.a, 1, 0, this)),
                e.ks.or.k.length && e.ks.or.k[0].to)
              ) {
                var i,
                  a = e.ks.or.k.length;
                for (i = 0; i < a; i += 1)
                  (e.ks.or.k[i].to = null), (e.ks.or.k[i].ti = null);
              }
              (this.or = n(this, e.ks.or, 1, degToRads, this)),
                (this.or.sh = !0),
                (this.rx = n(this, e.ks.rx, 0, degToRads, this)),
                (this.ry = n(this, e.ks.ry, 0, degToRads, this)),
                (this.rz = n(this, e.ks.rz, 0, degToRads, this)),
                (this.mat = new Matrix()),
                (this._prevMat = new Matrix()),
                (this._isFirstFrame = !0),
                (this.finalTransform = { mProp: this });
            }
            extendPrototype(
              [BaseElement, FrameElement, HierarchyElement],
              HCameraElement
            ),
              (HCameraElement.prototype.setup = function () {
                var e,
                  t = this.comp.threeDElements.length,
                  r,
                  n,
                  i;
                for (e = 0; e < t; e += 1)
                  if (((r = this.comp.threeDElements[e]), r.type === "3d")) {
                    (n = r.perspectiveElem.style), (i = r.container.style);
                    var a = this.pe.v + "px",
                      o = "0px 0px 0px",
                      l = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                    (n.perspective = a),
                      (n.webkitPerspective = a),
                      (i.transformOrigin = o),
                      (i.mozTransformOrigin = o),
                      (i.webkitTransformOrigin = o),
                      (n.transform = l),
                      (n.webkitTransform = l);
                  }
              }),
              (HCameraElement.prototype.createElements = function () {}),
              (HCameraElement.prototype.hide = function () {}),
              (HCameraElement.prototype.renderFrame = function () {
                var e = this._isFirstFrame,
                  t,
                  r;
                if (this.hierarchy)
                  for (r = this.hierarchy.length, t = 0; t < r; t += 1)
                    e = this.hierarchy[t].finalTransform.mProp._mdf || e;
                if (
                  e ||
                  this.pe._mdf ||
                  (this.p && this.p._mdf) ||
                  (this.px && (this.px._mdf || this.py._mdf || this.pz._mdf)) ||
                  this.rx._mdf ||
                  this.ry._mdf ||
                  this.rz._mdf ||
                  this.or._mdf ||
                  (this.a && this.a._mdf)
                ) {
                  if ((this.mat.reset(), this.hierarchy))
                    for (r = this.hierarchy.length - 1, t = r; t >= 0; t -= 1) {
                      var n = this.hierarchy[t].finalTransform.mProp;
                      this.mat.translate(-n.p.v[0], -n.p.v[1], n.p.v[2]),
                        this.mat
                          .rotateX(-n.or.v[0])
                          .rotateY(-n.or.v[1])
                          .rotateZ(n.or.v[2]),
                        this.mat
                          .rotateX(-n.rx.v)
                          .rotateY(-n.ry.v)
                          .rotateZ(n.rz.v),
                        this.mat.scale(
                          1 / n.s.v[0],
                          1 / n.s.v[1],
                          1 / n.s.v[2]
                        ),
                        this.mat.translate(n.a.v[0], n.a.v[1], n.a.v[2]);
                    }
                  if (
                    (this.p
                      ? this.mat.translate(
                          -this.p.v[0],
                          -this.p.v[1],
                          this.p.v[2]
                        )
                      : this.mat.translate(-this.px.v, -this.py.v, this.pz.v),
                    this.a)
                  ) {
                    var i;
                    this.p
                      ? (i = [
                          this.p.v[0] - this.a.v[0],
                          this.p.v[1] - this.a.v[1],
                          this.p.v[2] - this.a.v[2],
                        ])
                      : (i = [
                          this.px.v - this.a.v[0],
                          this.py.v - this.a.v[1],
                          this.pz.v - this.a.v[2],
                        ]);
                    var a = Math.sqrt(
                        Math.pow(i[0], 2) +
                          Math.pow(i[1], 2) +
                          Math.pow(i[2], 2)
                      ),
                      o = [i[0] / a, i[1] / a, i[2] / a],
                      l = Math.sqrt(o[2] * o[2] + o[0] * o[0]),
                      c = Math.atan2(o[1], l),
                      u = Math.atan2(o[0], -o[2]);
                    this.mat.rotateY(u).rotateX(-c);
                  }
                  this.mat
                    .rotateX(-this.rx.v)
                    .rotateY(-this.ry.v)
                    .rotateZ(this.rz.v),
                    this.mat
                      .rotateX(-this.or.v[0])
                      .rotateY(-this.or.v[1])
                      .rotateZ(this.or.v[2]),
                    this.mat.translate(
                      this.globalData.compSize.w / 2,
                      this.globalData.compSize.h / 2,
                      0
                    ),
                    this.mat.translate(0, 0, this.pe.v);
                  var d = !this._prevMat.equals(this.mat);
                  if ((d || this.pe._mdf) && this.comp.threeDElements) {
                    r = this.comp.threeDElements.length;
                    var E, b, P;
                    for (t = 0; t < r; t += 1)
                      if (
                        ((E = this.comp.threeDElements[t]), E.type === "3d")
                      ) {
                        if (d) {
                          var R = this.mat.toCSS();
                          (P = E.container.style),
                            (P.transform = R),
                            (P.webkitTransform = R);
                        }
                        this.pe._mdf &&
                          ((b = E.perspectiveElem.style),
                          (b.perspective = this.pe.v + "px"),
                          (b.webkitPerspective = this.pe.v + "px"));
                      }
                    this.mat.clone(this._prevMat);
                  }
                }
                this._isFirstFrame = !1;
              }),
              (HCameraElement.prototype.prepareFrame = function (e) {
                this.prepareProperties(e, !0);
              }),
              (HCameraElement.prototype.destroy = function () {}),
              (HCameraElement.prototype.getBaseElement = function () {
                return null;
              });
            function HImageElement(e, t, r) {
              (this.assetData = t.getAssetData(e.refId)),
                this.initElement(e, t, r);
            }
            extendPrototype(
              [
                BaseElement,
                TransformElement,
                HBaseElement,
                HSolidElement,
                HierarchyElement,
                FrameElement,
                RenderableElement,
              ],
              HImageElement
            ),
              (HImageElement.prototype.createContent = function () {
                var e = this.globalData.getAssetsPath(this.assetData),
                  t = new Image();
                this.data.hasMask
                  ? ((this.imageElem = createNS("image")),
                    this.imageElem.setAttribute(
                      "width",
                      this.assetData.w + "px"
                    ),
                    this.imageElem.setAttribute(
                      "height",
                      this.assetData.h + "px"
                    ),
                    this.imageElem.setAttributeNS(
                      "http://www.w3.org/1999/xlink",
                      "href",
                      e
                    ),
                    this.layerElement.appendChild(this.imageElem),
                    this.baseElement.setAttribute("width", this.assetData.w),
                    this.baseElement.setAttribute("height", this.assetData.h))
                  : this.layerElement.appendChild(t),
                  (t.crossOrigin = "anonymous"),
                  (t.src = e),
                  this.data.ln &&
                    this.baseElement.setAttribute("id", this.data.ln);
              });
            function HybridRendererBase(e, t) {
              (this.animationItem = e),
                (this.layers = null),
                (this.renderedFrame = -1),
                (this.renderConfig = {
                  className: (t && t.className) || "",
                  imagePreserveAspectRatio:
                    (t && t.imagePreserveAspectRatio) || "xMidYMid slice",
                  hideOnTransparent: !(t && t.hideOnTransparent === !1),
                  filterSize: {
                    width: (t && t.filterSize && t.filterSize.width) || "400%",
                    height:
                      (t && t.filterSize && t.filterSize.height) || "400%",
                    x: (t && t.filterSize && t.filterSize.x) || "-100%",
                    y: (t && t.filterSize && t.filterSize.y) || "-100%",
                  },
                }),
                (this.globalData = {
                  _mdf: !1,
                  frameNum: -1,
                  renderConfig: this.renderConfig,
                }),
                (this.pendingElements = []),
                (this.elements = []),
                (this.threeDElements = []),
                (this.destroyed = !1),
                (this.camera = null),
                (this.supports3d = !0),
                (this.rendererType = "html");
            }
            extendPrototype([BaseRenderer], HybridRendererBase),
              (HybridRendererBase.prototype.buildItem =
                SVGRenderer.prototype.buildItem),
              (HybridRendererBase.prototype.checkPendingElements = function () {
                for (; this.pendingElements.length; ) {
                  var e = this.pendingElements.pop();
                  e.checkParenting();
                }
              }),
              (HybridRendererBase.prototype.appendElementInPos = function (
                e,
                t
              ) {
                var r = e.getBaseElement();
                if (r) {
                  var n = this.layers[t];
                  if (!n.ddd || !this.supports3d)
                    if (this.threeDElements) this.addTo3dContainer(r, t);
                    else {
                      for (var i = 0, a, o, l; i < t; )
                        this.elements[i] &&
                          this.elements[i] !== !0 &&
                          this.elements[i].getBaseElement &&
                          ((o = this.elements[i]),
                          (l = this.layers[i].ddd
                            ? this.getThreeDContainerByPos(i)
                            : o.getBaseElement()),
                          (a = l || a)),
                          (i += 1);
                      a
                        ? (!n.ddd || !this.supports3d) &&
                          this.layerElement.insertBefore(r, a)
                        : (!n.ddd || !this.supports3d) &&
                          this.layerElement.appendChild(r);
                    }
                  else this.addTo3dContainer(r, t);
                }
              }),
              (HybridRendererBase.prototype.createShape = function (e) {
                return this.supports3d
                  ? new HShapeElement(e, this.globalData, this)
                  : new SVGShapeElement(e, this.globalData, this);
              }),
              (HybridRendererBase.prototype.createText = function (e) {
                return this.supports3d
                  ? new HTextElement(e, this.globalData, this)
                  : new SVGTextLottieElement(e, this.globalData, this);
              }),
              (HybridRendererBase.prototype.createCamera = function (e) {
                return (
                  (this.camera = new HCameraElement(e, this.globalData, this)),
                  this.camera
                );
              }),
              (HybridRendererBase.prototype.createImage = function (e) {
                return this.supports3d
                  ? new HImageElement(e, this.globalData, this)
                  : new IImageElement(e, this.globalData, this);
              }),
              (HybridRendererBase.prototype.createSolid = function (e) {
                return this.supports3d
                  ? new HSolidElement(e, this.globalData, this)
                  : new ISolidElement(e, this.globalData, this);
              }),
              (HybridRendererBase.prototype.createNull =
                SVGRenderer.prototype.createNull),
              (HybridRendererBase.prototype.getThreeDContainerByPos = function (
                e
              ) {
                for (var t = 0, r = this.threeDElements.length; t < r; ) {
                  if (
                    this.threeDElements[t].startPos <= e &&
                    this.threeDElements[t].endPos >= e
                  )
                    return this.threeDElements[t].perspectiveElem;
                  t += 1;
                }
                return null;
              }),
              (HybridRendererBase.prototype.createThreeDContainer = function (
                e,
                t
              ) {
                var r = createTag("div"),
                  n,
                  i;
                styleDiv(r);
                var a = createTag("div");
                if ((styleDiv(a), t === "3d")) {
                  (n = r.style),
                    (n.width = this.globalData.compSize.w + "px"),
                    (n.height = this.globalData.compSize.h + "px");
                  var o = "50% 50%";
                  (n.webkitTransformOrigin = o),
                    (n.mozTransformOrigin = o),
                    (n.transformOrigin = o),
                    (i = a.style);
                  var l = "matrix3d(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1)";
                  (i.transform = l), (i.webkitTransform = l);
                }
                r.appendChild(a);
                var c = {
                  container: a,
                  perspectiveElem: r,
                  startPos: e,
                  endPos: e,
                  type: t,
                };
                return this.threeDElements.push(c), c;
              }),
              (HybridRendererBase.prototype.build3dContainers = function () {
                var e,
                  t = this.layers.length,
                  r,
                  n = "";
                for (e = 0; e < t; e += 1)
                  this.layers[e].ddd && this.layers[e].ty !== 3
                    ? (n !== "3d" &&
                        ((n = "3d"), (r = this.createThreeDContainer(e, "3d"))),
                      (r.endPos = Math.max(r.endPos, e)))
                    : (n !== "2d" &&
                        ((n = "2d"), (r = this.createThreeDContainer(e, "2d"))),
                      (r.endPos = Math.max(r.endPos, e)));
                for (t = this.threeDElements.length, e = t - 1; e >= 0; e -= 1)
                  this.resizerElem.appendChild(
                    this.threeDElements[e].perspectiveElem
                  );
              }),
              (HybridRendererBase.prototype.addTo3dContainer = function (e, t) {
                for (var r = 0, n = this.threeDElements.length; r < n; ) {
                  if (t <= this.threeDElements[r].endPos) {
                    for (var i = this.threeDElements[r].startPos, a; i < t; )
                      this.elements[i] &&
                        this.elements[i].getBaseElement &&
                        (a = this.elements[i].getBaseElement()),
                        (i += 1);
                    a
                      ? this.threeDElements[r].container.insertBefore(e, a)
                      : this.threeDElements[r].container.appendChild(e);
                    break;
                  }
                  r += 1;
                }
              }),
              (HybridRendererBase.prototype.configAnimation = function (e) {
                var t = createTag("div"),
                  r = this.animationItem.wrapper,
                  n = t.style;
                (n.width = e.w + "px"),
                  (n.height = e.h + "px"),
                  (this.resizerElem = t),
                  styleDiv(t),
                  (n.transformStyle = "flat"),
                  (n.mozTransformStyle = "flat"),
                  (n.webkitTransformStyle = "flat"),
                  this.renderConfig.className &&
                    t.setAttribute("class", this.renderConfig.className),
                  r.appendChild(t),
                  (n.overflow = "hidden");
                var i = createNS("svg");
                i.setAttribute("width", "1"),
                  i.setAttribute("height", "1"),
                  styleDiv(i),
                  this.resizerElem.appendChild(i);
                var a = createNS("defs");
                i.appendChild(a),
                  (this.data = e),
                  this.setupGlobalData(e, i),
                  (this.globalData.defs = a),
                  (this.layers = e.layers),
                  (this.layerElement = this.resizerElem),
                  this.build3dContainers(),
                  this.updateContainerSize();
              }),
              (HybridRendererBase.prototype.destroy = function () {
                this.animationItem.wrapper &&
                  (this.animationItem.wrapper.innerText = ""),
                  (this.animationItem.container = null),
                  (this.globalData.defs = null);
                var e,
                  t = this.layers ? this.layers.length : 0;
                for (e = 0; e < t; e += 1)
                  this.elements[e] &&
                    this.elements[e].destroy &&
                    this.elements[e].destroy();
                (this.elements.length = 0),
                  (this.destroyed = !0),
                  (this.animationItem = null);
              }),
              (HybridRendererBase.prototype.updateContainerSize = function () {
                var e = this.animationItem.wrapper.offsetWidth,
                  t = this.animationItem.wrapper.offsetHeight,
                  r = e / t,
                  n = this.globalData.compSize.w / this.globalData.compSize.h,
                  i,
                  a,
                  o,
                  l;
                n > r
                  ? ((i = e / this.globalData.compSize.w),
                    (a = e / this.globalData.compSize.w),
                    (o = 0),
                    (l =
                      (t -
                        this.globalData.compSize.h *
                          (e / this.globalData.compSize.w)) /
                      2))
                  : ((i = t / this.globalData.compSize.h),
                    (a = t / this.globalData.compSize.h),
                    (o =
                      (e -
                        this.globalData.compSize.w *
                          (t / this.globalData.compSize.h)) /
                      2),
                    (l = 0));
                var c = this.resizerElem.style;
                (c.webkitTransform =
                  "matrix3d(" +
                  i +
                  ",0,0,0,0," +
                  a +
                  ",0,0,0,0,1,0," +
                  o +
                  "," +
                  l +
                  ",0,1)"),
                  (c.transform = c.webkitTransform);
              }),
              (HybridRendererBase.prototype.renderFrame =
                SVGRenderer.prototype.renderFrame),
              (HybridRendererBase.prototype.hide = function () {
                this.resizerElem.style.display = "none";
              }),
              (HybridRendererBase.prototype.show = function () {
                this.resizerElem.style.display = "block";
              }),
              (HybridRendererBase.prototype.initItems = function () {
                if ((this.buildAllItems(), this.camera)) this.camera.setup();
                else {
                  var e = this.globalData.compSize.w,
                    t = this.globalData.compSize.h,
                    r,
                    n = this.threeDElements.length;
                  for (r = 0; r < n; r += 1) {
                    var i = this.threeDElements[r].perspectiveElem.style;
                    (i.webkitPerspective =
                      Math.sqrt(Math.pow(e, 2) + Math.pow(t, 2)) + "px"),
                      (i.perspective = i.webkitPerspective);
                  }
                }
              }),
              (HybridRendererBase.prototype.searchExtraCompositions = function (
                e
              ) {
                var t,
                  r = e.length,
                  n = createTag("div");
                for (t = 0; t < r; t += 1)
                  if (e[t].xt) {
                    var i = this.createComp(
                      e[t],
                      n,
                      this.globalData.comp,
                      null
                    );
                    i.initExpressions(),
                      this.globalData.projectInterface.registerComposition(i);
                  }
              });
            function HCompElement(e, t, r) {
              (this.layers = e.layers),
                (this.supports3d = !e.hasMask),
                (this.completeLayers = !1),
                (this.pendingElements = []),
                (this.elements = this.layers
                  ? createSizedArray(this.layers.length)
                  : []),
                this.initElement(e, t, r),
                (this.tm = e.tm
                  ? PropertyFactory.getProp(this, e.tm, 0, t.frameRate, this)
                  : { _placeholder: !0 });
            }
            extendPrototype(
              [HybridRendererBase, ICompElement, HBaseElement],
              HCompElement
            ),
              (HCompElement.prototype._createBaseContainerElements =
                HCompElement.prototype.createContainerElements),
              (HCompElement.prototype.createContainerElements = function () {
                this._createBaseContainerElements(),
                  this.data.hasMask
                    ? (this.svgElement.setAttribute("width", this.data.w),
                      this.svgElement.setAttribute("height", this.data.h),
                      (this.transformedElement = this.baseElement))
                    : (this.transformedElement = this.layerElement);
              }),
              (HCompElement.prototype.addTo3dContainer = function (e, t) {
                for (var r = 0, n; r < t; )
                  this.elements[r] &&
                    this.elements[r].getBaseElement &&
                    (n = this.elements[r].getBaseElement()),
                    (r += 1);
                n
                  ? this.layerElement.insertBefore(e, n)
                  : this.layerElement.appendChild(e);
              }),
              (HCompElement.prototype.createComp = function (e) {
                return this.supports3d
                  ? new HCompElement(e, this.globalData, this)
                  : new SVGCompElement(e, this.globalData, this);
              });
            function HybridRenderer(e, t) {
              (this.animationItem = e),
                (this.layers = null),
                (this.renderedFrame = -1),
                (this.renderConfig = {
                  className: (t && t.className) || "",
                  imagePreserveAspectRatio:
                    (t && t.imagePreserveAspectRatio) || "xMidYMid slice",
                  hideOnTransparent: !(t && t.hideOnTransparent === !1),
                  filterSize: {
                    width: (t && t.filterSize && t.filterSize.width) || "400%",
                    height:
                      (t && t.filterSize && t.filterSize.height) || "400%",
                    x: (t && t.filterSize && t.filterSize.x) || "-100%",
                    y: (t && t.filterSize && t.filterSize.y) || "-100%",
                  },
                  runExpressions:
                    !t || t.runExpressions === void 0 || t.runExpressions,
                }),
                (this.globalData = {
                  _mdf: !1,
                  frameNum: -1,
                  renderConfig: this.renderConfig,
                }),
                (this.pendingElements = []),
                (this.elements = []),
                (this.threeDElements = []),
                (this.destroyed = !1),
                (this.camera = null),
                (this.supports3d = !0),
                (this.rendererType = "html");
            }
            extendPrototype([HybridRendererBase], HybridRenderer),
              (HybridRenderer.prototype.createComp = function (e) {
                return this.supports3d
                  ? new HCompElement(e, this.globalData, this)
                  : new SVGCompElement(e, this.globalData, this);
              });
            var CompExpressionInterface = (function () {
              return function (e) {
                function t(r) {
                  for (var n = 0, i = e.layers.length; n < i; ) {
                    if (e.layers[n].nm === r || e.layers[n].ind === r)
                      return e.elements[n].layerInterface;
                    n += 1;
                  }
                  return null;
                }
                return (
                  Object.defineProperty(t, "_name", { value: e.data.nm }),
                  (t.layer = t),
                  (t.pixelAspect = 1),
                  (t.height = e.data.h || e.globalData.compSize.h),
                  (t.width = e.data.w || e.globalData.compSize.w),
                  (t.pixelAspect = 1),
                  (t.frameDuration = 1 / e.globalData.frameRate),
                  (t.displayStartTime = 0),
                  (t.numLayers = e.layers.length),
                  t
                );
              };
            })();
            function _typeof$2(e) {
              "@babel/helpers - typeof";
              return (
                typeof Symbol == "function" &&
                typeof Symbol.iterator == "symbol"
                  ? (_typeof$2 = function (r) {
                      return typeof r;
                    })
                  : (_typeof$2 = function (r) {
                      return r &&
                        typeof Symbol == "function" &&
                        r.constructor === Symbol &&
                        r !== Symbol.prototype
                        ? "symbol"
                        : typeof r;
                    }),
                _typeof$2(e)
              );
            }
            function seedRandom(e, t) {
              var r = this,
                n = 256,
                i = 6,
                a = 52,
                o = "random",
                l = t.pow(n, i),
                c = t.pow(2, a),
                u = c * 2,
                d = n - 1,
                E;
              function b(S, A, O) {
                var F = [];
                A = A === !0 ? { entropy: !0 } : A || {};
                var D = M(
                    T(A.entropy ? [S, k(e)] : S === null ? x() : S, 3),
                    F
                  ),
                  H = new P(F),
                  $ = function () {
                    for (var J = H.g(i), K = l, ee = 0; J < c; )
                      (J = (J + ee) * n), (K *= n), (ee = H.g(1));
                    for (; J >= u; ) (J /= 2), (K /= 2), (ee >>>= 1);
                    return (J + ee) / K;
                  };
                return (
                  ($.int32 = function () {
                    return H.g(4) | 0;
                  }),
                  ($.quick = function () {
                    return H.g(4) / 4294967296;
                  }),
                  ($.double = $),
                  M(k(H.S), e),
                  (
                    A.pass ||
                    O ||
                    function (q, J, K, ee) {
                      return (
                        ee &&
                          (ee.S && R(ee, H),
                          (q.state = function () {
                            return R(H, {});
                          })),
                        K ? ((t[o] = q), J) : q
                      );
                    }
                  )($, D, "global" in A ? A.global : this == t, A.state)
                );
              }
              t["seed" + o] = b;
              function P(S) {
                var A,
                  O = S.length,
                  F = this,
                  D = 0,
                  H = (F.i = F.j = 0),
                  $ = (F.S = []);
                for (O || (S = [O++]); D < n; ) $[D] = D++;
                for (D = 0; D < n; D++)
                  ($[D] = $[(H = d & (H + S[D % O] + (A = $[D])))]), ($[H] = A);
                F.g = function (q) {
                  for (var J, K = 0, ee = F.i, le = F.j, re = F.S; q--; )
                    (J = re[(ee = d & (ee + 1))]),
                      (K =
                        K * n +
                        re[
                          d &
                            ((re[ee] = re[(le = d & (le + J))]) + (re[le] = J))
                        ]);
                  return (F.i = ee), (F.j = le), K;
                };
              }
              function R(S, A) {
                return (A.i = S.i), (A.j = S.j), (A.S = S.S.slice()), A;
              }
              function T(S, A) {
                var O = [],
                  F = _typeof$2(S),
                  D;
                if (A && F == "object")
                  for (D in S)
                    try {
                      O.push(T(S[D], A - 1));
                    } catch {}
                return O.length ? O : F == "string" ? S : S + "\0";
              }
              function M(S, A) {
                for (var O = S + "", F, D = 0; D < O.length; )
                  A[d & D] = d & ((F ^= A[d & D] * 19) + O.charCodeAt(D++));
                return k(A);
              }
              function x() {
                try {
                  var S = new Uint8Array(n);
                  return (r.crypto || r.msCrypto).getRandomValues(S), k(S);
                } catch {
                  var A = r.navigator,
                    O = A && A.plugins;
                  return [+new Date(), r, O, r.screen, k(e)];
                }
              }
              function k(S) {
                return String.fromCharCode.apply(0, S);
              }
              M(t.random(), e);
            }
            function initialize$2(e) {
              seedRandom([], e);
            }
            var propTypes = { SHAPE: "shape" };
            function _typeof$1(e) {
              "@babel/helpers - typeof";
              return (
                typeof Symbol == "function" &&
                typeof Symbol.iterator == "symbol"
                  ? (_typeof$1 = function (r) {
                      return typeof r;
                    })
                  : (_typeof$1 = function (r) {
                      return r &&
                        typeof Symbol == "function" &&
                        r.constructor === Symbol &&
                        r !== Symbol.prototype
                        ? "symbol"
                        : typeof r;
                    }),
                _typeof$1(e)
              );
            }
            var ExpressionManager = (function () {
                var ob = {},
                  Math = BMMath,
                  window = null,
                  document = null,
                  XMLHttpRequest = null,
                  fetch = null,
                  frames = null,
                  _lottieGlobal = {};
                initialize$2(BMMath);
                function resetFrame() {
                  _lottieGlobal = {};
                }
                function $bm_isInstanceOfArray(e) {
                  return (
                    e.constructor === Array || e.constructor === Float32Array
                  );
                }
                function isNumerable(e, t) {
                  return (
                    e === "number" ||
                    t instanceof Number ||
                    e === "boolean" ||
                    e === "string"
                  );
                }
                function $bm_neg(e) {
                  var t = _typeof$1(e);
                  if (t === "number" || e instanceof Number || t === "boolean")
                    return -e;
                  if ($bm_isInstanceOfArray(e)) {
                    var r,
                      n = e.length,
                      i = [];
                    for (r = 0; r < n; r += 1) i[r] = -e[r];
                    return i;
                  }
                  return e.propType ? e.v : -e;
                }
                var easeInBez = BezierFactory.getBezierEasing(
                    0.333,
                    0,
                    0.833,
                    0.833,
                    "easeIn"
                  ).get,
                  easeOutBez = BezierFactory.getBezierEasing(
                    0.167,
                    0.167,
                    0.667,
                    1,
                    "easeOut"
                  ).get,
                  easeInOutBez = BezierFactory.getBezierEasing(
                    0.33,
                    0,
                    0.667,
                    1,
                    "easeInOut"
                  ).get;
                function sum(e, t) {
                  var r = _typeof$1(e),
                    n = _typeof$1(t);
                  if (
                    (isNumerable(r, e) && isNumerable(n, t)) ||
                    r === "string" ||
                    n === "string"
                  )
                    return e + t;
                  if ($bm_isInstanceOfArray(e) && isNumerable(n, t))
                    return (e = e.slice(0)), (e[0] += t), e;
                  if (isNumerable(r, e) && $bm_isInstanceOfArray(t))
                    return (t = t.slice(0)), (t[0] = e + t[0]), t;
                  if ($bm_isInstanceOfArray(e) && $bm_isInstanceOfArray(t)) {
                    for (
                      var i = 0, a = e.length, o = t.length, l = [];
                      i < a || i < o;

                    )
                      (typeof e[i] == "number" || e[i] instanceof Number) &&
                      (typeof t[i] == "number" || t[i] instanceof Number)
                        ? (l[i] = e[i] + t[i])
                        : (l[i] = t[i] === void 0 ? e[i] : e[i] || t[i]),
                        (i += 1);
                    return l;
                  }
                  return 0;
                }
                var add = sum;
                function sub(e, t) {
                  var r = _typeof$1(e),
                    n = _typeof$1(t);
                  if (isNumerable(r, e) && isNumerable(n, t))
                    return (
                      r === "string" && (e = parseInt(e, 10)),
                      n === "string" && (t = parseInt(t, 10)),
                      e - t
                    );
                  if ($bm_isInstanceOfArray(e) && isNumerable(n, t))
                    return (e = e.slice(0)), (e[0] -= t), e;
                  if (isNumerable(r, e) && $bm_isInstanceOfArray(t))
                    return (t = t.slice(0)), (t[0] = e - t[0]), t;
                  if ($bm_isInstanceOfArray(e) && $bm_isInstanceOfArray(t)) {
                    for (
                      var i = 0, a = e.length, o = t.length, l = [];
                      i < a || i < o;

                    )
                      (typeof e[i] == "number" || e[i] instanceof Number) &&
                      (typeof t[i] == "number" || t[i] instanceof Number)
                        ? (l[i] = e[i] - t[i])
                        : (l[i] = t[i] === void 0 ? e[i] : e[i] || t[i]),
                        (i += 1);
                    return l;
                  }
                  return 0;
                }
                function mul(e, t) {
                  var r = _typeof$1(e),
                    n = _typeof$1(t),
                    i;
                  if (isNumerable(r, e) && isNumerable(n, t)) return e * t;
                  var a, o;
                  if ($bm_isInstanceOfArray(e) && isNumerable(n, t)) {
                    for (
                      o = e.length, i = createTypedArray("float32", o), a = 0;
                      a < o;
                      a += 1
                    )
                      i[a] = e[a] * t;
                    return i;
                  }
                  if (isNumerable(r, e) && $bm_isInstanceOfArray(t)) {
                    for (
                      o = t.length, i = createTypedArray("float32", o), a = 0;
                      a < o;
                      a += 1
                    )
                      i[a] = e * t[a];
                    return i;
                  }
                  return 0;
                }
                function div(e, t) {
                  var r = _typeof$1(e),
                    n = _typeof$1(t),
                    i;
                  if (isNumerable(r, e) && isNumerable(n, t)) return e / t;
                  var a, o;
                  if ($bm_isInstanceOfArray(e) && isNumerable(n, t)) {
                    for (
                      o = e.length, i = createTypedArray("float32", o), a = 0;
                      a < o;
                      a += 1
                    )
                      i[a] = e[a] / t;
                    return i;
                  }
                  if (isNumerable(r, e) && $bm_isInstanceOfArray(t)) {
                    for (
                      o = t.length, i = createTypedArray("float32", o), a = 0;
                      a < o;
                      a += 1
                    )
                      i[a] = e / t[a];
                    return i;
                  }
                  return 0;
                }
                function mod(e, t) {
                  return (
                    typeof e == "string" && (e = parseInt(e, 10)),
                    typeof t == "string" && (t = parseInt(t, 10)),
                    e % t
                  );
                }
                var $bm_sum = sum,
                  $bm_sub = sub,
                  $bm_mul = mul,
                  $bm_div = div,
                  $bm_mod = mod;
                function clamp(e, t, r) {
                  if (t > r) {
                    var n = r;
                    (r = t), (t = n);
                  }
                  return Math.min(Math.max(e, t), r);
                }
                function radiansToDegrees(e) {
                  return e / degToRads;
                }
                var radians_to_degrees = radiansToDegrees;
                function degreesToRadians(e) {
                  return e * degToRads;
                }
                var degrees_to_radians = radiansToDegrees,
                  helperLengthArray = [0, 0, 0, 0, 0, 0];
                function length(e, t) {
                  if (typeof e == "number" || e instanceof Number)
                    return (t = t || 0), Math.abs(e - t);
                  t || (t = helperLengthArray);
                  var r,
                    n = Math.min(e.length, t.length),
                    i = 0;
                  for (r = 0; r < n; r += 1) i += Math.pow(t[r] - e[r], 2);
                  return Math.sqrt(i);
                }
                function normalize(e) {
                  return div(e, length(e));
                }
                function rgbToHsl(e) {
                  var t = e[0],
                    r = e[1],
                    n = e[2],
                    i = Math.max(t, r, n),
                    a = Math.min(t, r, n),
                    o,
                    l,
                    c = (i + a) / 2;
                  if (i === a) (o = 0), (l = 0);
                  else {
                    var u = i - a;
                    switch (
                      ((l = c > 0.5 ? u / (2 - i - a) : u / (i + a)), i)
                    ) {
                      case t:
                        o = (r - n) / u + (r < n ? 6 : 0);
                        break;
                      case r:
                        o = (n - t) / u + 2;
                        break;
                      case n:
                        o = (t - r) / u + 4;
                        break;
                    }
                    o /= 6;
                  }
                  return [o, l, c, e[3]];
                }
                function hue2rgb(e, t, r) {
                  return (
                    r < 0 && (r += 1),
                    r > 1 && (r -= 1),
                    r < 1 / 6
                      ? e + (t - e) * 6 * r
                      : r < 1 / 2
                      ? t
                      : r < 2 / 3
                      ? e + (t - e) * (2 / 3 - r) * 6
                      : e
                  );
                }
                function hslToRgb(e) {
                  var t = e[0],
                    r = e[1],
                    n = e[2],
                    i,
                    a,
                    o;
                  if (r === 0) (i = n), (o = n), (a = n);
                  else {
                    var l = n < 0.5 ? n * (1 + r) : n + r - n * r,
                      c = 2 * n - l;
                    (i = hue2rgb(c, l, t + 1 / 3)),
                      (a = hue2rgb(c, l, t)),
                      (o = hue2rgb(c, l, t - 1 / 3));
                  }
                  return [i, a, o, e[3]];
                }
                function linear(e, t, r, n, i) {
                  if (
                    ((n === void 0 || i === void 0) &&
                      ((n = t), (i = r), (t = 0), (r = 1)),
                    r < t)
                  ) {
                    var a = r;
                    (r = t), (t = a);
                  }
                  if (e <= t) return n;
                  if (e >= r) return i;
                  var o = r === t ? 0 : (e - t) / (r - t);
                  if (!n.length) return n + (i - n) * o;
                  var l,
                    c = n.length,
                    u = createTypedArray("float32", c);
                  for (l = 0; l < c; l += 1) u[l] = n[l] + (i[l] - n[l]) * o;
                  return u;
                }
                function random(e, t) {
                  if (
                    (t === void 0 &&
                      (e === void 0
                        ? ((e = 0), (t = 1))
                        : ((t = e), (e = void 0))),
                    t.length)
                  ) {
                    var r,
                      n = t.length;
                    e || (e = createTypedArray("float32", n));
                    var i = createTypedArray("float32", n),
                      a = BMMath.random();
                    for (r = 0; r < n; r += 1) i[r] = e[r] + a * (t[r] - e[r]);
                    return i;
                  }
                  e === void 0 && (e = 0);
                  var o = BMMath.random();
                  return e + o * (t - e);
                }
                function createPath(e, t, r, n) {
                  var i,
                    a = e.length,
                    o = shapePool.newElement();
                  o.setPathData(!!n, a);
                  var l = [0, 0],
                    c,
                    u;
                  for (i = 0; i < a; i += 1)
                    (c = t && t[i] ? t[i] : l),
                      (u = r && r[i] ? r[i] : l),
                      o.setTripleAt(
                        e[i][0],
                        e[i][1],
                        u[0] + e[i][0],
                        u[1] + e[i][1],
                        c[0] + e[i][0],
                        c[1] + e[i][1],
                        i,
                        !0
                      );
                  return o;
                }
                function initiateExpression(elem, data, property) {
                  function noOp(e) {
                    return e;
                  }
                  if (!elem.globalData.renderConfig.runExpressions) return noOp;
                  var val = data.x,
                    needsVelocity = /velocity(?![\w\d])/.test(val),
                    _needsRandom = val.indexOf("random") !== -1,
                    elemType = elem.data.ty,
                    transform,
                    $bm_transform,
                    content,
                    effect,
                    thisProperty = property;
                  (thisProperty.valueAtTime = thisProperty.getValueAtTime),
                    Object.defineProperty(thisProperty, "value", {
                      get: function () {
                        return thisProperty.v;
                      },
                    }),
                    (elem.comp.frameDuration =
                      1 / elem.comp.globalData.frameRate),
                    (elem.comp.displayStartTime = 0);
                  var inPoint = elem.data.ip / elem.comp.globalData.frameRate,
                    outPoint = elem.data.op / elem.comp.globalData.frameRate,
                    width = elem.data.sw ? elem.data.sw : 0,
                    height = elem.data.sh ? elem.data.sh : 0,
                    name = elem.data.nm,
                    loopIn,
                    loop_in,
                    loopOut,
                    loop_out,
                    smooth,
                    toWorld,
                    fromWorld,
                    fromComp,
                    toComp,
                    fromCompToSurface,
                    position,
                    rotation,
                    anchorPoint,
                    scale,
                    thisLayer,
                    thisComp,
                    mask,
                    valueAtTime,
                    velocityAtTime,
                    scoped_bm_rt,
                    expression_function = eval(
                      "[function _expression_function(){" +
                        val +
                        ";scoped_bm_rt=$bm_rt}]"
                    )[0],
                    numKeys = property.kf ? data.k.length : 0,
                    active = !this.data || this.data.hd !== !0,
                    wiggle = function e(t, r) {
                      var n,
                        i,
                        a = this.pv.length ? this.pv.length : 1,
                        o = createTypedArray("float32", a);
                      t = 5;
                      var l = Math.floor(time * t);
                      for (n = 0, i = 0; n < l; ) {
                        for (i = 0; i < a; i += 1)
                          o[i] += -r + r * 2 * BMMath.random();
                        n += 1;
                      }
                      var c = time * t,
                        u = c - Math.floor(c),
                        d = createTypedArray("float32", a);
                      if (a > 1) {
                        for (i = 0; i < a; i += 1)
                          d[i] =
                            this.pv[i] +
                            o[i] +
                            (-r + r * 2 * BMMath.random()) * u;
                        return d;
                      }
                      return (
                        this.pv + o[0] + (-r + r * 2 * BMMath.random()) * u
                      );
                    }.bind(this);
                  thisProperty.loopIn &&
                    ((loopIn = thisProperty.loopIn.bind(thisProperty)),
                    (loop_in = loopIn)),
                    thisProperty.loopOut &&
                      ((loopOut = thisProperty.loopOut.bind(thisProperty)),
                      (loop_out = loopOut)),
                    thisProperty.smooth &&
                      (smooth = thisProperty.smooth.bind(thisProperty));
                  function loopInDuration(e, t) {
                    return loopIn(e, t, !0);
                  }
                  function loopOutDuration(e, t) {
                    return loopOut(e, t, !0);
                  }
                  this.getValueAtTime &&
                    (valueAtTime = this.getValueAtTime.bind(this)),
                    this.getVelocityAtTime &&
                      (velocityAtTime = this.getVelocityAtTime.bind(this));
                  var comp = elem.comp.globalData.projectInterface.bind(
                    elem.comp.globalData.projectInterface
                  );
                  function lookAt(e, t) {
                    var r = [t[0] - e[0], t[1] - e[1], t[2] - e[2]],
                      n =
                        Math.atan2(r[0], Math.sqrt(r[1] * r[1] + r[2] * r[2])) /
                        degToRads,
                      i = -Math.atan2(r[1], r[2]) / degToRads;
                    return [i, n, 0];
                  }
                  function easeOut(e, t, r, n, i) {
                    return applyEase(easeOutBez, e, t, r, n, i);
                  }
                  function easeIn(e, t, r, n, i) {
                    return applyEase(easeInBez, e, t, r, n, i);
                  }
                  function ease(e, t, r, n, i) {
                    return applyEase(easeInOutBez, e, t, r, n, i);
                  }
                  function applyEase(e, t, r, n, i, a) {
                    i === void 0 ? ((i = r), (a = n)) : (t = (t - r) / (n - r)),
                      t > 1 ? (t = 1) : t < 0 && (t = 0);
                    var o = e(t);
                    if ($bm_isInstanceOfArray(i)) {
                      var l,
                        c = i.length,
                        u = createTypedArray("float32", c);
                      for (l = 0; l < c; l += 1)
                        u[l] = (a[l] - i[l]) * o + i[l];
                      return u;
                    }
                    return (a - i) * o + i;
                  }
                  function nearestKey(e) {
                    var t,
                      r = data.k.length,
                      n,
                      i;
                    if (!data.k.length || typeof data.k[0] == "number")
                      (n = 0), (i = 0);
                    else if (
                      ((n = -1),
                      (e *= elem.comp.globalData.frameRate),
                      e < data.k[0].t)
                    )
                      (n = 1), (i = data.k[0].t);
                    else {
                      for (t = 0; t < r - 1; t += 1)
                        if (e === data.k[t].t) {
                          (n = t + 1), (i = data.k[t].t);
                          break;
                        } else if (e > data.k[t].t && e < data.k[t + 1].t) {
                          e - data.k[t].t > data.k[t + 1].t - e
                            ? ((n = t + 2), (i = data.k[t + 1].t))
                            : ((n = t + 1), (i = data.k[t].t));
                          break;
                        }
                      n === -1 && ((n = t + 1), (i = data.k[t].t));
                    }
                    var a = {};
                    return (
                      (a.index = n),
                      (a.time = i / elem.comp.globalData.frameRate),
                      a
                    );
                  }
                  function key(e) {
                    var t, r, n;
                    if (!data.k.length || typeof data.k[0] == "number")
                      throw new Error(
                        "The property has no keyframe at index " + e
                      );
                    (e -= 1),
                      (t = {
                        time: data.k[e].t / elem.comp.globalData.frameRate,
                        value: [],
                      });
                    var i = Object.prototype.hasOwnProperty.call(data.k[e], "s")
                      ? data.k[e].s
                      : data.k[e - 1].e;
                    for (n = i.length, r = 0; r < n; r += 1)
                      (t[r] = i[r]), (t.value[r] = i[r]);
                    return t;
                  }
                  function framesToTime(e, t) {
                    return t || (t = elem.comp.globalData.frameRate), e / t;
                  }
                  function timeToFrames(e, t) {
                    return (
                      !e && e !== 0 && (e = time),
                      t || (t = elem.comp.globalData.frameRate),
                      e * t
                    );
                  }
                  function seedRandom(e) {
                    BMMath.seedrandom(randSeed + e);
                  }
                  function sourceRectAtTime() {
                    return elem.sourceRectAtTime();
                  }
                  function substring(e, t) {
                    return typeof value == "string"
                      ? t === void 0
                        ? value.substring(e)
                        : value.substring(e, t)
                      : "";
                  }
                  function substr(e, t) {
                    return typeof value == "string"
                      ? t === void 0
                        ? value.substr(e)
                        : value.substr(e, t)
                      : "";
                  }
                  function posterizeTime(e) {
                    (time = e === 0 ? 0 : Math.floor(time * e) / e),
                      (value = valueAtTime(time));
                  }
                  var time,
                    velocity,
                    value,
                    text,
                    textIndex,
                    textTotal,
                    selectorValue,
                    index = elem.data.ind,
                    hasParent = !!(elem.hierarchy && elem.hierarchy.length),
                    parent,
                    randSeed = Math.floor(Math.random() * 1e6),
                    globalData = elem.globalData;
                  function executeExpression(e) {
                    return (
                      (value = e),
                      this.frameExpressionId === elem.globalData.frameId &&
                      this.propType !== "textSelector"
                        ? value
                        : (this.propType === "textSelector" &&
                            ((textIndex = this.textIndex),
                            (textTotal = this.textTotal),
                            (selectorValue = this.selectorValue)),
                          thisLayer ||
                            ((text = elem.layerInterface.text),
                            (thisLayer = elem.layerInterface),
                            (thisComp = elem.comp.compInterface),
                            (toWorld = thisLayer.toWorld.bind(thisLayer)),
                            (fromWorld = thisLayer.fromWorld.bind(thisLayer)),
                            (fromComp = thisLayer.fromComp.bind(thisLayer)),
                            (toComp = thisLayer.toComp.bind(thisLayer)),
                            (mask = thisLayer.mask
                              ? thisLayer.mask.bind(thisLayer)
                              : null),
                            (fromCompToSurface = fromComp)),
                          transform ||
                            ((transform = elem.layerInterface(
                              "ADBE Transform Group"
                            )),
                            ($bm_transform = transform),
                            transform && (anchorPoint = transform.anchorPoint)),
                          elemType === 4 &&
                            !content &&
                            (content = thisLayer("ADBE Root Vectors Group")),
                          effect || (effect = thisLayer(4)),
                          (hasParent = !!(
                            elem.hierarchy && elem.hierarchy.length
                          )),
                          hasParent &&
                            !parent &&
                            (parent = elem.hierarchy[0].layerInterface),
                          (time =
                            this.comp.renderedFrame /
                            this.comp.globalData.frameRate),
                          _needsRandom && seedRandom(randSeed + time),
                          needsVelocity && (velocity = velocityAtTime(time)),
                          expression_function(),
                          (this.frameExpressionId = elem.globalData.frameId),
                          (scoped_bm_rt =
                            scoped_bm_rt.propType === propTypes.SHAPE
                              ? scoped_bm_rt.v
                              : scoped_bm_rt),
                          scoped_bm_rt)
                    );
                  }
                  return (
                    (executeExpression.__preventDeadCodeRemoval = [
                      $bm_transform,
                      anchorPoint,
                      time,
                      velocity,
                      inPoint,
                      outPoint,
                      width,
                      height,
                      name,
                      loop_in,
                      loop_out,
                      smooth,
                      toComp,
                      fromCompToSurface,
                      toWorld,
                      fromWorld,
                      mask,
                      position,
                      rotation,
                      scale,
                      thisComp,
                      numKeys,
                      active,
                      wiggle,
                      loopInDuration,
                      loopOutDuration,
                      comp,
                      lookAt,
                      easeOut,
                      easeIn,
                      ease,
                      nearestKey,
                      key,
                      text,
                      textIndex,
                      textTotal,
                      selectorValue,
                      framesToTime,
                      timeToFrames,
                      sourceRectAtTime,
                      substring,
                      substr,
                      posterizeTime,
                      index,
                      globalData,
                    ]),
                    executeExpression
                  );
                }
                return (
                  (ob.initiateExpression = initiateExpression),
                  (ob.__preventDeadCodeRemoval = [
                    window,
                    document,
                    XMLHttpRequest,
                    fetch,
                    frames,
                    $bm_neg,
                    add,
                    $bm_sum,
                    $bm_sub,
                    $bm_mul,
                    $bm_div,
                    $bm_mod,
                    clamp,
                    radians_to_degrees,
                    degreesToRadians,
                    degrees_to_radians,
                    normalize,
                    rgbToHsl,
                    hslToRgb,
                    linear,
                    random,
                    createPath,
                    _lottieGlobal,
                  ]),
                  (ob.resetFrame = resetFrame),
                  ob
                );
              })(),
              Expressions = (function () {
                var e = {};
                (e.initExpressions = t),
                  (e.resetFrame = ExpressionManager.resetFrame);
                function t(r) {
                  var n = 0,
                    i = [];
                  function a() {
                    n += 1;
                  }
                  function o() {
                    (n -= 1), n === 0 && c();
                  }
                  function l(u) {
                    i.indexOf(u) === -1 && i.push(u);
                  }
                  function c() {
                    var u,
                      d = i.length;
                    for (u = 0; u < d; u += 1) i[u].release();
                    i.length = 0;
                  }
                  (r.renderer.compInterface = CompExpressionInterface(
                    r.renderer
                  )),
                    r.renderer.globalData.projectInterface.registerComposition(
                      r.renderer
                    ),
                    (r.renderer.globalData.pushExpression = a),
                    (r.renderer.globalData.popExpression = o),
                    (r.renderer.globalData.registerExpressionProperty = l);
                }
                return e;
              })(),
              MaskManagerInterface = (function () {
                function e(r, n) {
                  (this._mask = r), (this._data = n);
                }
                Object.defineProperty(e.prototype, "maskPath", {
                  get: function () {
                    return (
                      this._mask.prop.k && this._mask.prop.getValue(),
                      this._mask.prop
                    );
                  },
                }),
                  Object.defineProperty(e.prototype, "maskOpacity", {
                    get: function () {
                      return (
                        this._mask.op.k && this._mask.op.getValue(),
                        this._mask.op.v * 100
                      );
                    },
                  });
                var t = function (n) {
                  var i = createSizedArray(n.viewData.length),
                    a,
                    o = n.viewData.length;
                  for (a = 0; a < o; a += 1)
                    i[a] = new e(n.viewData[a], n.masksProperties[a]);
                  var l = function (u) {
                    for (a = 0; a < o; ) {
                      if (n.masksProperties[a].nm === u) return i[a];
                      a += 1;
                    }
                    return null;
                  };
                  return l;
                };
                return t;
              })(),
              ExpressionPropertyInterface = (function () {
                var e = { pv: 0, v: 0, mult: 1 },
                  t = { pv: [0, 0, 0], v: [0, 0, 0], mult: 1 };
                function r(o, l, c) {
                  Object.defineProperty(o, "velocity", {
                    get: function () {
                      return l.getVelocityAtTime(l.comp.currentFrame);
                    },
                  }),
                    (o.numKeys = l.keyframes ? l.keyframes.length : 0),
                    (o.key = function (u) {
                      if (!o.numKeys) return 0;
                      var d = "";
                      "s" in l.keyframes[u - 1]
                        ? (d = l.keyframes[u - 1].s)
                        : "e" in l.keyframes[u - 2]
                        ? (d = l.keyframes[u - 2].e)
                        : (d = l.keyframes[u - 2].s);
                      var E =
                        c === "unidimensional"
                          ? new Number(d)
                          : Object.assign({}, d);
                      return (
                        (E.time =
                          l.keyframes[u - 1].t /
                          l.elem.comp.globalData.frameRate),
                        (E.value = c === "unidimensional" ? d[0] : d),
                        E
                      );
                    }),
                    (o.valueAtTime = l.getValueAtTime),
                    (o.speedAtTime = l.getSpeedAtTime),
                    (o.velocityAtTime = l.getVelocityAtTime),
                    (o.propertyGroup = l.propertyGroup);
                }
                function n(o) {
                  (!o || !("pv" in o)) && (o = e);
                  var l = 1 / o.mult,
                    c = o.pv * l,
                    u = new Number(c);
                  return (
                    (u.value = c),
                    r(u, o, "unidimensional"),
                    function () {
                      return (
                        o.k && o.getValue(),
                        (c = o.v * l),
                        u.value !== c &&
                          ((u = new Number(c)),
                          (u.value = c),
                          r(u, o, "unidimensional")),
                        u
                      );
                    }
                  );
                }
                function i(o) {
                  (!o || !("pv" in o)) && (o = t);
                  var l = 1 / o.mult,
                    c = (o.data && o.data.l) || o.pv.length,
                    u = createTypedArray("float32", c),
                    d = createTypedArray("float32", c);
                  return (
                    (u.value = d),
                    r(u, o, "multidimensional"),
                    function () {
                      o.k && o.getValue();
                      for (var E = 0; E < c; E += 1)
                        (d[E] = o.v[E] * l), (u[E] = d[E]);
                      return u;
                    }
                  );
                }
                function a() {
                  return e;
                }
                return function (o) {
                  return o
                    ? o.propType === "unidimensional"
                      ? n(o)
                      : i(o)
                    : a;
                };
              })(),
              TransformExpressionInterface = (function () {
                return function (e) {
                  function t(o) {
                    switch (o) {
                      case "scale":
                      case "Scale":
                      case "ADBE Scale":
                      case 6:
                        return t.scale;
                      case "rotation":
                      case "Rotation":
                      case "ADBE Rotation":
                      case "ADBE Rotate Z":
                      case 10:
                        return t.rotation;
                      case "ADBE Rotate X":
                        return t.xRotation;
                      case "ADBE Rotate Y":
                        return t.yRotation;
                      case "position":
                      case "Position":
                      case "ADBE Position":
                      case 2:
                        return t.position;
                      case "ADBE Position_0":
                        return t.xPosition;
                      case "ADBE Position_1":
                        return t.yPosition;
                      case "ADBE Position_2":
                        return t.zPosition;
                      case "anchorPoint":
                      case "AnchorPoint":
                      case "Anchor Point":
                      case "ADBE AnchorPoint":
                      case 1:
                        return t.anchorPoint;
                      case "opacity":
                      case "Opacity":
                      case 11:
                        return t.opacity;
                      default:
                        return null;
                    }
                  }
                  Object.defineProperty(t, "rotation", {
                    get: ExpressionPropertyInterface(e.r || e.rz),
                  }),
                    Object.defineProperty(t, "zRotation", {
                      get: ExpressionPropertyInterface(e.rz || e.r),
                    }),
                    Object.defineProperty(t, "xRotation", {
                      get: ExpressionPropertyInterface(e.rx),
                    }),
                    Object.defineProperty(t, "yRotation", {
                      get: ExpressionPropertyInterface(e.ry),
                    }),
                    Object.defineProperty(t, "scale", {
                      get: ExpressionPropertyInterface(e.s),
                    });
                  var r, n, i, a;
                  return (
                    e.p
                      ? (a = ExpressionPropertyInterface(e.p))
                      : ((r = ExpressionPropertyInterface(e.px)),
                        (n = ExpressionPropertyInterface(e.py)),
                        e.pz && (i = ExpressionPropertyInterface(e.pz))),
                    Object.defineProperty(t, "position", {
                      get: function () {
                        return e.p ? a() : [r(), n(), i ? i() : 0];
                      },
                    }),
                    Object.defineProperty(t, "xPosition", {
                      get: ExpressionPropertyInterface(e.px),
                    }),
                    Object.defineProperty(t, "yPosition", {
                      get: ExpressionPropertyInterface(e.py),
                    }),
                    Object.defineProperty(t, "zPosition", {
                      get: ExpressionPropertyInterface(e.pz),
                    }),
                    Object.defineProperty(t, "anchorPoint", {
                      get: ExpressionPropertyInterface(e.a),
                    }),
                    Object.defineProperty(t, "opacity", {
                      get: ExpressionPropertyInterface(e.o),
                    }),
                    Object.defineProperty(t, "skew", {
                      get: ExpressionPropertyInterface(e.sk),
                    }),
                    Object.defineProperty(t, "skewAxis", {
                      get: ExpressionPropertyInterface(e.sa),
                    }),
                    Object.defineProperty(t, "orientation", {
                      get: ExpressionPropertyInterface(e.or),
                    }),
                    t
                  );
                };
              })(),
              LayerExpressionInterface = (function () {
                function e(u) {
                  var d = new Matrix();
                  if (u !== void 0) {
                    var E = this._elem.finalTransform.mProp.getValueAtTime(u);
                    E.clone(d);
                  } else {
                    var b = this._elem.finalTransform.mProp;
                    b.applyToMatrix(d);
                  }
                  return d;
                }
                function t(u, d) {
                  var E = this.getMatrix(d);
                  return (
                    (E.props[12] = 0),
                    (E.props[13] = 0),
                    (E.props[14] = 0),
                    this.applyPoint(E, u)
                  );
                }
                function r(u, d) {
                  var E = this.getMatrix(d);
                  return this.applyPoint(E, u);
                }
                function n(u, d) {
                  var E = this.getMatrix(d);
                  return (
                    (E.props[12] = 0),
                    (E.props[13] = 0),
                    (E.props[14] = 0),
                    this.invertPoint(E, u)
                  );
                }
                function i(u, d) {
                  var E = this.getMatrix(d);
                  return this.invertPoint(E, u);
                }
                function a(u, d) {
                  if (this._elem.hierarchy && this._elem.hierarchy.length) {
                    var E,
                      b = this._elem.hierarchy.length;
                    for (E = 0; E < b; E += 1)
                      this._elem.hierarchy[
                        E
                      ].finalTransform.mProp.applyToMatrix(u);
                  }
                  return u.applyToPointArray(d[0], d[1], d[2] || 0);
                }
                function o(u, d) {
                  if (this._elem.hierarchy && this._elem.hierarchy.length) {
                    var E,
                      b = this._elem.hierarchy.length;
                    for (E = 0; E < b; E += 1)
                      this._elem.hierarchy[
                        E
                      ].finalTransform.mProp.applyToMatrix(u);
                  }
                  return u.inversePoint(d);
                }
                function l(u) {
                  var d = new Matrix();
                  if (
                    (d.reset(),
                    this._elem.finalTransform.mProp.applyToMatrix(d),
                    this._elem.hierarchy && this._elem.hierarchy.length)
                  ) {
                    var E,
                      b = this._elem.hierarchy.length;
                    for (E = 0; E < b; E += 1)
                      this._elem.hierarchy[
                        E
                      ].finalTransform.mProp.applyToMatrix(d);
                    return d.inversePoint(u);
                  }
                  return d.inversePoint(u);
                }
                function c() {
                  return [1, 1, 1, 1];
                }
                return function (u) {
                  var d;
                  function E(T) {
                    P.mask = new MaskManagerInterface(T, u);
                  }
                  function b(T) {
                    P.effect = T;
                  }
                  function P(T) {
                    switch (T) {
                      case "ADBE Root Vectors Group":
                      case "Contents":
                      case 2:
                        return P.shapeInterface;
                      case 1:
                      case 6:
                      case "Transform":
                      case "transform":
                      case "ADBE Transform Group":
                        return d;
                      case 4:
                      case "ADBE Effect Parade":
                      case "effects":
                      case "Effects":
                        return P.effect;
                      case "ADBE Text Properties":
                        return P.textInterface;
                      default:
                        return null;
                    }
                  }
                  (P.getMatrix = e),
                    (P.invertPoint = o),
                    (P.applyPoint = a),
                    (P.toWorld = r),
                    (P.toWorldVec = t),
                    (P.fromWorld = i),
                    (P.fromWorldVec = n),
                    (P.toComp = r),
                    (P.fromComp = l),
                    (P.sampleImage = c),
                    (P.sourceRectAtTime = u.sourceRectAtTime.bind(u)),
                    (P._elem = u),
                    (d = TransformExpressionInterface(u.finalTransform.mProp));
                  var R = getDescriptor(d, "anchorPoint");
                  return (
                    Object.defineProperties(P, {
                      hasParent: {
                        get: function () {
                          return u.hierarchy.length;
                        },
                      },
                      parent: {
                        get: function () {
                          return u.hierarchy[0].layerInterface;
                        },
                      },
                      rotation: getDescriptor(d, "rotation"),
                      scale: getDescriptor(d, "scale"),
                      position: getDescriptor(d, "position"),
                      opacity: getDescriptor(d, "opacity"),
                      anchorPoint: R,
                      anchor_point: R,
                      transform: {
                        get: function () {
                          return d;
                        },
                      },
                      active: {
                        get: function () {
                          return u.isInRange;
                        },
                      },
                    }),
                    (P.startTime = u.data.st),
                    (P.index = u.data.ind),
                    (P.source = u.data.refId),
                    (P.height = u.data.ty === 0 ? u.data.h : 100),
                    (P.width = u.data.ty === 0 ? u.data.w : 100),
                    (P.inPoint = u.data.ip / u.comp.globalData.frameRate),
                    (P.outPoint = u.data.op / u.comp.globalData.frameRate),
                    (P._name = u.data.nm),
                    (P.registerMaskInterface = E),
                    (P.registerEffectsInterface = b),
                    P
                  );
                };
              })(),
              propertyGroupFactory = (function () {
                return function (e, t) {
                  return function (r) {
                    return (r = r === void 0 ? 1 : r), r <= 0 ? e : t(r - 1);
                  };
                };
              })(),
              PropertyInterface = (function () {
                return function (e, t) {
                  var r = { _name: e };
                  function n(i) {
                    return (i = i === void 0 ? 1 : i), i <= 0 ? r : t(i - 1);
                  }
                  return n;
                };
              })(),
              EffectsExpressionInterface = (function () {
                var e = { createEffectsInterface: t };
                function t(i, a) {
                  if (i.effectsManager) {
                    var o = [],
                      l = i.data.ef,
                      c,
                      u = i.effectsManager.effectElements.length;
                    for (c = 0; c < u; c += 1)
                      o.push(r(l[c], i.effectsManager.effectElements[c], a, i));
                    var d = i.data.ef || [],
                      E = function (P) {
                        for (c = 0, u = d.length; c < u; ) {
                          if (P === d[c].nm || P === d[c].mn || P === d[c].ix)
                            return o[c];
                          c += 1;
                        }
                        return null;
                      };
                    return (
                      Object.defineProperty(E, "numProperties", {
                        get: function () {
                          return d.length;
                        },
                      }),
                      E
                    );
                  }
                  return null;
                }
                function r(i, a, o, l) {
                  function c(P) {
                    for (var R = i.ef, T = 0, M = R.length; T < M; ) {
                      if (P === R[T].nm || P === R[T].mn || P === R[T].ix)
                        return R[T].ty === 5 ? d[T] : d[T]();
                      T += 1;
                    }
                    throw new Error();
                  }
                  var u = propertyGroupFactory(c, o),
                    d = [],
                    E,
                    b = i.ef.length;
                  for (E = 0; E < b; E += 1)
                    i.ef[E].ty === 5
                      ? d.push(
                          r(
                            i.ef[E],
                            a.effectElements[E],
                            a.effectElements[E].propertyGroup,
                            l
                          )
                        )
                      : d.push(n(a.effectElements[E], i.ef[E].ty, l, u));
                  return (
                    i.mn === "ADBE Color Control" &&
                      Object.defineProperty(c, "color", {
                        get: function () {
                          return d[0]();
                        },
                      }),
                    Object.defineProperties(c, {
                      numProperties: {
                        get: function () {
                          return i.np;
                        },
                      },
                      _name: { value: i.nm },
                      propertyGroup: { value: u },
                    }),
                    (c.enabled = i.en !== 0),
                    (c.active = c.enabled),
                    c
                  );
                }
                function n(i, a, o, l) {
                  var c = ExpressionPropertyInterface(i.p);
                  function u() {
                    return a === 10 ? o.comp.compInterface(i.p.v) : c();
                  }
                  return (
                    i.p.setGroupProperty &&
                      i.p.setGroupProperty(PropertyInterface("", l)),
                    u
                  );
                }
                return e;
              })(),
              ShapePathInterface = (function () {
                return function (t, r, n) {
                  var i = r.sh;
                  function a(l) {
                    return l === "Shape" ||
                      l === "shape" ||
                      l === "Path" ||
                      l === "path" ||
                      l === "ADBE Vector Shape" ||
                      l === 2
                      ? a.path
                      : null;
                  }
                  var o = propertyGroupFactory(a, n);
                  return (
                    i.setGroupProperty(PropertyInterface("Path", o)),
                    Object.defineProperties(a, {
                      path: {
                        get: function () {
                          return i.k && i.getValue(), i;
                        },
                      },
                      shape: {
                        get: function () {
                          return i.k && i.getValue(), i;
                        },
                      },
                      _name: { value: t.nm },
                      ix: { value: t.ix },
                      propertyIndex: { value: t.ix },
                      mn: { value: t.mn },
                      propertyGroup: { value: n },
                    }),
                    a
                  );
                };
              })(),
              ShapeExpressionInterface = (function () {
                function e(R, T, M) {
                  var x = [],
                    k,
                    S = R ? R.length : 0;
                  for (k = 0; k < S; k += 1)
                    R[k].ty === "gr"
                      ? x.push(r(R[k], T[k], M))
                      : R[k].ty === "fl"
                      ? x.push(n(R[k], T[k], M))
                      : R[k].ty === "st"
                      ? x.push(o(R[k], T[k], M))
                      : R[k].ty === "tm"
                      ? x.push(l(R[k], T[k], M))
                      : R[k].ty === "tr" ||
                        (R[k].ty === "el"
                          ? x.push(u(R[k], T[k], M))
                          : R[k].ty === "sr"
                          ? x.push(d(R[k], T[k], M))
                          : R[k].ty === "sh"
                          ? x.push(ShapePathInterface(R[k], T[k], M))
                          : R[k].ty === "rc"
                          ? x.push(E(R[k], T[k], M))
                          : R[k].ty === "rd"
                          ? x.push(b(R[k], T[k], M))
                          : R[k].ty === "rp"
                          ? x.push(P(R[k], T[k], M))
                          : R[k].ty === "gf"
                          ? x.push(i(R[k], T[k], M))
                          : x.push(a(R[k], T[k])));
                  return x;
                }
                function t(R, T, M) {
                  var x,
                    k = function (O) {
                      for (var F = 0, D = x.length; F < D; ) {
                        if (
                          x[F]._name === O ||
                          x[F].mn === O ||
                          x[F].propertyIndex === O ||
                          x[F].ix === O ||
                          x[F].ind === O
                        )
                          return x[F];
                        F += 1;
                      }
                      return typeof O == "number" ? x[O - 1] : null;
                    };
                  (k.propertyGroup = propertyGroupFactory(k, M)),
                    (x = e(R.it, T.it, k.propertyGroup)),
                    (k.numProperties = x.length);
                  var S = c(
                    R.it[R.it.length - 1],
                    T.it[T.it.length - 1],
                    k.propertyGroup
                  );
                  return (
                    (k.transform = S),
                    (k.propertyIndex = R.cix),
                    (k._name = R.nm),
                    k
                  );
                }
                function r(R, T, M) {
                  var x = function (O) {
                    switch (O) {
                      case "ADBE Vectors Group":
                      case "Contents":
                      case 2:
                        return x.content;
                      default:
                        return x.transform;
                    }
                  };
                  x.propertyGroup = propertyGroupFactory(x, M);
                  var k = t(R, T, x.propertyGroup),
                    S = c(
                      R.it[R.it.length - 1],
                      T.it[T.it.length - 1],
                      x.propertyGroup
                    );
                  return (
                    (x.content = k),
                    (x.transform = S),
                    Object.defineProperty(x, "_name", {
                      get: function () {
                        return R.nm;
                      },
                    }),
                    (x.numProperties = R.np),
                    (x.propertyIndex = R.ix),
                    (x.nm = R.nm),
                    (x.mn = R.mn),
                    x
                  );
                }
                function n(R, T, M) {
                  function x(k) {
                    return k === "Color" || k === "color"
                      ? x.color
                      : k === "Opacity" || k === "opacity"
                      ? x.opacity
                      : null;
                  }
                  return (
                    Object.defineProperties(x, {
                      color: { get: ExpressionPropertyInterface(T.c) },
                      opacity: { get: ExpressionPropertyInterface(T.o) },
                      _name: { value: R.nm },
                      mn: { value: R.mn },
                    }),
                    T.c.setGroupProperty(PropertyInterface("Color", M)),
                    T.o.setGroupProperty(PropertyInterface("Opacity", M)),
                    x
                  );
                }
                function i(R, T, M) {
                  function x(k) {
                    return k === "Start Point" || k === "start point"
                      ? x.startPoint
                      : k === "End Point" || k === "end point"
                      ? x.endPoint
                      : k === "Opacity" || k === "opacity"
                      ? x.opacity
                      : null;
                  }
                  return (
                    Object.defineProperties(x, {
                      startPoint: { get: ExpressionPropertyInterface(T.s) },
                      endPoint: { get: ExpressionPropertyInterface(T.e) },
                      opacity: { get: ExpressionPropertyInterface(T.o) },
                      type: {
                        get: function () {
                          return "a";
                        },
                      },
                      _name: { value: R.nm },
                      mn: { value: R.mn },
                    }),
                    T.s.setGroupProperty(PropertyInterface("Start Point", M)),
                    T.e.setGroupProperty(PropertyInterface("End Point", M)),
                    T.o.setGroupProperty(PropertyInterface("Opacity", M)),
                    x
                  );
                }
                function a() {
                  function R() {
                    return null;
                  }
                  return R;
                }
                function o(R, T, M) {
                  var x = propertyGroupFactory(D, M),
                    k = propertyGroupFactory(F, x);
                  function S(H) {
                    Object.defineProperty(F, R.d[H].nm, {
                      get: ExpressionPropertyInterface(T.d.dataProps[H].p),
                    });
                  }
                  var A,
                    O = R.d ? R.d.length : 0,
                    F = {};
                  for (A = 0; A < O; A += 1)
                    S(A), T.d.dataProps[A].p.setGroupProperty(k);
                  function D(H) {
                    return H === "Color" || H === "color"
                      ? D.color
                      : H === "Opacity" || H === "opacity"
                      ? D.opacity
                      : H === "Stroke Width" || H === "stroke width"
                      ? D.strokeWidth
                      : null;
                  }
                  return (
                    Object.defineProperties(D, {
                      color: { get: ExpressionPropertyInterface(T.c) },
                      opacity: { get: ExpressionPropertyInterface(T.o) },
                      strokeWidth: { get: ExpressionPropertyInterface(T.w) },
                      dash: {
                        get: function () {
                          return F;
                        },
                      },
                      _name: { value: R.nm },
                      mn: { value: R.mn },
                    }),
                    T.c.setGroupProperty(PropertyInterface("Color", x)),
                    T.o.setGroupProperty(PropertyInterface("Opacity", x)),
                    T.w.setGroupProperty(PropertyInterface("Stroke Width", x)),
                    D
                  );
                }
                function l(R, T, M) {
                  function x(S) {
                    return S === R.e.ix || S === "End" || S === "end"
                      ? x.end
                      : S === R.s.ix
                      ? x.start
                      : S === R.o.ix
                      ? x.offset
                      : null;
                  }
                  var k = propertyGroupFactory(x, M);
                  return (
                    (x.propertyIndex = R.ix),
                    T.s.setGroupProperty(PropertyInterface("Start", k)),
                    T.e.setGroupProperty(PropertyInterface("End", k)),
                    T.o.setGroupProperty(PropertyInterface("Offset", k)),
                    (x.propertyIndex = R.ix),
                    (x.propertyGroup = M),
                    Object.defineProperties(x, {
                      start: { get: ExpressionPropertyInterface(T.s) },
                      end: { get: ExpressionPropertyInterface(T.e) },
                      offset: { get: ExpressionPropertyInterface(T.o) },
                      _name: { value: R.nm },
                    }),
                    (x.mn = R.mn),
                    x
                  );
                }
                function c(R, T, M) {
                  function x(S) {
                    return R.a.ix === S || S === "Anchor Point"
                      ? x.anchorPoint
                      : R.o.ix === S || S === "Opacity"
                      ? x.opacity
                      : R.p.ix === S || S === "Position"
                      ? x.position
                      : R.r.ix === S ||
                        S === "Rotation" ||
                        S === "ADBE Vector Rotation"
                      ? x.rotation
                      : R.s.ix === S || S === "Scale"
                      ? x.scale
                      : (R.sk && R.sk.ix === S) || S === "Skew"
                      ? x.skew
                      : (R.sa && R.sa.ix === S) || S === "Skew Axis"
                      ? x.skewAxis
                      : null;
                  }
                  var k = propertyGroupFactory(x, M);
                  return (
                    T.transform.mProps.o.setGroupProperty(
                      PropertyInterface("Opacity", k)
                    ),
                    T.transform.mProps.p.setGroupProperty(
                      PropertyInterface("Position", k)
                    ),
                    T.transform.mProps.a.setGroupProperty(
                      PropertyInterface("Anchor Point", k)
                    ),
                    T.transform.mProps.s.setGroupProperty(
                      PropertyInterface("Scale", k)
                    ),
                    T.transform.mProps.r.setGroupProperty(
                      PropertyInterface("Rotation", k)
                    ),
                    T.transform.mProps.sk &&
                      (T.transform.mProps.sk.setGroupProperty(
                        PropertyInterface("Skew", k)
                      ),
                      T.transform.mProps.sa.setGroupProperty(
                        PropertyInterface("Skew Angle", k)
                      )),
                    T.transform.op.setGroupProperty(
                      PropertyInterface("Opacity", k)
                    ),
                    Object.defineProperties(x, {
                      opacity: {
                        get: ExpressionPropertyInterface(T.transform.mProps.o),
                      },
                      position: {
                        get: ExpressionPropertyInterface(T.transform.mProps.p),
                      },
                      anchorPoint: {
                        get: ExpressionPropertyInterface(T.transform.mProps.a),
                      },
                      scale: {
                        get: ExpressionPropertyInterface(T.transform.mProps.s),
                      },
                      rotation: {
                        get: ExpressionPropertyInterface(T.transform.mProps.r),
                      },
                      skew: {
                        get: ExpressionPropertyInterface(T.transform.mProps.sk),
                      },
                      skewAxis: {
                        get: ExpressionPropertyInterface(T.transform.mProps.sa),
                      },
                      _name: { value: R.nm },
                    }),
                    (x.ty = "tr"),
                    (x.mn = R.mn),
                    (x.propertyGroup = M),
                    x
                  );
                }
                function u(R, T, M) {
                  function x(A) {
                    return R.p.ix === A
                      ? x.position
                      : R.s.ix === A
                      ? x.size
                      : null;
                  }
                  var k = propertyGroupFactory(x, M);
                  x.propertyIndex = R.ix;
                  var S = T.sh.ty === "tm" ? T.sh.prop : T.sh;
                  return (
                    S.s.setGroupProperty(PropertyInterface("Size", k)),
                    S.p.setGroupProperty(PropertyInterface("Position", k)),
                    Object.defineProperties(x, {
                      size: { get: ExpressionPropertyInterface(S.s) },
                      position: { get: ExpressionPropertyInterface(S.p) },
                      _name: { value: R.nm },
                    }),
                    (x.mn = R.mn),
                    x
                  );
                }
                function d(R, T, M) {
                  function x(A) {
                    return R.p.ix === A
                      ? x.position
                      : R.r.ix === A
                      ? x.rotation
                      : R.pt.ix === A
                      ? x.points
                      : R.or.ix === A || A === "ADBE Vector Star Outer Radius"
                      ? x.outerRadius
                      : R.os.ix === A
                      ? x.outerRoundness
                      : R.ir &&
                        (R.ir.ix === A || A === "ADBE Vector Star Inner Radius")
                      ? x.innerRadius
                      : R.is && R.is.ix === A
                      ? x.innerRoundness
                      : null;
                  }
                  var k = propertyGroupFactory(x, M),
                    S = T.sh.ty === "tm" ? T.sh.prop : T.sh;
                  return (
                    (x.propertyIndex = R.ix),
                    S.or.setGroupProperty(PropertyInterface("Outer Radius", k)),
                    S.os.setGroupProperty(
                      PropertyInterface("Outer Roundness", k)
                    ),
                    S.pt.setGroupProperty(PropertyInterface("Points", k)),
                    S.p.setGroupProperty(PropertyInterface("Position", k)),
                    S.r.setGroupProperty(PropertyInterface("Rotation", k)),
                    R.ir &&
                      (S.ir.setGroupProperty(
                        PropertyInterface("Inner Radius", k)
                      ),
                      S.is.setGroupProperty(
                        PropertyInterface("Inner Roundness", k)
                      )),
                    Object.defineProperties(x, {
                      position: { get: ExpressionPropertyInterface(S.p) },
                      rotation: { get: ExpressionPropertyInterface(S.r) },
                      points: { get: ExpressionPropertyInterface(S.pt) },
                      outerRadius: { get: ExpressionPropertyInterface(S.or) },
                      outerRoundness: {
                        get: ExpressionPropertyInterface(S.os),
                      },
                      innerRadius: { get: ExpressionPropertyInterface(S.ir) },
                      innerRoundness: {
                        get: ExpressionPropertyInterface(S.is),
                      },
                      _name: { value: R.nm },
                    }),
                    (x.mn = R.mn),
                    x
                  );
                }
                function E(R, T, M) {
                  function x(A) {
                    return R.p.ix === A
                      ? x.position
                      : R.r.ix === A
                      ? x.roundness
                      : R.s.ix === A ||
                        A === "Size" ||
                        A === "ADBE Vector Rect Size"
                      ? x.size
                      : null;
                  }
                  var k = propertyGroupFactory(x, M),
                    S = T.sh.ty === "tm" ? T.sh.prop : T.sh;
                  return (
                    (x.propertyIndex = R.ix),
                    S.p.setGroupProperty(PropertyInterface("Position", k)),
                    S.s.setGroupProperty(PropertyInterface("Size", k)),
                    S.r.setGroupProperty(PropertyInterface("Rotation", k)),
                    Object.defineProperties(x, {
                      position: { get: ExpressionPropertyInterface(S.p) },
                      roundness: { get: ExpressionPropertyInterface(S.r) },
                      size: { get: ExpressionPropertyInterface(S.s) },
                      _name: { value: R.nm },
                    }),
                    (x.mn = R.mn),
                    x
                  );
                }
                function b(R, T, M) {
                  function x(A) {
                    return R.r.ix === A || A === "Round Corners 1"
                      ? x.radius
                      : null;
                  }
                  var k = propertyGroupFactory(x, M),
                    S = T;
                  return (
                    (x.propertyIndex = R.ix),
                    S.rd.setGroupProperty(PropertyInterface("Radius", k)),
                    Object.defineProperties(x, {
                      radius: { get: ExpressionPropertyInterface(S.rd) },
                      _name: { value: R.nm },
                    }),
                    (x.mn = R.mn),
                    x
                  );
                }
                function P(R, T, M) {
                  function x(A) {
                    return R.c.ix === A || A === "Copies"
                      ? x.copies
                      : R.o.ix === A || A === "Offset"
                      ? x.offset
                      : null;
                  }
                  var k = propertyGroupFactory(x, M),
                    S = T;
                  return (
                    (x.propertyIndex = R.ix),
                    S.c.setGroupProperty(PropertyInterface("Copies", k)),
                    S.o.setGroupProperty(PropertyInterface("Offset", k)),
                    Object.defineProperties(x, {
                      copies: { get: ExpressionPropertyInterface(S.c) },
                      offset: { get: ExpressionPropertyInterface(S.o) },
                      _name: { value: R.nm },
                    }),
                    (x.mn = R.mn),
                    x
                  );
                }
                return function (R, T, M) {
                  var x;
                  function k(A) {
                    if (typeof A == "number")
                      return (A = A === void 0 ? 1 : A), A === 0 ? M : x[A - 1];
                    for (var O = 0, F = x.length; O < F; ) {
                      if (x[O]._name === A) return x[O];
                      O += 1;
                    }
                    return null;
                  }
                  function S() {
                    return M;
                  }
                  return (
                    (k.propertyGroup = propertyGroupFactory(k, S)),
                    (x = e(R, T, k.propertyGroup)),
                    (k.numProperties = x.length),
                    (k._name = "Contents"),
                    k
                  );
                };
              })(),
              TextExpressionInterface = (function () {
                return function (e) {
                  var t;
                  function r(n) {
                    switch (n) {
                      case "ADBE Text Document":
                        return r.sourceText;
                      default:
                        return null;
                    }
                  }
                  return (
                    Object.defineProperty(r, "sourceText", {
                      get: function () {
                        e.textProperty.getValue();
                        var i = e.textProperty.currentData.t;
                        return (
                          (!t || i !== t.value) &&
                            ((t = new String(i)),
                            (t.value = i || new String(i)),
                            Object.defineProperty(t, "style", {
                              get: function () {
                                return {
                                  fillColor: e.textProperty.currentData.fc,
                                };
                              },
                            })),
                          t
                        );
                      },
                    }),
                    r
                  );
                };
              })();
            function _typeof(e) {
              "@babel/helpers - typeof";
              return (
                typeof Symbol == "function" &&
                typeof Symbol.iterator == "symbol"
                  ? (_typeof = function (r) {
                      return typeof r;
                    })
                  : (_typeof = function (r) {
                      return r &&
                        typeof Symbol == "function" &&
                        r.constructor === Symbol &&
                        r !== Symbol.prototype
                        ? "symbol"
                        : typeof r;
                    }),
                _typeof(e)
              );
            }
            var FootageInterface = (function () {
                var e = function (n) {
                    var i = "",
                      a = n.getFootageData();
                    function o() {
                      return (i = ""), (a = n.getFootageData()), l;
                    }
                    function l(c) {
                      if (a[c])
                        return (
                          (i = c), (a = a[c]), _typeof(a) === "object" ? l : a
                        );
                      var u = c.indexOf(i);
                      if (u !== -1) {
                        var d = parseInt(c.substr(u + i.length), 10);
                        return (a = a[d]), _typeof(a) === "object" ? l : a;
                      }
                      return "";
                    }
                    return o;
                  },
                  t = function (n) {
                    function i(a) {
                      return a === "Outline" ? i.outlineInterface() : null;
                    }
                    return (
                      (i._name = "Outline"), (i.outlineInterface = e(n)), i
                    );
                  };
                return function (r) {
                  function n(i) {
                    return i === "Data" ? n.dataInterface : null;
                  }
                  return (n._name = "Data"), (n.dataInterface = t(r)), n;
                };
              })(),
              interfaces = {
                layer: LayerExpressionInterface,
                effects: EffectsExpressionInterface,
                comp: CompExpressionInterface,
                shape: ShapeExpressionInterface,
                text: TextExpressionInterface,
                footage: FootageInterface,
              };
            function getInterface(e) {
              return interfaces[e] || null;
            }
            var expressionHelpers = (function () {
              function e(o, l, c) {
                l.x &&
                  ((c.k = !0),
                  (c.x = !0),
                  (c.initiateExpression = ExpressionManager.initiateExpression),
                  c.effectsSequence.push(
                    c.initiateExpression(o, l, c).bind(c)
                  ));
              }
              function t(o) {
                return (
                  (o *= this.elem.globalData.frameRate),
                  (o -= this.offsetTime),
                  o !== this._cachingAtTime.lastFrame &&
                    ((this._cachingAtTime.lastIndex =
                      this._cachingAtTime.lastFrame < o
                        ? this._cachingAtTime.lastIndex
                        : 0),
                    (this._cachingAtTime.value = this.interpolateValue(
                      o,
                      this._cachingAtTime
                    )),
                    (this._cachingAtTime.lastFrame = o)),
                  this._cachingAtTime.value
                );
              }
              function r(o) {
                var l = -0.01,
                  c = this.getValueAtTime(o),
                  u = this.getValueAtTime(o + l),
                  d = 0;
                if (c.length) {
                  var E;
                  for (E = 0; E < c.length; E += 1)
                    d += Math.pow(u[E] - c[E], 2);
                  d = Math.sqrt(d) * 100;
                } else d = 0;
                return d;
              }
              function n(o) {
                if (this.vel !== void 0) return this.vel;
                var l = -0.001,
                  c = this.getValueAtTime(o),
                  u = this.getValueAtTime(o + l),
                  d;
                if (c.length) {
                  d = createTypedArray("float32", c.length);
                  var E;
                  for (E = 0; E < c.length; E += 1) d[E] = (u[E] - c[E]) / l;
                } else d = (u - c) / l;
                return d;
              }
              function i() {
                return this.pv;
              }
              function a(o) {
                this.propertyGroup = o;
              }
              return {
                searchExpressions: e,
                getSpeedAtTime: r,
                getVelocityAtTime: n,
                getValueAtTime: t,
                getStaticValueAtTime: i,
                setGroupProperty: a,
              };
            })();
            function addPropertyDecorator() {
              function e(b, P, R) {
                if (!this.k || !this.keyframes) return this.pv;
                b = b ? b.toLowerCase() : "";
                var T = this.comp.renderedFrame,
                  M = this.keyframes,
                  x = M[M.length - 1].t;
                if (T <= x) return this.pv;
                var k, S;
                R
                  ? (P
                      ? (k = Math.abs(
                          x - this.elem.comp.globalData.frameRate * P
                        ))
                      : (k = Math.max(0, x - this.elem.data.ip)),
                    (S = x - k))
                  : ((!P || P > M.length - 1) && (P = M.length - 1),
                    (S = M[M.length - 1 - P].t),
                    (k = x - S));
                var A, O, F;
                if (b === "pingpong") {
                  var D = Math.floor((T - S) / k);
                  if (D % 2 !== 0)
                    return this.getValueAtTime(
                      (k - ((T - S) % k) + S) / this.comp.globalData.frameRate,
                      0
                    );
                } else if (b === "offset") {
                  var H = this.getValueAtTime(
                      S / this.comp.globalData.frameRate,
                      0
                    ),
                    $ = this.getValueAtTime(
                      x / this.comp.globalData.frameRate,
                      0
                    ),
                    q = this.getValueAtTime(
                      (((T - S) % k) + S) / this.comp.globalData.frameRate,
                      0
                    ),
                    J = Math.floor((T - S) / k);
                  if (this.pv.length) {
                    for (
                      F = new Array(H.length), O = F.length, A = 0;
                      A < O;
                      A += 1
                    )
                      F[A] = ($[A] - H[A]) * J + q[A];
                    return F;
                  }
                  return ($ - H) * J + q;
                } else if (b === "continue") {
                  var K = this.getValueAtTime(
                      x / this.comp.globalData.frameRate,
                      0
                    ),
                    ee = this.getValueAtTime(
                      (x - 0.001) / this.comp.globalData.frameRate,
                      0
                    );
                  if (this.pv.length) {
                    for (
                      F = new Array(K.length), O = F.length, A = 0;
                      A < O;
                      A += 1
                    )
                      F[A] =
                        K[A] +
                        ((K[A] - ee[A]) *
                          ((T - x) / this.comp.globalData.frameRate)) /
                          5e-4;
                    return F;
                  }
                  return K + (K - ee) * ((T - x) / 0.001);
                }
                return this.getValueAtTime(
                  (((T - S) % k) + S) / this.comp.globalData.frameRate,
                  0
                );
              }
              function t(b, P, R) {
                if (!this.k) return this.pv;
                b = b ? b.toLowerCase() : "";
                var T = this.comp.renderedFrame,
                  M = this.keyframes,
                  x = M[0].t;
                if (T >= x) return this.pv;
                var k, S;
                R
                  ? (P
                      ? (k = Math.abs(this.elem.comp.globalData.frameRate * P))
                      : (k = Math.max(0, this.elem.data.op - x)),
                    (S = x + k))
                  : ((!P || P > M.length - 1) && (P = M.length - 1),
                    (S = M[P].t),
                    (k = S - x));
                var A, O, F;
                if (b === "pingpong") {
                  var D = Math.floor((x - T) / k);
                  if (D % 2 === 0)
                    return this.getValueAtTime(
                      (((x - T) % k) + x) / this.comp.globalData.frameRate,
                      0
                    );
                } else if (b === "offset") {
                  var H = this.getValueAtTime(
                      x / this.comp.globalData.frameRate,
                      0
                    ),
                    $ = this.getValueAtTime(
                      S / this.comp.globalData.frameRate,
                      0
                    ),
                    q = this.getValueAtTime(
                      (k - ((x - T) % k) + x) / this.comp.globalData.frameRate,
                      0
                    ),
                    J = Math.floor((x - T) / k) + 1;
                  if (this.pv.length) {
                    for (
                      F = new Array(H.length), O = F.length, A = 0;
                      A < O;
                      A += 1
                    )
                      F[A] = q[A] - ($[A] - H[A]) * J;
                    return F;
                  }
                  return q - ($ - H) * J;
                } else if (b === "continue") {
                  var K = this.getValueAtTime(
                      x / this.comp.globalData.frameRate,
                      0
                    ),
                    ee = this.getValueAtTime(
                      (x + 0.001) / this.comp.globalData.frameRate,
                      0
                    );
                  if (this.pv.length) {
                    for (
                      F = new Array(K.length), O = F.length, A = 0;
                      A < O;
                      A += 1
                    )
                      F[A] = K[A] + ((K[A] - ee[A]) * (x - T)) / 0.001;
                    return F;
                  }
                  return K + ((K - ee) * (x - T)) / 0.001;
                }
                return this.getValueAtTime(
                  (k - (((x - T) % k) + x)) / this.comp.globalData.frameRate,
                  0
                );
              }
              function r(b, P) {
                if (!this.k) return this.pv;
                if (((b = (b || 0.4) * 0.5), (P = Math.floor(P || 5)), P <= 1))
                  return this.pv;
                var R =
                    this.comp.renderedFrame / this.comp.globalData.frameRate,
                  T = R - b,
                  M = R + b,
                  x = P > 1 ? (M - T) / (P - 1) : 1,
                  k = 0,
                  S = 0,
                  A;
                this.pv.length
                  ? (A = createTypedArray("float32", this.pv.length))
                  : (A = 0);
                for (var O; k < P; ) {
                  if (((O = this.getValueAtTime(T + k * x)), this.pv.length))
                    for (S = 0; S < this.pv.length; S += 1) A[S] += O[S];
                  else A += O;
                  k += 1;
                }
                if (this.pv.length)
                  for (S = 0; S < this.pv.length; S += 1) A[S] /= P;
                else A /= P;
                return A;
              }
              function n(b) {
                this._transformCachingAtTime ||
                  (this._transformCachingAtTime = { v: new Matrix() });
                var P = this._transformCachingAtTime.v;
                if (
                  (P.cloneFromProps(this.pre.props),
                  this.appliedTransformations < 1)
                ) {
                  var R = this.a.getValueAtTime(b);
                  P.translate(
                    -R[0] * this.a.mult,
                    -R[1] * this.a.mult,
                    R[2] * this.a.mult
                  );
                }
                if (this.appliedTransformations < 2) {
                  var T = this.s.getValueAtTime(b);
                  P.scale(
                    T[0] * this.s.mult,
                    T[1] * this.s.mult,
                    T[2] * this.s.mult
                  );
                }
                if (this.sk && this.appliedTransformations < 3) {
                  var M = this.sk.getValueAtTime(b),
                    x = this.sa.getValueAtTime(b);
                  P.skewFromAxis(-M * this.sk.mult, x * this.sa.mult);
                }
                if (this.r && this.appliedTransformations < 4) {
                  var k = this.r.getValueAtTime(b);
                  P.rotate(-k * this.r.mult);
                } else if (!this.r && this.appliedTransformations < 4) {
                  var S = this.rz.getValueAtTime(b),
                    A = this.ry.getValueAtTime(b),
                    O = this.rx.getValueAtTime(b),
                    F = this.or.getValueAtTime(b);
                  P.rotateZ(-S * this.rz.mult)
                    .rotateY(A * this.ry.mult)
                    .rotateX(O * this.rx.mult)
                    .rotateZ(-F[2] * this.or.mult)
                    .rotateY(F[1] * this.or.mult)
                    .rotateX(F[0] * this.or.mult);
                }
                if (this.data.p && this.data.p.s) {
                  var D = this.px.getValueAtTime(b),
                    H = this.py.getValueAtTime(b);
                  if (this.data.p.z) {
                    var $ = this.pz.getValueAtTime(b);
                    P.translate(
                      D * this.px.mult,
                      H * this.py.mult,
                      -$ * this.pz.mult
                    );
                  } else P.translate(D * this.px.mult, H * this.py.mult, 0);
                } else {
                  var q = this.p.getValueAtTime(b);
                  P.translate(
                    q[0] * this.p.mult,
                    q[1] * this.p.mult,
                    -q[2] * this.p.mult
                  );
                }
                return P;
              }
              function i() {
                return this.v.clone(new Matrix());
              }
              var a = TransformPropertyFactory.getTransformProperty;
              TransformPropertyFactory.getTransformProperty = function (
                b,
                P,
                R
              ) {
                var T = a(b, P, R);
                return (
                  T.dynamicProperties.length
                    ? (T.getValueAtTime = n.bind(T))
                    : (T.getValueAtTime = i.bind(T)),
                  (T.setGroupProperty = expressionHelpers.setGroupProperty),
                  T
                );
              };
              var o = PropertyFactory.getProp;
              PropertyFactory.getProp = function (b, P, R, T, M) {
                var x = o(b, P, R, T, M);
                x.kf
                  ? (x.getValueAtTime =
                      expressionHelpers.getValueAtTime.bind(x))
                  : (x.getValueAtTime =
                      expressionHelpers.getStaticValueAtTime.bind(x)),
                  (x.setGroupProperty = expressionHelpers.setGroupProperty),
                  (x.loopOut = e),
                  (x.loopIn = t),
                  (x.smooth = r),
                  (x.getVelocityAtTime =
                    expressionHelpers.getVelocityAtTime.bind(x)),
                  (x.getSpeedAtTime = expressionHelpers.getSpeedAtTime.bind(x)),
                  (x.numKeys = P.a === 1 ? P.k.length : 0),
                  (x.propertyIndex = P.ix);
                var k = 0;
                return (
                  R !== 0 &&
                    (k = createTypedArray(
                      "float32",
                      P.a === 1 ? P.k[0].s.length : P.k.length
                    )),
                  (x._cachingAtTime = {
                    lastFrame: initialDefaultFrame,
                    lastIndex: 0,
                    value: k,
                  }),
                  expressionHelpers.searchExpressions(b, P, x),
                  x.k && M.addDynamicProperty(x),
                  x
                );
              };
              function l(b) {
                return (
                  this._cachingAtTime ||
                    (this._cachingAtTime = {
                      shapeValue: shapePool.clone(this.pv),
                      lastIndex: 0,
                      lastTime: initialDefaultFrame,
                    }),
                  (b *= this.elem.globalData.frameRate),
                  (b -= this.offsetTime),
                  b !== this._cachingAtTime.lastTime &&
                    ((this._cachingAtTime.lastIndex =
                      this._cachingAtTime.lastTime < b
                        ? this._caching.lastIndex
                        : 0),
                    (this._cachingAtTime.lastTime = b),
                    this.interpolateShape(
                      b,
                      this._cachingAtTime.shapeValue,
                      this._cachingAtTime
                    )),
                  this._cachingAtTime.shapeValue
                );
              }
              var c = ShapePropertyFactory.getConstructorFunction(),
                u = ShapePropertyFactory.getKeyframedConstructorFunction();
              function d() {}
              (d.prototype = {
                vertices: function (P, R) {
                  this.k && this.getValue();
                  var T = this.v;
                  R !== void 0 && (T = this.getValueAtTime(R, 0));
                  var M,
                    x = T._length,
                    k = T[P],
                    S = T.v,
                    A = createSizedArray(x);
                  for (M = 0; M < x; M += 1)
                    P === "i" || P === "o"
                      ? (A[M] = [k[M][0] - S[M][0], k[M][1] - S[M][1]])
                      : (A[M] = [k[M][0], k[M][1]]);
                  return A;
                },
                points: function (P) {
                  return this.vertices("v", P);
                },
                inTangents: function (P) {
                  return this.vertices("i", P);
                },
                outTangents: function (P) {
                  return this.vertices("o", P);
                },
                isClosed: function () {
                  return this.v.c;
                },
                pointOnPath: function (P, R) {
                  var T = this.v;
                  R !== void 0 && (T = this.getValueAtTime(R, 0)),
                    this._segmentsLength ||
                      (this._segmentsLength = bez.getSegmentsLength(T));
                  for (
                    var M = this._segmentsLength,
                      x = M.lengths,
                      k = M.totalLength * P,
                      S = 0,
                      A = x.length,
                      O = 0,
                      F;
                    S < A;

                  ) {
                    if (O + x[S].addedLength > k) {
                      var D = S,
                        H = T.c && S === A - 1 ? 0 : S + 1,
                        $ = (k - O) / x[S].addedLength;
                      F = bez.getPointInSegment(
                        T.v[D],
                        T.v[H],
                        T.o[D],
                        T.i[H],
                        $,
                        x[S]
                      );
                      break;
                    } else O += x[S].addedLength;
                    S += 1;
                  }
                  return (
                    F ||
                      (F = T.c
                        ? [T.v[0][0], T.v[0][1]]
                        : [T.v[T._length - 1][0], T.v[T._length - 1][1]]),
                    F
                  );
                },
                vectorOnPath: function (P, R, T) {
                  P == 1 ? (P = this.v.c) : P == 0 && (P = 0.999);
                  var M = this.pointOnPath(P, R),
                    x = this.pointOnPath(P + 0.001, R),
                    k = x[0] - M[0],
                    S = x[1] - M[1],
                    A = Math.sqrt(Math.pow(k, 2) + Math.pow(S, 2));
                  if (A === 0) return [0, 0];
                  var O = T === "tangent" ? [k / A, S / A] : [-S / A, k / A];
                  return O;
                },
                tangentOnPath: function (P, R) {
                  return this.vectorOnPath(P, R, "tangent");
                },
                normalOnPath: function (P, R) {
                  return this.vectorOnPath(P, R, "normal");
                },
                setGroupProperty: expressionHelpers.setGroupProperty,
                getValueAtTime: expressionHelpers.getStaticValueAtTime,
              }),
                extendPrototype([d], c),
                extendPrototype([d], u),
                (u.prototype.getValueAtTime = l),
                (u.prototype.initiateExpression =
                  ExpressionManager.initiateExpression);
              var E = ShapePropertyFactory.getShapeProp;
              ShapePropertyFactory.getShapeProp = function (b, P, R, T, M) {
                var x = E(b, P, R, T, M);
                return (
                  (x.propertyIndex = P.ix),
                  (x.lock = !1),
                  R === 3
                    ? expressionHelpers.searchExpressions(b, P.pt, x)
                    : R === 4 &&
                      expressionHelpers.searchExpressions(b, P.ks, x),
                  x.k && b.addDynamicProperty(x),
                  x
                );
              };
            }
            function initialize$1() {
              addPropertyDecorator();
            }
            function addDecorator() {
              function e() {
                return this.data.d.x
                  ? ((this.calculateExpression =
                      ExpressionManager.initiateExpression.bind(this)(
                        this.elem,
                        this.data.d,
                        this
                      )),
                    this.addEffect(this.getExpressionValue.bind(this)),
                    !0)
                  : null;
              }
              (TextProperty.prototype.getExpressionValue = function (t, r) {
                var n = this.calculateExpression(r);
                if (t.t !== n) {
                  var i = {};
                  return (
                    this.copyData(i, t),
                    (i.t = n.toString()),
                    (i.__complete = !1),
                    i
                  );
                }
                return t;
              }),
                (TextProperty.prototype.searchProperty = function () {
                  var t = this.searchKeyframes(),
                    r = this.searchExpressions();
                  return (this.kf = t || r), this.kf;
                }),
                (TextProperty.prototype.searchExpressions = e);
            }
            function initialize() {
              addDecorator();
            }
            function SVGComposableEffect() {}
            SVGComposableEffect.prototype = {
              createMergeNode: function e(t, r) {
                var n = createNS("feMerge");
                n.setAttribute("result", t);
                var i, a;
                for (a = 0; a < r.length; a += 1)
                  (i = createNS("feMergeNode")),
                    i.setAttribute("in", r[a]),
                    n.appendChild(i),
                    n.appendChild(i);
                return n;
              },
            };
            var linearFilterValue =
              "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0";
            function SVGTintFilter(e, t, r, n, i) {
              this.filterManager = t;
              var a = createNS("feColorMatrix");
              a.setAttribute("type", "matrix"),
                a.setAttribute("color-interpolation-filters", "linearRGB"),
                a.setAttribute("values", linearFilterValue + " 1 0"),
                (this.linearFilter = a),
                a.setAttribute("result", n + "_tint_1"),
                e.appendChild(a),
                (a = createNS("feColorMatrix")),
                a.setAttribute("type", "matrix"),
                a.setAttribute("color-interpolation-filters", "sRGB"),
                a.setAttribute(
                  "values",
                  "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"
                ),
                a.setAttribute("result", n + "_tint_2"),
                e.appendChild(a),
                (this.matrixFilter = a);
              var o = this.createMergeNode(n, [
                i,
                n + "_tint_1",
                n + "_tint_2",
              ]);
              e.appendChild(o);
            }
            extendPrototype([SVGComposableEffect], SVGTintFilter),
              (SVGTintFilter.prototype.renderFrame = function (e) {
                if (e || this.filterManager._mdf) {
                  var t = this.filterManager.effectElements[0].p.v,
                    r = this.filterManager.effectElements[1].p.v,
                    n = this.filterManager.effectElements[2].p.v / 100;
                  this.linearFilter.setAttribute(
                    "values",
                    linearFilterValue + " " + n + " 0"
                  ),
                    this.matrixFilter.setAttribute(
                      "values",
                      r[0] -
                        t[0] +
                        " 0 0 0 " +
                        t[0] +
                        " " +
                        (r[1] - t[1]) +
                        " 0 0 0 " +
                        t[1] +
                        " " +
                        (r[2] - t[2]) +
                        " 0 0 0 " +
                        t[2] +
                        " 0 0 0 1 0"
                    );
                }
              });
            function SVGFillFilter(e, t, r, n) {
              this.filterManager = t;
              var i = createNS("feColorMatrix");
              i.setAttribute("type", "matrix"),
                i.setAttribute("color-interpolation-filters", "sRGB"),
                i.setAttribute(
                  "values",
                  "1 0 0 0 0 0 1 0 0 0 0 0 1 0 0 0 0 0 1 0"
                ),
                i.setAttribute("result", n),
                e.appendChild(i),
                (this.matrixFilter = i);
            }
            SVGFillFilter.prototype.renderFrame = function (e) {
              if (e || this.filterManager._mdf) {
                var t = this.filterManager.effectElements[2].p.v,
                  r = this.filterManager.effectElements[6].p.v;
                this.matrixFilter.setAttribute(
                  "values",
                  "0 0 0 0 " +
                    t[0] +
                    " 0 0 0 0 " +
                    t[1] +
                    " 0 0 0 0 " +
                    t[2] +
                    " 0 0 0 " +
                    r +
                    " 0"
                );
              }
            };
            function SVGStrokeEffect(e, t, r) {
              (this.initialized = !1),
                (this.filterManager = t),
                (this.elem = r),
                (this.paths = []);
            }
            (SVGStrokeEffect.prototype.initialize = function () {
              var e =
                  this.elem.layerElement.children ||
                  this.elem.layerElement.childNodes,
                t,
                r,
                n,
                i;
              for (
                this.filterManager.effectElements[1].p.v === 1
                  ? ((i = this.elem.maskManager.masksProperties.length),
                    (n = 0))
                  : ((n = this.filterManager.effectElements[0].p.v - 1),
                    (i = n + 1)),
                  r = createNS("g"),
                  r.setAttribute("fill", "none"),
                  r.setAttribute("stroke-linecap", "round"),
                  r.setAttribute("stroke-dashoffset", 1),
                  n;
                n < i;
                n += 1
              )
                (t = createNS("path")),
                  r.appendChild(t),
                  this.paths.push({ p: t, m: n });
              if (this.filterManager.effectElements[10].p.v === 3) {
                var a = createNS("mask"),
                  o = createElementID();
                a.setAttribute("id", o),
                  a.setAttribute("mask-type", "alpha"),
                  a.appendChild(r),
                  this.elem.globalData.defs.appendChild(a);
                var l = createNS("g");
                for (
                  l.setAttribute(
                    "mask",
                    "url(" + getLocationHref() + "#" + o + ")"
                  );
                  e[0];

                )
                  l.appendChild(e[0]);
                this.elem.layerElement.appendChild(l),
                  (this.masker = a),
                  r.setAttribute("stroke", "#fff");
              } else if (
                this.filterManager.effectElements[10].p.v === 1 ||
                this.filterManager.effectElements[10].p.v === 2
              ) {
                if (this.filterManager.effectElements[10].p.v === 2)
                  for (
                    e =
                      this.elem.layerElement.children ||
                      this.elem.layerElement.childNodes;
                    e.length;

                  )
                    this.elem.layerElement.removeChild(e[0]);
                this.elem.layerElement.appendChild(r),
                  this.elem.layerElement.removeAttribute("mask"),
                  r.setAttribute("stroke", "#fff");
              }
              (this.initialized = !0), (this.pathMasker = r);
            }),
              (SVGStrokeEffect.prototype.renderFrame = function (e) {
                this.initialized || this.initialize();
                var t,
                  r = this.paths.length,
                  n,
                  i;
                for (t = 0; t < r; t += 1)
                  if (
                    this.paths[t].m !== -1 &&
                    ((n = this.elem.maskManager.viewData[this.paths[t].m]),
                    (i = this.paths[t].p),
                    (e || this.filterManager._mdf || n.prop._mdf) &&
                      i.setAttribute("d", n.lastPath),
                    e ||
                      this.filterManager.effectElements[9].p._mdf ||
                      this.filterManager.effectElements[4].p._mdf ||
                      this.filterManager.effectElements[7].p._mdf ||
                      this.filterManager.effectElements[8].p._mdf ||
                      n.prop._mdf)
                  ) {
                    var a;
                    if (
                      this.filterManager.effectElements[7].p.v !== 0 ||
                      this.filterManager.effectElements[8].p.v !== 100
                    ) {
                      var o =
                          Math.min(
                            this.filterManager.effectElements[7].p.v,
                            this.filterManager.effectElements[8].p.v
                          ) * 0.01,
                        l =
                          Math.max(
                            this.filterManager.effectElements[7].p.v,
                            this.filterManager.effectElements[8].p.v
                          ) * 0.01,
                        c = i.getTotalLength();
                      a = "0 0 0 " + c * o + " ";
                      var u = c * (l - o),
                        d =
                          1 +
                          this.filterManager.effectElements[4].p.v *
                            2 *
                            this.filterManager.effectElements[9].p.v *
                            0.01,
                        E = Math.floor(u / d),
                        b;
                      for (b = 0; b < E; b += 1)
                        a +=
                          "1 " +
                          this.filterManager.effectElements[4].p.v *
                            2 *
                            this.filterManager.effectElements[9].p.v *
                            0.01 +
                          " ";
                      a += "0 " + c * 10 + " 0 0";
                    } else
                      a =
                        "1 " +
                        this.filterManager.effectElements[4].p.v *
                          2 *
                          this.filterManager.effectElements[9].p.v *
                          0.01;
                    i.setAttribute("stroke-dasharray", a);
                  }
                if (
                  ((e || this.filterManager.effectElements[4].p._mdf) &&
                    this.pathMasker.setAttribute(
                      "stroke-width",
                      this.filterManager.effectElements[4].p.v * 2
                    ),
                  (e || this.filterManager.effectElements[6].p._mdf) &&
                    this.pathMasker.setAttribute(
                      "opacity",
                      this.filterManager.effectElements[6].p.v
                    ),
                  (this.filterManager.effectElements[10].p.v === 1 ||
                    this.filterManager.effectElements[10].p.v === 2) &&
                    (e || this.filterManager.effectElements[3].p._mdf))
                ) {
                  var P = this.filterManager.effectElements[3].p.v;
                  this.pathMasker.setAttribute(
                    "stroke",
                    "rgb(" +
                      bmFloor(P[0] * 255) +
                      "," +
                      bmFloor(P[1] * 255) +
                      "," +
                      bmFloor(P[2] * 255) +
                      ")"
                  );
                }
              });
            function SVGTritoneFilter(e, t, r, n) {
              this.filterManager = t;
              var i = createNS("feColorMatrix");
              i.setAttribute("type", "matrix"),
                i.setAttribute("color-interpolation-filters", "linearRGB"),
                i.setAttribute(
                  "values",
                  "0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0"
                ),
                e.appendChild(i);
              var a = createNS("feComponentTransfer");
              a.setAttribute("color-interpolation-filters", "sRGB"),
                a.setAttribute("result", n),
                (this.matrixFilter = a);
              var o = createNS("feFuncR");
              o.setAttribute("type", "table"),
                a.appendChild(o),
                (this.feFuncR = o);
              var l = createNS("feFuncG");
              l.setAttribute("type", "table"),
                a.appendChild(l),
                (this.feFuncG = l);
              var c = createNS("feFuncB");
              c.setAttribute("type", "table"),
                a.appendChild(c),
                (this.feFuncB = c),
                e.appendChild(a);
            }
            SVGTritoneFilter.prototype.renderFrame = function (e) {
              if (e || this.filterManager._mdf) {
                var t = this.filterManager.effectElements[0].p.v,
                  r = this.filterManager.effectElements[1].p.v,
                  n = this.filterManager.effectElements[2].p.v,
                  i = n[0] + " " + r[0] + " " + t[0],
                  a = n[1] + " " + r[1] + " " + t[1],
                  o = n[2] + " " + r[2] + " " + t[2];
                this.feFuncR.setAttribute("tableValues", i),
                  this.feFuncG.setAttribute("tableValues", a),
                  this.feFuncB.setAttribute("tableValues", o);
              }
            };
            function SVGProLevelsFilter(e, t, r, n) {
              this.filterManager = t;
              var i = this.filterManager.effectElements,
                a = createNS("feComponentTransfer");
              (i[10].p.k ||
                i[10].p.v !== 0 ||
                i[11].p.k ||
                i[11].p.v !== 1 ||
                i[12].p.k ||
                i[12].p.v !== 1 ||
                i[13].p.k ||
                i[13].p.v !== 0 ||
                i[14].p.k ||
                i[14].p.v !== 1) &&
                (this.feFuncR = this.createFeFunc("feFuncR", a)),
                (i[17].p.k ||
                  i[17].p.v !== 0 ||
                  i[18].p.k ||
                  i[18].p.v !== 1 ||
                  i[19].p.k ||
                  i[19].p.v !== 1 ||
                  i[20].p.k ||
                  i[20].p.v !== 0 ||
                  i[21].p.k ||
                  i[21].p.v !== 1) &&
                  (this.feFuncG = this.createFeFunc("feFuncG", a)),
                (i[24].p.k ||
                  i[24].p.v !== 0 ||
                  i[25].p.k ||
                  i[25].p.v !== 1 ||
                  i[26].p.k ||
                  i[26].p.v !== 1 ||
                  i[27].p.k ||
                  i[27].p.v !== 0 ||
                  i[28].p.k ||
                  i[28].p.v !== 1) &&
                  (this.feFuncB = this.createFeFunc("feFuncB", a)),
                (i[31].p.k ||
                  i[31].p.v !== 0 ||
                  i[32].p.k ||
                  i[32].p.v !== 1 ||
                  i[33].p.k ||
                  i[33].p.v !== 1 ||
                  i[34].p.k ||
                  i[34].p.v !== 0 ||
                  i[35].p.k ||
                  i[35].p.v !== 1) &&
                  (this.feFuncA = this.createFeFunc("feFuncA", a)),
                (this.feFuncR ||
                  this.feFuncG ||
                  this.feFuncB ||
                  this.feFuncA) &&
                  (a.setAttribute("color-interpolation-filters", "sRGB"),
                  e.appendChild(a)),
                (i[3].p.k ||
                  i[3].p.v !== 0 ||
                  i[4].p.k ||
                  i[4].p.v !== 1 ||
                  i[5].p.k ||
                  i[5].p.v !== 1 ||
                  i[6].p.k ||
                  i[6].p.v !== 0 ||
                  i[7].p.k ||
                  i[7].p.v !== 1) &&
                  ((a = createNS("feComponentTransfer")),
                  a.setAttribute("color-interpolation-filters", "sRGB"),
                  a.setAttribute("result", n),
                  e.appendChild(a),
                  (this.feFuncRComposed = this.createFeFunc("feFuncR", a)),
                  (this.feFuncGComposed = this.createFeFunc("feFuncG", a)),
                  (this.feFuncBComposed = this.createFeFunc("feFuncB", a)));
            }
            (SVGProLevelsFilter.prototype.createFeFunc = function (e, t) {
              var r = createNS(e);
              return r.setAttribute("type", "table"), t.appendChild(r), r;
            }),
              (SVGProLevelsFilter.prototype.getTableValue = function (
                e,
                t,
                r,
                n,
                i
              ) {
                for (
                  var a = 0,
                    o = 256,
                    l,
                    c = Math.min(e, t),
                    u = Math.max(e, t),
                    d = Array.call(null, { length: o }),
                    E,
                    b = 0,
                    P = i - n,
                    R = t - e;
                  a <= 256;

                )
                  (l = a / 256),
                    l <= c
                      ? (E = R < 0 ? i : n)
                      : l >= u
                      ? (E = R < 0 ? n : i)
                      : (E = n + P * Math.pow((l - e) / R, 1 / r)),
                    (d[b] = E),
                    (b += 1),
                    (a += 256 / (o - 1));
                return d.join(" ");
              }),
              (SVGProLevelsFilter.prototype.renderFrame = function (e) {
                if (e || this.filterManager._mdf) {
                  var t,
                    r = this.filterManager.effectElements;
                  this.feFuncRComposed &&
                    (e ||
                      r[3].p._mdf ||
                      r[4].p._mdf ||
                      r[5].p._mdf ||
                      r[6].p._mdf ||
                      r[7].p._mdf) &&
                    ((t = this.getTableValue(
                      r[3].p.v,
                      r[4].p.v,
                      r[5].p.v,
                      r[6].p.v,
                      r[7].p.v
                    )),
                    this.feFuncRComposed.setAttribute("tableValues", t),
                    this.feFuncGComposed.setAttribute("tableValues", t),
                    this.feFuncBComposed.setAttribute("tableValues", t)),
                    this.feFuncR &&
                      (e ||
                        r[10].p._mdf ||
                        r[11].p._mdf ||
                        r[12].p._mdf ||
                        r[13].p._mdf ||
                        r[14].p._mdf) &&
                      ((t = this.getTableValue(
                        r[10].p.v,
                        r[11].p.v,
                        r[12].p.v,
                        r[13].p.v,
                        r[14].p.v
                      )),
                      this.feFuncR.setAttribute("tableValues", t)),
                    this.feFuncG &&
                      (e ||
                        r[17].p._mdf ||
                        r[18].p._mdf ||
                        r[19].p._mdf ||
                        r[20].p._mdf ||
                        r[21].p._mdf) &&
                      ((t = this.getTableValue(
                        r[17].p.v,
                        r[18].p.v,
                        r[19].p.v,
                        r[20].p.v,
                        r[21].p.v
                      )),
                      this.feFuncG.setAttribute("tableValues", t)),
                    this.feFuncB &&
                      (e ||
                        r[24].p._mdf ||
                        r[25].p._mdf ||
                        r[26].p._mdf ||
                        r[27].p._mdf ||
                        r[28].p._mdf) &&
                      ((t = this.getTableValue(
                        r[24].p.v,
                        r[25].p.v,
                        r[26].p.v,
                        r[27].p.v,
                        r[28].p.v
                      )),
                      this.feFuncB.setAttribute("tableValues", t)),
                    this.feFuncA &&
                      (e ||
                        r[31].p._mdf ||
                        r[32].p._mdf ||
                        r[33].p._mdf ||
                        r[34].p._mdf ||
                        r[35].p._mdf) &&
                      ((t = this.getTableValue(
                        r[31].p.v,
                        r[32].p.v,
                        r[33].p.v,
                        r[34].p.v,
                        r[35].p.v
                      )),
                      this.feFuncA.setAttribute("tableValues", t));
                }
              });
            function SVGDropShadowEffect(e, t, r, n, i) {
              var a = t.container.globalData.renderConfig.filterSize,
                o = t.data.fs || a;
              e.setAttribute("x", o.x || a.x),
                e.setAttribute("y", o.y || a.y),
                e.setAttribute("width", o.width || a.width),
                e.setAttribute("height", o.height || a.height),
                (this.filterManager = t);
              var l = createNS("feGaussianBlur");
              l.setAttribute("in", "SourceAlpha"),
                l.setAttribute("result", n + "_drop_shadow_1"),
                l.setAttribute("stdDeviation", "0"),
                (this.feGaussianBlur = l),
                e.appendChild(l);
              var c = createNS("feOffset");
              c.setAttribute("dx", "25"),
                c.setAttribute("dy", "0"),
                c.setAttribute("in", n + "_drop_shadow_1"),
                c.setAttribute("result", n + "_drop_shadow_2"),
                (this.feOffset = c),
                e.appendChild(c);
              var u = createNS("feFlood");
              u.setAttribute("flood-color", "#00ff00"),
                u.setAttribute("flood-opacity", "1"),
                u.setAttribute("result", n + "_drop_shadow_3"),
                (this.feFlood = u),
                e.appendChild(u);
              var d = createNS("feComposite");
              d.setAttribute("in", n + "_drop_shadow_3"),
                d.setAttribute("in2", n + "_drop_shadow_2"),
                d.setAttribute("operator", "in"),
                d.setAttribute("result", n + "_drop_shadow_4"),
                e.appendChild(d);
              var E = this.createMergeNode(n, [n + "_drop_shadow_4", i]);
              e.appendChild(E);
            }
            extendPrototype([SVGComposableEffect], SVGDropShadowEffect),
              (SVGDropShadowEffect.prototype.renderFrame = function (e) {
                if (e || this.filterManager._mdf) {
                  if (
                    ((e || this.filterManager.effectElements[4].p._mdf) &&
                      this.feGaussianBlur.setAttribute(
                        "stdDeviation",
                        this.filterManager.effectElements[4].p.v / 4
                      ),
                    e || this.filterManager.effectElements[0].p._mdf)
                  ) {
                    var t = this.filterManager.effectElements[0].p.v;
                    this.feFlood.setAttribute(
                      "flood-color",
                      rgbToHex(
                        Math.round(t[0] * 255),
                        Math.round(t[1] * 255),
                        Math.round(t[2] * 255)
                      )
                    );
                  }
                  if (
                    ((e || this.filterManager.effectElements[1].p._mdf) &&
                      this.feFlood.setAttribute(
                        "flood-opacity",
                        this.filterManager.effectElements[1].p.v / 255
                      ),
                    e ||
                      this.filterManager.effectElements[2].p._mdf ||
                      this.filterManager.effectElements[3].p._mdf)
                  ) {
                    var r = this.filterManager.effectElements[3].p.v,
                      n =
                        (this.filterManager.effectElements[2].p.v - 90) *
                        degToRads,
                      i = r * Math.cos(n),
                      a = r * Math.sin(n);
                    this.feOffset.setAttribute("dx", i),
                      this.feOffset.setAttribute("dy", a);
                  }
                }
              });
            var _svgMatteSymbols = [];
            function SVGMatte3Effect(e, t, r) {
              (this.initialized = !1),
                (this.filterManager = t),
                (this.filterElem = e),
                (this.elem = r),
                (r.matteElement = createNS("g")),
                r.matteElement.appendChild(r.layerElement),
                r.matteElement.appendChild(r.transformedElement),
                (r.baseElement = r.matteElement);
            }
            (SVGMatte3Effect.prototype.findSymbol = function (e) {
              for (var t = 0, r = _svgMatteSymbols.length; t < r; ) {
                if (_svgMatteSymbols[t] === e) return _svgMatteSymbols[t];
                t += 1;
              }
              return null;
            }),
              (SVGMatte3Effect.prototype.replaceInParent = function (e, t) {
                var r = e.layerElement.parentNode;
                if (r) {
                  for (
                    var n = r.children, i = 0, a = n.length;
                    i < a && n[i] !== e.layerElement;

                  )
                    i += 1;
                  var o;
                  i <= a - 2 && (o = n[i + 1]);
                  var l = createNS("use");
                  l.setAttribute("href", "#" + t),
                    o ? r.insertBefore(l, o) : r.appendChild(l);
                }
              }),
              (SVGMatte3Effect.prototype.setElementAsMask = function (e, t) {
                if (!this.findSymbol(t)) {
                  var r = createElementID(),
                    n = createNS("mask");
                  n.setAttribute("id", t.layerId),
                    n.setAttribute("mask-type", "alpha"),
                    _svgMatteSymbols.push(t);
                  var i = e.globalData.defs;
                  i.appendChild(n);
                  var a = createNS("symbol");
                  a.setAttribute("id", r),
                    this.replaceInParent(t, r),
                    a.appendChild(t.layerElement),
                    i.appendChild(a);
                  var o = createNS("use");
                  o.setAttribute("href", "#" + r),
                    n.appendChild(o),
                    (t.data.hd = !1),
                    t.show();
                }
                e.setMatte(t.layerId);
              }),
              (SVGMatte3Effect.prototype.initialize = function () {
                for (
                  var e = this.filterManager.effectElements[0].p.v,
                    t = this.elem.comp.elements,
                    r = 0,
                    n = t.length;
                  r < n;

                )
                  t[r] &&
                    t[r].data.ind === e &&
                    this.setElementAsMask(this.elem, t[r]),
                    (r += 1);
                this.initialized = !0;
              }),
              (SVGMatte3Effect.prototype.renderFrame = function () {
                this.initialized || this.initialize();
              });
            function SVGGaussianBlurEffect(e, t, r, n) {
              e.setAttribute("x", "-100%"),
                e.setAttribute("y", "-100%"),
                e.setAttribute("width", "300%"),
                e.setAttribute("height", "300%"),
                (this.filterManager = t);
              var i = createNS("feGaussianBlur");
              i.setAttribute("result", n),
                e.appendChild(i),
                (this.feGaussianBlur = i);
            }
            SVGGaussianBlurEffect.prototype.renderFrame = function (e) {
              if (e || this.filterManager._mdf) {
                var t = 0.3,
                  r = this.filterManager.effectElements[0].p.v * t,
                  n = this.filterManager.effectElements[1].p.v,
                  i = n == 3 ? 0 : r,
                  a = n == 2 ? 0 : r;
                this.feGaussianBlur.setAttribute("stdDeviation", i + " " + a);
                var o =
                  this.filterManager.effectElements[2].p.v == 1
                    ? "wrap"
                    : "duplicate";
                this.feGaussianBlur.setAttribute("edgeMode", o);
              }
            };
            function TransformEffect() {}
            (TransformEffect.prototype.init = function (e) {
              (this.effectsManager = e),
                (this.type = effectTypes.TRANSFORM_EFFECT),
                (this.matrix = new Matrix()),
                (this.opacity = -1),
                (this._mdf = !1),
                (this._opMdf = !1);
            }),
              (TransformEffect.prototype.renderFrame = function (e) {
                if (
                  ((this._opMdf = !1),
                  (this._mdf = !1),
                  e || this.effectsManager._mdf)
                ) {
                  var t = this.effectsManager.effectElements,
                    r = t[0].p.v,
                    n = t[1].p.v,
                    i = t[2].p.v === 1,
                    a = t[3].p.v,
                    o = i ? a : t[4].p.v,
                    l = t[5].p.v,
                    c = t[6].p.v,
                    u = t[7].p.v;
                  this.matrix.reset(),
                    this.matrix.translate(-r[0], -r[1], r[2]),
                    this.matrix.scale(o * 0.01, a * 0.01, 1),
                    this.matrix.rotate(-u * degToRads),
                    this.matrix.skewFromAxis(
                      -l * degToRads,
                      (c + 90) * degToRads
                    ),
                    this.matrix.translate(n[0], n[1], 0),
                    (this._mdf = !0),
                    this.opacity !== t[8].p.v &&
                      ((this.opacity = t[8].p.v), (this._opMdf = !0));
                }
              });
            function SVGTransformEffect(e, t) {
              this.init(t);
            }
            extendPrototype([TransformEffect], SVGTransformEffect);
            function CVTransformEffect(e) {
              this.init(e);
            }
            return (
              extendPrototype([TransformEffect], CVTransformEffect),
              registerRenderer("canvas", CanvasRenderer),
              registerRenderer("html", HybridRenderer),
              registerRenderer("svg", SVGRenderer),
              ShapeModifiers.registerModifier("tm", TrimModifier),
              ShapeModifiers.registerModifier("pb", PuckerAndBloatModifier),
              ShapeModifiers.registerModifier("rp", RepeaterModifier),
              ShapeModifiers.registerModifier("rd", RoundCornersModifier),
              ShapeModifiers.registerModifier("zz", ZigZagModifier),
              ShapeModifiers.registerModifier("op", OffsetPathModifier),
              setExpressionsPlugin(Expressions),
              setExpressionInterfaces(getInterface),
              initialize$1(),
              initialize(),
              registerEffect$1(20, SVGTintFilter, !0),
              registerEffect$1(21, SVGFillFilter, !0),
              registerEffect$1(22, SVGStrokeEffect, !1),
              registerEffect$1(23, SVGTritoneFilter, !0),
              registerEffect$1(24, SVGProLevelsFilter, !0),
              registerEffect$1(25, SVGDropShadowEffect, !0),
              registerEffect$1(28, SVGMatte3Effect, !1),
              registerEffect$1(29, SVGGaussianBlurEffect, !0),
              registerEffect$1(35, SVGTransformEffect, !1),
              registerEffect(35, CVTransformEffect),
              lottie
            );
          });
      })(lottie$1, lottie$1.exports)),
    lottie$1.exports
  );
}
var lottieExports = requireLottie();
const Lottie = getDefaultExportFromCjs(lottieExports);
(function () {
  try {
    if (typeof document < "u") {
      var e = document.createElement("style");
      e.appendChild(
        document.createTextNode(
          ".lottie-animation-container{width:var(--lottie-animation-container-width);height:var(--lottie-animation-container-height);background-color:var(--lottie-animation-container-background-color);overflow:hidden;margin:var(--lottie-animation-margin)}.lottie-animation-container svg{transform:scale(var(--lottie-animation-scale))}"
        )
      ),
        document.head.appendChild(e);
    }
  } catch (t) {
    console.error("vite-plugin-css-injected-by-js", t);
  }
})();
var __defProp = Object.defineProperty,
  __defProps = Object.defineProperties,
  __getOwnPropDescs = Object.getOwnPropertyDescriptors,
  __getOwnPropSymbols = Object.getOwnPropertySymbols,
  __hasOwnProp = Object.prototype.hasOwnProperty,
  __propIsEnum = Object.prototype.propertyIsEnumerable,
  __defNormalProp = (e, t, r) =>
    t in e
      ? __defProp(e, t, {
          enumerable: !0,
          configurable: !0,
          writable: !0,
          value: r,
        })
      : (e[t] = r),
  __spreadValues = (e, t) => {
    for (var r in t || (t = {}))
      __hasOwnProp.call(t, r) && __defNormalProp(e, r, t[r]);
    if (__getOwnPropSymbols)
      for (var r of __getOwnPropSymbols(t))
        __propIsEnum.call(t, r) && __defNormalProp(e, r, t[r]);
    return e;
  },
  __spreadProps = (e, t) => __defProps(e, __getOwnPropDescs(t)),
  es6 = function e(t, r) {
    if (t === r) return !0;
    if (t && r && typeof t == "object" && typeof r == "object") {
      if (t.constructor !== r.constructor) return !1;
      var n, i, a;
      if (Array.isArray(t)) {
        if (((n = t.length), n != r.length)) return !1;
        for (i = n; i-- !== 0; ) if (!e(t[i], r[i])) return !1;
        return !0;
      }
      if (t instanceof Map && r instanceof Map) {
        if (t.size !== r.size) return !1;
        for (i of t.entries()) if (!r.has(i[0])) return !1;
        for (i of t.entries()) if (!e(i[1], r.get(i[0]))) return !1;
        return !0;
      }
      if (t instanceof Set && r instanceof Set) {
        if (t.size !== r.size) return !1;
        for (i of t.entries()) if (!r.has(i[0])) return !1;
        return !0;
      }
      if (ArrayBuffer.isView(t) && ArrayBuffer.isView(r)) {
        if (((n = t.length), n != r.length)) return !1;
        for (i = n; i-- !== 0; ) if (t[i] !== r[i]) return !1;
        return !0;
      }
      if (t.constructor === RegExp)
        return t.source === r.source && t.flags === r.flags;
      if (t.valueOf !== Object.prototype.valueOf)
        return t.valueOf() === r.valueOf();
      if (t.toString !== Object.prototype.toString)
        return t.toString() === r.toString();
      if (((a = Object.keys(t)), (n = a.length), n !== Object.keys(r).length))
        return !1;
      for (i = n; i-- !== 0; )
        if (!Object.prototype.hasOwnProperty.call(r, a[i])) return !1;
      for (i = n; i-- !== 0; ) {
        var o = a[i];
        if (!e(t[o], r[o])) return !1;
      }
      return !0;
    }
    return t !== t && r !== r;
  };
function klona(e) {
  var t, r, n;
  if (Array.isArray(e)) {
    for (r = Array((t = e.length)); t--; )
      r[t] = (n = e[t]) && typeof n == "object" ? klona(n) : n;
    return r;
  }
  if (Object.prototype.toString.call(e) === "[object Object]") {
    r = {};
    for (t in e)
      t === "__proto__"
        ? Object.defineProperty(r, t, {
            value: klona(e[t]),
            configurable: !0,
            enumerable: !0,
            writable: !0,
          })
        : (r[t] = (n = e[t]) && typeof n == "object" ? klona(n) : n);
    return r;
  }
  return e;
}
var _export_sfc = (e, t) => {
  const r = e.__vccOpts || e;
  for (const [n, i] of t) r[n] = i;
  return r;
};
const _sfc_main$3 = defineComponent$1({
  props: {
    animationData: { type: Object, default: () => ({}) },
    animationLink: { type: String, default: "" },
    loop: { type: [Boolean, Number], default: !0 },
    autoPlay: { type: Boolean, default: !0 },
    width: { type: [Number, String], default: "100%" },
    height: { type: [Number, String], default: "100%" },
    speed: { type: Number, default: 1 },
    delay: { type: Number, default: 0 },
    direction: { type: String, default: "forward" },
    pauseOnHover: { type: Boolean, default: !1 },
    playOnHover: { type: Boolean, default: !1 },
    backgroundColor: { type: String, default: "transparent" },
    pauseAnimation: { type: Boolean, default: !1 },
    noMargin: { type: Boolean, default: !1 },
    scale: { type: Number, default: 1 },
    renderer: { type: String, default: "svg" },
    rendererSettings: { type: Object, default: () => ({}) },
    assetsPath: { type: String, default: "" },
  },
  emits: {
    onComplete: null,
    onLoopComplete: null,
    onEnterFrame: null,
    onSegmentStart: null,
    onAnimationLoaded: null,
  },
  setup(e, { emit: t }) {
    const r = ref();
    let n,
      i = null,
      a = 1;
    watchEffect(async () => {
      if (r.value) {
        if (e.animationLink != "")
          try {
            n = await (await fetch(e.animationLink)).json();
          } catch (F) {
            console.error(F);
            return;
          }
        else if (es6(e.animationData, {}) === !1) n = klona(e.animationData);
        else
          throw new Error(
            "You must provide either animationLink or animationData"
          );
        o();
      }
    });
    const o = () => {
        if (!r.value || !n) return;
        i == null || i.destroy(), (i = null);
        let F = e.autoPlay,
          D = e.loop;
        e.playOnHover && (F = !1),
          typeof D == "number" && D > 0 && (D = D - 1),
          e.delay > 0 && (F = !1);
        const H = {
          container: r.value,
          renderer: e.renderer,
          loop: D,
          autoplay: F,
          animationData: n,
          assetsPath: e.assetsPath,
        };
        es6(e.rendererSettings, {}) === !1 &&
          (H.rendererSettings = e.rendererSettings),
          e.scale !== 1 &&
            (H.rendererSettings = __spreadProps(
              __spreadValues({}, H.rendererSettings),
              { viewBoxOnly: !0 }
            )),
          (i = Lottie.loadAnimation(H)),
          setTimeout(() => {
            (F = e.autoPlay),
              e.playOnHover
                ? i == null || i.pause()
                : F
                ? i == null || i.play()
                : i == null || i.pause(),
              t("onAnimationLoaded");
          }, e.delay),
          i.setSpeed(e.speed),
          e.direction === "reverse" && i.setDirection(-1),
          e.direction === "normal" && i.setDirection(1),
          (e.pauseAnimation || e.playOnHover) && i.pause(),
          i.addEventListener("loopComplete", () => {
            e.direction === "alternate" &&
              (i == null || i.stop(),
              (a = a === -1 ? 1 : -1),
              i == null || i.setDirection(a),
              i == null || i.play()),
              t("onLoopComplete");
          }),
          i.addEventListener("complete", () => {
            t("onComplete");
          }),
          i.addEventListener("enterFrame", () => {
            t("onEnterFrame");
          }),
          i.addEventListener("segmentStart", () => {
            t("onSegmentStart");
          });
      },
      l = computed(() => {
        let F = e.width,
          D = e.height;
        return (
          typeof e.width == "number" && (F = `${e.width}px`),
          typeof e.height == "number" && (D = `${e.height}px`),
          {
            "--lottie-animation-container-width": F,
            "--lottie-animation-container-height": D,
            "--lottie-animation-container-background-color": e.backgroundColor,
            "--lottie-animation-margin": e.noMargin ? "0" : "0 auto",
            "--lottie-animation-scale": e.scale != 1 ? e.scale : "",
          }
        );
      }),
      c = () => {
        i && e.pauseOnHover && i.pause(), i && e.playOnHover && i.play();
      },
      u = () => {
        i && e.pauseOnHover && i.play(), i && e.playOnHover && i.pause();
      };
    return (
      watch(
        () => e.pauseAnimation,
        () => {
          if ((e.pauseOnHover || e.playOnHover) && e.pauseAnimation) {
            console.error(
              "If you are using pauseAnimation prop for Vue3-Lottie, please remove the props pauseOnHover and playOnHover"
            );
            return;
          }
          i && (e.pauseAnimation ? i.pause() : i.play());
        }
      ),
      {
        lottieAnimationContainer: r,
        hoverEnded: u,
        hoverStarted: c,
        getCurrentStyle: l,
        play: () => {
          i && i.play();
        },
        pause: () => {
          i && i.pause();
        },
        stop: () => {
          i && i.stop();
        },
        destroy: () => {
          i && i.destroy();
        },
        setSpeed: (F = 1) => {
          if (F <= 0) throw new Error("Speed must be greater than 0");
          i && i.setSpeed(F);
        },
        setDirection: (F) => {
          i &&
            (F === "forward"
              ? i.setDirection(1)
              : F === "reverse" && i.setDirection(-1));
        },
        goToAndStop: (F, D = !0) => {
          i && i.goToAndStop(F, D);
        },
        goToAndPlay: (F, D = !0) => {
          i && i.goToAndPlay(F, D);
        },
        playSegments: (F, D = !1) => {
          i && i.playSegments(F, D);
        },
        setSubFrame: (F = !0) => {
          i && i.setSubframe(F);
        },
        getDuration: (F = !0) => {
          if (i) return i.getDuration(F);
        },
        updateDocumentData: (F, D = 0) => {
          i && i.renderer.elements[D].updateDocumentData(F);
        },
      }
    );
  },
});
function _sfc_render(e, t, r, n, i, a) {
  return (
    openBlock(),
    createElementBlock(
      "div",
      {
        ref: "lottieAnimationContainer",
        class: "lottie-animation-container",
        style: normalizeStyle(e.getCurrentStyle),
        onMouseenter:
          t[0] || (t[0] = (...o) => e.hoverStarted && e.hoverStarted(...o)),
        onMouseleave:
          t[1] || (t[1] = (...o) => e.hoverEnded && e.hoverEnded(...o)),
      },
      null,
      36
    )
  );
}
var Vue3Lottie = _export_sfc(_sfc_main$3, [["render", _sfc_render]]);
const lottie_vue3_client_W4eqq0Qdp7 = defineNuxtPlugin((e) => {
  e.vueApp.component("Vue3Lottie", Vue3Lottie);
});
var s = {
  library: "https://accounts.google.com/gsi/client",
  defaultButtonConfig: { theme: "outline", size: "large" },
  scopes: "email profile openid",
  ssrError:
    "vue3-google-login cannot be executed on the server side. See here for more info https://devbaji.github.io/vue3-google-login/#no-ssr-support",
};
const g = reactive({
    clientId: null,
    popupType: "CODE",
    prompt: !1,
    autoLogin: !1,
    idConfiguration: null,
    buttonConfig: s.defaultButtonConfig,
    callback: () => {},
    error: null,
  }),
  f = reactive({ apiLoaded: !1, apiLoadIntitited: !1 }),
  h$1 = () =>
    new Promise((e, t) => {
      if (typeof window < "u") {
        if (!f.apiLoadIntitited) {
          const r = document.createElement("script");
          (f.apiLoadIntitited = !0),
            r.addEventListener("load", () => {
              (f.apiLoaded = !0), e(window.google);
            }),
            r.addEventListener("error", () => {
              t(
                "Failed to load the Google 3P Authorization JavaScript Library."
              );
            }),
            (r.src = s.library),
            (r.async = !0),
            (r.defer = !0),
            document.head.appendChild(r);
        }
      } else t(s.ssrError);
    }),
  w$1 = (e) => {
    f.apiLoadIntitited
      ? f.apiLoaded
        ? e(window.google)
        : watch(
            () => f.apiLoaded,
            (t) => {
              t && e(window.google);
            }
          )
      : h$1().then((t) => {
          e(t);
        });
  },
  m = (e, t, r, n) => {
    if (!e.client_id)
      throw new Error(
        "Prop client id required since plugin is not initialized with a client id"
      );
    w$1(() => {
      ((i, a, o, l, c) => {
        if (c) {
          const d = i.callback;
          i.callback = (E) => {
            E.credential ? d && d(E) : c(E);
          };
        }
        window.google.accounts.id.initialize(i);
        const u = a.value;
        u && !l && window.google.accounts.id.renderButton(u, o);
      })(e, t, r.buttonConfig, n, r.error),
        r.prompt &&
          y({
            clientId: r.clientId,
            callback: r.callback,
            error: r.error,
            autoLogin: r.autoLogin,
          });
    });
  },
  I = (e) =>
    new Promise((t, r) => {
      w$1((n) => {
        if (!(e.clientId || g.clientId))
          throw new Error(
            "clientId is required since the plugin is not initialized with a Client Id"
          );
        n.accounts.oauth2
          .initCodeClient({
            client_id: e.clientId || g.clientId || "",
            scope: s.scopes,
            ux_mode: "popup",
            callback: (i) => {
              i.code ? t(i) : r(i);
            },
            error_callback: (i) => {
              r(i);
            },
          })
          .requestCode();
      });
    }),
  _ = (e) =>
    new Promise((t, r) => {
      w$1((n) => {
        if (!(e.clientId || g.clientId))
          throw new Error(
            "clientId is required since the plugin is not initialized with a Client Id"
          );
        n.accounts.oauth2
          .initTokenClient({
            client_id: e.clientId || g.clientId || "",
            scope: s.scopes,
            callback: (i) => {
              i.access_token ? t(i) : r(i);
            },
            error_callback: (i) => {
              r(i);
            },
          })
          .requestAccessToken();
      });
    }),
  y = (e) => {
    if ((!e && (e = {}), !e.clientId && !g.clientId))
      throw new Error("clientId is required");
    const t = { use_fedcm_for_prompt: !0 };
    return (
      e.clientId && (t.client_id = e.clientId),
      !e.clientId && g.clientId && (t.client_id = g.clientId),
      e.context && (t.context = e.context),
      e.autoLogin != null && (t.auto_select = e.autoLogin),
      e.cancelOnTapOutside != null &&
        (t.cancel_on_tap_outside = e.cancelOnTapOutside),
      new Promise((r, n) => {
        (t.callback = (i) => {
          e && e.callback && e.callback(i), i.credential ? r(i) : n(i);
        }),
          w$1((i) => {
            i.accounts.id.initialize(t), i.accounts.id.prompt();
          });
      })
    );
  };
var C = defineComponent$1({
  __name: "GoogleLogin",
  props: {
    clientId: { type: String, required: !1 },
    prompt: { type: Boolean, required: !1, default: !1 },
    autoLogin: { type: Boolean, required: !1, default: !1 },
    popupType: { type: String, required: !1 },
    idConfiguration: { type: Object, required: !1 },
    buttonConfig: { type: Object, required: !1 },
    callback: { type: Function, required: !1 },
    error: { type: Function, required: !1 },
  },
  setup(e) {
    if (!(typeof window < "u")) throw new Error(s.ssrError);
    const t = !!useSlots().default,
      r = e,
      n = ((o, l) => {
        const c = { ...o };
        for (const u in l) l[u] !== void 0 && l[u] !== null && (c[u] = l[u]);
        return c;
      })(g, r),
      i = {
        client_id: n.clientId || null,
        auto_select: n.autoLogin || !1,
        callback: n.callback,
        ...n.idConfiguration,
      },
      a = ref();
    return (
      onMounted(() => {
        m(i, a, n, t),
          r.popupType &&
            !t &&
            console.warn(
              "Option 'popupType' is ignored since a slot which act as a custom login button was not found!!!"
            );
      }),
      (o, l) => (
        openBlock(),
        createElementBlock(
          "div",
          {
            class: "g-btn-wrapper",
            onClick:
              l[0] ||
              (l[0] = (c) =>
                unref(t) &&
                void (unref(n).popupType === "TOKEN"
                  ? _({ clientId: n.clientId })
                      .then((u) => {
                        n.callback && n.callback(u);
                      })
                      .catch((u) => {
                        n.error && n.error(u);
                      })
                  : I({ clientId: n.clientId })
                      .then((u) => {
                        n.callback && n.callback(u);
                      })
                      .catch((u) => {
                        n.error && n.error(u);
                      }))),
          },
          [
            unref(t)
              ? createCommentVNode("v-if", !0)
              : (openBlock(),
                createElementBlock(
                  "span",
                  { key: 0, ref_key: "buttonRef", ref: a, class: "g-btn" },
                  null,
                  512
                )),
            renderSlot(o.$slots, "default"),
          ]
        )
      )
    );
  },
});
(function (e, t) {
  t === void 0 && (t = {});
  var r = t.insertAt;
  if (typeof document < "u") {
    var n = document.head || document.getElementsByTagName("head")[0],
      i = document.createElement("style");
    (i.type = "text/css"),
      r === "top" && n.firstChild
        ? n.insertBefore(i, n.firstChild)
        : n.appendChild(i),
      i.styleSheet
        ? (i.styleSheet.cssText = e)
        : i.appendChild(document.createTextNode(e));
  }
})(`
.g-btn-wrapper[data-v-5e610566] {
  display: inline-block;
}
`),
  (C.__scopeId = "data-v-5e610566"),
  (C.__file = "src/plugin/GoogleLogin.vue");
var L = {
  install: (e, t) => {
    t &&
      ((r) => {
        r.clientId && (g.clientId = r.clientId),
          r.popupType && (g.popupType = r.popupType),
          r.prompt != null && (g.prompt = r.prompt),
          r.autoLogin != null && (g.autoLogin = r.autoLogin),
          r.idConfiguration && (g.idConfiguration = r.idConfiguration),
          r.buttonConfig && (g.buttonConfig = r.buttonConfig),
          r.callback && (g.callback = r.callback);
      })(t),
      h$1().then(() => {
        if (t.clientId) {
          const r = {
            client_id: t.clientId,
            auto_select: t.autoLogin === !0,
            callback: t.callback,
            use_fedcm_for_prompt: !0,
            ...t.idConfiguration,
          };
          window.google.accounts.id.initialize(r),
            t.prompt && window.google.accounts.id.prompt();
        }
      }),
      e.component("GoogleLogin", C);
  },
};
const googleLogin_client_JWzGL7CXWf = defineNuxtPlugin((e) => {
  const t = useRuntimeConfig();
  e.vueApp.use(L, { clientId: t.public.GOOGLE_CLIENT_ID });
});
async function useFetch(e, t = {}) {
  const r = useAuthStore(),
    n = ref(null),
    i = ref(null),
    a = ref(!0),
    o = useRuntimeConfig(),
    l = o.public.apiBaseUrl,
    c = o.public.clientId;
  try {
    n.value = await $fetch(l + e, {
      ...t,
      headers: {
        "Content-Type": "application/json",
        "client-id": c,
        ...(t.headers || {}),
        ...(r.accessToken ? { Authorization: `Bearer ${r.accessToken}` } : {}),
      },
      body:
        t.method === "POST" || t.method === "PUT" || t.method === "PATCH"
          ? JSON.stringify(t.body)
          : void 0,
    });
  } catch (u) {
    throw ((i.value = u), u);
  } finally {
    a.value = !1;
  }
  return { data: n, error: i, loading: a };
}
const useUserStore = defineStore("User", {
    state: () => ({
      userInfo: null,
      orders: { data: null, meta: null },
      transactions: { data: null, meta: null },
      affiliates: { data: null, meta: null },
      loading: !1,
    }),
    actions: {
      async getUserInfo() {
        this.loading = !0;
        try {
          const { data: e } = await useFetch(GET_USER_INFO, { method: "GET" });
          this.userInfo = e.value.data;
        } catch (e) {
          throw e;
        } finally {
          this.loading = !1;
        }
      },
      updateUserInfo(e) {
        this.userInfo = e;
      },
      setEmailVerified() {
        this.userInfo.email_verified = 1;
      },
      deleteUserInfo() {
        this.userInfo = null;
      },
      updateOrdersData(e) {
        this.orders.data = e;
      },
      updateOrdersMeta(e) {
        this.orders.meta = e;
      },
      updateTransactionsData(e) {
        this.transactions.data = e;
      },
      updateTransactionsMeta(e) {
        this.transactions.meta = e;
      },
      updateAffiliatesData(e) {
        this.affiliates.data = e;
      },
      updateAffiliatesMeta(e) {
        this.affiliates.meta = e;
      },
    },
  }),
  useAuthStore = defineStore("Auth", {
    state: () => ({
      currentDialog: null,
      mode: null,
      accessToken: null,
      loading: !1,
      email: "",
    }),
    actions: {
      async initialize() {
        try {
          if (((this.loading = !0), this.loadToken(), !this.accessToken))
            return;
          await useUserStore().getUserInfo();
        } catch {
          (this.accessToken = null), this.clearToken();
        } finally {
          this.loading = !1;
        }
      },
      async logout() {
        try {
          await useFetch(LOGOUT, { method: "GET" });
        } catch {
        } finally {
          this.removeToken(),
            useUserStore().deleteUserInfo(),
            (this.loading = !1);
        }
      },
      updateCurrentDialog(e) {
        this.currentDialog = e;
      },
      updateMode(e) {
        this.mode = e;
      },
      setToken(e) {
        (this.accessToken = e), localStorage.setItem("accessToken", e);
      },
      removeToken() {
        (this.accessToken = null), this.clearToken();
      },
      loadToken() {
        this.accessToken = localStorage.getItem("accessToken");
      },
      async loginWithGoogle(e) {
        const r = { token_id: e.credential, two_factor_code: "" };
        try {
          const { data: n } = await useFetch(GOOGLE_LOGIN, {
            method: "POST",
            body: r,
          });
          this.setToken(n.value.data.access_token),
            await useUserStore().getUserInfo();
        } catch (n) {
          throw n;
        }
      },
      clearToken() {
        localStorage.removeItem("accessToken");
      },
    },
  }),
  auth_ANExhJHvcR = defineNuxtPlugin(async (e) => {
    let t, r, n;
    e.authReady = new Promise((a) => {
      n = a;
    });
    const i = useAuthStore();
    ([t, r] = executeAsync(() => i.initialize())), await t, r(), n();
  }),
  isDesktop_IeqUfBfHjG = defineNuxtPlugin((e) => {
    const t = ref(!0),
      r = () => {
        t.value = window.innerWidth > 769;
      };
    r(),
      window.addEventListener("resize", r),
      Object.defineProperty(e.vueApp.config.globalProperties, "$isDesktop", {
        get() {
          return t.value;
        },
        configurable: !0,
      }),
      e.provide("isDesktop", t);
  }),
  isDev = !1;
function vuetifyConfiguration() {
  return {
    theme: {
      defaultTheme: "light",
      themes: {
        light: {
          dark: !1,
          colors: {
            "primary-25": "#F5FAFF",
            "primary-50": "#EFF8FF",
            "primary-100": "#D1E9FF",
            "primary-200": "#B2DDFF",
            "primary-300": "#84CAFF",
            "primary-400": "#53B1FD",
            "primary-500": "#2E90FA",
            "primary-600": "#1570EF",
            "primary-700": "#175CD3",
            "primary-800": "#1849A9",
            "primary-900": "#194185",
            "secondary-25": "#FFF9F5",
            "secondary-50": "#FFF4ED",
            "secondary-100": "#FFE6D5",
            "secondary-200": "#FFD6AE",
            "secondary-300": "#FF9C66",
            "secondary-400": "#FF692E",
            "secondary-500": "#FF4405",
            "secondary-600": "#E62E05",
            "secondary-700": "#BC1B06",
            "secondary-800": "#97180C",
            "secondary-900": "#771A0D",
            "gray-25": "#fff",
            "gray-50": "#F9FAFB",
            "gray-100": "#F2F4F7",
            "gray-200": "#EAECF0",
            "gray-300": "#D0D5DD",
            "gray-400": "#98A2B3",
            "gray-500": "#667085",
            "gray-600": "#475467",
            "gray-700": "#344054",
            "gray-800": "#1D2939",
            "gray-900": "#101828",
            "success-25": "#F6FEF9",
            "success-50": "#ECFDF3",
            "success-100": "#D1FADF",
            "success-200": "#A6F4C5",
            "success-300": "#6CE9A6",
            "success-400": "#32D583",
            "success-500": "#12B76A",
            "success-600": "#039855",
            "success-700": "#05603A",
            "success-800": "#05603A",
            "success-900": "#054F31",
            "warning-25": "#FFFCF5",
            "warning-50": "#FFFAEB",
            "warning-100": "#FEF0C7",
            "warning-200": "#FEDF89",
            "warning-300": "#FEC84B",
            "warning-400": "#FDB022",
            "warning-500": "#F79009",
            "warning-600": "#DC6803",
            "warning-700": "#B54708",
            "warning-800": "#93370D",
            "warning-900": "#7A2E0E",
            "error-25": "#FFFBFA",
            "error-50": "#FEF3F2",
            "error-100": "#FEE4E2",
            "error-200": "#FECDCA",
            "error-300": "#FDA29B",
            "error-400": "#F97066",
            "error-500": "#F04438",
            "error-600": "#D92D20",
            "error-700": "#B42318",
            "error-800": "#912018",
            "error-900": "#7A271A",
          },
        },
        dark: { dark: !0 },
      },
    },
    ssr: !0,
  };
}
function useToggleScope(e, t) {
  let r;
  function n() {
    (r = effectScope()),
      r.run(() =>
        t.length
          ? t(() => {
              r == null || r.stop(), n();
            })
          : t()
      );
  }
  watch(
    e,
    (i) => {
      i && !r ? n() : i || (r == null || r.stop(), (r = void 0));
    },
    { immediate: !0 }
  ),
    onScopeDispose(() => {
      r == null || r.stop();
    });
}
function useProxiedModel(e, t, r) {
  let n =
      arguments.length > 3 && arguments[3] !== void 0 ? arguments[3] : (E) => E,
    i =
      arguments.length > 4 && arguments[4] !== void 0 ? arguments[4] : (E) => E;
  const a = getCurrentInstance("useProxiedModel"),
    o = ref(e[t] !== void 0 ? e[t] : r),
    l = toKebabCase(t),
    u = computed(
      l !== t
        ? () => {
            var E, b, P, R;
            return (
              e[t],
              !!(
                (((E = a.vnode.props) != null && E.hasOwnProperty(t)) ||
                  ((b = a.vnode.props) != null && b.hasOwnProperty(l))) &&
                (((P = a.vnode.props) != null &&
                  P.hasOwnProperty(`onUpdate:${t}`)) ||
                  ((R = a.vnode.props) != null &&
                    R.hasOwnProperty(`onUpdate:${l}`)))
              )
            );
          }
        : () => {
            var E, b;
            return (
              e[t],
              !!(
                (E = a.vnode.props) != null &&
                E.hasOwnProperty(t) &&
                (b = a.vnode.props) != null &&
                b.hasOwnProperty(`onUpdate:${t}`)
              )
            );
          }
    );
  useToggleScope(
    () => !u.value,
    () => {
      watch(
        () => e[t],
        (E) => {
          o.value = E;
        }
      );
    }
  );
  const d = computed({
    get() {
      const E = e[t];
      return n(u.value ? E : o.value);
    },
    set(E) {
      const b = i(E),
        P = toRaw(u.value ? e[t] : o.value);
      P === b ||
        n(P) === E ||
        ((o.value = b), a == null || a.emit(`update:${t}`, b));
    },
  });
  return (
    Object.defineProperty(d, "externalValue", {
      get: () => (u.value ? e[t] : o.value),
    }),
    d
  );
}
const en = {
    badge: "Badge",
    open: "Open",
    close: "Close",
    dismiss: "Dismiss",
    confirmEdit: { ok: "OK", cancel: "Cancel" },
    dataIterator: {
      noResultsText: "No matching records found",
      loadingText: "Loading items...",
    },
    dataTable: {
      itemsPerPageText: "Rows per page:",
      ariaLabel: {
        sortDescending: "Sorted descending.",
        sortAscending: "Sorted ascending.",
        sortNone: "Not sorted.",
        activateNone: "Activate to remove sorting.",
        activateDescending: "Activate to sort descending.",
        activateAscending: "Activate to sort ascending.",
      },
      sortBy: "Sort by",
    },
    dataFooter: {
      itemsPerPageText: "Items per page:",
      itemsPerPageAll: "All",
      nextPage: "Next page",
      prevPage: "Previous page",
      firstPage: "First page",
      lastPage: "Last page",
      pageText: "{0}-{1} of {2}",
    },
    dateRangeInput: { divider: "to" },
    datePicker: {
      itemsSelected: "{0} selected",
      range: { title: "Select dates", header: "Enter dates" },
      title: "Select date",
      header: "Enter date",
      input: { placeholder: "Enter date" },
    },
    noDataText: "No data available",
    carousel: {
      prev: "Previous visual",
      next: "Next visual",
      ariaLabel: { delimiter: "Carousel slide {0} of {1}" },
    },
    calendar: { moreEvents: "{0} more", today: "Today" },
    input: {
      clear: "Clear {0}",
      prependAction: "{0} prepended action",
      appendAction: "{0} appended action",
      otp: "Please enter OTP character {0}",
    },
    fileInput: {
      counter: "{0} files",
      counterSize: "{0} files ({1} in total)",
    },
    fileUpload: {
      title: "Drag and drop files here",
      divider: "or",
      browse: "Browse Files",
    },
    timePicker: { am: "AM", pm: "PM", title: "Select Time" },
    pagination: {
      ariaLabel: {
        root: "Pagination Navigation",
        next: "Next page",
        previous: "Previous page",
        page: "Go to page {0}",
        currentPage: "Page {0}, Current page",
        first: "First page",
        last: "Last page",
      },
    },
    stepper: { next: "Next", prev: "Previous" },
    rating: { ariaLabel: { item: "Rating {0} of {1}" } },
    loading: "Loading...",
    infiniteScroll: { loadMore: "Load more", empty: "No more" },
  },
  LANG_PREFIX = "$vuetify.",
  replace = (e, t) => e.replace(/\{(\d+)\}/g, (r, n) => String(t[+n])),
  createTranslateFunction = (e, t, r) =>
    function (n) {
      for (
        var i = arguments.length, a = new Array(i > 1 ? i - 1 : 0), o = 1;
        o < i;
        o++
      )
        a[o - 1] = arguments[o];
      if (!n.startsWith(LANG_PREFIX)) return replace(n, a);
      const l = n.replace(LANG_PREFIX, ""),
        c = e.value && r.value[e.value],
        u = t.value && r.value[t.value];
      let d = getObjectValueByPath(c, l, null);
      return (
        d || (`${n}${e.value}`, (d = getObjectValueByPath(u, l, null))),
        d || (d = n),
        typeof d != "string" && (d = n),
        replace(d, a)
      );
    };
function createNumberFunction(e, t) {
  return (r, n) => new Intl.NumberFormat([e.value, t.value], n).format(r);
}
function useProvided(e, t, r) {
  const n = useProxiedModel(e, t, e[t] ?? r.value);
  return (
    (n.value = e[t] ?? r.value),
    watch(r, (i) => {
      e[t] == null && (n.value = r.value);
    }),
    n
  );
}
function createProvideFunction(e) {
  return (t) => {
    const r = useProvided(t, "locale", e.current),
      n = useProvided(t, "fallback", e.fallback),
      i = useProvided(t, "messages", e.messages);
    return {
      name: "vuetify",
      current: r,
      fallback: n,
      messages: i,
      t: createTranslateFunction(r, n, i),
      n: createNumberFunction(r, n),
      provide: createProvideFunction({ current: r, fallback: n, messages: i }),
    };
  };
}
function createVuetifyAdapter(e) {
  const t = shallowRef((e == null ? void 0 : e.locale) ?? "en"),
    r = shallowRef((e == null ? void 0 : e.fallback) ?? "en"),
    n = ref({ en, ...(e == null ? void 0 : e.messages) });
  return {
    name: "vuetify",
    current: t,
    fallback: r,
    messages: n,
    t: createTranslateFunction(t, r, n),
    n: createNumberFunction(t, r),
    provide: createProvideFunction({ current: t, fallback: r, messages: n }),
  };
}
const LocaleSymbol = Symbol.for("vuetify:locale");
function isLocaleInstance(e) {
  return e.name != null;
}
function createLocale(e) {
  const t =
      e != null && e.adapter && isLocaleInstance(e == null ? void 0 : e.adapter)
        ? e == null
          ? void 0
          : e.adapter
        : createVuetifyAdapter(e),
    r = createRtl(t, e);
  return { ...t, ...r };
}
function useLocale() {
  const e = inject$1(LocaleSymbol);
  if (!e) throw new Error("[Vuetify] Could not find injected locale instance");
  return e;
}
function genDefaults$2() {
  return {
    af: !1,
    ar: !0,
    bg: !1,
    ca: !1,
    ckb: !1,
    cs: !1,
    de: !1,
    el: !1,
    en: !1,
    es: !1,
    et: !1,
    fa: !0,
    fi: !1,
    fr: !1,
    hr: !1,
    hu: !1,
    he: !0,
    id: !1,
    it: !1,
    ja: !1,
    km: !1,
    ko: !1,
    lv: !1,
    lt: !1,
    nl: !1,
    no: !1,
    pl: !1,
    pt: !1,
    ro: !1,
    ru: !1,
    sk: !1,
    sl: !1,
    srCyrl: !1,
    srLatn: !1,
    sv: !1,
    th: !1,
    tr: !1,
    az: !1,
    uk: !1,
    vi: !1,
    zhHans: !1,
    zhHant: !1,
  };
}
function createRtl(e, t) {
  const r = ref((t == null ? void 0 : t.rtl) ?? genDefaults$2()),
    n = computed(() => r.value[e.current.value] ?? !1);
  return {
    isRtl: n,
    rtl: r,
    rtlClasses: computed(() => `v-locale--is-${n.value ? "rtl" : "ltr"}`),
  };
}
function useRtl() {
  const e = inject$1(LocaleSymbol);
  if (!e) throw new Error("[Vuetify] Could not find injected rtl instance");
  return { isRtl: e.isRtl, rtlClasses: e.rtlClasses };
}
const firstDay = {
  "001": 1,
  AD: 1,
  AE: 6,
  AF: 6,
  AG: 0,
  AI: 1,
  AL: 1,
  AM: 1,
  AN: 1,
  AR: 1,
  AS: 0,
  AT: 1,
  AU: 1,
  AX: 1,
  AZ: 1,
  BA: 1,
  BD: 0,
  BE: 1,
  BG: 1,
  BH: 6,
  BM: 1,
  BN: 1,
  BR: 0,
  BS: 0,
  BT: 0,
  BW: 0,
  BY: 1,
  BZ: 0,
  CA: 0,
  CH: 1,
  CL: 1,
  CM: 1,
  CN: 1,
  CO: 0,
  CR: 1,
  CY: 1,
  CZ: 1,
  DE: 1,
  DJ: 6,
  DK: 1,
  DM: 0,
  DO: 0,
  DZ: 6,
  EC: 1,
  EE: 1,
  EG: 6,
  ES: 1,
  ET: 0,
  FI: 1,
  FJ: 1,
  FO: 1,
  FR: 1,
  GB: 1,
  "GB-alt-variant": 0,
  GE: 1,
  GF: 1,
  GP: 1,
  GR: 1,
  GT: 0,
  GU: 0,
  HK: 0,
  HN: 0,
  HR: 1,
  HU: 1,
  ID: 0,
  IE: 1,
  IL: 0,
  IN: 0,
  IQ: 6,
  IR: 6,
  IS: 1,
  IT: 1,
  JM: 0,
  JO: 6,
  JP: 0,
  KE: 0,
  KG: 1,
  KH: 0,
  KR: 0,
  KW: 6,
  KZ: 1,
  LA: 0,
  LB: 1,
  LI: 1,
  LK: 1,
  LT: 1,
  LU: 1,
  LV: 1,
  LY: 6,
  MC: 1,
  MD: 1,
  ME: 1,
  MH: 0,
  MK: 1,
  MM: 0,
  MN: 1,
  MO: 0,
  MQ: 1,
  MT: 0,
  MV: 5,
  MX: 0,
  MY: 1,
  MZ: 0,
  NI: 0,
  NL: 1,
  NO: 1,
  NP: 0,
  NZ: 1,
  OM: 6,
  PA: 0,
  PE: 0,
  PH: 0,
  PK: 0,
  PL: 1,
  PR: 0,
  PT: 0,
  PY: 0,
  QA: 6,
  RE: 1,
  RO: 1,
  RS: 1,
  RU: 1,
  SA: 0,
  SD: 6,
  SE: 1,
  SG: 0,
  SI: 1,
  SK: 1,
  SM: 1,
  SV: 0,
  SY: 6,
  TH: 0,
  TJ: 1,
  TM: 1,
  TR: 1,
  TT: 0,
  TW: 0,
  UA: 1,
  UM: 0,
  US: 0,
  UY: 1,
  UZ: 1,
  VA: 1,
  VE: 0,
  VI: 0,
  VN: 1,
  WS: 0,
  XK: 1,
  YE: 0,
  ZA: 0,
  ZW: 0,
};
function getWeekArray(e, t, r) {
  const n = [];
  let i = [];
  const a = startOfMonth(e),
    o = endOfMonth(e),
    l = r ?? firstDay[t.slice(-2).toUpperCase()] ?? 0,
    c = (a.getDay() - l + 7) % 7,
    u = (o.getDay() - l + 7) % 7;
  for (let d = 0; d < c; d++) {
    const E = new Date(a);
    E.setDate(E.getDate() - (c - d)), i.push(E);
  }
  for (let d = 1; d <= o.getDate(); d++) {
    const E = new Date(e.getFullYear(), e.getMonth(), d);
    i.push(E), i.length === 7 && (n.push(i), (i = []));
  }
  for (let d = 1; d < 7 - u; d++) {
    const E = new Date(o);
    E.setDate(E.getDate() + d), i.push(E);
  }
  return i.length > 0 && n.push(i), n;
}
function startOfWeek(e, t, r) {
  const n = r ?? firstDay[t.slice(-2).toUpperCase()] ?? 0,
    i = new Date(e);
  for (; i.getDay() !== n; ) i.setDate(i.getDate() - 1);
  return i;
}
function endOfWeek(e, t) {
  const r = new Date(e),
    n = ((firstDay[t.slice(-2).toUpperCase()] ?? 0) + 6) % 7;
  for (; r.getDay() !== n; ) r.setDate(r.getDate() + 1);
  return r;
}
function startOfMonth(e) {
  return new Date(e.getFullYear(), e.getMonth(), 1);
}
function endOfMonth(e) {
  return new Date(e.getFullYear(), e.getMonth() + 1, 0);
}
function parseLocalDate(e) {
  const t = e.split("-").map(Number);
  return new Date(t[0], t[1] - 1, t[2]);
}
const _YYYMMDD =
  /^([12]\d{3}-([1-9]|0[1-9]|1[0-2])-([1-9]|0[1-9]|[12]\d|3[01]))$/;
function date(e) {
  if (e == null) return new Date();
  if (e instanceof Date) return e;
  if (typeof e == "string") {
    let t;
    if (_YYYMMDD.test(e)) return parseLocalDate(e);
    if (((t = Date.parse(e)), !isNaN(t))) return new Date(t);
  }
  return null;
}
const sundayJanuarySecond2000 = new Date(2e3, 0, 2);
function getWeekdays(e, t) {
  const r = t ?? firstDay[e.slice(-2).toUpperCase()] ?? 0;
  return createRange(7).map((n) => {
    const i = new Date(sundayJanuarySecond2000);
    return (
      i.setDate(sundayJanuarySecond2000.getDate() + r + n),
      new Intl.DateTimeFormat(e, { weekday: "narrow" }).format(i)
    );
  });
}
function format(e, t, r, n) {
  const i = date(e) ?? new Date(),
    a = n == null ? void 0 : n[t];
  if (typeof a == "function") return a(i, t, r);
  let o = {};
  switch (t) {
    case "fullDate":
      o = { year: "numeric", month: "long", day: "numeric" };
      break;
    case "fullDateWithWeekday":
      o = { weekday: "long", year: "numeric", month: "long", day: "numeric" };
      break;
    case "normalDate":
      const l = i.getDate(),
        c = new Intl.DateTimeFormat(r, { month: "long" }).format(i);
      return `${l} ${c}`;
    case "normalDateWithWeekday":
      o = { weekday: "short", day: "numeric", month: "short" };
      break;
    case "shortDate":
      o = { month: "short", day: "numeric" };
      break;
    case "year":
      o = { year: "numeric" };
      break;
    case "month":
      o = { month: "long" };
      break;
    case "monthShort":
      o = { month: "short" };
      break;
    case "monthAndYear":
      o = { month: "long", year: "numeric" };
      break;
    case "monthAndDate":
      o = { month: "long", day: "numeric" };
      break;
    case "weekday":
      o = { weekday: "long" };
      break;
    case "weekdayShort":
      o = { weekday: "short" };
      break;
    case "dayOfMonth":
      return new Intl.NumberFormat(r).format(i.getDate());
    case "hours12h":
      o = { hour: "numeric", hour12: !0 };
      break;
    case "hours24h":
      o = { hour: "numeric", hour12: !1 };
      break;
    case "minutes":
      o = { minute: "numeric" };
      break;
    case "seconds":
      o = { second: "numeric" };
      break;
    case "fullTime":
      o = { hour: "numeric", minute: "numeric", second: "numeric", hour12: !0 };
      break;
    case "fullTime12h":
      o = { hour: "numeric", minute: "numeric", second: "numeric", hour12: !0 };
      break;
    case "fullTime24h":
      o = { hour: "numeric", minute: "numeric", second: "numeric", hour12: !1 };
      break;
    case "fullDateTime":
      o = {
        year: "numeric",
        month: "long",
        day: "numeric",
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        hour12: !0,
      };
      break;
    case "fullDateTime12h":
      o = {
        year: "numeric",
        month: "long",
        day: "numeric",
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        hour12: !0,
      };
      break;
    case "fullDateTime24h":
      o = {
        year: "numeric",
        month: "long",
        day: "numeric",
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        hour12: !1,
      };
      break;
    case "keyboardDate":
      o = { year: "numeric", month: "2-digit", day: "2-digit" };
      break;
    case "keyboardDateTime":
      o = {
        year: "numeric",
        month: "2-digit",
        day: "2-digit",
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        hour12: !1,
      };
      break;
    case "keyboardDateTime12h":
      o = {
        year: "numeric",
        month: "2-digit",
        day: "2-digit",
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        hour12: !0,
      };
      break;
    case "keyboardDateTime24h":
      o = {
        year: "numeric",
        month: "2-digit",
        day: "2-digit",
        hour: "numeric",
        minute: "numeric",
        second: "numeric",
        hour12: !1,
      };
      break;
    default:
      o = a ?? { timeZone: "UTC", timeZoneName: "short" };
  }
  return new Intl.DateTimeFormat(r, o).format(i);
}
function toISO(e, t) {
  const r = e.toJsDate(t),
    n = r.getFullYear(),
    i = padStart(String(r.getMonth() + 1), 2, "0"),
    a = padStart(String(r.getDate()), 2, "0");
  return `${n}-${i}-${a}`;
}
function parseISO(e) {
  const [t, r, n] = e.split("-").map(Number);
  return new Date(t, r - 1, n);
}
function addMinutes(e, t) {
  const r = new Date(e);
  return r.setMinutes(r.getMinutes() + t), r;
}
function addHours(e, t) {
  const r = new Date(e);
  return r.setHours(r.getHours() + t), r;
}
function addDays(e, t) {
  const r = new Date(e);
  return r.setDate(r.getDate() + t), r;
}
function addWeeks(e, t) {
  const r = new Date(e);
  return r.setDate(r.getDate() + t * 7), r;
}
function addMonths(e, t) {
  const r = new Date(e);
  return r.setDate(1), r.setMonth(r.getMonth() + t), r;
}
function getYear(e) {
  return e.getFullYear();
}
function getMonth(e) {
  return e.getMonth();
}
function getDate(e) {
  return e.getDate();
}
function getNextMonth(e) {
  return new Date(e.getFullYear(), e.getMonth() + 1, 1);
}
function getPreviousMonth(e) {
  return new Date(e.getFullYear(), e.getMonth() - 1, 1);
}
function getHours(e) {
  return e.getHours();
}
function getMinutes(e) {
  return e.getMinutes();
}
function startOfYear(e) {
  return new Date(e.getFullYear(), 0, 1);
}
function endOfYear(e) {
  return new Date(e.getFullYear(), 11, 31);
}
function isWithinRange(e, t) {
  return isAfter(e, t[0]) && isBefore(e, t[1]);
}
function isValid(e) {
  const t = new Date(e);
  return t instanceof Date && !isNaN(t.getTime());
}
function isAfter(e, t) {
  return e.getTime() > t.getTime();
}
function isAfterDay(e, t) {
  return isAfter(startOfDay(e), startOfDay(t));
}
function isBefore(e, t) {
  return e.getTime() < t.getTime();
}
function isEqual(e, t) {
  return e.getTime() === t.getTime();
}
function isSameDay(e, t) {
  return (
    e.getDate() === t.getDate() &&
    e.getMonth() === t.getMonth() &&
    e.getFullYear() === t.getFullYear()
  );
}
function isSameMonth(e, t) {
  return e.getMonth() === t.getMonth() && e.getFullYear() === t.getFullYear();
}
function isSameYear(e, t) {
  return e.getFullYear() === t.getFullYear();
}
function getDiff(e, t, r) {
  const n = new Date(e),
    i = new Date(t);
  switch (r) {
    case "years":
      return n.getFullYear() - i.getFullYear();
    case "quarters":
      return Math.floor(
        (n.getMonth() -
          i.getMonth() +
          (n.getFullYear() - i.getFullYear()) * 12) /
          4
      );
    case "months":
      return (
        n.getMonth() - i.getMonth() + (n.getFullYear() - i.getFullYear()) * 12
      );
    case "weeks":
      return Math.floor((n.getTime() - i.getTime()) / (1e3 * 60 * 60 * 24 * 7));
    case "days":
      return Math.floor((n.getTime() - i.getTime()) / (1e3 * 60 * 60 * 24));
    case "hours":
      return Math.floor((n.getTime() - i.getTime()) / (1e3 * 60 * 60));
    case "minutes":
      return Math.floor((n.getTime() - i.getTime()) / (1e3 * 60));
    case "seconds":
      return Math.floor((n.getTime() - i.getTime()) / 1e3);
    default:
      return n.getTime() - i.getTime();
  }
}
function setHours(e, t) {
  const r = new Date(e);
  return r.setHours(t), r;
}
function setMinutes(e, t) {
  const r = new Date(e);
  return r.setMinutes(t), r;
}
function setMonth(e, t) {
  const r = new Date(e);
  return r.setMonth(t), r;
}
function setDate(e, t) {
  const r = new Date(e);
  return r.setDate(t), r;
}
function setYear(e, t) {
  const r = new Date(e);
  return r.setFullYear(t), r;
}
function startOfDay(e) {
  return new Date(e.getFullYear(), e.getMonth(), e.getDate(), 0, 0, 0, 0);
}
function endOfDay(e) {
  return new Date(e.getFullYear(), e.getMonth(), e.getDate(), 23, 59, 59, 999);
}
class VuetifyDateAdapter {
  constructor(t) {
    (this.locale = t.locale), (this.formats = t.formats);
  }
  date(t) {
    return date(t);
  }
  toJsDate(t) {
    return t;
  }
  toISO(t) {
    return toISO(this, t);
  }
  parseISO(t) {
    return parseISO(t);
  }
  addMinutes(t, r) {
    return addMinutes(t, r);
  }
  addHours(t, r) {
    return addHours(t, r);
  }
  addDays(t, r) {
    return addDays(t, r);
  }
  addWeeks(t, r) {
    return addWeeks(t, r);
  }
  addMonths(t, r) {
    return addMonths(t, r);
  }
  getWeekArray(t, r) {
    return getWeekArray(t, this.locale, r ? Number(r) : void 0);
  }
  startOfWeek(t, r) {
    return startOfWeek(t, this.locale, r ? Number(r) : void 0);
  }
  endOfWeek(t) {
    return endOfWeek(t, this.locale);
  }
  startOfMonth(t) {
    return startOfMonth(t);
  }
  endOfMonth(t) {
    return endOfMonth(t);
  }
  format(t, r) {
    return format(t, r, this.locale, this.formats);
  }
  isEqual(t, r) {
    return isEqual(t, r);
  }
  isValid(t) {
    return isValid(t);
  }
  isWithinRange(t, r) {
    return isWithinRange(t, r);
  }
  isAfter(t, r) {
    return isAfter(t, r);
  }
  isAfterDay(t, r) {
    return isAfterDay(t, r);
  }
  isBefore(t, r) {
    return !isAfter(t, r) && !isEqual(t, r);
  }
  isSameDay(t, r) {
    return isSameDay(t, r);
  }
  isSameMonth(t, r) {
    return isSameMonth(t, r);
  }
  isSameYear(t, r) {
    return isSameYear(t, r);
  }
  setMinutes(t, r) {
    return setMinutes(t, r);
  }
  setHours(t, r) {
    return setHours(t, r);
  }
  setMonth(t, r) {
    return setMonth(t, r);
  }
  setDate(t, r) {
    return setDate(t, r);
  }
  setYear(t, r) {
    return setYear(t, r);
  }
  getDiff(t, r, n) {
    return getDiff(t, r, n);
  }
  getWeekdays(t) {
    return getWeekdays(this.locale, t ? Number(t) : void 0);
  }
  getYear(t) {
    return getYear(t);
  }
  getMonth(t) {
    return getMonth(t);
  }
  getDate(t) {
    return getDate(t);
  }
  getNextMonth(t) {
    return getNextMonth(t);
  }
  getPreviousMonth(t) {
    return getPreviousMonth(t);
  }
  getHours(t) {
    return getHours(t);
  }
  getMinutes(t) {
    return getMinutes(t);
  }
  startOfDay(t) {
    return startOfDay(t);
  }
  endOfDay(t) {
    return endOfDay(t);
  }
  startOfYear(t) {
    return startOfYear(t);
  }
  endOfYear(t) {
    return endOfYear(t);
  }
}
const DateOptionsSymbol = Symbol.for("vuetify:date-options"),
  DateAdapterSymbol = Symbol.for("vuetify:date-adapter");
function createDate(e, t) {
  const r = mergeDeep(
    {
      adapter: VuetifyDateAdapter,
      locale: {
        af: "af-ZA",
        bg: "bg-BG",
        ca: "ca-ES",
        ckb: "",
        cs: "cs-CZ",
        de: "de-DE",
        el: "el-GR",
        en: "en-US",
        et: "et-EE",
        fa: "fa-IR",
        fi: "fi-FI",
        hr: "hr-HR",
        hu: "hu-HU",
        he: "he-IL",
        id: "id-ID",
        it: "it-IT",
        ja: "ja-JP",
        ko: "ko-KR",
        lv: "lv-LV",
        lt: "lt-LT",
        nl: "nl-NL",
        no: "no-NO",
        pl: "pl-PL",
        pt: "pt-PT",
        ro: "ro-RO",
        ru: "ru-RU",
        sk: "sk-SK",
        sl: "sl-SI",
        srCyrl: "sr-SP",
        srLatn: "sr-SP",
        sv: "sv-SE",
        th: "th-TH",
        tr: "tr-TR",
        az: "az-AZ",
        uk: "uk-UA",
        vi: "vi-VN",
        zhHans: "zh-CN",
        zhHant: "zh-TW",
      },
    },
    e
  );
  return { options: r, instance: createInstance(r, t) };
}
function createInstance(e, t) {
  const r = reactive(
    typeof e.adapter == "function"
      ? new e.adapter({
          locale: e.locale[t.current.value] ?? t.current.value,
          formats: e.formats,
        })
      : e.adapter
  );
  return (
    watch(t.current, (n) => {
      r.locale = e.locale[n] ?? n ?? r.locale;
    }),
    r
  );
}
const breakpoints = ["sm", "md", "lg", "xl", "xxl"],
  DisplaySymbol = Symbol.for("vuetify:display"),
  defaultDisplayOptions = {
    mobileBreakpoint: "lg",
    thresholds: { xs: 0, sm: 600, md: 960, lg: 1280, xl: 1920, xxl: 2560 },
  },
  parseDisplayOptions = function () {
    let e =
      arguments.length > 0 && arguments[0] !== void 0
        ? arguments[0]
        : defaultDisplayOptions;
    return mergeDeep(defaultDisplayOptions, e);
  };
function getClientWidth(e) {
  return IN_BROWSER && !e
    ? window.innerWidth
    : (typeof e == "object" && e.clientWidth) || 0;
}
function getClientHeight(e) {
  return IN_BROWSER && !e
    ? window.innerHeight
    : (typeof e == "object" && e.clientHeight) || 0;
}
function getPlatform(e) {
  const t = IN_BROWSER && !e ? window.navigator.userAgent : "ssr";
  function r(R) {
    return !!t.match(R);
  }
  const n = r(/android/i),
    i = r(/iphone|ipad|ipod/i),
    a = r(/cordova/i),
    o = r(/electron/i),
    l = r(/chrome/i),
    c = r(/edge/i),
    u = r(/firefox/i),
    d = r(/opera/i),
    E = r(/win/i),
    b = r(/mac/i),
    P = r(/linux/i);
  return {
    android: n,
    ios: i,
    cordova: a,
    electron: o,
    chrome: l,
    edge: c,
    firefox: u,
    opera: d,
    win: E,
    mac: b,
    linux: P,
    touch: SUPPORTS_TOUCH,
    ssr: t === "ssr",
  };
}
function createDisplay(e, t) {
  const { thresholds: r, mobileBreakpoint: n } = parseDisplayOptions(e),
    i = shallowRef(getClientHeight(t)),
    a = shallowRef(getPlatform(t)),
    o = reactive({}),
    l = shallowRef(getClientWidth(t));
  function c() {
    (i.value = getClientHeight()), (l.value = getClientWidth());
  }
  function u() {
    c(), (a.value = getPlatform());
  }
  return (
    watchEffect(() => {
      const d = l.value < r.sm,
        E = l.value < r.md && !d,
        b = l.value < r.lg && !(E || d),
        P = l.value < r.xl && !(b || E || d),
        R = l.value < r.xxl && !(P || b || E || d),
        T = l.value >= r.xxl,
        M = d ? "xs" : E ? "sm" : b ? "md" : P ? "lg" : R ? "xl" : "xxl",
        x = typeof n == "number" ? n : r[n],
        k = l.value < x;
      (o.xs = d),
        (o.sm = E),
        (o.md = b),
        (o.lg = P),
        (o.xl = R),
        (o.xxl = T),
        (o.smAndUp = !d),
        (o.mdAndUp = !(d || E)),
        (o.lgAndUp = !(d || E || b)),
        (o.xlAndUp = !(d || E || b || P)),
        (o.smAndDown = !(b || P || R || T)),
        (o.mdAndDown = !(P || R || T)),
        (o.lgAndDown = !(R || T)),
        (o.xlAndDown = !T),
        (o.name = M),
        (o.height = i.value),
        (o.width = l.value),
        (o.mobile = k),
        (o.mobileBreakpoint = n),
        (o.platform = a.value),
        (o.thresholds = r);
    }),
    IN_BROWSER && window.addEventListener("resize", c, { passive: !0 }),
    { ...toRefs(o), update: u, ssr: !!t }
  );
}
const makeDisplayProps = propsFactory(
  {
    mobile: { type: Boolean, default: !1 },
    mobileBreakpoint: [Number, String],
  },
  "display"
);
function useDisplay() {
  let e =
      arguments.length > 0 && arguments[0] !== void 0
        ? arguments[0]
        : { mobile: null },
    t =
      arguments.length > 1 && arguments[1] !== void 0
        ? arguments[1]
        : getCurrentInstanceName();
  const r = inject$1(DisplaySymbol);
  if (!r) throw new Error("Could not find Vuetify display injection");
  const n = computed(() =>
      e.mobile
        ? !0
        : typeof e.mobileBreakpoint == "number"
        ? r.width.value < e.mobileBreakpoint
        : e.mobileBreakpoint
        ? r.width.value < r.thresholds.value[e.mobileBreakpoint]
        : e.mobile === null
        ? r.mobile.value
        : !1
    ),
    i = computed(() => (t ? { [`${t}--mobile`]: n.value } : {}));
  return { ...r, displayClasses: i, mobile: n };
}
const GoToSymbol = Symbol.for("vuetify:goto");
function genDefaults$1() {
  return {
    container: void 0,
    duration: 300,
    layout: !1,
    offset: 0,
    easing: "easeInOutCubic",
    patterns: {
      linear: (e) => e,
      easeInQuad: (e) => e ** 2,
      easeOutQuad: (e) => e * (2 - e),
      easeInOutQuad: (e) => (e < 0.5 ? 2 * e ** 2 : -1 + (4 - 2 * e) * e),
      easeInCubic: (e) => e ** 3,
      easeOutCubic: (e) => (--e) ** 3 + 1,
      easeInOutCubic: (e) =>
        e < 0.5 ? 4 * e ** 3 : (e - 1) * (2 * e - 2) * (2 * e - 2) + 1,
      easeInQuart: (e) => e ** 4,
      easeOutQuart: (e) => 1 - (--e) ** 4,
      easeInOutQuart: (e) => (e < 0.5 ? 8 * e ** 4 : 1 - 8 * (--e) ** 4),
      easeInQuint: (e) => e ** 5,
      easeOutQuint: (e) => 1 + (--e) ** 5,
      easeInOutQuint: (e) => (e < 0.5 ? 16 * e ** 5 : 1 + 16 * (--e) ** 5),
    },
  };
}
function getContainer(e) {
  return getTarget(e) ?? (document.scrollingElement || document.body);
}
function getTarget(e) {
  return typeof e == "string" ? document.querySelector(e) : refElement(e);
}
function getOffset(e, t, r) {
  if (typeof e == "number") return t && r ? -e : e;
  let n = getTarget(e),
    i = 0;
  for (; n; ) (i += t ? n.offsetLeft : n.offsetTop), (n = n.offsetParent);
  return i;
}
function createGoTo(e, t) {
  return { rtl: t.isRtl, options: mergeDeep(genDefaults$1(), e) };
}
async function scrollTo(e, t, r, n) {
  const i = r ? "scrollLeft" : "scrollTop",
    a = mergeDeep((n == null ? void 0 : n.options) ?? genDefaults$1(), t),
    o = n == null ? void 0 : n.rtl.value,
    l = (typeof e == "number" ? e : getTarget(e)) ?? 0,
    c =
      a.container === "parent" && l instanceof HTMLElement
        ? l.parentElement
        : getContainer(a.container),
    u = typeof a.easing == "function" ? a.easing : a.patterns[a.easing];
  if (!u) throw new TypeError(`Easing function "${a.easing}" not found.`);
  let d;
  if (typeof l == "number") d = getOffset(l, r, o);
  else if (((d = getOffset(l, r, o) - getOffset(c, r, o)), a.layout)) {
    const R = window.getComputedStyle(l).getPropertyValue("--v-layout-top");
    R && (d -= parseInt(R, 10));
  }
  (d += a.offset), (d = clampTarget(c, d, !!o, !!r));
  const E = c[i] ?? 0;
  if (d === E) return Promise.resolve(d);
  const b = performance.now();
  return new Promise((P) =>
    requestAnimationFrame(function R(T) {
      const x = (T - b) / a.duration,
        k = Math.floor(E + (d - E) * u(clamp(x, 0, 1)));
      if (((c[i] = k), x >= 1 && Math.abs(k - c[i]) < 10)) return P(d);
      if (x > 2) return P(c[i]);
      requestAnimationFrame(R);
    })
  );
}
function useGoTo() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const t = inject$1(GoToSymbol),
    { isRtl: r } = useRtl();
  if (!t) throw new Error("[Vuetify] Could not find injected goto instance");
  const n = { ...t, rtl: computed(() => t.rtl.value || r.value) };
  async function i(a, o) {
    return scrollTo(a, mergeDeep(e, o), !1, n);
  }
  return (
    (i.horizontal = async (a, o) => scrollTo(a, mergeDeep(e, o), !0, n)), i
  );
}
function clampTarget(e, t, r, n) {
  const { scrollWidth: i, scrollHeight: a } = e,
    [o, l] =
      e === document.scrollingElement
        ? [window.innerWidth, window.innerHeight]
        : [e.offsetWidth, e.offsetHeight];
  let c, u;
  return (
    n
      ? r
        ? ((c = -(i - o)), (u = 0))
        : ((c = 0), (u = i - o))
      : ((c = 0), (u = a + -l)),
    Math.max(Math.min(t, u), c)
  );
}
const ThemeSymbol = Symbol.for("vuetify:theme"),
  makeThemeProps = propsFactory({ theme: String }, "theme");
function genDefaults() {
  return {
    defaultTheme: "light",
    variations: { colors: [], lighten: 0, darken: 0 },
    themes: {
      light: {
        dark: !1,
        colors: {
          background: "#FFFFFF",
          surface: "#FFFFFF",
          "surface-bright": "#FFFFFF",
          "surface-light": "#EEEEEE",
          "surface-variant": "#424242",
          "on-surface-variant": "#EEEEEE",
          primary: "#1867C0",
          "primary-darken-1": "#1F5592",
          secondary: "#48A9A6",
          "secondary-darken-1": "#018786",
          error: "#B00020",
          info: "#2196F3",
          success: "#4CAF50",
          warning: "#FB8C00",
        },
        variables: {
          "border-color": "#000000",
          "border-opacity": 0.12,
          "high-emphasis-opacity": 0.87,
          "medium-emphasis-opacity": 0.6,
          "disabled-opacity": 0.38,
          "idle-opacity": 0.04,
          "hover-opacity": 0.04,
          "focus-opacity": 0.12,
          "selected-opacity": 0.08,
          "activated-opacity": 0.12,
          "pressed-opacity": 0.12,
          "dragged-opacity": 0.08,
          "theme-kbd": "#212529",
          "theme-on-kbd": "#FFFFFF",
          "theme-code": "#F5F5F5",
          "theme-on-code": "#000000",
        },
      },
      dark: {
        dark: !0,
        colors: {
          background: "#121212",
          surface: "#212121",
          "surface-bright": "#ccbfd6",
          "surface-light": "#424242",
          "surface-variant": "#a3a3a3",
          "on-surface-variant": "#424242",
          primary: "#2196F3",
          "primary-darken-1": "#277CC1",
          secondary: "#54B6B2",
          "secondary-darken-1": "#48A9A6",
          error: "#CF6679",
          info: "#2196F3",
          success: "#4CAF50",
          warning: "#FB8C00",
        },
        variables: {
          "border-color": "#FFFFFF",
          "border-opacity": 0.12,
          "high-emphasis-opacity": 1,
          "medium-emphasis-opacity": 0.7,
          "disabled-opacity": 0.5,
          "idle-opacity": 0.1,
          "hover-opacity": 0.04,
          "focus-opacity": 0.12,
          "selected-opacity": 0.08,
          "activated-opacity": 0.12,
          "pressed-opacity": 0.16,
          "dragged-opacity": 0.08,
          "theme-kbd": "#212529",
          "theme-on-kbd": "#FFFFFF",
          "theme-code": "#343434",
          "theme-on-code": "#CCCCCC",
        },
      },
    },
  };
}
function parseThemeOptions() {
  var n, i;
  let e =
    arguments.length > 0 && arguments[0] !== void 0
      ? arguments[0]
      : genDefaults();
  const t = genDefaults();
  if (!e) return { ...t, isDisabled: !0 };
  const r = {};
  for (const [a, o] of Object.entries(e.themes ?? {})) {
    const l =
      o.dark || a === "dark"
        ? (n = t.themes) == null
          ? void 0
          : n.dark
        : (i = t.themes) == null
        ? void 0
        : i.light;
    r[a] = mergeDeep(l, o);
  }
  return mergeDeep(t, { ...e, themes: r });
}
function createTheme(e) {
  const t = parseThemeOptions(e),
    r = ref(t.defaultTheme),
    n = ref(t.themes),
    i = computed(() => {
      const d = {};
      for (const [E, b] of Object.entries(n.value)) {
        const P = (d[E] = { ...b, colors: { ...b.colors } });
        if (t.variations)
          for (const R of t.variations.colors) {
            const T = P.colors[R];
            if (T)
              for (const M of ["lighten", "darken"]) {
                const x = M === "lighten" ? lighten : darken;
                for (const k of createRange(t.variations[M], 1))
                  P.colors[`${R}-${M}-${k}`] = RGBtoHex(x(parseColor(T), k));
              }
          }
        for (const R of Object.keys(P.colors)) {
          if (/^on-[a-z]/.test(R) || P.colors[`on-${R}`]) continue;
          const T = `on-${R}`,
            M = parseColor(P.colors[R]);
          P.colors[T] = getForeground(M);
        }
      }
      return d;
    }),
    a = computed(() => i.value[r.value]),
    o = computed(() => {
      var R;
      const d = [];
      (R = a.value) != null &&
        R.dark &&
        createCssClass(d, ":root", ["color-scheme: dark"]),
        createCssClass(d, ":root", genCssVariables(a.value));
      for (const [T, M] of Object.entries(i.value))
        createCssClass(d, `.v-theme--${T}`, [
          `color-scheme: ${M.dark ? "dark" : "normal"}`,
          ...genCssVariables(M),
        ]);
      const E = [],
        b = [],
        P = new Set(
          Object.values(i.value).flatMap((T) => Object.keys(T.colors))
        );
      for (const T of P)
        /^on-[a-z]/.test(T)
          ? createCssClass(b, `.${T}`, [
              `color: rgb(var(--v-theme-${T})) !important`,
            ])
          : (createCssClass(E, `.bg-${T}`, [
              `--v-theme-overlay-multiplier: var(--v-theme-${T}-overlay-multiplier)`,
              `background-color: rgb(var(--v-theme-${T})) !important`,
              `color: rgb(var(--v-theme-on-${T})) !important`,
            ]),
            createCssClass(b, `.text-${T}`, [
              `color: rgb(var(--v-theme-${T})) !important`,
            ]),
            createCssClass(b, `.border-${T}`, [
              `--v-border-color: var(--v-theme-${T})`,
            ]));
      return (
        d.push(...E, ...b), d.map((T, M) => (M === 0 ? T : `    ${T}`)).join("")
      );
    });
  function l() {
    return {
      style: [
        {
          children: o.value,
          id: "vuetify-theme-stylesheet",
          nonce: t.cspNonce || !1,
        },
      ],
    };
  }
  function c(d) {
    if (t.isDisabled) return;
    const E = d._context.provides.usehead;
    if (E)
      if (E.push) {
        const b = E.push(l);
        IN_BROWSER &&
          watch(o, () => {
            b.patch(l);
          });
      } else
        IN_BROWSER
          ? (E.addHeadObjs(computed(l)), watchEffect(() => E.updateDOM()))
          : E.addHeadObjs(l());
    else {
      let P = function () {
          if (typeof document < "u" && !b) {
            const R = document.createElement("style");
            (R.type = "text/css"),
              (R.id = "vuetify-theme-stylesheet"),
              t.cspNonce && R.setAttribute("nonce", t.cspNonce),
              (b = R),
              document.head.appendChild(b);
          }
          b && (b.innerHTML = o.value);
        },
        b = IN_BROWSER
          ? document.getElementById("vuetify-theme-stylesheet")
          : null;
      IN_BROWSER ? watch(o, P, { immediate: !0 }) : P();
    }
  }
  const u = computed(() => (t.isDisabled ? void 0 : `v-theme--${r.value}`));
  return {
    install: c,
    isDisabled: t.isDisabled,
    name: r,
    themes: n,
    current: a,
    computedThemes: i,
    themeClasses: u,
    styles: o,
    global: { name: r, current: a },
  };
}
function provideTheme(e) {
  getCurrentInstance("provideTheme");
  const t = inject$1(ThemeSymbol, null);
  if (!t) throw new Error("Could not find Vuetify theme injection");
  const r = computed(() => e.theme ?? t.name.value),
    n = computed(() => t.themes.value[r.value]),
    i = computed(() => (t.isDisabled ? void 0 : `v-theme--${r.value}`)),
    a = { ...t, name: r, current: n, themeClasses: i };
  return provide(ThemeSymbol, a), a;
}
function createCssClass(e, t, r) {
  e.push(
    `${t} {
`,
    ...r.map(
      (n) => `  ${n};
`
    ),
    `}
`
  );
}
function genCssVariables(e) {
  const t = e.dark ? 2 : 1,
    r = e.dark ? 1 : 2,
    n = [];
  for (const [i, a] of Object.entries(e.colors)) {
    const o = parseColor(a);
    n.push(`--v-theme-${i}: ${o.r},${o.g},${o.b}`),
      i.startsWith("on-") ||
        n.push(
          `--v-theme-${i}-overlay-multiplier: ${getLuma(a) > 0.18 ? t : r}`
        );
  }
  for (const [i, a] of Object.entries(e.variables)) {
    const o =
        typeof a == "string" && a.startsWith("#") ? parseColor(a) : void 0,
      l = o ? `${o.r}, ${o.g}, ${o.b}` : void 0;
    n.push(`--v-${i}: ${l ?? a}`);
  }
  return n;
}
function createVuetify() {
  let e = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
  const { blueprint: t, ...r } = e,
    n = mergeDeep(t, r),
    { aliases: i = {}, components: a = {}, directives: o = {} } = n,
    l = createDefaults(n.defaults),
    c = createDisplay(n.display, n.ssr),
    u = createTheme(n.theme),
    d = createIcons(n.icons),
    E = createLocale(n.locale),
    b = createDate(n.date, E),
    P = createGoTo(n.goTo, E);
  return {
    install: (T) => {
      for (const M in o) T.directive(M, o[M]);
      for (const M in a) T.component(M, a[M]);
      for (const M in i)
        T.component(
          M,
          defineComponent({ ...i[M], name: M, aliasName: i[M].name })
        );
      if (
        (u.install(T),
        T.provide(DefaultsSymbol, l),
        T.provide(DisplaySymbol, c),
        T.provide(ThemeSymbol, u),
        T.provide(IconSymbol, d),
        T.provide(LocaleSymbol, E),
        T.provide(DateOptionsSymbol, b.options),
        T.provide(DateAdapterSymbol, b.instance),
        T.provide(GoToSymbol, P),
        IN_BROWSER && n.ssr)
      )
        if (T.$nuxt)
          T.$nuxt.hook("app:suspense:resolve", () => {
            c.update();
          });
        else {
          const { mount: M } = T;
          T.mount = function () {
            const x = M(...arguments);
            return nextTick(() => c.update()), (T.mount = M), x;
          };
        }
      getUid.reset(),
        T.mixin({
          computed: {
            $vuetify() {
              return reactive({
                defaults: inject.call(this, DefaultsSymbol),
                display: inject.call(this, DisplaySymbol),
                theme: inject.call(this, ThemeSymbol),
                icons: inject.call(this, IconSymbol),
                locale: inject.call(this, LocaleSymbol),
                date: inject.call(this, DateAdapterSymbol),
              });
            },
          },
        });
    },
    defaults: l,
    display: c,
    theme: u,
    icons: d,
    locale: E,
    date: b,
    goTo: P,
  };
}
const version = "3.7.11";
createVuetify.version = version;
function inject(e) {
  var n, i;
  const t = this.$,
    r =
      ((n = t.parent) == null ? void 0 : n.provides) ??
      ((i = t.vnode.appContext) == null ? void 0 : i.provides);
  if (r && e in r) return r[e];
}
const vuetify_nuxt_plugin_client_JOtFoHdxcp = defineNuxtPlugin({
    name: "vuetify:nuxt:client:plugin",
    order: 25,
    dependsOn: ["vuetify:icons:plugin", "vuetify:i18n:plugin"],
    parallel: !0,
    async setup(e) {
      let t, r;
      const n = vuetifyConfiguration();
      ([t, r] = executeAsync(() =>
        e.hooks.callHook("vuetify:configuration", { isDev, vuetifyOptions: n })
      )),
        await t,
        r(),
        ([t, r] = executeAsync(() =>
          e.hooks.callHook("vuetify:before-create", {
            isDev,
            vuetifyOptions: n,
          })
        )),
        await t,
        r();
      const i = createVuetify(n);
      e.vueApp.use(i),
        e.provide("vuetify", i),
        ([t, r] = executeAsync(() => e.hooks.callHook("vuetify:ready", i))),
        await t,
        r();
    },
  }),
  plugins = [
    payloadPlugin,
    revive_payload_client_4sVQNw7RlN,
    vuetify_i18n_H4uUvhyrU1,
    vuetify_icons_KAumv2pUni,
    unhead_KgADcZ0jPj,
    plugin$2,
    payload_client_yVLowv6hDl,
    navigation_repaint_client_bs2bWDGRIE,
    check_outdated_build_client_8vK7RkfGxZ,
    chunk_reload_client_UciE0i6zes,
    plugin$1,
    components_plugin_KR1HBZs4kY,
    prefetch_client_5tzzN0oIVL,
    components_client_ZB1W0EeH0E,
    switch_locale_path_ssr_5csfIgkrBP,
    i18n_sq1MuCrqbC,
    plugin,
    recaptcha_client_ePVGy12Odm,
    crisp_client_amQNA6tQA4,
    lottie_vue3_client_W4eqq0Qdp7,
    googleLogin_client_JWzGL7CXWf,
    auth_ANExhJHvcR,
    isDesktop_IeqUfBfHjG,
    vuetify_nuxt_plugin_client_JOtFoHdxcp,
  ],
  RouteProvider = defineComponent$1({
    props: {
      vnode: { type: Object, required: !0 },
      route: { type: Object, required: !0 },
      vnodeRef: Object,
      renderKey: String,
      trackRootNodes: Boolean,
    },
    setup(e) {
      const t = e.renderKey,
        r = e.route,
        n = {};
      for (const i in e.route)
        Object.defineProperty(n, i, {
          get: () => (t === e.renderKey ? e.route[i] : r[i]),
          enumerable: !0,
        });
      return (
        provide(PageRouteSymbol, shallowReactive(n)),
        () => h$2(e.vnode, { ref: e.vnodeRef })
      );
    },
  }),
  __nuxt_component_0 = defineComponent$1({
    name: "NuxtPage",
    inheritAttrs: !1,
    props: {
      name: { type: String },
      transition: { type: [Boolean, Object], default: void 0 },
      keepalive: { type: [Boolean, Object], default: void 0 },
      route: { type: Object },
      pageKey: { type: [Function, String], default: null },
    },
    setup(e, { attrs: t, slots: r, expose: n }) {
      const i = useNuxtApp(),
        a = ref(),
        o = inject$1(PageRouteSymbol, null);
      let l;
      n({ pageRef: a });
      const c = inject$1(LayoutMetaSymbol, null);
      let u;
      const d = i.deferHydration();
      if (i.isHydrating) {
        const E = i.hooks.hookOnce("app:error", d);
        useRouter$1().beforeEach(E);
      }
      return (
        e.pageKey &&
          watch(
            () => e.pageKey,
            (E, b) => {
              E !== b && i.callHook("page:loading:start");
            }
          ),
        () =>
          h$2(
            RouterView,
            { name: e.name, route: e.route, ...t },
            {
              default: (E) => {
                const b = haveParentRoutesRendered(o, E.route, E.Component),
                  P = o && o.matched.length === E.route.matched.length;
                if (!E.Component) {
                  if (u && !P) return u;
                  d();
                  return;
                }
                if (u && c && !c.isCurrent(E.route)) return u;
                if (b && o && (!c || (c != null && c.isCurrent(o))))
                  return P ? u : null;
                const R = generateRouteKey$1(E, e.pageKey);
                !i.isHydrating &&
                  !hasChildrenRoutes(o, E.route, E.Component) &&
                  l === R &&
                  i.callHook("page:loading:end"),
                  (l = R);
                const T = !!(
                    e.transition ??
                    E.route.meta.pageTransition ??
                    appPageTransition
                  ),
                  M =
                    T &&
                    _mergeTransitionProps(
                      [
                        e.transition,
                        E.route.meta.pageTransition,
                        appPageTransition,
                        {
                          onAfterLeave: () => {
                            i.callHook("page:transition:finish", E.Component);
                          },
                        },
                      ].filter(Boolean)
                    ),
                  x = e.keepalive ?? E.route.meta.keepalive ?? appKeepalive;
                return (
                  (u = _wrapIf(
                    Transition,
                    T && M,
                    wrapInKeepAlive(
                      x,
                      h$2(
                        Suspense,
                        {
                          suspensible: !0,
                          onPending: () =>
                            i.callHook("page:start", E.Component),
                          onResolve: () => {
                            nextTick(() =>
                              i
                                .callHook("page:finish", E.Component)
                                .then(() => i.callHook("page:loading:end"))
                                .finally(d)
                            );
                          },
                        },
                        {
                          default: () => {
                            const k = h$2(RouteProvider, {
                              key: R || void 0,
                              vnode: r.default
                                ? h$2(Fragment, void 0, r.default(E))
                                : E.Component,
                              route: E.route,
                              renderKey: R || void 0,
                              trackRootNodes: T,
                              vnodeRef: a,
                            });
                            return (
                              x &&
                                (k.type.name =
                                  E.Component.type.name ||
                                  E.Component.type.__name ||
                                  "RouteProvider"),
                              k
                            );
                          },
                        }
                      )
                    )
                  ).default()),
                  u
                );
              },
            }
          )
      );
    },
  });
function _mergeTransitionProps(e) {
  const t = e.map((r) => ({
    ...r,
    onAfterLeave: r.onAfterLeave ? toArray(r.onAfterLeave) : void 0,
  }));
  return defu(...t);
}
function haveParentRoutesRendered(e, t, r) {
  if (!e) return !1;
  const n = t.matched.findIndex((i) => {
    var a;
    return (
      ((a = i.components) == null ? void 0 : a.default) ===
      (r == null ? void 0 : r.type)
    );
  });
  return !n || n === -1
    ? !1
    : t.matched.slice(0, n).some((i, a) => {
        var o, l, c;
        return (
          ((o = i.components) == null ? void 0 : o.default) !==
          ((c = (l = e.matched[a]) == null ? void 0 : l.components) == null
            ? void 0
            : c.default)
        );
      }) ||
        (r &&
          generateRouteKey$1({ route: t, Component: r }) !==
            generateRouteKey$1({ route: e, Component: r }));
}
function hasChildrenRoutes(e, t, r) {
  return e
    ? t.matched.findIndex((i) => {
        var a;
        return (
          ((a = i.components) == null ? void 0 : a.default) ===
          (r == null ? void 0 : r.type)
        );
      }) <
        t.matched.length - 1
    : !1;
}
const LayoutLoader = defineComponent$1({
    name: "LayoutLoader",
    inheritAttrs: !1,
    props: { name: String, layoutProps: Object },
    setup(e, t) {
      return () => h$2(layouts[e.name], e.layoutProps, t.slots);
    },
  }),
  __nuxt_component_2 = defineComponent$1({
    name: "NuxtLayout",
    inheritAttrs: !1,
    props: {
      name: { type: [String, Boolean, Object], default: null },
      fallback: { type: [String, Object], default: null },
    },
    setup(e, t) {
      const r = useNuxtApp(),
        n = inject$1(PageRouteSymbol),
        i = n === useRoute$1() ? useRoute() : n,
        a = computed(() => {
          let c = unref(e.name) ?? i.meta.layout ?? "default";
          return (
            c && !(c in layouts) && e.fallback && (c = unref(e.fallback)), c
          );
        }),
        o = ref();
      t.expose({ layoutRef: o });
      const l = r.deferHydration();
      if (r.isHydrating) {
        const c = r.hooks.hookOnce("app:error", l);
        useRouter$1().beforeEach(c);
      }
      return () => {
        const c = a.value && a.value in layouts,
          u = i.meta.layoutTransition ?? appLayoutTransition;
        return _wrapIf(Transition, c && u, {
          default: () =>
            h$2(
              Suspense,
              {
                suspensible: !0,
                onResolve: () => {
                  nextTick(l);
                },
              },
              {
                default: () =>
                  h$2(
                    LayoutProvider,
                    {
                      layoutProps: mergeProps(t.attrs, { ref: o }),
                      key: a.value || void 0,
                      name: a.value,
                      shouldProvide: !e.name,
                      hasTransition: !!u,
                    },
                    t.slots
                  ),
              }
            ),
        }).default();
      };
    },
  }),
  LayoutProvider = defineComponent$1({
    name: "NuxtLayoutProvider",
    inheritAttrs: !1,
    props: {
      name: { type: [String, Boolean] },
      layoutProps: { type: Object },
      hasTransition: { type: Boolean },
      shouldProvide: { type: Boolean },
    },
    setup(e, t) {
      const r = e.name;
      return (
        e.shouldProvide &&
          provide(LayoutMetaSymbol, {
            isCurrent: (n) => r === (n.meta.layout ?? "default"),
          }),
        () => {
          var n, i;
          return !r || (typeof r == "string" && !(r in layouts))
            ? (i = (n = t.slots).default) == null
              ? void 0
              : i.call(n)
            : h$2(
                LayoutLoader,
                { key: r, layoutProps: e.layoutProps, name: r },
                t.slots
              );
        }
      );
    },
  }),
  _sfc_main$2 = {
    __name: "app",
    setup(e) {
      return (
        useHead({
          script: [
            {
              hid: "dataLayer-init",
              tag: "script",
              type: "text/javascript",
              children: "window.dataLayer = window.dataLayer || [];",
            },
            {
              hid: "gtm-script",
              tag: "script",
              type: "text/javascript",
              children: `(function(w,d,s,l,i){
        w[l].push({'gtm.start': new Date().getTime(), event:'gtm.js'});
        var f=d.getElementsByTagName(s)[0], j=d.createElement(s),
        dl=l!='dataLayer'?'&l='+l:'';
        j.async=true;
        j.src='https://www.googletagmanager.com/gtm.js?id='+i+dl;
        f.parentNode.insertBefore(j,f);
      })(window,document,'script','dataLayer','GTM-KV47CD8');`,
            },
          ],
          noscript: [
            {
              hid: "gtm-noscript",
              tag: "noscript",
              children: `<iframe src="https://www.googletagmanager.com/ns.html?id=GTM-KV47CD8"
        height="0" width="0" style="display:none;visibility:hidden"></iframe>`,
            },
          ],
        }),
        (t, r) => {
          const n = __nuxt_component_0,
            i = __nuxt_component_2;
          return (
            openBlock(),
            createBlock(i, null, {
              default: withCtx(() => [createVNode(n)]),
              _: 1,
            })
          );
        }
      );
    },
  },
  clientOnlySymbol = Symbol.for("nuxt:client-only"),
  __nuxt_component_1 = defineComponent$1({
    name: "ClientOnly",
    inheritAttrs: !1,
    props: ["fallback", "placeholder", "placeholderTag", "fallbackTag"],
    setup(e, { slots: t, attrs: r }) {
      const n = ref(!1);
      return (
        onMounted(() => {
          n.value = !0;
        }),
        provide(clientOnlySymbol, !0),
        (i) => {
          var c;
          if (n.value) return (c = t.default) == null ? void 0 : c.call(t);
          const a = t.fallback || t.placeholder;
          if (a) return a();
          const o = i.fallback || i.placeholder || "",
            l = i.fallbackTag || i.placeholderTag || "span";
          return createElementBlock(l, r, o);
        }
      );
    },
  }),
  v = "4.8.0",
  meta = { g: "LottieFiles AE 3.1.1", a: "", k: "", d: "", tc: "" },
  fr = 25,
  ip = 0,
  op = 76,
  w = 800,
  h = 600,
  nm = "Comp 1",
  ddd = 0,
  assets = [],
  layers = [
    {
      ddd: 0,
      ind: 1,
      ty: 4,
      nm: "Layer 2 Outlines",
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: {
          a: 1,
          k: [
            {
              i: { x: [0.434], y: [1] },
              o: { x: [0.79], y: [0] },
              t: 0,
              s: [30],
            },
            {
              i: { x: [0.368], y: [1] },
              o: { x: [0.724], y: [0] },
              t: 37.5,
              s: [-30],
            },
            { t: 75, s: [30] },
          ],
          ix: 10,
        },
        p: { a: 0, k: [373.403, 2.654, 0], ix: 2 },
        a: { a: 0, k: [28.425, 0.25, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, -13.99],
                    [15.56, 0],
                    [0, -2.66],
                    [-13.36, 2.2],
                    [-1.17, 0.73],
                    [0, 0],
                    [0, 0.27],
                    [-1.08, 0.31],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, -1.25],
                    [0.08, -0.25],
                    [0, 0],
                    [-0.16, -1.45],
                  ],
                  o: [
                    [0, -2.66],
                    [-15.56, 0],
                    [0, -13.99],
                    [0.15, -1.45],
                    [0, 0],
                    [-0.08, -0.25],
                    [0, -1.19],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [1.17, 0.25],
                    [0, 0.27],
                    [0, 0],
                    [1.17, 0.73],
                    [13.36, 2.2],
                  ],
                  v: [
                    [28.175, 72.78],
                    [0.005, 67.95],
                    [-28.175, 72.78],
                    [-4.615, 44.99],
                    [-2.485, 41.56],
                    [-2.485, 41.55],
                    [-2.605, 40.78],
                    [-0.725, 38.28],
                    [-0.725, -72.78],
                    [0.555, -72.78],
                    [0.555, 38.23],
                    [2.605, 40.78],
                    [2.485, 41.55],
                    [2.485, 41.56],
                    [4.625, 44.99],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "Path 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0, 0, 0, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [28.425, 73.03], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
            },
          ],
          nm: "Group 1",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 76,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 2,
      ty: 4,
      nm: "Layer 1 Outlines 2",
      parent: 1,
      td: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [28.608, 283.127, 0], ix: 2 },
        a: { a: 0, k: [140.69, 142.455, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, -0.22],
                    [0, 0],
                  ],
                  o: [
                    [0, 0],
                    [0.18, 0.21],
                  ],
                  v: [
                    [0.13, 0.32],
                    [-0.13, -0.32],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "Path 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.5, 0.7583, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [162.375, 2.054], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
            },
          ],
          nm: "Group 1",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [-13.45, 0],
                    [-1.83, -2.36],
                    [0, 0],
                  ],
                  o: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [2.8, -2.17],
                    [14.28, 0],
                    [0, 0],
                    [0, 0],
                  ],
                  v: [
                    [140.44, 142.205],
                    [-140.44, 142.205],
                    [-28.2, -136.995],
                    [-27.63, -138.415],
                    [-0.12, -142.205],
                    [27.79, -138.015],
                    [28.05, -137.375],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "Path 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.5, 0.7583, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [140.69, 142.455], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
            },
          ],
          nm: "Group 2",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 2,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 76,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 3,
      ty: 4,
      nm: "404 Outlines",
      tt: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [387.851, 365.369, 0], ix: 2 },
        a: { a: 0, k: [-0.025, -63.355, 0], ix: 1 },
        s: { a: 0, k: [66, 66, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                  ],
                  o: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                  ],
                  v: [
                    [-113.47, 0],
                    [-82.653, 0],
                    [-82.653, -26.829],
                    [-68.332, -26.829],
                    [-68.332, -54.02],
                    [-82.834, -54.02],
                    [-82.834, -126.711],
                    [-125.434, -126.711],
                    [-171.477, -49.307],
                    [-171.477, -26.829],
                    [-113.47, -26.829],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "4",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ind: 1,
              ty: "sh",
              ix: 2,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                  ],
                  o: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                  ],
                  v: [
                    [-137.942, -54.02],
                    [-113.47, -95.169],
                    [-113.47, -54.02],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "4",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.0118, 0.5176, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "st",
              c: { a: 0, k: [0, 0, 0, 1], ix: 3 },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 0.01, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "Stroke 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
            },
          ],
          nm: "4",
          np: 4,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [-15.046, 0],
                    [-9.608, 12.689],
                    [0, 21.572],
                    [9.064, 12.145],
                    [15.408, 0],
                    [9.426, -12.689],
                    [0, -21.934],
                    [-9.245, -11.964],
                  ],
                  o: [
                    [15.227, 0],
                    [9.064, -12.145],
                    [0, -21.753],
                    [-9.789, -12.87],
                    [-15.046, 0],
                    [-9.245, 11.964],
                    [0, 21.753],
                    [9.426, 12.689],
                  ],
                  v: [
                    [0.255, 4.713],
                    [38.685, -15.046],
                    [51.555, -63.265],
                    [38.685, -111.665],
                    [0.255, -131.424],
                    [-37.813, -111.665],
                    [-50.865, -63.265],
                    [-37.813, -15.046],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "0",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ind: 1,
              ty: "sh",
              ix: 2,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 23.566],
                    [-16.133, 0],
                    [0, 0],
                    [0, -23.566],
                    [16.133, 0],
                    [0, 0],
                  ],
                  o: [
                    [0, -23.566],
                    [0, 0],
                    [15.952, 0],
                    [0, 23.566],
                    [0, 0],
                    [-16.315, 0],
                  ],
                  v: [
                    [-18.96, -62.902],
                    [-0.289, -99.338],
                    [1.161, -99.338],
                    [19.832, -62.902],
                    [0.98, -26.647],
                    [-0.108, -26.647],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "0",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.0118, 0.5176, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "st",
              c: { a: 0, k: [0, 0, 0, 1], ix: 3 },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 0.01, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "Stroke 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
            },
          ],
          nm: "0",
          np: 4,
          cix: 2,
          bm: 0,
          ix: 2,
          mn: "ADBE Vector Group",
          hd: !1,
        },
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                  ],
                  o: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                  ],
                  v: [
                    [126.29, 0],
                    [157.107, 0],
                    [157.107, -26.829],
                    [171.428, -26.829],
                    [171.428, -54.02],
                    [156.926, -54.02],
                    [156.926, -126.711],
                    [114.326, -126.711],
                    [68.283, -49.307],
                    [68.283, -26.829],
                    [126.29, -26.829],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "4",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ind: 1,
              ty: "sh",
              ix: 2,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                  ],
                  o: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                  ],
                  v: [
                    [101.818, -54.02],
                    [126.29, -95.169],
                    [126.29, -54.02],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "4",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.0118, 0.5176, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "st",
              c: { a: 0, k: [0, 0, 0, 1], ix: 3 },
              o: { a: 0, k: 100, ix: 4 },
              w: { a: 0, k: 0.01, ix: 5 },
              lc: 1,
              lj: 1,
              ml: 4,
              bm: 0,
              nm: "Stroke 1",
              mn: "ADBE Vector Graphic - Stroke",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [0, 0], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
            },
          ],
          nm: "4",
          np: 4,
          cix: 2,
          bm: 0,
          ix: 3,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 76,
      st: 0,
      bm: 0,
    },
    {
      ddd: 0,
      ind: 4,
      ty: 4,
      nm: "Layer 1 Outlines",
      parent: 1,
      sr: 1,
      ks: {
        o: { a: 0, k: 100, ix: 11 },
        r: { a: 0, k: 0, ix: 10 },
        p: { a: 0, k: [28.608, 283.127, 0], ix: 2 },
        a: { a: 0, k: [140.69, 142.455, 0], ix: 1 },
        s: { a: 0, k: [100, 100, 100], ix: 6 },
      },
      ao: 0,
      shapes: [
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, -0.22],
                    [0, 0],
                  ],
                  o: [
                    [0, 0],
                    [0.18, 0.21],
                  ],
                  v: [
                    [0.13, 0.32],
                    [-0.13, -0.32],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "Path 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.5, 0.7583, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [162.375, 2.054], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
            },
          ],
          nm: "Group 1",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 1,
          mn: "ADBE Vector Group",
          hd: !1,
        },
        {
          ty: "gr",
          it: [
            {
              ind: 0,
              ty: "sh",
              ix: 1,
              ks: {
                a: 0,
                k: {
                  i: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [-13.45, 0],
                    [-1.83, -2.36],
                    [0, 0],
                  ],
                  o: [
                    [0, 0],
                    [0, 0],
                    [0, 0],
                    [2.8, -2.17],
                    [14.28, 0],
                    [0, 0],
                    [0, 0],
                  ],
                  v: [
                    [140.44, 142.205],
                    [-140.44, 142.205],
                    [-28.2, -136.995],
                    [-27.63, -138.415],
                    [-0.12, -142.205],
                    [27.79, -138.015],
                    [28.05, -137.375],
                  ],
                  c: !0,
                },
                ix: 2,
              },
              nm: "Path 1",
              mn: "ADBE Vector Shape - Group",
              hd: !1,
            },
            {
              ty: "fl",
              c: { a: 0, k: [0.5, 0.7583, 1, 1], ix: 4 },
              o: { a: 0, k: 100, ix: 5 },
              r: 1,
              bm: 0,
              nm: "Fill 1",
              mn: "ADBE Vector Graphic - Fill",
              hd: !1,
            },
            {
              ty: "tr",
              p: { a: 0, k: [140.69, 142.455], ix: 2 },
              a: { a: 0, k: [0, 0], ix: 1 },
              s: { a: 0, k: [100, 100], ix: 3 },
              r: { a: 0, k: 0, ix: 6 },
              o: { a: 0, k: 100, ix: 7 },
              sk: { a: 0, k: 0, ix: 4 },
              sa: { a: 0, k: 0, ix: 5 },
              nm: "Transform",
            },
          ],
          nm: "Group 2",
          np: 2,
          cix: 2,
          bm: 0,
          ix: 2,
          mn: "ADBE Vector Group",
          hd: !1,
        },
      ],
      ip: 0,
      op: 76,
      st: 0,
      bm: 0,
    },
  ],
  markers = [],
  errorLottie = { v, meta, fr, ip, op, w, h, nm, ddd, assets, layers, markers };
function useColor(e) {
  return destructComputed(() => {
    const t = [],
      r = {};
    if (e.value.background)
      if (isCssColor(e.value.background)) {
        if (
          ((r.backgroundColor = e.value.background),
          !e.value.text && isParsableColor(e.value.background))
        ) {
          const n = parseColor(e.value.background);
          if (n.a == null || n.a === 1) {
            const i = getForeground(n);
            (r.color = i), (r.caretColor = i);
          }
        }
      } else t.push(`bg-${e.value.background}`);
    return (
      e.value.text &&
        (isCssColor(e.value.text)
          ? ((r.color = e.value.text), (r.caretColor = e.value.text))
          : t.push(`text-${e.value.text}`)),
      { colorClasses: t, colorStyles: r }
    );
  });
}
function useTextColor(e, t) {
  const r = computed(() => ({ text: isRef(e) ? e.value : t ? e[t] : null })),
    { colorClasses: n, colorStyles: i } = useColor(r);
  return { textColorClasses: n, textColorStyles: i };
}
function useBackgroundColor(e, t) {
  const r = computed(() => ({
      background: isRef(e) ? e.value : t ? e[t] : null,
    })),
    { colorClasses: n, colorStyles: i } = useColor(r);
  return { backgroundColorClasses: n, backgroundColorStyles: i };
}
const predefinedSizes = ["x-small", "small", "default", "large", "x-large"],
  makeSizeProps = propsFactory(
    { size: { type: [String, Number], default: "default" } },
    "size"
  );
function useSize(e) {
  let t =
    arguments.length > 1 && arguments[1] !== void 0
      ? arguments[1]
      : getCurrentInstanceName();
  return destructComputed(() => {
    let r, n;
    return (
      includes(predefinedSizes, e.size)
        ? (r = `${t}--size-${e.size}`)
        : e.size &&
          (n = { width: convertToUnit(e.size), height: convertToUnit(e.size) }),
      { sizeClasses: r, sizeStyles: n }
    );
  });
}
const makeTagProps = propsFactory(
    { tag: { type: String, default: "div" } },
    "tag"
  ),
  makeVIconProps = propsFactory(
    {
      color: String,
      disabled: Boolean,
      start: Boolean,
      end: Boolean,
      icon: IconValue,
      ...makeComponentProps(),
      ...makeSizeProps(),
      ...makeTagProps({ tag: "i" }),
      ...makeThemeProps(),
    },
    "VIcon"
  ),
  VIcon = genericComponent()({
    name: "VIcon",
    props: makeVIconProps(),
    setup(e, t) {
      let { attrs: r, slots: n } = t;
      const i = ref(),
        { themeClasses: a } = provideTheme(e),
        { iconData: o } = useIcon(computed(() => i.value || e.icon)),
        { sizeClasses: l } = useSize(e),
        { textColorClasses: c, textColorStyles: u } = useTextColor(
          toRef(e, "color")
        );
      return (
        useRender(() => {
          var b, P;
          const d = (b = n.default) == null ? void 0 : b.call(n);
          d &&
            (i.value =
              (P = flattenFragments(d).filter(
                (R) =>
                  R.type === Text && R.children && typeof R.children == "string"
              )[0]) == null
                ? void 0
                : P.children);
          const E = !!(r.onClick || r.onClickOnce);
          return createVNode(
            o.value.component,
            {
              tag: e.tag,
              icon: o.value.icon,
              class: [
                "v-icon",
                "notranslate",
                a.value,
                l.value,
                c.value,
                {
                  "v-icon--clickable": E,
                  "v-icon--disabled": e.disabled,
                  "v-icon--start": e.start,
                  "v-icon--end": e.end,
                },
                e.class,
              ],
              style: [
                l.value
                  ? void 0
                  : {
                      fontSize: convertToUnit(e.size),
                      height: convertToUnit(e.size),
                      width: convertToUnit(e.size),
                    },
                u.value,
                e.style,
              ],
              role: E ? "button" : void 0,
              "aria-hidden": !E,
              tabindex: E ? (e.disabled ? -1 : 0) : void 0,
            },
            { default: () => [d] }
          );
        }),
        {}
      );
    },
  }),
  _hoisted_1$1 = { class: "w-[400px] mx-auto" },
  _hoisted_2 = {
    class:
      "text-gray-900 display-md-semibold md:display-xl-semibold text-center",
  },
  _hoisted_3 = {
    class: "text-gray-600 text-lg-regular md:text-xl-regular mt-6 text-center",
  },
  _hoisted_4 = {
    class: "flex flex-col md:flex-row px-4 gap-3 justify-center mt-12",
  },
  _hoisted_5 = {
    href: "javascript:history.back()",
    class: "!order-1 md:order-2",
  },
  _hoisted_6 = {
    class:
      "bg-white border-solid w-full md:w-fit border-[1px] border-gray-200 text-md-semibold py-2.5 px-5 rounded-lg",
  },
  _hoisted_7 = { class: "flex items-center justify-center" },
  _hoisted_8 = { class: "flex items-center gap-2" },
  _hoisted_9 = { class: "text-gray-700" },
  _hoisted_10 = {
    class:
      "bg-primary-600 w-full md:w-fit text-md-semibold text-white py-2.5 px-5 rounded-lg",
  },
  _sfc_main$1 = {
    __name: "error",
    setup(e) {
      return (t, r) => {
        const n = resolveComponent("Vue3Lottie"),
          i = __nuxt_component_1,
          a = __nuxt_component_1$1,
          o = __nuxt_component_2;
        return (
          openBlock(),
          createBlock(o, null, {
            default: withCtx(() => [
              createBaseVNode("div", null, [
                createBaseVNode("div", _hoisted_1$1, [
                  createVNode(i, null, {
                    default: withCtx(() => [
                      createVNode(
                        n,
                        { "animation-data": unref(errorLottie) },
                        null,
                        8,
                        ["animation-data"]
                      ),
                    ]),
                    _: 1,
                  }),
                ]),
                createBaseVNode(
                  "h3",
                  _hoisted_2,
                  toDisplayString$1(t.$t("errorPage.title")),
                  1
                ),
                createBaseVNode(
                  "p",
                  _hoisted_3,
                  toDisplayString$1(t.$t("errorPage.description")),
                  1
                ),
                createBaseVNode("div", _hoisted_4, [
                  createBaseVNode("a", _hoisted_5, [
                    createBaseVNode("button", _hoisted_6, [
                      createBaseVNode("div", _hoisted_7, [
                        createBaseVNode("div", _hoisted_8, [
                          createVNode(
                            VIcon,
                            { class: "cursor-pointer w-24", color: "gray-700" },
                            {
                              default: withCtx(
                                () =>
                                  r[0] ||
                                  (r[0] = [createTextVNode(" mdi-arrow-left ")])
                              ),
                              _: 1,
                            }
                          ),
                          createBaseVNode(
                            "span",
                            _hoisted_9,
                            toDisplayString$1(t.$t("errorPage.goBack")),
                            1
                          ),
                        ]),
                      ]),
                    ]),
                  ]),
                  createVNode(
                    a,
                    { to: t.localePath("/"), class: "md:order-1" },
                    {
                      default: withCtx(() => [
                        createBaseVNode(
                          "button",
                          _hoisted_10,
                          toDisplayString$1(t.$t("errorPage.goToHome")),
                          1
                        ),
                      ]),
                      _: 1,
                    },
                    8,
                    ["to"]
                  ),
                ]),
              ]),
            ]),
            _: 1,
          })
        );
      };
    },
  },
  _hoisted_1 = { key: 0 },
  _sfc_main = {
    __name: "nuxt-root",
    setup(e) {
      const t = () => null,
        r = useNuxtApp(),
        n = r.deferHydration();
      if (r.isHydrating) {
        const c = r.hooks.hookOnce("app:error", n);
        useRouter$1().beforeEach(c);
      }
      const i = !1;
      provide(PageRouteSymbol, useRoute$1()),
        r.hooks.callHookWith((c) => c.map((u) => u()), "vue:setup");
      const a = useError(),
        o = !1;
      onErrorCaptured((c, u, d) => {
        if (
          (r.hooks
            .callHook("vue:error", c, u, d)
            .catch((E) => console.error("[nuxt] Error in `vue:error` hook", E)),
          isNuxtError(c) && (c.fatal || c.unhandled))
        )
          return r.runWithContext(() => showError(c)), !1;
      });
      const l = !1;
      return (c, u) => (
        openBlock(),
        createBlock(
          Suspense,
          { onResolve: unref(n) },
          {
            default: withCtx(() => [
              unref(o)
                ? (openBlock(), createElementBlock("div", _hoisted_1))
                : unref(a)
                ? (openBlock(),
                  createBlock(
                    unref(_sfc_main$1),
                    { key: 1, error: unref(a) },
                    null,
                    8,
                    ["error"]
                  ))
                : unref(l)
                ? (openBlock(),
                  createBlock(
                    unref(t),
                    { key: 2, context: unref(l) },
                    null,
                    8,
                    ["context"]
                  ))
                : unref(i)
                ? (openBlock(),
                  createBlock(resolveDynamicComponent(unref(i)), { key: 3 }))
                : (openBlock(), createBlock(unref(_sfc_main$2), { key: 4 })),
            ]),
            _: 1,
          },
          8,
          ["onResolve"]
        )
      );
    },
  };
let entry;
{
  let e;
  (entry = async function () {
    var o, l;
    if (e) return e;
    const n = !!(
        ((o = window.__NUXT__) == null ? void 0 : o.serverRendered) ??
        ((l = document.getElementById("__NUXT_DATA__")) == null
          ? void 0
          : l.dataset.ssr) === "true"
      )
        ? createSSRApp(_sfc_main)
        : createApp(_sfc_main),
      i = createNuxtApp({ vueApp: n });
    async function a(c) {
      await i.callHook("app:error", c),
        (i.payload.error = i.payload.error || createError(c));
    }
    (n.config.errorHandler = a),
      i.hook("app:suspense:resolve", () => {
        n.config.errorHandler === a && (n.config.errorHandler = void 0);
      });
    try {
      await applyPlugins(i, plugins);
    } catch (c) {
      a(c);
    }
    try {
      await i.hooks.callHook("app:created", n),
        await i.hooks.callHook("app:beforeMount", n),
        n.mount(vueAppRootContainer),
        await i.hooks.callHook("app:mounted", n),
        await nextTick();
    } catch (c) {
      a(c);
    }
    return n;
  }),
    (e = entry().catch((t) => {
      throw (console.error("Error while mounting app:", t), t);
    }));
}
export {
  propsFactory as $,
  useRoute as A,
  ENABLE_TWO_FA as B,
  CHANGE_PASSWORD as C,
  DISABLE_TWO_FA as D,
  EDIT_PROFILE as E,
  Fragment as F,
  GET_USER_OTP as G,
  VIcon as H,
  withDirectives as I,
  vModelText as J,
  USER_CREATE_WITHDRAW as K,
  USER_TRANSACTIONS as L,
  USER_WITHDRAWS as M,
  CURRENCIES as N,
  useRuntimeConfig as O,
  defineStore as P,
  renderSlot as Q,
  shallowRef as R,
  USER_DISCOUNT_LIST as S,
  USER_ORDERS as T,
  UPLOAD_AVATAR as U,
  VERIFY_EMAIL as V,
  useRoute$1 as W,
  vShow as X,
  useRouter as Y,
  onUnmounted as Z,
  __nuxt_component_1$1 as _,
  openBlock as a,
  DIRECTIONS as a$,
  genericComponent as a0,
  useProxiedModel as a1,
  mergeProps as a2,
  omit as a3,
  useTextColor as a4,
  useRender as a5,
  keys as a6,
  makeComponentProps as a7,
  makeTagProps as a8,
  makeThemeProps as a9,
  checkPrintable as aA,
  matchesSelector as aB,
  publicAssetsURL as aC,
  defineFunctionalComponent as aD,
  capitalize$1 as aE,
  consoleError as aF,
  deepEqual as aG,
  getObjectValueByPath as aH,
  isEmpty as aI,
  makeDisplayProps as aJ,
  EventProp as aK,
  withModifiers as aL,
  getPropertyFromItem as aM,
  toRefs as aN,
  WALLET_CURRENCIES as aO,
  WALLET_DETAILS as aP,
  CREATE_WALLET as aQ,
  WITHDRA_LIST as aR,
  WITHDRAW_REQUEST as aS,
  onBeforeUpdate as aT,
  makeSizeProps as aU,
  createRange as aV,
  keyValues as aW,
  PAYMENT_GATEWAY as aX,
  resolveComponent as aY,
  RECEIVE_PAYPAL_LANDING as aZ,
  withKeys as a_,
  provideTheme as aa,
  useRtl as ab,
  useLocale as ac,
  provide as ad,
  resolveDirective as ae,
  convertToUnit as af,
  nextTick as ag,
  useBackgroundColor as ah,
  toRef as ai,
  provideDefaults as aj,
  isObject as ak,
  mergeModels as al,
  useModel as am,
  getUid as an,
  isOn as ao,
  useDisplay as ap,
  watchEffect as aq,
  onScopeDispose as ar,
  clamp as as,
  debounce as at,
  IN_BROWSER as au,
  getCurrentInstance as av,
  useToggleScope as aw,
  IconValue as ax,
  wrapInArray as ay,
  ensureValidVNode as az,
  createBaseVNode as b,
  defineComponent as b$,
  CALCULATION as b0,
  COMPLETE_DIRECTION as b1,
  WALLET_INFO as b2,
  filterInputAttrs as b3,
  ReCaptchaVuePluginExports as b4,
  CHECK_DISCOUNT as b5,
  CONFIRM_REVIEW_ORDER as b6,
  Vue3Lottie as b7,
  __nuxt_component_1 as b8,
  humanReadableFileSize as b9,
  markRaw as bA,
  pick as bB,
  onBeforeMount as bC,
  only as bD,
  cloneVNode as bE,
  useAuthStore as bF,
  getCurrentInstance$1 as bG,
  SIGN_IN as bH,
  GET_OTP as bI,
  SIGN_UP as bJ,
  FORGET_PASSWORD_GET_OTP as bK,
  FORGOT_PASSWORD as bL,
  eventName as bM,
  destructComputed as bN,
  effectScope as bO,
  defer as bP,
  toRaw as bQ,
  Teleport as bR,
  onDeactivated as bS,
  onActivated as bT,
  isClickInsideElement as bU,
  focusableChildren as bV,
  getNextElement as bW,
  focusChild as bX,
  TransitionGroup as bY,
  camelize as bZ,
  useGoTo as b_,
  callEvent as ba,
  ORDER_STATUS as bb,
  PROCESS_ORDER as bc,
  EXPIRE_ORDER as bd,
  NEBULOX_CONFIRMATION as be,
  KeepAlive as bf,
  templateRef as bg,
  readonly as bh,
  SUPPORTS_INTERSECTION as bi,
  Transition as bj,
  getCurrentInstanceName as bk,
  useColor as bl,
  useSize as bm,
  refElement as bn,
  TRACK_ORDER as bo,
  PROCESS_TRANSACTION as bp,
  breakpoints as bq,
  h$2 as br,
  reactive as bs,
  onUpdated as bt,
  findChildrenWithProvide as bu,
  keyCodes as bv,
  includes as bw,
  resolveDynamicComponent as bx,
  hasEvent as by,
  useAttrs as bz,
  createElementBlock as c,
  deprecate as c0,
  defineNuxtRouteMiddleware as c1,
  executeAsync as c2,
  navigateTo as c3,
  defineComponent$1 as c4,
  useSwitchLocalePath as c5,
  SWITCH_LOCALE_PATH_LINK_IDENTIFIER as c6,
  Comment as c7,
  defineNuxtLink as c8,
  PageRouteSymbol as c9,
  createStaticVNode as ca,
  useLocalePath as cb,
  hasProtocol as cc,
  CircularBuffer as cd,
  normalizeStyle as ce,
  useNuxtApp as d,
  renderList as e,
  createVNode as f,
  createCommentVNode as g,
  createBlock as h,
  useI18n as i,
  watch as j,
  onBeforeUnmount as k,
  useHead as l,
  isRef as m,
  normalizeClass as n,
  onMounted as o,
  createTextVNode as p,
  useUserStore as q,
  ref as r,
  computed as s,
  toDisplayString$1 as t,
  unref as u,
  useFetch as v,
  withCtx as w,
  inject$1 as x,
  createSlots as y,
  GENERATE_TWO_FA as z,
};
